/* _GlobalPrefix_ */
/* _Module_:sx */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sx');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sx');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sx');

}catch(e){_DumpException(e)}
/* _Module_:elog */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('elog');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('elog');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('elog');

}catch(e){_DumpException(e)}
/* _Module_:sy20 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy20');
var $googDebugFname="javascript/closure/labs/useragent/device.js";
eval("// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user device detection (based on user agent).\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or engine see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and engine).\n *\n * @author vbhasin@google.com (Vipul Bhasin)\n */\n\ngoog.provide(\x27goog.labs.userAgent.device\x27);\n\ngoog.require(\x27goog.labs.userAgent.util\x27);\n\n\n/**\n * Currently we detect the iPhone, iPod and Android mobiles (devices that have\n * both Android and Mobile in the user agent string).\n *\n * @return {boolean} Whether the user is using a mobile device.\n */\ngoog.labs.userAgent.device.isMobile \x3d function() {\n  return !goog.labs.userAgent.device.isTablet() \x26\x26\n      (goog.labs.userAgent.util.matchUserAgent(\x27iPod\x27) ||\n       goog.labs.userAgent.util.matchUserAgent(\x27iPhone\x27) ||\n       goog.labs.userAgent.util.matchUserAgent(\x27Android\x27) ||\n       goog.labs.userAgent.util.matchUserAgent(\x27IEMobile\x27));\n};\n\n\n/**\n * Currently we detect Kindle Fire, iPad, and Android tablets (devices that have\n * Android but not Mobile in the user agent string).\n *\n * @return {boolean} Whether the user is using a tablet.\n */\ngoog.labs.userAgent.device.isTablet \x3d function() {\n  return goog.labs.userAgent.util.matchUserAgent(\x27iPad\x27) ||\n      (goog.labs.userAgent.util.matchUserAgent(\x27Android\x27) \x26\x26\n       !goog.labs.userAgent.util.matchUserAgent(\x27Mobile\x27)) ||\n      goog.labs.userAgent.util.matchUserAgent(\x27Silk\x27);\n};\n\n\n/**\n * @return {boolean} Whether the user is using a desktop computer (which we\n *     assume to be the case if they are not using either a mobile or tablet\n *     device).\n */\ngoog.labs.userAgent.device.isDesktop \x3d function() {\n  return !goog.labs.userAgent.device.isMobile() \x26\x26\n      !goog.labs.userAgent.device.isTablet();\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/labs/useragent/device.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy20');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy20');

}catch(e){_DumpException(e)}
/* _Module_:sy22 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy22');
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/browserdimension.js";
eval("goog.provide(\x27gws.browser.dimension\x27);\ngoog.provide(\x27gws.browser.dimension.Type\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.labs.userAgent.browser\x27);\ngoog.require(\x27goog.labs.userAgent.device\x27);\ngoog.require(\x27goog.labs.userAgent.engine\x27);\ngoog.require(\x27goog.labs.userAgent.platform\x27);\ngoog.require(\x27goog.math\x27);\n\ngoog.scope(function() {\nvar dimension \x3d gws.browser.dimension;\nvar browser \x3d goog.labs.userAgent.browser;\nvar device \x3d goog.labs.userAgent.device;\nvar engine \x3d goog.labs.userAgent.engine;\nvar platform \x3d goog.labs.userAgent.platform;\n\n\n/** @private @const {!Array\x3cnumber\x3e} */\ndimension.KINDLE_FIRE_ \x3d [\n  600,   // small dimension\n  1024,  // large dimension\n  800,   // HD small dimension\n  1200   // HD large dimension\n];\n\n\n/**\n * @return {number} The inner width of the browser in CSS pixels.\n * @private\n */\ndimension.getInnerWidth_ \x3d function() {\n  return goog.dom.getWindow().innerWidth;\n};\n\n\n/**\n * @return {number} The inner height of the browser in CSS pixels.\n * @private\n */\ndimension.getInnerHeight_ \x3d function() {\n  return goog.dom.getWindow().innerHeight;\n};\n\n\n/**\n * @return {number} The outer width of the browser in CSS pixels.\n * @private\n */\ndimension.getOuterWidth_ \x3d function() {\n  return Math.round(\n      goog.dom.getWindow().outerWidth /\n      (goog.dom.getWindow().devicePixelRatio || 1));\n};\n\n\n/**\n * @return {number} The outer height of the browser in CSS pixels.\n * @private\n */\ndimension.getOuterHeight_ \x3d function() {\n  return Math.round(\n      goog.dom.getWindow().outerHeight /\n      (goog.dom.getWindow().devicePixelRatio || 1));\n};\n\n\n/**\n * @return {number} The screen width of the browser in CSS pixels.\n * @private\n */\ndimension.getOffsetWidth_ \x3d function() {\n  return goog.asserts\n      .assertInstanceof(\n          goog.dom.getWindow().document.documentElement, HTMLElement)\n      .offsetWidth;\n};\n\n\n/**\n * @return {number} The screen ratio of the browser.\n * @private\n */\ndimension.getScreenRatio_ \x3d function() {\n  return screen.height / screen.width;\n};\n\n\n/**\n * @return {number} The window ratio of the browser.\n * @private\n */\ndimension.getWindowRatio_ \x3d function() {\n  return goog.dom.getWindow().outerHeight / goog.dom.getWindow().outerWidth;\n};\n\n\n/**\n * Enumeration for different browser dimensions supported by `get`.\n * @enum {number}\n */\ndimension.Type \x3d {\n  HEIGHT: 0,\n  WIDTH: 1\n};\n\n\n/**\n * Returns true if screen size should be used when we get browser dimension.\n *\n * The window size in KindleFire and Android mobile or tablet browser is not\n * correct because the screen can be zoomed in/out, and the browser size is\n * changed in this case. But the browser is always shown in full screen, so we\n * can use the screen size instead of window size. This does not apply for iOS\n * since we disable the ability to zoom in/out on iOS.\n * @return {boolean}\n * @private\n */\ndimension.shouldUseScreenSize_ \x3d function() {\n  return engine.isWebKit() \x26\x26 platform.isAndroid();\n};\n\n\n/**\n * Returns Kindle Fire browser dimension in css pixels.\n *\n * KindleFire screen height reporting does not work correctly. When the virtual\n * keyboard is shown, the reported screen height excludes the vertical space\n * taken up by the keyboard, which can lead to issues when we try to infer\n * orientation from the reported dimension. KindleFire HD has an additional bug\n * that keeps it from updating screen dimension correctly on orientation change.\n *\n * Since goog.dom.getWindow().outerWidth is not affected by the virtual keyboard and gets\n * gets updated correctly on orientation change, we use it to determine\n * orientation for Kindle Fire devices, and return the screen dimension in css\n * pixels based on that.\n * @param {number} outerWidth Outer width of the browser.\n * @param {number} screenWidth Screen width in physical pixels.\n * @param {number} screenHeight Screen height in physical pixels.\n * @param {number} devicePixelRatio Device pixel ratio.\n * @param {dimension.Type} dim The browser dimension to return.\n * @return {number}\n * @private\n */\ndimension.getKindleFireDimension_ \x3d function(\n    outerWidth, screenWidth, screenHeight, devicePixelRatio, dim) {\n  var size \x3d null;\n\n  var shouldSwap \x3d dim \x3d\x3d dimension.Type.HEIGHT;\n  for (var i \x3d 0; i \x3c dimension.KINDLE_FIRE_.length; i++) {\n    var value \x3d dimension.KINDLE_FIRE_[i];\n    var transposeValue \x3d\n        i % 2 ? dimension.KINDLE_FIRE_[i - 1] : dimension.KINDLE_FIRE_[i + 1];\n    if (goog.math.nearlyEquals(outerWidth, value, 5)) {\n      size \x3d shouldSwap ? transposeValue : value;\n      break;\n    }\n  }\n\n  if (goog.isNull(size)) {\n    // Covers cases when we get unexpected width, which can happen when the\n    // useragent is spoofed, or when new browsers/devices come out.\n    size \x3d dim \x3d\x3d dimension.Type.WIDTH ? screenWidth : screenHeight;\n  }\n  // Return the size in css pixels.\n  return size / devicePixelRatio;\n};\n\n\n/**\n * Return a particular dimension of the browser window, or 0 if it cannot be\n * identified. Modified from gws.clientDimension.observer.getBrowserDimension_\n * and goog.dom.getViewportSize.\n * This has been tested on IE 8 (Win XP), Opera 10 and 11.5 (Win XP), Safari 5\n * (Win XP), latest Chrome (Win XP), Firefox 3.6 and latest (Linux), and latest\n * Firefox (Win XP). This is expected to work on most tier 1, 2 and 3 browsers\n * including: IE 5 and up, Safari 3 and up, all versions of Chrome, most\n * Android, Opera 9 and up etc. with the following caveats:\n *   - In IE versions 8 or under and IE 9 in compatibility mode, a two pixel\n * border is generated around documents and included in the browser dimensions\n * used to determine WIDTH/HEIGHT_WITH_SCROLLBARS. This means that\n * for those versions/modes of IE *_WITH_SCROLLBARS and *_WITHOUT_SCROLLBARS\n * will be different by four pixels when there are no scrollbars.\n *   - For Safari 2 and under on mac computers HEIGHT_WITHOUT_SCROLLBARS when a\n * horizontal scroll bar is present incorrectly includes the height of the\n * scrollbar.\n * @param {dimension.Type} dim The dimension of the window\n * @param {boolean\x3d} opt_excludeScrollbars\n * @return {number}\n */\ndimension.get \x3d function(dim, opt_excludeScrollbars) {\n  var dimensionName \x3d dim \x3d\x3d dimension.Type.HEIGHT ? \x27Height\x27 : \x27Width\x27;\n\n  // The following checks ensure that for Android mobile devices, outer\n  // height/width is reported and not the complete screen height/width which\n  // includes buttons, notification bars etc leading to over-estimation of size.\n  // Ideally, inner height/width should be used but for a lot of browsers, the\n  // browser bars auto-hide after sometime. This does not happen in Chrome and\n  // so we use inner height/width for that. For more details, see cl/38733195\n  if (device.isMobile() \x26\x26 platform.isAndroid()) {\n    if (browser.isChrome()) {\n      return dim \x3d\x3d dimension.Type.HEIGHT ? dimension.getInnerHeight_() :\n                                            dimension.getInnerWidth_();\n    } else {\n      return dim \x3d\x3d dimension.Type.HEIGHT ? dimension.getOuterHeight_() :\n                                            dimension.getOuterWidth_();\n    }\n  }\n\n  // The window size in mobile browser is not correct because the screen can\n  // be zoomed in/out and the browser size is changed in this case. But the\n  // browser is always shown in full screen. So we can use the screen size\n  // instead of window size.\n  if (dimension.shouldUseScreenSize_()) {\n    if (browser.isSilk()) {\n      var outerWidth \x3d goog.dom.getWindow().outerWidth;\n      var screenWidth \x3d goog.dom.getWindow().screen.width;\n      var screenHeight \x3d goog.dom.getWindow().screen.height;\n      var devicePixelRatio \x3d goog.dom.getWindow().devicePixelRatio;\n      if (!(0 \x3c devicePixelRatio \x26\x26 devicePixelRatio \x3c Number.MAX_VALUE)) {\n        devicePixelRatio \x3d 1;\n      }\n      return dimension.getKindleFireDimension_(\n          outerWidth, screenWidth, screenHeight, devicePixelRatio, dim);\n    }\n\n    // The unit of screen.(width|height) varies between platforms. On\n    // Froyo and Jellybean 4.2, it\x27s measured in device pixels but on\n    // other Android platforms it\x27s in CSS pixels. We cannot reliably\n    // say which unit is used. To get screen width always in CSS\n    // pixels, we always use document.documentElement.offsetWidth, and\n    // calculate screen height based on the value and the ratio of\n    // screen.width and screen.height.\n    if (dim \x3d\x3d dimension.Type.WIDTH) {\n      return dimension.getOffsetWidth_();\n    } else {\n      var screenRatio \x3d dimension.getScreenRatio_();\n      // Safety check for impossible screen ratio.\n      if (!(0 \x3c screenRatio \x26\x26 screenRatio \x3c Number.MAX_VALUE)) {\n        screenRatio \x3d 1;\n      }\n      // In Jellybean 4.2 screen width/height don\x27t change on rotation.\n      // Compare them to current window orientation.\n      var windowRatio \x3d dimension.getWindowRatio_();\n      if ((windowRatio \x3e 1 \x26\x26 screenRatio \x3c 1) ||\n          (windowRatio \x3c 1 \x26\x26 screenRatio \x3e 1)) {\n        screenRatio \x3d 1 / screenRatio;\n      }\n      return Math.round(dimension.getOffsetWidth_() * screenRatio);\n    }\n  } else if (opt_excludeScrollbars) {\n    // In Gecko, documentElement.client* does not return the desired window size\n    // excluding scrollbars. Instead, Gecko returns the content height for\n    // clientHeight.\n    return goog.dom.getWindow()\n        .document.documentElement[\x27client\x27 + dimensionName];\n  } else {\n    if (goog.dom.getWindow()[\x27inner\x27 + dimensionName]) {\n      return goog.dom.getWindow()[\x27inner\x27 + dimensionName];\n    } else if (\n        goog.dom.getWindow().document.documentElement \x26\x26\n        goog.dom.getWindow()\n            .document.documentElement[\x27offset\x27 + dimensionName]) {\n      return goog.dom.getWindow()\n          .document.documentElement[\x27offset\x27 + dimensionName];\n    }\n  }\n\n  return 0;\n};\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/browserdimension.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy22');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy22');

}catch(e){_DumpException(e)}
/* _Module_:sy24 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy24');
var $googDebugFname="googledata/html/templates/gws/head/xjs/history_state/analyzed_state.js";
eval("/**\n * @fileoverview Provides object type that models what gws.historyState\n * logically keeps of for a history state entry.\n */\n\ngoog.provide(\x27gws.historyState.AnalyzedState\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.uri.utils\x27);\ngoog.require(\x27gws.error\x27);\ngoog.require(\x27search.url.gwsValueDecoder\x27);\ngoog.require(\x27search.url.urlParamKeys\x27);\ngoog.require(\x27urls.UrlParams\x27);\n\ngoog.scope(function() {\n\nconst UrlParams \x3d goog.module.get(\x27urls.UrlParams\x27);\nconst urlParamKeys \x3d goog.module.get(\x27search.url.urlParamKeys\x27);\nconst gwsValueDecoder \x3d goog.module.get(\x27search.url.gwsValueDecoder\x27);\n\n/**\n * A concrete, generic internal representation of a history state in\n * analyzed form.  The term \x22analyzed\x22 comes from values typically\n * coming from a physical encoding in an URL which has been parsed into\n * this analyzed form for logical access to its substructure.  It is\n * otherwise a passive value, and it depends on higher-level logic to\n * implement behavioral constraints on values.\n * AnalyzedState is value-like, e.g. it supports copying.\n * This constructor creates an empty state.\n * @param {!gws.historyState.AnalyzedState\x3d} sourceState State to make new\n * state\n *     a copy of.\n * @struct\n * @constructor\n */\ngws.historyState.AnalyzedState \x3d function(sourceState \x3d undefined) {\n  /**\n   * Params, stored unencoded.\n   * @private {!Map\x3cstring, ?string\x3e}\n   */\n  this.params_;\n\n  /**\n   * The ordering of the primary keys. We do work to preserve this ordering\n   * between serialization/deserialization in order to ensure that, for\n   * instance, q comes first (as it\x27s first in the search form).\n   * @private {!Array\x3cstring\x3e}\n   */\n  this.primaryOrder_;\n\n  /**\n   * @private {string} The path of the URL.\n   */\n  this.path_;\n\n  if (sourceState) {\n    this.params_ \x3d new Map([...sourceState.params_]);\n    this.primaryOrder_ \x3d goog.array.clone(sourceState.primaryOrder_);\n    this.path_ \x3d sourceState.path_;\n  } else {\n    this.params_ \x3d new Map;\n    this.primaryOrder_ \x3d [];\n    this.path_ \x3d \x27\x27;\n  }\n};\n\n\n/**\n * Categories of URL parameters GWS JavaScript is aware of. Every query string\n * or hash fragment parameter falls into exactly one of these three categories.\n * @enum {number}\n */\ngws.historyState.AnalyzedState.ParamKind \x3d {\n  /**\n   * Primary state parameters that are included in the location bar and in cache\n   * key computation.\n   */\n  PRETTY: 0,\n\n  /**\n   * Primary state parameters that are removed from the location by JESR and\n   * that should not be included in cache key computation. Ugly parameters\n   * should be derivable from other primary state.\n   */\n  UGLY: 1,\n\n  /**\n   * Secondary state parameters that are discarded on primary state changes.\n   * Most parameters should fall into this category.\n   */\n  UPDATE: 2,\n\n  /**\n   * Unknown state parameters that should be ignored by history state.\n   */\n  IGNORE: 3\n};\n\n\n/**\n * Returns the category that a given URL parameter falls into.\n * @param {string} name\n * @return {gws.historyState.AnalyzedState.ParamKind}\n */\ngws.historyState.AnalyzedState.getParamKind \x3d function(name) {\n  // Primary state params (those handled by JESR) are explicitly whitelisted.\n  if (urlParamKeys.prettyParamKeySet.has(name)) {\n    return gws.historyState.AnalyzedState.ParamKind.PRETTY;\n  }\n  if (urlParamKeys.uglyParamKeySet.has(name)) {\n    return gws.historyState.AnalyzedState.ParamKind.UGLY;\n  }\n  if (urlParamKeys.updateParamKeySet.has(name)) {\n    return gws.historyState.AnalyzedState.ParamKind.UPDATE;\n  }\n  // Parameters not otherwise whitelisted should be ignored in history state and\n  // stripped from the url.\n  return gws.historyState.AnalyzedState.ParamKind.IGNORE;\n};\n\n\n/**\n * Returns whether the parameter having the specified name is a pretty or ugly\n * param (as opposed to an update param).  Primary parameters are included in\n * JESR page state and will trigger JESR to redraw when changed.\n * @param {string} name\n * @return {boolean}\n */\ngws.historyState.AnalyzedState.isPrimaryParamName \x3d function(name) {\n  switch (gws.historyState.AnalyzedState.getParamKind(name)) {\n    case gws.historyState.AnalyzedState.ParamKind.PRETTY:\n    case gws.historyState.AnalyzedState.ParamKind.UGLY:\n      return true;\n    default:\n      return false;\n  }\n};\n\n\n/**\n * Returns whether the parameter having the specified name is an IGNORE param.\n * @param {string} name\n * @return {boolean}\n */\ngws.historyState.AnalyzedState.isIgnoreParamName \x3d function(name) {\n  return gws.historyState.AnalyzedState.getParamKind(name) \x3d\x3d\n      gws.historyState.AnalyzedState.ParamKind.IGNORE;\n};\n\n\n/**\n * Asserts that the parameter is not an IGNORE param. This will throw an error\n * in development but log in production.\n * @param {string} name The parameter to check\n * @private\n */\ngws.historyState.AnalyzedState.assertIsNotIgnoreParamName_ \x3d function(name) {\n  if (goog.DEBUG \x26\x26 gws.historyState.AnalyzedState.isIgnoreParamName(name)) {\n    gws.error.log(new Error(\x27Unknown parameter\x27), {\x27q\x27: name}, true);\n  }\n};\n\n\n/**\n * Returns a new state, sanitized to remove parameters JESR classifies as ugly,\n * which should not be included in cache key computations or shown in the\n * browser\x27s location bar.\n * @param {!gws.historyState.AnalyzedState} state\n * @return {!gws.historyState.AnalyzedState}\n */\ngws.historyState.AnalyzedState.stripUglyParams \x3d function(state) {\n  return state.withClearedParams([...urlParamKeys.uglyParamKeySet]);\n};\n\n\n/**\n * Returns the state calculated from a URL and the \x22base\x22 URL (the original URL\n * without any hash). This can be used like so:\n * var bits \x3d AnalyzedState.fromUrl(url);\n * var newUrl \x3d bits.base + \x27#\x27 + bits.state.composeLocationHash();\n * assertObjectEquals(AnalyzedState.fromUrl(newUrl), bits);\n * @param {string} url a URL.\n * @return {{state: !gws.historyState.AnalyzedState, base: string}}\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.AnalyzedState.fromUrl \x3d function(url) {\n  var hashState \x3d gws.historyState.AnalyzedState.getHashState_(url);\n  var queryState \x3d gws.historyState.AnalyzedState.analyzeLocationHash(\n      goog.uri.utils.getQueryData(url) || \x27\x27);\n\n  var state \x3d hashState.hasPrimaryParams() ?\n      hashState :\n      queryState.updatedWithNewEncodedParams(\n          hashState.getEncodedUpdateStates());\n  state.path_ \x3d goog.uri.utils.getPathEncoded(url) || \x27\x27;\n\n  return {state: state, base: url.replace(/#.*$/, \x27\x27)};\n};\n\n/**\n * Return the analyzed state for the hash of the url.\n * @param {string} url\n * @return {!gws.historyState.AnalyzedState}\n * @private\n */\ngws.historyState.AnalyzedState.getHashState_ \x3d function(url) {\n  // If this url has a hash, use it as the serialized string.\n  return gws.historyState.AnalyzedState.analyzeLocationHash(\n      goog.uri.utils.getFragmentEncoded(url) || \x27\x27);\n};\n\n\n/**\n * Returns a new URL that represents this state given some base URL.\n *\n * @param {?string} baseUrl If null or empty string, the AnalyzedState\x27s path\n *     will be used.\n * @param {boolean} isSoftTransition\n * @return {string}\n */\ngws.historyState.AnalyzedState.prototype.toUrl \x3d function(\n    baseUrl, isSoftTransition) {\n  var base \x3d baseUrl || this.path_;\n  if (isSoftTransition) {\n    var params \x3d this.composeLocationHash();\n    return base.replace(/#.*$/, \x27\x27) + (params ? \x27#\x27 + params : \x27\x27);\n  } else {\n    // If the path is a search path on hard-transition, then we need to ensure\n    // that the path is /search, unless there are no primary params, in which\n    // case we should use /.\n    var path \x3d goog.uri.utils.getPathEncoded(base) || \x27/\x27;\n    if (gws.historyState.AnalyzedState.isSearchPath(path)) {\n      base \x3d goog.uri.utils.setPath(\n          base, this.hasPrimaryParams() ? \x27/search\x27 : \x27/\x27);\n    }\n    var params \x3d this.composeLocationHash(true);\n    return base.replace(/\\?.*$/, \x27\x27) + (params ? \x27?\x27 + params : \x27\x27);\n  }\n};\n\n\n/**\n * Takes a location hash value in the format produced by\n * composeLocationHash() and returns a new AnalyzedState value for the\n * state encoded in the hash value.\n * @param {string} hash Location hash value to analyze, not including the\n *     initial # character.\n * @param {string\x3d} path The location path. If blank or not provided, the\n *     current location\x27s path will be used.\n * @return {!gws.historyState.AnalyzedState} New analyzed state for input\n *     hash value.\n */\ngws.historyState.AnalyzedState.analyzeLocationHash \x3d function(\n    hash, path \x3d goog.dom.getWindow().location.pathname) {\n  const state \x3d new gws.historyState.AnalyzedState();\n  state.path_ \x3d path;\n  if (!hash) return state;\n  const hashParams \x3d new UrlParams(hash, gwsValueDecoder);\n  for (const [key, value] of hashParams) {\n    if (!gws.historyState.AnalyzedState.isIgnoreParamName(key)) {\n      if (gws.historyState.AnalyzedState.isPrimaryParamName(key)) {\n        if (!(state.params_.has(key))) {\n          state.primaryOrder_.push(key);\n        }\n      }\n      state.params_.set(key, value);\n    }\n  }\n  return state;\n};\n\n\n/**\n * Checks if this analyzed state contains a param with a specific name.\n * NOTE: This method will return true even for cases where there\x27s no value for\n * the param name. Use with care.\n * @param {string} name\n * @return {boolean}\n */\ngws.historyState.AnalyzedState.prototype.hasParamName \x3d function(name) {\n  return this.params_.has(name);\n};\n\n\n/**\n * Returns the specified named param.\n * NOTE: This returns \x27\x27 when a param is absent, null, or empty string.\n * @param {string} name\n * @return {string} The param value.\n */\ngws.historyState.AnalyzedState.prototype.getParam \x3d function(name) {\n  gws.historyState.AnalyzedState.assertIsNotIgnoreParamName_(name);\n  return this.params_.get(name) || \x27\x27;\n};\n\n\n/**\n * Returns a location hash value encoding of the state.\n * @param {boolean\x3d} opt_noSeparator\n * @return {string} Location hash value encoding the input analyzed state,\n *     not including the initial # character.\n */\ngws.historyState.AnalyzedState.prototype.composeLocationHash \x3d function(\n    opt_noSeparator) {\n  // Maintains encoding prior to this implementation, which is primary state\n  // followed by combined set of update states that have non-empty values in\n  // alphabetic order by keys.\n  var parts \x3d [];\n  if (this.hasPrimaryParams()) {\n    // Preserve ordering.\n    parts.push(this.composePrimaryStateHash());\n  }\n  var nonprimaryPart \x3d this.composeNonprimaryStateHash();\n  if (nonprimaryPart) {\n    parts.push(nonprimaryPart);\n  }\n  return parts.join(\x27\x26\x27);\n};\n\n\n/**\n * Returns a hash of just the primary states.\n * @return {string} Primary state value.\n */\ngws.historyState.AnalyzedState.prototype.composePrimaryStateHash \x3d function() {\n  const primaryParams \x3d new UrlParams(\x27\x27, gwsValueDecoder);\n  const ordering \x3d new Set([...this.primaryOrder_, ...this.params_.keys()]);\n  for (const key of ordering) {\n    if (!this.params_.has(key)) continue;\n    if (!gws.historyState.AnalyzedState.isPrimaryParamName(key)) continue;\n    primaryParams.set(key, this.params_.get(key) || \x27\x27);\n  }\n  return primaryParams.toString();\n};\n\n\n/**\n * Returns a hash with just non-primary states.\n * This consists of non-empty state values in alphabetic order by keys.\n * @return {string} Non-primary state hash value.\n */\ngws.historyState.AnalyzedState.prototype.composeNonprimaryStateHash \x3d\n    function() {\n  const keys \x3d [...this.params_.keys()];\n  keys.sort();\n  const nonPrimaryParams \x3d new UrlParams(\x27\x27, gwsValueDecoder);\n  for (const key of keys) {\n    if (gws.historyState.AnalyzedState.isPrimaryParamName(key)) continue;\n    nonPrimaryParams.set(key, this.params_.get(key) || \x27\x27);\n  }\n  return nonPrimaryParams.toString();\n};\n\n\n/**\n * DO NOT USE - DEPRECATED.\n * Returns a copy of this state with the state updated according to the new\n * params.\n * @param {!Object\x3cstring, ?string\x3e} params Parameter map with percent-encoded values.\n * @param {boolean\x3d} opt_preserveFalseyParams If falsey params are preserved,\n *     then passing in a key with a value of \x27\x27 or null will keep the key in\n *     the state. If falsey params are not preserved, these values will remove\n *     the key from the state. NOTE: Are you sure you want this to be true?\n *     Why should null, \x27\x27, or non-presense of a key all be semantically\n *     different? Have you tried redesigning your server code, and can you try\n *     harder?\n * @param {string\x3d} opt_path The path to set on the new AnalyzedState. If no\n *     path is provided, the existing path_ is used.\n * @return {!gws.historyState.AnalyzedState}\n * @deprecated Use {@link gws.historyState.AnalyzedState.prototype.updatedWithNewParams} instead.\n */\ngws.historyState.AnalyzedState.prototype.updatedWithNewEncodedParams \x3d function(\n    params, opt_preserveFalseyParams, opt_path) {\n  var decodedParams \x3d {};\n  for (var key in params) {\n    var value \x3d params[key];\n    if (!goog.isNull(value)) {\n      goog.asserts.assertString(value, \x27param values must be strings\x27);\n      decodedParams[key] \x3d gwsValueDecoder.deserialize(value, key);\n    }\n  }\n  return this.updatedWithNewParams(\n      decodedParams, opt_preserveFalseyParams, opt_path);\n};\n\n\n/**\n * Returns a copy of this state with the state updated according to the new\n * params.\n * @param {!Object\x3cstring, ?string\x3e} params\n * @param {boolean\x3d} opt_preserveFalseyParams If falsey params are preserved,\n *     then passing in a key with a value of \x27\x27 or null will keep the key in\n *     the state. If falsey params are not preserved, these values will remove\n *     the key from the state. NOTE: Are you sure you want this to be true?\n *     Why should null, \x27\x27, or non-presense of a key all be semantically\n *     different? Have you tried redesigning your server code, and can you try\n *     harder?\n * @param {string\x3d} opt_path The path to set on the new AnalyzedState. If no\n *     path is provided, the existing path_ is used.\n * @return {!gws.historyState.AnalyzedState}\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.AnalyzedState.prototype.updatedWithNewParams \x3d function(\n    params, opt_preserveFalseyParams, opt_path) {\n  var newState \x3d new gws.historyState.AnalyzedState(this);\n  if (opt_path) {\n    newState.path_ \x3d opt_path;\n  }\n\n  var shouldDelete \x3d\n      opt_preserveFalseyParams ? goog.functions.FALSE : function(v) {\n        return !v;\n      };\n\n  for (var k in params) {\n    // If an IGNORE parameter, don\x27t include it in the URL.\n    gws.historyState.AnalyzedState.assertIsNotIgnoreParamName_(k);\n\n    if (gws.historyState.AnalyzedState.isPrimaryParamName(k)) {\n      if (!shouldDelete(params[k]) \x26\x26 !(newState.params_.has(k))) {\n        newState.primaryOrder_.push(k);\n      } else if (shouldDelete(params[k])) {\n        goog.array.remove(newState.primaryOrder_, k);\n      }\n    }\n    if (shouldDelete(params[k])) {\n      newState.params_.delete(k);\n    } else {\n      goog.asserts.assertString(params[k], \x27param values must be strings\x27);\n      newState.params_.set(k, String(params[k]));\n    }\n  }\n  return newState;\n};\n\n\n/**\n * Returns a new AnalyzedState with the passed-in params cleared. The passed-in\n * value can be a \x27set\x27 of params or an array of param names.\n * @param {!Array\x3cstring\x3e|!Object\x3cstring, *\x3e} params\n * @return {!gws.historyState.AnalyzedState}\n */\ngws.historyState.AnalyzedState.prototype.withClearedParams \x3d function(params) {\n  var paramsSet \x3d goog.isArray(params) ? goog.object.createSet(params) : params;\n  // Note: updatedWithNewParams interprets k\x3d\x27\x27 as \x22delete k\x22.\n  return this.updatedWithNewParams(\n      goog.object.map(paramsSet, goog.functions.constant(\x27\x27)));\n};\n\n\n/**\n * DO NOT USE - DEPRECATED.\n * Gets all primary states in the AnalyzedState in percent-encoded form.\n * @return {!Object\x3cstring, string\x3e}\n * @deprecated Use {@link gws.historyState.AnalyzedState.prototype.getPrimaryStates} instead.\n */\ngws.historyState.AnalyzedState.prototype.getEncodedPrimaryStates \x3d function() {\n  return goog.object.map(this.getPrimaryStates(), function(value, key) {\n    return gwsValueDecoder.serialize(value, key);\n  });\n};\n\n\n/**\n * Gets all primary states in the AnalyzedState.\n * @return {!Object\x3cstring, string\x3e}\n */\ngws.historyState.AnalyzedState.prototype.getPrimaryStates \x3d function() {\n  const primaryStates \x3d {};\n  for (const key of this.params_.keys()) {\n    if (!gws.historyState.AnalyzedState.isPrimaryParamName(key)) continue;\n    primaryStates[key] \x3d this.params_.get(key) || \x27\x27;\n  }\n  return primaryStates;\n};\n\n\n/**\n * DO NOT USE - DEPRECATED.\n * Gets all update states in the AnalyzedState in percent-encoded form.\n * @return {!Object\x3cstring, string\x3e}\n * @deprecated Use {@link gws.historyState.AnalyzedState.prototype.getUpdateStates} instead.\n */\ngws.historyState.AnalyzedState.prototype.getEncodedUpdateStates \x3d function() {\n  return goog.object.map(this.getUpdateStates(), function(value, key) {\n    return gwsValueDecoder.serialize(value, key);\n  });\n};\n\n\n/**\n * Gets all update states in the AnalyzedState.\n * @return {!Object\x3cstring, string\x3e}\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.AnalyzedState.prototype.getUpdateStates \x3d function() {\n  const updateStates \x3d {};\n  for (const key of this.params_.keys()) {\n    if (!(gws.historyState.AnalyzedState.getParamKind(key) \x3d\x3d\n          gws.historyState.AnalyzedState.ParamKind.UPDATE)) {\n      continue;\n    }\n    updateStates[key] \x3d this.params_.get(key) || \x27\x27;\n  }\n  return updateStates;\n};\n\n\n/**\n * DO NOT USE - DEPRECATED.\n * Gets all params in the AnalyzedState in percent-encoded form.\n * States that were set to the value \x27\x27 are considered the same as\n * states initially not set and are not included.\n * @return {!Object\x3cstring, string\x3e}\n * @deprecated Use {@link gws.historyState.AnalyzedState.prototype.getEncodedParams} instead.\n */\ngws.historyState.AnalyzedState.prototype.getEncodedParams \x3d function() {\n  return goog.object.map(this.getParams(), function(value, key) {\n    return gwsValueDecoder.serialize(value, key);\n  });\n};\n\n\n/**\n * Gets all params in the AnalyzedState.\n * States that were set to the value \x27\x27 are considered the same as\n * states initially not set and are not included.\n * @return {!Object\x3cstring, string\x3e}\n */\ngws.historyState.AnalyzedState.prototype.getParams \x3d function() {\n  const params \x3d {};\n  for (const key of this.params_.keys()) {\n    params[key] \x3d this.params_.get(key) || \x27\x27;\n  }\n  return params;\n};\n\n\n/**\n * Returns true if the state contains no primary params.\n * @return {boolean}\n */\ngws.historyState.AnalyzedState.prototype.hasPrimaryParams \x3d function() {\n  return this.primaryOrder_.length !\x3d 0;\n};\n\n\n/**\n * @return {string}\n */\ngws.historyState.AnalyzedState.prototype.getPath \x3d function() {\n  return this.path_;\n};\n\n\n/**\n * Returns true if the given state is identical to the current state, meaning\n * it has exactly the same parameters, and all the values are equal.\n * @param {!gws.historyState.AnalyzedState} other\n * @return {boolean}\n */\ngws.historyState.AnalyzedState.prototype.equals \x3d function(other) {\n  if (this.params_.size !\x3d other.params_.size) return false;\n  for (const key of this.params_.keys()) {\n    // Internal parameters that should never be used for state equality.\n    if (urlParamKeys.ignoreForEqualityParamKeySet.has(key)) continue;\n    if (this.params_.get(key) !\x3d\x3d other.params_.get(key)) return false;\n  }\n  return this.isPathEqual_(other);\n};\n\n\n/**\n * Compares this state to another for equivalence, considering only the\n * primary part of the states.\n * @param {!gws.historyState.AnalyzedState} b\n * @return {boolean}\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.AnalyzedState.prototype.isEquivalentToConsideringPrimaryOnly \x3d\n    function(b) {\n  // First, remove ugly params.\n  var a \x3d gws.historyState.AnalyzedState.stripUglyParams(this);\n  b \x3d gws.historyState.AnalyzedState.stripUglyParams(b);\n\n  // Psychic also arbitrarily changes the case of the query, which confuses the\n  // normal check.\n  a \x3d a.updatedWithNewParams(\n      {\x27q\x27: goog.string.trim(a.getParam(\x27q\x27).toLowerCase())});\n  b \x3d b.updatedWithNewParams(\n      {\x27q\x27: goog.string.trim(b.getParam(\x27q\x27).toLowerCase())});\n  return a.equalsConsideringPrimaryStateOnly(b);\n};\n\n\n/**\n * Returns true if the given state is primary-state-equivalent to the current\n * state, meaning its primary state has exactly the same parameters, and all\n * their values are equal.\n * @param {!gws.historyState.AnalyzedState} other\n * @return {boolean}\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.AnalyzedState.prototype.equalsConsideringPrimaryStateOnly \x3d\n    function(other) {\n  return goog.object.equals(\n             this.getEncodedPrimaryStates(), other.getEncodedPrimaryStates()) \x26\x26\n      this.isPathEqual_(other);\n};\n\n\n/**\n * The paths /, /search, and /webhp are considered equivalent. This compares\n * the current and other paths while upholding that equivalence.\n * @param {!gws.historyState.AnalyzedState} other\n * @return {boolean}\n * @private\n */\ngws.historyState.AnalyzedState.prototype.isPathEqual_ \x3d function(other) {\n  return this.path_ \x3d\x3d\x3d other.path_ ||\n      (gws.historyState.AnalyzedState.isSearchPath(other.path_) \x26\x26\n       gws.historyState.AnalyzedState.isSearchPath(this.path_));\n};\n\n\n/**\n * @param {string} path\n * @return {boolean} Returns true if the path is a search path.\n */\ngws.historyState.AnalyzedState.isSearchPath \x3d function(path) {\n  return path \x3d\x3d\x3d \x27/\x27 || path \x3d\x3d\x3d \x27/search\x27 || path \x3d\x3d\x3d \x27/webhp\x27;\n};\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/history_state/analyzed_state.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy24');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy24');

}catch(e){_DumpException(e)}
/* _Module_:sy3x */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3x');
var $googDebugFname="javascript/closure/events/keycodes.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Constant declarations for common key codes.\n *\n * @author eae@google.com (Emil A Eklund)\n * @see ../demos/keyhandler.html\n */\n\ngoog.provide(\x27goog.events.KeyCodes\x27);\n\ngoog.require(\x27goog.userAgent\x27);\n\ngoog.forwardDeclare(\x27goog.events.BrowserEvent\x27);\n\n\n/**\n * Key codes for common characters.\n *\n * This list is not localized and therefore some of the key codes are not\n * correct for non US keyboard layouts. See comments below.\n *\n * @enum {number}\n */\ngoog.events.KeyCodes \x3d {\n  WIN_KEY_FF_LINUX: 0,\n  MAC_ENTER: 3,\n  BACKSPACE: 8,\n  TAB: 9,\n  NUM_CENTER: 12,  // NUMLOCK on FF/Safari Mac\n  ENTER: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  PAUSE: 19,\n  CAPS_LOCK: 20,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,    // also NUM_NORTH_EAST\n  PAGE_DOWN: 34,  // also NUM_SOUTH_EAST\n  END: 35,        // also NUM_SOUTH_WEST\n  HOME: 36,       // also NUM_NORTH_WEST\n  LEFT: 37,       // also NUM_WEST\n  UP: 38,         // also NUM_NORTH\n  RIGHT: 39,      // also NUM_EAST\n  DOWN: 40,       // also NUM_SOUTH\n  PLUS_SIGN: 43,  // NOT numpad plus\n  PRINT_SCREEN: 44,\n  INSERT: 45,  // also NUM_INSERT\n  DELETE: 46,  // also NUM_DELETE\n  ZERO: 48,\n  ONE: 49,\n  TWO: 50,\n  THREE: 51,\n  FOUR: 52,\n  FIVE: 53,\n  SIX: 54,\n  SEVEN: 55,\n  EIGHT: 56,\n  NINE: 57,\n  FF_SEMICOLON: 59,   // Firefox (Gecko) fires this for semicolon instead of 186\n  FF_EQUALS: 61,      // Firefox (Gecko) fires this for equals instead of 187\n  FF_DASH: 173,       // Firefox (Gecko) fires this for dash instead of 189\n  QUESTION_MARK: 63,  // needs localization\n  AT_SIGN: 64,\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  META: 91,  // WIN_KEY_LEFT\n  WIN_KEY_RIGHT: 92,\n  CONTEXT_MENU: 93,\n  NUM_ZERO: 96,\n  NUM_ONE: 97,\n  NUM_TWO: 98,\n  NUM_THREE: 99,\n  NUM_FOUR: 100,\n  NUM_FIVE: 101,\n  NUM_SIX: 102,\n  NUM_SEVEN: 103,\n  NUM_EIGHT: 104,\n  NUM_NINE: 105,\n  NUM_MULTIPLY: 106,\n  NUM_PLUS: 107,\n  NUM_MINUS: 109,\n  NUM_PERIOD: 110,\n  NUM_DIVISION: 111,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  NUMLOCK: 144,\n  SCROLL_LOCK: 145,\n\n  // OS-specific media keys like volume controls and browser controls.\n  FIRST_MEDIA_KEY: 166,\n  LAST_MEDIA_KEY: 183,\n\n  SEMICOLON: 186,             // needs localization\n  DASH: 189,                  // needs localization\n  EQUALS: 187,                // needs localization\n  COMMA: 188,                 // needs localization\n  PERIOD: 190,                // needs localization\n  SLASH: 191,                 // needs localization\n  APOSTROPHE: 192,            // needs localization\n  TILDE: 192,                 // needs localization\n  SINGLE_QUOTE: 222,          // needs localization\n  OPEN_SQUARE_BRACKET: 219,   // needs localization\n  BACKSLASH: 220,             // needs localization\n  CLOSE_SQUARE_BRACKET: 221,  // needs localization\n  WIN_KEY: 224,\n  MAC_FF_META:\n      224,  // Firefox (Gecko) fires this for the meta key instead of 91\n  MAC_WK_CMD_LEFT: 91,   // WebKit Left Command key fired, same as META\n  MAC_WK_CMD_RIGHT: 93,  // WebKit Right Command key fired, different from META\n  WIN_IME: 229,\n\n  // \x22Reserved for future use\x22. Some programs (e.g. the SlingPlayer 2.4 ActiveX\n  // control) fire this as a hacky way to disable screensavers.\n  VK_NONAME: 252,\n\n  // We\x27ve seen users whose machines fire this keycode at regular one\n  // second intervals. The common thread among these users is that\n  // they\x27re all using Dell Inspiron laptops, so we suspect that this\n  // indicates a hardware/bios problem.\n  // http://en.community.dell.com/support-forums/laptop/f/3518/p/19285957/19523128.aspx\n  PHANTOM: 255\n};\n\n\n/**\n * Returns false if the event does not contain a text modifying key.\n *\n * When it returns true, the event might be text modifying. It is infeasible to\n * say for sure because of the many different keyboard layouts, so this method\n * errs on the side of assuming a key event is text-modifiable if we cannot be\n * certain it is not. As an example, it will return true for ctrl+a, though in\n * many standard keyboard layouts that key combination would mean \x22select all\x22,\n * and not actually modify the text.\n *\n * @param {goog.events.BrowserEvent} e A key event.\n * @return {boolean} Whether it\x27s a text modifying key.\n */\ngoog.events.KeyCodes.isTextModifyingKeyEvent \x3d function(e) {\n  if (e.altKey \x26\x26 !e.ctrlKey || e.metaKey ||\n      // Function keys don\x27t generate text\n      e.keyCode \x3e\x3d goog.events.KeyCodes.F1 \x26\x26\n          e.keyCode \x3c\x3d goog.events.KeyCodes.F12) {\n    return false;\n  }\n\n  // The following keys are quite harmless, even in combination with\n  // CTRL, ALT or SHIFT.\n  switch (e.keyCode) {\n    case goog.events.KeyCodes.ALT:\n    case goog.events.KeyCodes.CAPS_LOCK:\n    case goog.events.KeyCodes.CONTEXT_MENU:\n    case goog.events.KeyCodes.CTRL:\n    case goog.events.KeyCodes.DOWN:\n    case goog.events.KeyCodes.END:\n    case goog.events.KeyCodes.ESC:\n    case goog.events.KeyCodes.HOME:\n    case goog.events.KeyCodes.INSERT:\n    case goog.events.KeyCodes.LEFT:\n    case goog.events.KeyCodes.MAC_FF_META:\n    case goog.events.KeyCodes.META:\n    case goog.events.KeyCodes.NUMLOCK:\n    case goog.events.KeyCodes.NUM_CENTER:\n    case goog.events.KeyCodes.PAGE_DOWN:\n    case goog.events.KeyCodes.PAGE_UP:\n    case goog.events.KeyCodes.PAUSE:\n    case goog.events.KeyCodes.PHANTOM:\n    case goog.events.KeyCodes.PRINT_SCREEN:\n    case goog.events.KeyCodes.RIGHT:\n    case goog.events.KeyCodes.SCROLL_LOCK:\n    case goog.events.KeyCodes.SHIFT:\n    case goog.events.KeyCodes.UP:\n    case goog.events.KeyCodes.VK_NONAME:\n    case goog.events.KeyCodes.WIN_KEY:\n    case goog.events.KeyCodes.WIN_KEY_RIGHT:\n      return false;\n    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:\n      return !goog.userAgent.GECKO;\n    default:\n      return e.keyCode \x3c goog.events.KeyCodes.FIRST_MEDIA_KEY ||\n          e.keyCode \x3e goog.events.KeyCodes.LAST_MEDIA_KEY;\n  }\n};\n\n\n/**\n * Returns true if the key fires a keypress event in the current browser.\n *\n * Accoridng to MSDN [1] IE only fires keypress events for the following keys:\n * - Letters: A - Z (uppercase and lowercase)\n * - Numerals: 0 - 9\n * - Symbols: ! @ # $ % ^ \x26 * ( ) _ - + \x3d \x3c [ ] { } , . / ? \\ | \x27 ` \x22 ~\n * - System: ESC, SPACEBAR, ENTER\n *\n * That\x27s not entirely correct though, for instance there\x27s no distinction\n * between upper and lower case letters.\n *\n * [1] http://msdn2.microsoft.com/en-us/library/ms536939(VS.85).aspx)\n *\n * Safari is similar to IE, but does not fire keypress for ESC.\n *\n * Additionally, IE6 does not fire keydown or keypress events for letters when\n * the control or alt keys are held down and the shift key is not. IE7 does\n * fire keydown in these cases, though, but not keypress.\n *\n * @param {number} keyCode A key code.\n * @param {number\x3d} opt_heldKeyCode Key code of a currently-held key.\n * @param {boolean\x3d} opt_shiftKey Whether the shift key is held down.\n * @param {boolean\x3d} opt_ctrlKey Whether the control key is held down.\n * @param {boolean\x3d} opt_altKey Whether the alt key is held down.\n * @param {boolean\x3d} opt_metaKey Whether the meta key is held down.\n * @return {boolean} Whether it\x27s a key that fires a keypress event.\n */\ngoog.events.KeyCodes.firesKeyPressEvent \x3d function(\n    keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey,\n    opt_metaKey) {\n  if (!goog.userAgent.IE \x26\x26 !goog.userAgent.EDGE \x26\x26\n      !(goog.userAgent.WEBKIT \x26\x26 goog.userAgent.isVersionOrHigher(\x27525\x27))) {\n    return true;\n  }\n\n  if (goog.userAgent.MAC \x26\x26 opt_altKey) {\n    return goog.events.KeyCodes.isCharacterKey(keyCode);\n  }\n\n  // Alt but not AltGr which is represented as Alt+Ctrl.\n  if (opt_altKey \x26\x26 !opt_ctrlKey) {\n    return false;\n  }\n\n  // Saves Ctrl or Alt + key for IE and WebKit 525+, which won\x27t fire keypress.\n  // Non-IE browsers and WebKit prior to 525 won\x27t get this far so no need to\n  // check the user agent.\n  if (goog.isNumber(opt_heldKeyCode)) {\n    opt_heldKeyCode \x3d goog.events.KeyCodes.normalizeKeyCode(opt_heldKeyCode);\n  }\n  var heldKeyIsModifier \x3d opt_heldKeyCode \x3d\x3d goog.events.KeyCodes.CTRL ||\n      opt_heldKeyCode \x3d\x3d goog.events.KeyCodes.ALT ||\n      goog.userAgent.MAC \x26\x26 opt_heldKeyCode \x3d\x3d goog.events.KeyCodes.META;\n  // The Shift key blocks keypresses on Mac iff accompanied by another modifier.\n  var modifiedShiftKey \x3d opt_heldKeyCode \x3d\x3d goog.events.KeyCodes.SHIFT \x26\x26\n      (opt_ctrlKey || opt_metaKey);\n  if ((!opt_shiftKey || goog.userAgent.MAC) \x26\x26 heldKeyIsModifier ||\n      goog.userAgent.MAC \x26\x26 modifiedShiftKey) {\n    return false;\n  }\n\n  // Some keys with Ctrl/Shift do not issue keypress in WEBKIT.\n  if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) \x26\x26 opt_ctrlKey \x26\x26\n      opt_shiftKey) {\n    switch (keyCode) {\n      case goog.events.KeyCodes.BACKSLASH:\n      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:\n      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:\n      case goog.events.KeyCodes.TILDE:\n      case goog.events.KeyCodes.SEMICOLON:\n      case goog.events.KeyCodes.DASH:\n      case goog.events.KeyCodes.EQUALS:\n      case goog.events.KeyCodes.COMMA:\n      case goog.events.KeyCodes.PERIOD:\n      case goog.events.KeyCodes.SLASH:\n      case goog.events.KeyCodes.APOSTROPHE:\n      case goog.events.KeyCodes.SINGLE_QUOTE:\n        return false;\n    }\n  }\n\n  // When Ctrl+\x3csomekey\x3e is held in IE, it only fires a keypress once, but it\n  // continues to fire keydown events as the event repeats.\n  if (goog.userAgent.IE \x26\x26 opt_ctrlKey \x26\x26 opt_heldKeyCode \x3d\x3d keyCode) {\n    return false;\n  }\n\n  switch (keyCode) {\n    case goog.events.KeyCodes.ENTER:\n      return true;\n    case goog.events.KeyCodes.ESC:\n      return !(goog.userAgent.WEBKIT || goog.userAgent.EDGE);\n  }\n\n  return goog.events.KeyCodes.isCharacterKey(keyCode);\n};\n\n\n/**\n * Returns true if the key produces a character.\n * This does not cover characters on non-US keyboards (Russian, Hebrew, etc.).\n *\n * @param {number} keyCode A key code.\n * @return {boolean} Whether it\x27s a character key.\n */\ngoog.events.KeyCodes.isCharacterKey \x3d function(keyCode) {\n  if (keyCode \x3e\x3d goog.events.KeyCodes.ZERO \x26\x26\n      keyCode \x3c\x3d goog.events.KeyCodes.NINE) {\n    return true;\n  }\n\n  if (keyCode \x3e\x3d goog.events.KeyCodes.NUM_ZERO \x26\x26\n      keyCode \x3c\x3d goog.events.KeyCodes.NUM_MULTIPLY) {\n    return true;\n  }\n\n  if (keyCode \x3e\x3d goog.events.KeyCodes.A \x26\x26 keyCode \x3c\x3d goog.events.KeyCodes.Z) {\n    return true;\n  }\n\n  // Safari sends zero key code for non-latin characters.\n  if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) \x26\x26 keyCode \x3d\x3d 0) {\n    return true;\n  }\n\n  switch (keyCode) {\n    case goog.events.KeyCodes.SPACE:\n    case goog.events.KeyCodes.PLUS_SIGN:\n    case goog.events.KeyCodes.QUESTION_MARK:\n    case goog.events.KeyCodes.AT_SIGN:\n    case goog.events.KeyCodes.NUM_PLUS:\n    case goog.events.KeyCodes.NUM_MINUS:\n    case goog.events.KeyCodes.NUM_PERIOD:\n    case goog.events.KeyCodes.NUM_DIVISION:\n    case goog.events.KeyCodes.SEMICOLON:\n    case goog.events.KeyCodes.FF_SEMICOLON:\n    case goog.events.KeyCodes.DASH:\n    case goog.events.KeyCodes.EQUALS:\n    case goog.events.KeyCodes.FF_EQUALS:\n    case goog.events.KeyCodes.COMMA:\n    case goog.events.KeyCodes.PERIOD:\n    case goog.events.KeyCodes.SLASH:\n    case goog.events.KeyCodes.APOSTROPHE:\n    case goog.events.KeyCodes.SINGLE_QUOTE:\n    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:\n    case goog.events.KeyCodes.BACKSLASH:\n    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:\n      return true;\n    default:\n      return false;\n  }\n};\n\n\n/**\n * Normalizes key codes from OS/Browser-specific value to the general one.\n * @param {number} keyCode The native key code.\n * @return {number} The normalized key code.\n */\ngoog.events.KeyCodes.normalizeKeyCode \x3d function(keyCode) {\n  if (goog.userAgent.GECKO) {\n    return goog.events.KeyCodes.normalizeGeckoKeyCode(keyCode);\n  } else if (goog.userAgent.MAC \x26\x26 goog.userAgent.WEBKIT) {\n    return goog.events.KeyCodes.normalizeMacWebKitKeyCode(keyCode);\n  } else {\n    return keyCode;\n  }\n};\n\n\n/**\n * Normalizes key codes from their Gecko-specific value to the general one.\n * @param {number} keyCode The native key code.\n * @return {number} The normalized key code.\n */\ngoog.events.KeyCodes.normalizeGeckoKeyCode \x3d function(keyCode) {\n  switch (keyCode) {\n    case goog.events.KeyCodes.FF_EQUALS:\n      return goog.events.KeyCodes.EQUALS;\n    case goog.events.KeyCodes.FF_SEMICOLON:\n      return goog.events.KeyCodes.SEMICOLON;\n    case goog.events.KeyCodes.FF_DASH:\n      return goog.events.KeyCodes.DASH;\n    case goog.events.KeyCodes.MAC_FF_META:\n      return goog.events.KeyCodes.META;\n    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:\n      return goog.events.KeyCodes.WIN_KEY;\n    default:\n      return keyCode;\n  }\n};\n\n\n/**\n * Normalizes key codes from their Mac WebKit-specific value to the general one.\n * @param {number} keyCode The native key code.\n * @return {number} The normalized key code.\n */\ngoog.events.KeyCodes.normalizeMacWebKitKeyCode \x3d function(keyCode) {\n  switch (keyCode) {\n    case goog.events.KeyCodes.MAC_WK_CMD_RIGHT:  // 93\n      return goog.events.KeyCodes.META;          // 91\n    default:\n      return keyCode;\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/events/keycodes.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3x');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3x');

}catch(e){_DumpException(e)}
/* _Module_:sye7 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sye7');
var $googDebugFname="googledata/html/templates/gws/head/xjs/client_dimension/observer_search.js";
eval("/**\n * @fileoverview sets bih/biw (height \x26 width) parameters on imagesearch and\n * shopping requests while also setting those parameters when necessary on\n * all other search requests (including async/suggest).\n * @author lijie@google.com (Lijie Chen)\n * @author camden@google.com (Camden Davis)\n * @author dcblack@google.com (David Black)\n */\ngoog.provide(\x27gws.clientDimension.observerSearch\x27);\n\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.KeyCodes\x27);\ngoog.require(\x27goog.uri.utils\x27);\ngoog.require(\x27gws.browser.dimension\x27);\ngoog.require(\x27gws.browser.dimension.Type\x27);\ngoog.require(\x27gws.historyState.AnalyzedState\x27);\ngoog.require(\x27gws.moduleInterface\x27);\n\ngoog.scope(function() {\nvar dimension \x3d gws.browser.dimension;\nvar dimensionType \x3d gws.browser.dimension.Type;\nvar observerSearch \x3d gws.clientDimension.observerSearch;\n\n\n/**\n * The stored value of the device pixel ratio (dpr) from the server-side code.\n * @private {?number}\n */\nobserverSearch.storedDpr_ \x3d null;\n\n\n/**\n * The ratio of logical pixel/physical pixel. On browsers that don\x27t\n * support \x22Retina\x22 display, the field may be undefined. Such browsers\n * have device pixel ratio of one.\n * @private {?number}\n */\nobserverSearch.dpr_ \x3d null;\n\n\n/**\n * The scroll thresholds, as a ratio of browser height.  We will log when the\n * top of the displayport passes the threshold, at most once per threshold.\n * @private {?Array\x3cnumber\x3e}\n */\nobserverSearch.scrollThresholds_ \x3d null;\n\n\n/**\n * The scroll thresholds in pixels.  We will log when the\n * top of the displayport passes the threshold, at most once per threshold.\n * @private {?Array\x3cnumber\x3e}\n */\nobserverSearch.scrollPixelThresholds_ \x3d null;\n\n\n/**\n * The height of the browser.\n * @private {number}\n */\nobserverSearch.initialBrowserHeight_ \x3d 0;\n\n\n/**\n * The width of the browser.\n * @private {number}\n */\nobserverSearch.initialBrowserWidth_ \x3d 0;\n\n\n/**\n * Enables scroll event logging for whether there was a scroll event,\n * mousewheel event or a keyboard-scroll event.\n * @private {boolean}\n */\nobserverSearch.enableBasicScrollEventLogging_ \x3d false;\n\n\n/**\n * Whether there has been a scroll event on this query.\n * @private {boolean}\n */\nobserverSearch.hasScrollEvent_ \x3d false;\n\n\n/**\n * Whether there has been a mousewheel event on this query.\n * @private {boolean}\n */\nobserverSearch.hasMouseWheelEvent_ \x3d false;\n\n\n/**\n * Whether there has been a keydown event on this query that caused scrolling.\n * @private {boolean}\n */\nobserverSearch.hasKeyboardScrollEvent_ \x3d false;\n\n\n/**\n * @param {string} eventName\n * @param {string} extraData\n * @private\n */\nobserverSearch.logScrollEvent_ \x3d function(eventName, extraData) {\n  google.log(\n      \x27cdobsel\x27,\n      \x27\x26n\x3d\x27 + eventName + \x27\x26p\x3d\x27 + goog.dom.getDocumentScroll().y +\n          \x27\x26se\x3d\x27 + observerSearch.hasScrollEvent_ +\n          \x27\x26mwe\x3d\x27 + observerSearch.hasMouseWheelEvent_ + \x27\x26kse\x3d\x27 +\n          observerSearch.hasKeyboardScrollEvent_ + \x27\x26ed\x3d\x27 + extraData);\n};\n\n\n/**\n * @param {string} url\n * @return {boolean}\n * @private\n */\nobserverSearch.isSearchURL_ \x3d function(url) {\n  return /^\\/(search|images)\\?/.test(url);\n};\n\n\n/**\n * Updates the width and height stored in the hidden biw/bih elements.\n */\nobserverSearch.updateSearchFormFields \x3d function() {\n  observerSearch.setInputValue_(\x27biw\x27, dimension.get(dimensionType.WIDTH));\n  observerSearch.setInputValue_(\x27bih\x27, dimension.get(dimensionType.HEIGHT));\n};\n\n\n/**\n * Sets the value of the input by a given element name.\n * @param {string} name\n * @param {number|string} value\n * @private\n */\nobserverSearch.setInputValue_ \x3d function(name, value) {\n  var inputs \x3d document.getElementsByName(name);\n  // We\x27ll only have an input field if there\x27s a seach form on the page.\n  if (inputs.length) {\n    inputs[0].value \x3d String(value);\n  }\n};\n\n\n/**\n * Adds viewport (biw/bih/dpr) params to all search URLs.\n * @param {!gws.historyState.AnalyzedState} state The original state.\n * @return {!gws.historyState.AnalyzedState} The updated state.\n */\nobserverSearch.addViewportParams \x3d function(state) {\n  return state.updatedWithNewParams(observerSearch.getViewportParams_());\n};\n\n\n/**\n * Adds viewport (biw/bih/dpr) params to all search URLs.\n * @param {string} url The original url.\n * @return {string} The updated url.\n */\nobserverSearch.addViewportParamsToString \x3d function(url) {\n  if (!observerSearch.isSearchURL_(url)) {\n    return url;\n  }\n  var params \x3d observerSearch.getViewportParams_();\n  // It\x27s more efficient to remove multiple params then append, than to call\n  // goog.uri.utils.setParam repeatedly.\n  for (var key in params) {\n    url \x3d goog.uri.utils.removeParam(url, key);\n  }\n  return goog.uri.utils.appendParamsFromMap(url, params);\n};\n\n\n/**\n * @return {!Object\x3cstring, string\x3e}\n * @private\n */\nobserverSearch.getViewportParams_ \x3d function() {\n  // Always add the biw \x26 bih params, as they are needed for cache keys to be\n  // consistent.\n  var params \x3d {\n    \x27biw\x27: String(dimension.get(dimensionType.WIDTH)),\n    \x27bih\x27: String(dimension.get(dimensionType.HEIGHT))\n  };\n  // Add dpr when it has changed from the stored value or is different from\n  // the default (1.0) for the ~5% of users who have opted out of web history.\n  if (observerSearch.dpr_ !\x3d observerSearch.storedDpr_) {\n    params[\x27dpr\x27] \x3d String(observerSearch.dpr_);\n  }\n  return params;\n};\n\n/**\n * Rewrites the HREF of the target element to include the browser height and\n * width CGI parameters.\n * @param {!Element} target\n */\nobserverSearch.setHrefViewportParams \x3d function(target) {\n  // NOTE(hurst): We access the href attribute via \x27getAttribute\x27 instead of\n  // the \x27href\x27 expando because the href expando converts relative URLs to\n  // absolute URLs.  The second argument, \x272\x27, is required for IE which will\n  // otherwise return the absolute URL; it is ignored by other browsers.\n  var url \x3d target.getAttribute(\x27href\x27, 2);\n  if (url) {\n    target.href \x3d observerSearch.addViewportParamsToString(url);\n  }\n};\n\n\n/**\n * Handles a click or touch event on the document.\n * @param {!Event} ev\n * @private\n */\nobserverSearch.handleClickOrTouch_ \x3d function(ev) {\n  ev \x3d ev || window.event;\n  var source \x3d /** @type {?Node} */ (ev.target || ev.srcElement);\n\n  // Zip up the DOM to find a target matching anchor.\n  var target \x3d\n      goog.dom.getAncestorByTagNameAndClass(source, goog.dom.TagName.A);\n  if (target) {\n    observerSearch.setHrefViewportParams(target);\n  }\n};\n\n\n/**\n * Handles a scroll event on the document.  Used to determine if the user has\n * passed a scroll threshold, which logs the event.  Note that when the user\n * scrolls past a threshold, that threshold is removed from scrollThresholds_.\n * This means that each threshold will be logged at most once.  We use a while\n * loop below in case one scroll event moved past multiple thresholds (this\n * happens in particular with \x22page-down\x22 on desktop).\n *\n * Note that this handles both the height-fraction-based thresholds and the\n * pixel-based thresholds.\n *\n * Also, if enableBasicScrollEventLogging_ is true, logs the first scroll event.\n * @param {?Event} ev\n * @private\n */\nobserverSearch.handleScroll_ \x3d function(ev) {\n  if (observerSearch.enableBasicScrollEventLogging_ \x26\x26\n      !observerSearch.hasScrollEvent_) {\n    observerSearch.hasScrollEvent_ \x3d true;\n    observerSearch.logScrollEvent_(\x27se\x27, \x27\x27);\n  }\n  if (observerSearch.initialBrowserHeight_ \x3e 0 \x26\x26\n      goog.isDefAndNotNull(observerSearch.scrollThresholds_)) {\n    while (observerSearch.scrollThresholds_.length \x3e 0) {\n      var fraction \x3d observerSearch.scrollThresholds_[0];\n      var threshold \x3d fraction * observerSearch.initialBrowserHeight_;\n      if (goog.dom.getDocumentScroll().y \x3e\x3d threshold) {\n        observerSearch.scrollThresholds_.shift();\n        google.log(\x27cdost\x27, \x27\x26f\x3d\x27 + fraction + \x27\x26p\x3d\x27 + threshold);\n      } else {\n        break;\n      }\n    }\n  }\n  if (!goog.isDefAndNotNull(observerSearch.scrollPixelThresholds_)) {\n    return;\n  }\n  while (observerSearch.scrollPixelThresholds_.length \x3e 0) {\n    var threshold \x3d observerSearch.scrollPixelThresholds_[0];\n    if (goog.dom.getDocumentScroll().y \x3e\x3d threshold) {\n      observerSearch.scrollPixelThresholds_.shift();\n      google.log(\n          \x27cdospt\x27,\n          \x27\x26p\x3d\x27 + threshold + \x27\x26bh\x3d\x27 + observerSearch.initialBrowserHeight_ +\n              \x27\x26bw\x3d\x27 + observerSearch.initialBrowserWidth_);\n    } else {\n      break;\n    }\n  }\n};\n\n\n/**\n * If enableBasicScrollEventLogging_ is true, logs the first mousewheel\n * event, except that scrolling up when already at the top of the page doesn\x27t\n * count.\n * @param {!WheelEvent} ev\n * @private\n */\nobserverSearch.handleMouseWheel_ \x3d function(ev) {\n  ev \x3d ev || window.event;\n  var isDownScroll \x3d ev.wheelDelta \x3c 0 || ev.detail \x3e 0;\n  if (!isDownScroll \x26\x26 goog.dom.getDocumentScroll().y \x3c\x3d 0) {\n    // This was an up-scroll event, but the page is already at the top.\n    return;\n  }\n  if (observerSearch.enableBasicScrollEventLogging_ \x26\x26\n      !observerSearch.hasMouseWheelEvent_) {\n    observerSearch.hasMouseWheelEvent_ \x3d true;\n    observerSearch.logScrollEvent_(\x27mwe\x27, isDownScroll ? \x27down\x27 : \x27up\x27);\n  }\n};\n\n\n/**\n * If enableBasicScrollEventLogging_ is true, logs the first keydown event\n * that likely resulted in scrolling, except that scrolling up when already at\n * the top of the page doesn\x27t count.\n * @param {!Event} ev\n * @private\n */\nobserverSearch.handleKeyDown_ \x3d function(ev) {\n  ev \x3d ev || window.event;\n  if (ev.target \x26\x26 ev.target.tagName \x26\x26\n      ev.target.tagName.toLowerCase() \x3d\x3d \x27input\x27) {\n    // An input tag has keyboard focus, so ignore this keydown event.\n    return;\n  }\n  var isUpScroll \x3d ev.keyCode \x3d\x3d goog.events.KeyCodes.PAGE_UP ||\n      ev.keyCode \x3d\x3d goog.events.KeyCodes.HOME ||\n      ev.keyCode \x3d\x3d goog.events.KeyCodes.UP;\n  var isDownScroll \x3d ev.keyCode \x3d\x3d goog.events.KeyCodes.SPACE ||\n      ev.keyCode \x3d\x3d goog.events.KeyCodes.PAGE_DOWN ||\n      ev.keyCode \x3d\x3d goog.events.KeyCodes.END ||\n      ev.keyCode \x3d\x3d goog.events.KeyCodes.DOWN;\n  if (!isDownScroll \x26\x26 !isUpScroll) {\n    // Not a scrolling key.\n    return;\n  }\n  if (isUpScroll \x26\x26 goog.dom.getDocumentScroll().y \x3c\x3d 0) {\n    // This was an up-scroll event, but the page is already at the top.\n    return;\n  }\n  if (observerSearch.enableBasicScrollEventLogging_ \x26\x26\n      !observerSearch.hasKeyboardScrollEvent_) {\n    observerSearch.hasKeyboardScrollEvent_ \x3d true;\n    observerSearch.logScrollEvent_(\x27kse\x27, ev.keyCode.toString());\n  }\n};\n\n\n/** @private */\nobserverSearch.registerEventHandlers_ \x3d function() {\n  goog.events.listen(window, \x27resize\x27, observerSearch.updateSearchFormFields);\n  // TODO(ruilopes): Use JsAction\x27s global event handler support to remove this\n  // event binding.\n  goog.events.listen(document, \x27click\x27, observerSearch.handleClickOrTouch_);\n  goog.events.listen(\n      document, \x27touchstart\x27, observerSearch.handleClickOrTouch_);\n  google.iade \x3d false;\n  goog.events.listen(document, \x27scroll\x27, observerSearch.handleScroll_);\n  goog.events.listen(document, \x27mousewheel\x27, observerSearch.handleMouseWheel_);\n  goog.events.listen(document, \x27keydown\x27, observerSearch.handleKeyDown_);\n};\n\n\n/**\n * @param {!Object} config\n * @private\n */\nobserverSearch.init_ \x3d function(config) {\n  observerSearch.registerEventHandlers_();\n\n  // Initialize the dimensions.\n  observerSearch.updateSearchFormFields();\n\n  // Initialize the device pixel ratio.\n  var dpr \x3d window.devicePixelRatio || 1;\n  observerSearch.dpr_ \x3d Math.round(dpr * 100) / 100;\n\n  if (google.sn \x3d\x3d \x27web\x27 || google.sn \x3d\x3d \x27productsearch\x27 ||\n      google.sn \x3d\x3d \x27entsearch\x27) {\n    // If this is a search request (as opposed to a homepage request), and the\n    // current width (calculated via getBrowserDimension) differs from the\n    // last-known width (passed in via the config object), then send a ping to\n    // /client_204 to let GWS know about the updated values, including dpr.\n    var width \x3d dimension.get(dimensionType.WIDTH);\n    var height \x3d dimension.get(dimensionType.HEIGHT);\n    var storedDpr \x3d config[\x27dpr\x27] || 1;\n    var shouldStoreDpr \x3d storedDpr !\x3d dpr;\n    observerSearch.storedDpr_ \x3d storedDpr;\n    observerSearch.initialBrowserHeight_ \x3d height;\n    observerSearch.initialBrowserWidth_ \x3d width;\n    observerSearch.scrollThresholds_ \x3d config[\x27cdost\x27];\n    observerSearch.scrollPixelThresholds_ \x3d config[\x27cdospt\x27];\n    if (goog.isDefAndNotNull(observerSearch.scrollPixelThresholds_)) {\n      google.log(\x27cdospt\x27, \x27\x26p\x3d0\x26bh\x3d\x27 + height + \x27\x26bw\x3d\x27 + width);\n    }\n\n    if (width \x26\x26 height \x26\x26\n        (width !\x3d config[\x27biw\x27] || height !\x3d config[\x27bih\x27] || shouldStoreDpr)) {\n      // Only add on dpr if it can be stored, and if it differs from what was\n      // in storage.\n      var dprParam \x3d shouldStoreDpr ? \x27\x26dpr\x3d\x27 + dpr : \x27\x27;\n      google.log(\n          \x27\x27, \x27\x27,  // The first two args are ignored when the third is present.\n          \x27/client_204?\x26atyp\x3di\x26biw\x3d\x27 + width + \x27\x26bih\x3d\x27 + height + dprParam +\n              \x27\x26ei\x3d\x27 + google.kEI);\n    }\n  }\n\n  observerSearch.enableBasicScrollEventLogging_ \x3d config[\x27cdobsel\x27];\n  observerSearch.hasScrollEvent_ \x3d false;\n  observerSearch.hasMouseWheelEvent_ \x3d false;\n  observerSearch.hasKeyboardScrollEvent_ \x3d false;\n};\n\n\ngws.moduleInterface.register(\n    \x27cdos\x27, {[gws.moduleInterface.EventType.INIT]: observerSearch.init_});\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/client_dimension/observer_search.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sye7');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sye7');

}catch(e){_DumpException(e)}
/* _Module_:cdos */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('cdos');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('cdos');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('cdos');

}catch(e){_DumpException(e)}
/* _Module_:emp */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('emp');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('emp');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('emp');

}catch(e){_DumpException(e)}
/* _Module_:emo */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('emo');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('emo');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('emo');

}catch(e){_DumpException(e)}
/* _Module_:sy26 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy26');
var $googDebugFname="gws/js/url/history_wrapper_types.js";
goog.loadModule("goog.module(\x27search.url.historyWrapperTypes\x27);\n\nconst Jsonable \x3d goog.require(\x27search.Jsonable\x27);\n\n/** @typedef {?Jsonable} */\nlet State;\n\n/**\n * Fields:\n *  - entryId: Unique id that no other Entry will ever share. Unique to each\n *     update/replace operation.\n *  - pushId: Unique to a push operation. Replace operations will inherit\n *     this.\n *  - stackId: Unique to a known history stack. On page load or external soft\n *     transitions, will change.\n *  - stackIndex: Index into the stack. First push will be 0, second 1, etc.\n *     On replace, inherits the current value, on push increments by 1.\n * @typedef {{\n *   entryId: number,\n *   pushId: number,\n *   stackId: number,\n *   stackIndex: number\n * }}\n */\nlet EntryMetadata;\n\n/**\n * Fields:\n *  - state: The state that the user asked to stored.\n *  - url: The url of the page.\n *  - metadata: See metadata typedef.\n * @typedef {{\n *   state: ?State,\n *   url: string,\n *   metadata: (!EntryMetadata|undefined)\n * }}\n */\nlet Entry;\n\n/**\n * Same as entry, but metadata is not undefined.\n * @typedef {{\n *   state: ?State,\n *   url: string,\n *   metadata: !EntryMetadata\n * }}\n */\nlet ValidEntry;\n\n/**\n * @typedef {{\n *   url: string,\n *   metadata: !EntryMetadata\n * }}\n */\nlet BasicEntry;\n\n/**\n * A function that is passed the current and previous entries.\n * @typedef {function(!Entry, !Entry)}\n */\nlet Listener;\n\n/**\n * @typedef {{\n *   notifyAllChanges: boolean\n * }}\n */\nlet ListenerOptions;\n\n/**\n * Optional arguments that may be passed to the update function.\n * Fields:\n *   - excludedListeners: A Set of Listeners that should not\n *       be called as a result of this update. Default undefined.\n *   - preempt: Whether to immediately and synchronously call the update rather\n *       than waiting in the queue. Default true.\n * @typedef {{\n *   excludedListeners: (!Set\x3c!Listener\x3e|undefined),\n *   preempt: (boolean|undefined),\n * }}\n */\nlet OperationOptions;\n\n/**\n * @typedef {{\n *   state: ?State,\n *   url: string,\n *   replace: boolean\n * }}\n */\nlet UpdateContent;\n\nexports \x3d {\n  State,\n  EntryMetadata,\n  Entry,\n  ValidEntry,\n  BasicEntry,\n  Listener,\n  ListenerOptions,\n  OperationOptions,\n  UpdateContent,\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/url/history_wrapper_types.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/url/state_plugin.js";
goog.loadModule("goog.module(\x27search.url.StatePlugin\x27);\n\nconst Jsonable \x3d goog.require(\x27search.Jsonable\x27);\nconst {ValidEntry, Entry} \x3d goog.require(\x27search.url.historyWrapperTypes\x27);\n\n/**\n * Takes in the current and previous entries in addition to the\n * previous plugin state and whether it\x27s a push or replace.\n * Returns the next plugin state.\n *\n * This function will be called on every history push or replace.\n * @typedef {function(!ValidEntry, !Entry, ?Jsonable, boolean): ?Jsonable}\n */\nlet GetState;\n\n/**\n * A function that is passed the current and previous plugin states. Only\n * called on history navigations that are not also a push or replace.\n * @typedef {function((?Jsonable|undefined), (?Jsonable|undefined))}\n */\nlet Listener;\n\n/**\n * @typedef {{\n *   getState: !GetState,\n *   listener: (!Listener|undefined)\n * }}\n */\nlet StatePlugin;\n\nexports \x3d StatePlugin;\n\n//# sourceURL\x3dhttps://qs/gws/js/url/state_plugin.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/url/state_plugin_name.js";
goog.loadModule("goog.module(\x27search.url.StatePluginName\x27);\n\n/** @enum {string} */\nlet StatePluginName \x3d {\n  HISTORY_STACK: \x27hs\x27,\n  PAGE_SCROLL: \x27ps\x27,\n  TEST: \x27testing\x27,\n};\n\nexports \x3d StatePluginName;\n\n//# sourceURL\x3dhttps://qs/gws/js/url/state_plugin_name.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/url/history_wrapper_base.js";
goog.loadModule("/**\n * @fileoverview This is where most of the implementation lives for\n * historyWrapper. It\x27s been separated out into two files so that we can have\n * plugins registered for keeping a stack kept separately from the main code.\n */\ngoog.module(\x27search.url.historyWrapperBase\x27);\n\nconst EventType \x3d goog.require(\x27goog.events.EventType\x27);\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst GwsUrl \x3d goog.require(\x27search.url.GwsUrl\x27);\nconst Jsonable \x3d goog.require(\x27search.Jsonable\x27);\nconst StatePlugin \x3d goog.require(\x27search.url.StatePlugin\x27);\nconst StatePluginName \x3d goog.require(\x27search.url.StatePluginName\x27);\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst events \x3d goog.require(\x27goog.events\x27);\nconst gwsError \x3d goog.require(\x27gws.error\x27);\nconst scheduler \x3d goog.require(\x27search.task.scheduler\x27);\nconst uriUtils \x3d goog.require(\x27goog.uri.utils\x27);\nconst {State, EntryMetadata, Entry, BasicEntry, Listener, ListenerOptions, OperationOptions, UpdateContent, } \x3d goog.require(\x27search.url.historyWrapperTypes\x27);\n\nlet {setTimeout: schedulerSetTimeout} \x3d scheduler;\n\n/**\n * An internal config object that holds state about which polyfills/behavior\n * the library uses.\n * Fields:\n *   - useNativeHistory: Use history.pushState/replaceState if true, otherwise\n *       use window.location.push/replace.\n *   - useNativeState: Use history.state if true, otherwise use sessionStorage\n *       to store the state.\n * @typedef {{\n *   useNativeHistory: boolean,\n *   useNativeState: boolean\n * }}\n */\nlet GlobalConfig;\n\n/**\n * An operation that performs some operation that may change the history stack\n * and returns arbitrary output. The output of the operation is given as an\n * input to the after operation callback. The output value is used to pass\n * information to the after callback that is not known at creation time like\n * which direction and how many steps for go() if performing a find. Since the\n * after callback is created and passed in, state may have changed by the time\n * the operation is run.\n * @typedef {function(): *}\n */\nlet HistoryOperation;\n\n/**\n * Takes an entry and returns an operation to run. If the callback returns null\n * rather than an operation, then a GET_ERROR will be thrown.\n * @typedef {function(!InternalEntry): ?HistoryOperation})\n */\nlet GetHistoryOperation;\n\n/**\n * Indicates the current status of our history operation. Starts as PENDING\n * and then becomes RESOLVED or REJECTED.\n * @enum {number}\n */\nlet HistoryOperationStatus \x3d {\n  PENDING: 0,\n  RESOLVED: 1,\n  REJECTED: 2,\n};\n\n/**\n * Collects information that historyWrapper needs to know about a running\n * history operation.\n * Fields:\n *   - resolve: Ends the running operation.\n *   - reject: Ends the running operation with an error.\n *   - status: The current status of the operation.\n *   - finished: Used to add callbacks after externally resolving so that the\n *       notifications for url change listeners are sent after Promises.\n *   - excludedListeners: Which listeners should not be notified for this\n *       operation.\n * @typedef {{\n *     resolve: function(!InternalEntry),\n *     reject: function(!FinishedError),\n *     status: !HistoryOperationStatus,\n *     finished: !GoogPromise\x3c!Entry\x3e,\n *     excludedListeners: !Set\x3c!Listener\x3e\n * }}\n */\nlet RunningHistoryOperation;\n\n/**\n * This callback is called immediately after the operation finishes. If the\n * operation is synchronous (push, replace) then it will be called immediately.\n * Otherwise it is called when the hashchange/popstate fires.\n * Args:\n *   - currentEntry\n *   - previousEntry\n *   - operationValue: The return value of the HistoryOperation.\n *\n * If the function returns false, then an AFTER_ERROR is thrown.\n * @typedef {\n *     function(!InternalEntry, !InternalEntry, *): boolean\n * }\n */\nlet AfterHistoryOperation;\n\n/**\n * Additional fields:\n *   - pluginState: An Object that stores extra plugin state.\n * @typedef {{\n *   state: ?State,\n *   url: string,\n *   metadata: (!EntryMetadata|undefined),\n *   pluginState: !Object\x3cstring, ?Jsonable\x3e\n * }}\n */\nlet InternalEntry;\n\n/**\n * Same as InternalEntry, but is definitely valid. Having this typing removes\n * precondition checks in some functions.\n * @typedef {{\n *   state: ?State,\n *   url: string,\n *   metadata: !EntryMetadata,\n *   pluginState: !Object\x3cstring, ?Jsonable\x3e\n * }}\n * @package\n */\nlet ValidInternalEntry;\n\n/**\n * This is the param key used to store a unique identifier in the url if doing\n * a history state polyfill. Stores it in the hash.\n * @const {string}\n */\nconst UNIQUE_ID_PARAM_KEY \x3d \x27spf\x27;\n\n/**\n * Errors that are rejected for history operations.\n *   - GET_ERROR: An error occured while getting the history operaton to run.\n *       This means that the first callback returned null.\n *   - AFTER_ERROR: An error occured in the callback after the history operation\n *   - TIMED_OUT: No hashchange/popstate event finished the history operation.\n *   - PREEMPTED: Another operation was run with preempt \x3d true while this\n *       was still waiting.\n * @enum {!Error}\n */\nconst FinishedError \x3d {\n  GET_ERROR: new Error(\x27Error getting operation\x27),\n  AFTER_ERROR: new Error(\x27Error after operation\x27),\n  TIMED_OUT: new Error(\x27Timed out\x27),\n  PREEMPTED: new Error(\x27Preempted by a synchronous call\x27),\n};\n\n/** @package {!GlobalConfig} */\nlet globalConfig;\n\n/** @package {!Window} */\nlet win \x3d dom.getWindow();\n\n/** @type {!Map\x3c!Listener, !ListenerOptions\x3e} */\nlet listenerOptions \x3d new Map;\n\n/** @type {!Set\x3c!Listener\x3e} */\nlet listeners \x3d new Set;\n\n/** @type {!Map\x3cstring, !StatePlugin\x3e} */\nlet statePlugins \x3d new Map;\n\n/**\n * A queue of waiting history operations that will eventually be run.\n * @type {!Array\x3cfunction()\x3e}\n */\nlet waitingHistoryOperations \x3d [];\n\n/** @type {?RunningHistoryOperation} */\nlet runningHistoryOperation \x3d null;\n\n/** @type {!InternalEntry} */\nlet previousInternalEntry;\n\n/**\n * Used to catch early popstate on pageload events.\n * \x22Browsers tend to handle the popstate event differently on page load. Chrome\n * (prior to v34) and Safari always emit a popstate event on page load, but\n * Firefox doesn\x27t.\x22\n * https://developer.mozilla.org/en-US/docs/Web/Events/popstate\n * @type {number}\n */\nlet eventCount \x3d 0;\n\n/**\n * Guarding flag to prevent wrapping in an infinite loop. This is unlikely to\n * happen, but if browsers change their implementation of location.replace\n * or history.replaceState to make it asynchronous, it would be possible.\n * See b/38028111.\n * @type {boolean}\n */\nlet wrapping \x3d false;\n\n/**\n * This is used to generate the next unique id.\n *\n * Set with window.performance.timing.navigationStart or goog.now() so that on a\n * page refresh, our ids continue to increment.\n * @type {number}\n */\nlet currentHeadId \x3d\n    goog.getObjectByName(\x27performance.timing.navigationStart\x27, win) ||\n    goog.now();\n\n/**\n * Get the current url from the window object.\n * @return {string}\n * @package\n */\nfunction getCurrentUrl() {\n  return win.location.pathname + win.location.search + win.location.hash;\n}\n\n/**\n * Exported function.\n * Checks to see if the input object matches loosely the expected values for a\n * basic entry.\n * @param {*} entry\n * @return {?BasicEntry}\n */\nfunction validateBasicEntry(entry) {\n  if (goog.isObject(entry) \x26\x26 goog.isString(entry.url) \x26\x26\n      goog.isObject(entry.metadata) \x26\x26 goog.isNumber(entry.metadata.entryId) \x26\x26\n      goog.isNumber(entry.metadata.pushId) \x26\x26\n      goog.isNumber(entry.metadata.stackId) \x26\x26\n      goog.isNumber(entry.metadata.stackIndex)) {\n    return /** @type {!BasicEntry} */ (entry);\n  }\n  return null;\n}\n\n/**\n * Get the current internal entry.\n * @return {!InternalEntry}\n */\nfunction getInternalEntry() {\n  const rawState \x3d mod.getRawState();\n  const basicEntry \x3d validateBasicEntry(rawState);\n  if (basicEntry \x26\x26 goog.isObject(basicEntry.pluginState)) {\n    return /** @type {!InternalEntry} */ (basicEntry);\n  }\n  return {\n    state: null,\n    url: getCurrentUrl(),\n    pluginState: {},\n  };\n}\n\n/**\n * Clone and freeze the entry. This provides extra safety when passing these\n * objects to users, and serves to convert InternalEntry to Entry.\n * @param {!Entry} entry\n * @return {!Entry}\n */\nfunction cloneEntry(entry) {\n  const {state, url, metadata} \x3d entry;\n  const clone \x3d {state, url};\n  if (metadata) {\n    clone.metadata \x3d metadata;\n  }\n  return Object.freeze ? Object.freeze(clone) : clone;\n}\n\n/**\n * Exported function.\n * Return the current history entry.\n * @return {!Entry}\n */\nfunction getCurrent() {\n  return cloneEntry(getInternalEntry());\n}\n\n/**\n * Exported function.\n * Returns whether there are any forward or back states in history.\n * history.length is unreliable so this is the only useful information we\n * can glean from it.\n * NOTE(twilkinson): This will only return true if this page has no preceding\n * pages and is not a result of a back operation from some future pushed page.\n * If you want this information to be available on a back, then you must store\n * a marker in history.state and access it on a back.\n * @return {boolean}\n */\nfunction hasAnyHistory() {\n  return win.history.length !\x3d\x3d mod.historyInitialLength();\n}\n\n/**\n * Increment and return the next unique id.\n * @return {number}\n */\nfunction incrementUniqueId() {\n  return currentHeadId++;\n}\n\n/**\n * Do a replace operation with the current url but a new state.\n */\nfunction wrapExternalState() {\n  if (wrapping) {\n    // This protects against the possibility of an infinite loop.\n    gwsError.log(\n        new Error(\x27Failed to wrap an external state\x27),\n        {\x27url\x27: win.location.href});\n    return;\n  }\n  wrapping \x3d true;\n  update(\n      {\n        state: mod.getRawState(),\n        url: getCurrentUrl(),\n        replace: true,\n      },\n      {\n        preempt: true,\n      })\n      .thenAlways(() \x3d\x3e {\n        wrapping \x3d false;\n      });\n}\n\n/**\n * Package visibility for testing.\n * @param {!events.BrowserEvent} event\n * @package\n */\nfunction onPopstate(event) {\n  // Prevent \x22fake\x22 popstate events from corrupting the history stack. This\n  // specifically refers to events from Safari that are sent on pageload.\n  // See b/18055391 for details of how this affected wiz.\n  const oldEventCount \x3d eventCount++;\n  if (oldEventCount \x3d\x3d 0 \x26\x26 previousInternalEntry.url \x3d\x3d getCurrent().url \x26\x26\n      !goog.isNull(event) \x26\x26\n      goog.isNull(\n          /** @type {!PopStateEvent} */ (event.getBrowserEvent()).state)) {\n    return;\n  }\n  handleHistoryChange();\n}\n\n/**\n * Package visibility for testing.\n * Hashchange should only trigger in browsers that are using the polyfill. In\n * IE pushState and replaceState are supported but hashchange has bugs.\n * TODO(twilkinson): Enable IE browsers to use pushState and polyfill the\n * hashchange bug.\n * @param {!events.BrowserEvent} event\n * @package\n */\nfunction onHashchange(event) {\n  handleHistoryChange();\n}\n\n/**\n * Handles a change to the url that a user needs to be notified of.\n * Exported for testing.\n * @param {boolean\x3d} update Whether this is handling an update.\n */\nfunction handleHistoryChange(update \x3d false) {\n  const currentInternalEntry \x3d getInternalEntry();\n  const currEntry \x3d cloneEntry(currentInternalEntry);\n  // Operation will be null if handleHistoryChange was called as a result of a\n  // popstate or hashchange triggered by the browser (back button, hash\n  // change, etc.).\n  const operation \x3d runningHistoryOperation;\n  const prevEntry \x3d cloneEntry(previousInternalEntry);\n  const notify \x3d goog.bind(notifyListeners, null, currEntry, prevEntry);\n  // Plugins are notified before listeners, but not on updates. They do not wait\n  // for the next tick to get notified, unlike listeners.\n  if (!update) {\n    notifyPlugins(\n        currentInternalEntry.pluginState, previousInternalEntry.pluginState);\n  }\n  previousInternalEntry \x3d currentInternalEntry;\n  if (operation) {\n    // If the operation is not pending, then notify about this external event\n    // after its finished notifying.\n    if (operation.status !\x3d HistoryOperationStatus.PENDING) {\n      operation.finished.thenAlways(() \x3d\x3e notify(new Set()));\n    } else {\n      operation.finished.thenAlways(() \x3d\x3e {\n        asserts.assert(operation);\n        notify(operation.excludedListeners);\n      });\n      operation.resolve(currentInternalEntry);\n      operation.status \x3d HistoryOperationStatus.RESOLVED;\n    }\n  } else {\n    notify(new Set());\n  }\n  // If the internalState was invalid, wrap the external state.\n  // This comes after the operation resolve since we don\x27t want to cancel the\n  // operation, but we do want to immediately queue up another operation to\n  // replace the state.\n  if (!currEntry.metadata) {\n    wrapExternalState();\n  }\n}\n\n/**\n * Notifies the listeners that the url has changed.\n * @param {!Entry} currentEntry\n * @param {!Entry} previousEntry\n * @param {!Set\x3c!Listener\x3e} excludedListeners\n */\nfunction notifyListeners(currentEntry, previousEntry, excludedListeners) {\n  for (const listener of listeners) {\n    if (excludedListeners.has(listener)) {\n      continue;\n    }\n    const options \x3d listenerOptions.get(listener);\n    if (!(options \x26\x26 options.notifyAllChanges) \x26\x26 previousEntry.url \x26\x26\n        currentEntry.url \x26\x26 previousEntry.url \x3d\x3d currentEntry.url) {\n      continue;\n    }\n    listener(currentEntry, previousEntry);\n  }\n}\n\n\n/**\n * Notifies the listeners that the plugin state has changed.\n * @param {!Object\x3cstring, ?Jsonable\x3e} currentPluginState\n * @param {!Object\x3cstring, ?Jsonable\x3e} previousPluginState\n */\nfunction notifyPlugins(currentPluginState, previousPluginState) {\n  for (const name of statePlugins.keys()) {\n    const statePlugin \x3d statePlugins.get(name);\n    if (statePlugin.listener) {\n      statePlugin.listener(currentPluginState[name], previousPluginState[name]);\n    }\n  }\n}\n\n/**\n * Exported function.\n * Adds a listener. The default behavior is to only notify when\n * the url changes, the assumption being that why would you push a change that\n * would have no visible impact on the user?\n * @param {!Listener} listener\n * @param {boolean\x3d} notifyAllChanges Whether to notify on all changes, even\n *     ones that don\x27t change the url.\n */\nfunction addListener(listener, notifyAllChanges \x3d false) {\n  listeners.add(listener);\n  if (notifyAllChanges) {\n    listenerOptions.set(listener, {notifyAllChanges});\n  } else {\n    listenerOptions.delete(listener);\n  }\n}\n\n/**\n * Exported function.\n * Removes a listener.\n * @param {!Listener} listener\n */\nfunction removeListener(listener) {\n  listeners.delete(listener);\n  listenerOptions.delete(listener);\n}\n\n/**\n * Exported function.\n * Adds a plugin.\n * @param {!StatePluginName} name This won\x27t be renamed, so choose wisely.\n * @param {!StatePlugin} plugin\n * @return {function(): ?Jsonable}\n */\nfunction addPlugin(name, plugin) {\n  statePlugins.set(name, plugin);\n  return () \x3d\x3e getInternalEntry().pluginState[name];\n}\n\n/**\n * Exported function.\n * Removes a plugin.\n * @param {!StatePluginName} name\n */\nfunction removePlugin(name) {\n  statePlugins.delete(name);\n}\n\n/**\n * When the waiting is over and the history operation is ready to be run, this\n * function is called with the appropriate arguments. This function does a lot\n * so here\x27s an overview:\n * 1. Do preempt handling.\n * 2. Get the operation that will modify the history and does validiation.\n * 3. Cleanup and finish if no operation was returned.\n * 4. Set up followup Promises once running finishes to cleanup, catch errors\n *     dequeue the next operation, and then resolve the external promise\n *     with the result.\n * 5. Set the runningHistoryOperation.\n * 6. Call the actual operation.\n * 7. Set a timeout in case it never resolve.\n * @param {!GoogPromise\x3c!Entry\x3e} finished An external promise that users listen\n *     to.\n * @param {function(!Entry)} finishResolve A resolve function for the external\n *     finished promise. Resolves to a restoration id.\n * @param {function(!FinishedError)} finishReject A reject function for the\n *     external finished promise. Rejects to an Error indicating what went\n *     wrong.\n * @param {!GetHistoryOperation} getOperation A function that will be called\n *     inside this function. This should validate the current state\n *     and then return the operation that needs to be run.\n * @param {!AfterHistoryOperation} afterOperation A function that is called when\n *     the operation has finished. It should validate the current and previous\n *     state and then return a boolean.\n * @param {boolean} preempt Whether or not this operation should cancel the\n *     currently running operation.\n * @param {!Set\x3c!Listener\x3e} excludedListeners\n */\nfunction runHistoryOperation(\n    finished, finishResolve, finishReject, getOperation, afterOperation,\n    preempt, excludedListeners) {\n  if (preempt \x26\x26 runningHistoryOperation \x26\x26\n      runningHistoryOperation.status \x3d\x3d HistoryOperationStatus.PENDING) {\n    runningHistoryOperation.reject(FinishedError.PREEMPTED);\n    runningHistoryOperation.status \x3d HistoryOperationStatus.REJECTED;\n  }\n  const startInternalEntry \x3d getInternalEntry();\n  const operation \x3d getOperation(startInternalEntry);\n  if (!operation) {\n    cleanupFinished(finished);\n    finishReject(FinishedError.GET_ERROR);\n    return;\n  }\n  const running \x3d GoogPromise.withResolver();\n  // Create and then bind the operation to the global operation.\n  let historyOperation \x3d {\n    resolve: running.resolve,\n    reject: running.reject,\n    finished,\n    status: HistoryOperationStatus.PENDING,\n    excludedListeners,\n  };\n  running.promise.thenAlways(() \x3d\x3e {\n    cleanupFinished(finished);\n    // Set the running history operation to null after finish.\n    if (runningHistoryOperation \x3d\x3d historyOperation) {\n      runningHistoryOperation \x3d null;\n    }\n  });\n  let operationOutput;\n  // Handle operation success and failure.\n  running.promise.then(\n      endInternalEntry \x3d\x3e {\n        if (afterOperation(\n                startInternalEntry, endInternalEntry, operationOutput)) {\n          finishResolve(cloneEntry(endInternalEntry));\n        } else {\n          finishReject(FinishedError.AFTER_ERROR);\n        }\n      },\n      error \x3d\x3e {\n        finishReject(/** @type {!FinishedError} */ (error));\n      });\n  asserts.assert(!runningHistoryOperation || preempt);\n  runningHistoryOperation \x3d historyOperation;\n  // Run the actual operation operation.\n  operationOutput \x3d operation();\n  // Timeout the running promise if it\x27s taken too much time. 100 ms is an\n  // arbitrary amount, but it\x27s not always guaranteed to be on the nextTick,\n  // so this is just a reasonably high amount.\n  schedulerSetTimeout(() \x3d\x3e {\n    if (runningHistoryOperation \x3d\x3d historyOperation \x26\x26\n        historyOperation.status \x3d\x3d HistoryOperationStatus.PENDING) {\n      running.reject(FinishedError.TIMED_OUT);\n      historyOperation.status \x3d HistoryOperationStatus.REJECTED;\n    }\n  }, 100);\n}\n\n/**\n * Add child promises to finished to do cleanup work.\n * @param {!GoogPromise\x3c!Entry\x3e} finished\n */\nfunction cleanupFinished(finished) {\n  // Dequeue the next history operation.\n  finished.thenAlways(() \x3d\x3e maybeDequeueHistoryOperation(false));\n  // Catch any errors if users never add a child promise to the return value\n  // of a operation.\n  finished.thenCatch(() \x3d\x3e {});\n}\n\n/**\n * Push a history operation onto the queue.\n * @param {!GetHistoryOperation} getOperation\n * @param {!AfterHistoryOperation} afterOperation\n * @param {!OperationOptions\x3d} operationOptions\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction enqueueHistoryOperation(\n    getOperation, afterOperation,\n    {preempt \x3d true, excludedListeners \x3d new Set()} \x3d {}) {\n  const {promise, resolve, reject} \x3d GoogPromise.withResolver();\n  const waitingHistoryOperation \x3d goog.bind(\n      runHistoryOperation, null, promise, resolve, reject, getOperation,\n      afterOperation, preempt, excludedListeners);\n  if (preempt) {\n    waitingHistoryOperations.unshift(waitingHistoryOperation);\n  } else {\n    waitingHistoryOperations.push(waitingHistoryOperation);\n  }\n  maybeDequeueHistoryOperation(preempt);\n  return promise;\n}\n\n/**\n * Dequeues a history operation if there isn\x27t a currently active one.\n * @param {boolean} preempt\n */\nfunction maybeDequeueHistoryOperation(preempt) {\n  if (!runningHistoryOperation || preempt) {\n    const historyOperation \x3d waitingHistoryOperations.shift();\n    if (!historyOperation) return;\n    historyOperation();\n  }\n}\n\n/**\n * Generates a new internal entry from a state, url, and the current internal\n * entry.\n * @param {?State} state\n * @param {string} url\n * @param {!InternalEntry} currentInternalEntry\n * @param {boolean} replace\n * @return {!ValidInternalEntry}\n */\nfunction generateNewInternalEntry(state, url, currentInternalEntry, replace) {\n  // Setup metadata\n  let pushId, stackId, stackIndex;\n  // If there\x27s no metadata, then the current state is an external, unwrapped\n  // state.\n  if (currentInternalEntry.metadata) {\n    ({pushId, stackId, stackIndex} \x3d currentInternalEntry.metadata);\n    if (!replace) {\n      pushId \x3d undefined;\n      stackIndex \x3d currentInternalEntry.metadata.stackIndex + 1;\n    }\n  }\n  const metadata \x3d {\n    // entryId is always unique\n    entryId: incrementUniqueId(),\n    // pushId is the same if replace and unique otherwise.\n    pushId: pushId || incrementUniqueId(),\n    // stackId is the same, defaulting to unique.\n    stackId: stackId || incrementUniqueId(),\n    // stackIndex is + 1, defaulting to 0.\n    stackIndex: stackIndex || 0,\n  };\n  // Setup plugin state\n  // Setup url\n  if (!globalConfig.useNativeState) {\n    // If the useNativeState flag is false, save the entryId in the URL.\n    const newUrl \x3d new GwsUrl(url);\n    newUrl.hashParams.set(UNIQUE_ID_PARAM_KEY, \x27\x27 + metadata.pushId);\n    url \x3d newUrl.toString();\n  }\n  // Setup pluginState\n  const pluginState \x3d {};\n  // If we\x27re wrapping don\x27t notify plugins.\n  if (!wrapping) {\n    for (const pluginName of statePlugins.keys()) {\n      const statePlugin \x3d statePlugins.get(pluginName);\n      const currentPluginState \x3d currentInternalEntry.pluginState[pluginName];\n      pluginState[pluginName] \x3d statePlugin.getState(\n          {state, url, metadata}, cloneEntry(currentInternalEntry),\n          currentPluginState, replace);\n    }\n  }\n  return {\n    state,\n    url,\n    metadata,\n    pluginState,\n  };\n}\n\n/**\n * Returns a function that will perform the history operation, notify the\n * handlers, and return the new entry.\n * @param {!UpdateContent|function():!UpdateContent} content Either the\n *     content itself or a callback to call to get the content just before\n *     the update takes place.\n * @param {!InternalEntry} currentInternalEntry\n * @return {function(): !Entry}\n *     The unique id for this point in history and the url.\n */\nfunction getHistoryFunction(content, currentInternalEntry) {\n  return () \x3d\x3e {\n    let state;\n    let url;\n    let replace;\n    if (goog.isFunction(content)) {\n      // TODO(twilkinson): If content() returns null, cancel the operation.\n      ({state, url, replace} \x3d content());\n    } else {\n      ({state, url, replace} \x3d content);\n    }\n    const nextInternalEntry \x3d\n        generateNewInternalEntry(state, url, currentInternalEntry, replace);\n    mod.setRawState(\n        String(nextInternalEntry.metadata.pushId), nextInternalEntry);\n    if (globalConfig.useNativeHistory) {\n      (replace ? win.history.replaceState : win.history.pushState)\n          .call(win.history, nextInternalEntry, \x27\x27, nextInternalEntry.url);\n    } else {\n      const newFragment \x3d\n          \x27#\x27 + uriUtils.getFragmentEncoded(nextInternalEntry.url) || \x27\x27;\n      if (replace) {\n        win.location.replace(newFragment);\n      } else {\n        win.location.href \x3d newFragment;\n      }\n    }\n    // Handle the url change after the history function since in some\n    // some cases (pushState, replaceState) no notification is going to\n    // get sent. In the case of non HTML5, hashchange will be sent here\n    // but it will be deduped by the handler. It\x27s fine to do this\n    // since the hashchange is going to trigger before the next operation will\n    // be dequeued.\n    handleHistoryChange(true /** update */);\n    return nextInternalEntry;\n  };\n}\n\n/**\n * Exported function to push or replace.\n * @param {!UpdateContent|function():!UpdateContent} content Either the\n *     content itself or a callback to call to get the content just before\n *     the update takes place.\n * @param {!OperationOptions\x3d} options\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction update(content, {preempt, excludedListeners} \x3d {}) {\n  return enqueueHistoryOperation(\n      startInternalEntry \x3d\x3e {\n        return getHistoryFunction(content, startInternalEntry);\n      },\n      (startInternalEntry, endInternalEntry, expectedEntry) \x3d\x3e {\n        asserts.assertObject(expectedEntry);\n        asserts.assertString(expectedEntry.url);\n        return endInternalEntry.url \x3d\x3d expectedEntry.url;\n      },\n      {preempt, excludedListeners});\n}\n\n/**\n * Exported function.\n * Push the state and url.\n * @param {?State} state\n * @param {string} url\n * @param {!OperationOptions\x3d} options\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction push(state, url, {preempt, excludedListeners} \x3d {}) {\n  return update({state, url, replace: false}, {preempt, excludedListeners});\n}\n\n/**\n * Exported function.\n * Replace the current state and url.\n * @param {?State} state\n * @param {string} url\n * @param {!OperationOptions\x3d} options\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction replace(state, url, {preempt, excludedListeners} \x3d {}) {\n  return update({state, url, replace: true}, {preempt, excludedListeners});\n}\n\n/**\n * Returns an operation that will call history.go(direction).\n * @param {number} direction\n * @param {!Entry} startEntry\n * @return {!HistoryOperation}\n */\nfunction getGoOperation(direction, startEntry) {\n  return () \x3d\x3e {\n    win.history.go(direction);\n    return direction;\n  };\n}\n\n/**\n * Does validation of the start state and end state for this operation.\n * @param {!InternalEntry} startInternalEntry\n * @param {!InternalEntry} endInternalEntry\n * @param {*} direction\n * @return {boolean}\n */\nfunction afterGoOperation(startInternalEntry, endInternalEntry, direction) {\n  // If there start or end is invalid, return true since it\x27s a valid use to\n  // go to or from a state that has not yet been wrapped.\n  const startMetadata \x3d startInternalEntry.metadata;\n  const endMetadata \x3d endInternalEntry.metadata;\n  if (!startMetadata || !endMetadata ||\n      startMetadata.stackId !\x3d endMetadata.stackId) {\n    return true;\n  }\n  return (startMetadata.stackIndex + asserts.assertNumber(direction)) \x3d\x3d\n      endMetadata.stackIndex;\n}\n\n/**\n * Exported function.\n * Go some direction in the history stack.\n * @param {number|function(!Entry): ?number} direction Signed direction\n *     (-1 \x3d back, +1 \x3d forward) or a function that returns the signed\n *     direction.\n * @param {!OperationOptions\x3d} options\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction go(direction, {preempt, excludedListeners} \x3d {}) {\n  return enqueueHistoryOperation((entry) \x3d\x3e {\n    let numberDirection;\n    if (goog.isNumber(direction)) {\n      numberDirection \x3d direction;\n    } else {\n      numberDirection \x3d direction(entry);\n    }\n    return !goog.isNull(numberDirection) ?\n        getGoOperation(numberDirection, entry) :\n        null;\n  }, afterGoOperation, {preempt, excludedListeners});\n}\n\n/**\n * Exported function.\n * Go back one in the stack.\n * @const {function(!OperationOptions\x3d): !GoogPromise\x3c!Entry\x3e}\n */\nconst back \x3d goog.bind(go, null, -1);\n\n/**\n * Exported function.\n * Go forward one in the stack.\n * @const {function(!OperationOptions\x3d): !GoogPromise\x3c!Entry\x3e}\n */\nconst forward \x3d goog.bind(go, null, 1);\n\n/**\n * Add listeners to popstate/hashchange.\n */\nfunction addHistoryListeners() {\n  if (globalConfig.useNativeState) {\n    events.listen(win, EventType.POPSTATE, onPopstate, false);\n  } else {\n    // Polyfilling because something is missing.\n    events.listen(win, EventType.HASHCHANGE, onHashchange, false);\n  }\n}\n\n/**\n * Remove listeners from popstate/hashchange.\n */\nfunction removeHistoryListeners() {\n  events.unlisten(win, EventType.POPSTATE, onPopstate);\n  events.unlisten(win, EventType.HASHCHANGE, onHashchange);\n}\n\n/**\n * @return {!GlobalConfig}\n */\nfunction getGlobalConfig() {\n  return globalConfig;\n}\n\n/**\n * @package\n */\nconst mod \x3d {\n  /**\n   * Most browsers start the history at length 1, but some browsers like IE and\n   * Opera do not.\n   * @return {number}\n   */\n  historyInitialLength() {\n    return 1;\n  },\n\n  /**\n   * @return {?Jsonable}\n   * @package\n   */\n  getRawState() {\n    return /** @type {?Jsonable} */ (win.history.state);\n  },\n\n  /**\n   * When using history.state, this is a noop.\n   * @param {string} key\n   * @param {!Jsonable} state\n   * @package\n   */\n  setRawState(key, state) {},\n\n  /**\n   * Hashes containing more than one unencoded \x27#\x27 character in the url result\n   * in bad behavior b/8782159 has details.\n   * @param {string} hash The hash to test.\n   * @return {boolean} True if hash is malformed.\n   */\n  isMalformedHash(hash) {\n    return (!!hash \x26\x26 hash.substr(1).indexOf(\x27#\x27) \x3e -1);\n  },\n};\n\n/** Initialize */\nfunction init() {\n  let historyConfig \x3d goog.getObjectByName(\x27google.hs\x27) || {};\n  const useNativeHistory \x3d Boolean(\n      (historyConfig[\x27h\x27] || false) \x26\x26 win.history \x26\x26 win.history.pushState);\n  const useNativeState \x3d useNativeHistory \x26\x26 goog.isDef(win.history.state);\n  globalConfig \x3d {\n    useNativeHistory,\n    useNativeState,\n  };\n\n  if (mod.isMalformedHash(win.location.hash)) {\n    const encodedHash \x3d encodeURIComponent(win.location.hash);\n    google.log(\x27jbh\x27, \x27h\x3d\x27 + encodedHash.substr(0, 40));\n    // TODO(ryoji): This will not work under AGSA location management.\n    win.location.hash \x3d \x27\x27;\n  }\n\n  previousInternalEntry \x3d getInternalEntry();\n  addHistoryListeners();\n}\n\n/**\n * @package\n */\nconst testing \x3d {\n  /**\n   * Sets up the historyWrapper for testing.\n   */\n  setUp() {\n    win \x3d dom.getWindow();\n    asserts.assert(goog.isDef(win.history));\n    eventCount \x3d 0;\n    currentHeadId \x3d 1;\n    waitingHistoryOperations \x3d [];\n    runningHistoryOperation \x3d null;\n    mod.getRawState \x3d () \x3d\x3e win.history.state;\n    mod.setRawState \x3d () \x3d\x3e {};\n  },\n\n  /**\n   * Inject the head id that is used to generate unique ids.\n   * @param {number} id\n   */\n  injectCurrentHeadId(id) {\n    currentHeadId \x3d id;\n  },\n\n  /**\n   * Inject a nextTick function for testing so that timeouts can be triggered\n   * that normally wouldn\x27t.\n   * @param {function(!Function, number, ...*): number} fn\n   * @template T\n   */\n  injectSetTimeout(fn) {\n    schedulerSetTimeout \x3d fn;\n  },\n\n  /**\n   * Tears down the historyWrapper by removing any listeners and resolving any\n   * promises.\n   */\n  tearDown() {\n    removeHistoryListeners();\n    if (runningHistoryOperation \x26\x26\n        runningHistoryOperation.status \x3d\x3d HistoryOperationStatus.PENDING) {\n      runningHistoryOperation.reject(FinishedError.TIMED_OUT);\n      runningHistoryOperation.status \x3d HistoryOperationStatus.REJECTED;\n    }\n    ({setTimeout: schedulerSetTimeout} \x3d scheduler);\n    currentHeadId \x3d\n        goog.getObjectByName(\x27performance.timing.navigationStart\x27, win) ||\n        goog.now();\n    statePlugins.clear();\n    listeners.clear();\n    listenerOptions.clear();\n  },\n};\n\nexports \x3d {\n  push,\n  replace,\n  update,\n  back,\n  forward,\n  go,\n  addListener,\n  removeListener,\n  addPlugin,\n  removePlugin,\n  hasAnyHistory,\n  getCurrent,\n  mod,\n  testing,\n  FinishedError,\n  UNIQUE_ID_PARAM_KEY,\n  validateBasicEntry,\n  // Exported for history_wrapper.js\n  ValidInternalEntry,\n  getGlobalConfig,\n  getCurrentUrl,\n  init,\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/url/history_wrapper_base.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy26');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy26');

}catch(e){_DumpException(e)}
/* _Module_:sy27 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy27');
var $googDebugFname="gws/js/url/history_stack.js";
goog.loadModule("/**\n * @fileoverview The historyStack keeps a session storage copy of what we think\n * the browser stack is, and it\x27s updated anytime we push via the historyWrapper\n * library. If a user modifies the URL, then the backStack becomes invalidated.\n *\n * This library provides a few extra methods for navigation and finding states.\n */\ngoog.module(\x27search.url.historyStack\x27);\n\nconst Cache \x3d goog.require(\x27storagecache.Cache\x27);\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst Jsonable \x3d goog.require(\x27search.Jsonable\x27);\nconst Namespace \x3d goog.require(\x27search.cache.Namespace\x27);\nconst PersistentStorageType \x3d goog.require(\x27storagecache.PersistentStorageType\x27);\nconst Priority \x3d goog.require(\x27storagecache.Priority\x27);\nconst StatePluginName \x3d goog.require(\x27search.url.StatePluginName\x27);\nconst factory \x3d goog.require(\x27search.cache.factory\x27);\nconst historyWrapperBase \x3d goog.require(\x27search.url.historyWrapperBase\x27);\nconst {Entry, ValidEntry, BasicEntry, OperationOptions, } \x3d goog.require(\x27search.url.historyWrapperTypes\x27);\n\n\n/**\n * In all browsers there is a max of 50 stack entries.\n * @type {number}\n */\nconst MAXIMUM_STACK_LENGTH \x3d 50;\n\n/**\n * A Cache object that stores more information about backStack entries. This is\n * used for finding previous entries.\n * @type {!Cache}\n */\nlet backStackCache \x3d factory.get(\n    PersistentStorageType.SESSION, Namespace.HISTORY_STATE_BACK_STACK);\n\n/**\n * Caches that are keyed by entryId and need to be cleared on an update. This is\n * mostly our back stack cache but also applies to the state polyfill cache.\n * @type {!Array\x3c!Cache\x3e} */\nlet managedCaches \x3d [backStackCache];\n\n/**\n * @param {!Cache} cache\n */\nfunction clearCacheOnUpdate(cache) {\n  managedCaches.push(cache);\n}\n\n/**\n * Iterates over caches and removes entries that are no longer valid. Invalid\n * entries are those that are in the backStack but are further than 50 away and\n * entries that are invalidated by a push. There are edge cases where states\n * will not (and cannot) be cleaned up, but most of these edge cases are\n * triggered by user action and these cases are probably rare.\n * @param {!Array\x3cnumber\x3e} newBackStack\n * @param {!Array\x3cnumber\x3e} globalBackStack\n * @param {!ValidEntry} entry The new entry that will be pushed.\n */\nfunction removeCacheEntries(newBackStack, globalBackStack, entry) {\n  const {stackId, stackIndex} \x3d entry.metadata;\n  const invalidatedIndex \x3d newBackStack.length - MAXIMUM_STACK_LENGTH;\n  for (const cache of managedCaches) {\n    if (invalidatedIndex \x3e\x3d 0) {\n      cache.remove(String(globalBackStack[invalidatedIndex]));\n    }\n    // Since the stack is the global representation of the history stack with\n    // both forward and backward information, this iterates through the stack\n    // and removes any entries that have a higher stackIndex since they will\n    // be invalidated by a push.\n    for (let i \x3d stackIndex; i \x3c globalBackStack.length; ++i) {\n      cache.remove(String(globalBackStack[i]));\n    }\n  }\n}\n\n/**\n * @param {?Jsonable} backStack\n * @return {!Array\x3cnumber\x3e}\n */\nfunction validateBackStack(backStack) {\n  return goog.isArray(backStack) ? /** @type {!Array\x3cnumber\x3e} */ (backStack) :\n                                   [];\n}\n\n/**\n * The state plugin function.\n * @param {!ValidEntry} currentEntry\n * @param {!Entry} previousEntry\n * @param {?Jsonable} previousBackStack\n * @param {boolean} replace\n * @return {!Array\x3cnumber\x3e}\n */\nfunction getState(currentEntry, previousEntry, previousBackStack, replace) {\n  const {url, metadata: {stackId, pushId}} \x3d currentEntry;\n  const newBackStack \x3d validateBackStack(previousBackStack).slice();\n  if (!replace || !newBackStack.length) {\n    newBackStack.push(pushId);\n    const globalBackStack \x3d\n        validateBackStack(backStackCache.get(String(stackId)));\n    removeCacheEntries(newBackStack, globalBackStack, currentEntry);\n    // Set the global backstack.\n    backStackCache.set(String(stackId), newBackStack);\n  }\n  backStackCache.set(\n      String(pushId), {\n        url: url,\n        metadata: currentEntry.metadata,\n      },\n      Priority.VERY_HIGH);\n  return newBackStack;\n}\n\n/**\n * Exported function\n * Find the first matching node for any matchPredicate. Iterate backwards\n * starting from the current state. If there isn\x27t a BasicEntry for a\n * backStack pushId, skip over it. This is not a perfect function and is\n * best effort. If this is the same page (no reload) that the state was pushed,\n * and no external history operation has occured, the state will be findable.\n * Otherwise, it may not be, depending on session storage capacity and\n * availability and history external operations.\n * @param {function(!BasicEntry): boolean} matchPredicate\n * @return {{direction: number, entry: BasicEntry}|null}\n */\nfunction find(matchPredicate) {\n  const entry \x3d\n      historyWrapperBase.validateBasicEntry(historyWrapperBase.getCurrent());\n  if (entry) {\n    const {stackId, stackIndex} \x3d entry.metadata;\n    const backStack \x3d validateBackStack(backStackCache.get(String(stackId)));\n    for (let index \x3d stackIndex; index \x3e\x3d 0 \x26\x26 index \x3c backStack.length;\n         --index) {\n      const basicEntry \x3d historyWrapperBase.validateBasicEntry(\n          backStackCache.get(String(backStack[index])));\n      if (basicEntry \x26\x26 matchPredicate(basicEntry)) {\n        return {\n          direction: index - stackIndex,\n          entry: basicEntry,\n        };\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Exported function.\n * Find the id in our history stack if it exists and pops backwards if found.\n * This is best effort, and will reject if the entryId cannot be found in\n * the current backStack. If this rejects, it does not mean that the entryId\n * is not actually in our stack, it just means it wasn\x27t found. See find()\n * for reasons why this might be true.\n * @param {number} entryId\n * @param {!OperationOptions\x3d} options\n * @return {!GoogPromise\x3c!Entry\x3e}\n */\nfunction goToEntry(entryId, {preempt, excludedListeners} \x3d {}) {\n  return historyWrapperBase.go(entry \x3d\x3e {\n    const result \x3d find(entry \x3d\x3e entry.metadata.entryId \x3d\x3d entryId);\n    return result ? result.direction : null;\n  }, {preempt, excludedListeners});\n}\n\n/**\n * Initializes the back stack plugin\n */\nfunction init() {\n  historyWrapperBase.addPlugin(StatePluginName.HISTORY_STACK, {getState});\n}\ninit();\n\n/** @package */\nconst testing \x3d {\n  setUp() {\n    backStackCache \x3d factory.get(\n        PersistentStorageType.SESSION, Namespace.HISTORY_STATE_BACK_STACK);\n    managedCaches \x3d [backStackCache];\n    init();\n  },\n\n  tearDown() {\n    historyWrapperBase.removePlugin(StatePluginName.HISTORY_STACK);\n  }\n};\n\nexports \x3d {\n  clearCacheOnUpdate,\n  find,\n  goToEntry,\n  testing\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/url/history_stack.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/url/history_wrapper.js";
goog.loadModule("/**\n * @fileoverview  Wraps the standard history methods (history.pushState,\n * history.replaceState) and history.state, and adds additional features.\n *\n * HistoryWrapper largely mirrors the browser\x27s window.history API,\n * except that it also allows you to go to a unique id. These unique ids are\n * returned by push and replace calls. An array of ids is kept in each state\n * to iterate back over them when looking for the previous state to go back to.\n *\n * This class internally listens to popstate (and hashchange for versions of IE\n * that do not support popstate) for notifications of state changes that occur\n * outside of the scope of this class. It\x27s an edge case should that occur,\n * because uses of history should be scoped through this wrapper class and\n * should not interact directly with the url through links, but it\x27s possible\n * that users will change the hash manually and the library needs to at least\n * continue to return the proper state.\n */\ngoog.module(\x27search.url.historyWrapper\x27);\ngoog.module.declareLegacyNamespace();\n\nconst Cache \x3d goog.require(\x27storagecache.Cache\x27);\nconst GwsUrl \x3d goog.require(\x27search.url.GwsUrl\x27);\nconst Jsonable \x3d goog.require(\x27search.Jsonable\x27);\nconst Namespace \x3d goog.require(\x27search.cache.Namespace\x27);\nconst PersistentStorageType \x3d goog.require(\x27storagecache.PersistentStorageType\x27);\nconst Priority \x3d goog.require(\x27storagecache.Priority\x27);\nconst factory \x3d goog.require(\x27search.cache.factory\x27);\n// Including this plugin here will mean that it always gets registered.\n// That\x27s acceptable, but future users might want to use historyWrapperBase\n// without the state polyfill + backStack.\nconst historyStack \x3d goog.require(\x27search.url.historyStack\x27);\nconst historyWrapperBase \x3d goog.require(\x27search.url.historyWrapperBase\x27);\nconst {State} \x3d goog.require(\x27search.url.historyWrapperTypes\x27);\n\n/**\n * @param {!Cache} cache\n * @return {?Jsonable}\n */\nfunction getRawStatePolyfill(cache) {\n  const id \x3d (new GwsUrl(historyWrapperBase.getCurrentUrl()))\n                 .hashParams.get(historyWrapperBase.UNIQUE_ID_PARAM_KEY);\n  return id ? cache.get(id) : null;\n}\n\n/**\n * @param {!Cache} cache\n * @param {string} key\n * @param {!Jsonable} state\n */\nfunction setRawStatePolyfill(cache, key, state) {\n  cache.set(key, state, Priority.VERY_HIGH);\n}\n\n/**\n * Initializes the history wrapper. Sets global flags and polyfills the state.\n */\nfunction init() {\n  historyWrapperBase.init();\n  if (!historyWrapperBase.getGlobalConfig().useNativeState) {\n    const statePolyfillCache \x3d factory.get(\n        PersistentStorageType.SESSION, Namespace.HISTORY_STATE_POLYFILL);\n    historyWrapperBase.mod.getRawState \x3d\n        goog.bind(getRawStatePolyfill, null, statePolyfillCache);\n    historyWrapperBase.mod.setRawState \x3d\n        goog.bind(setRawStatePolyfill, null, statePolyfillCache);\n    historyStack.clearCacheOnUpdate(statePolyfillCache);\n  }\n}\ninit();\n\n/**\n * @package\n */\nconst testing \x3d {\n  setUp() {\n    historyStack.testing.setUp();\n    historyWrapperBase.testing.setUp();\n    init();\n  },\n\n  injectCurrentHeadId: historyWrapperBase.testing.injectCurrentHeadId,\n\n  injectSetTimeout: historyWrapperBase.testing.injectSetTimeout,\n\n  /**\n   * Tears down the historyWrapper by removing any listeners and resolving any\n   * promises.\n   */\n  tearDown() {\n    historyStack.testing.tearDown();\n    historyWrapperBase.testing.tearDown();\n  },\n};\n\n/**\n * Basic inline version of historyWrapper.update().\n * @type {function(*, string, boolean\x3d)}\n */\ngoogle.hsu \x3d function(state, url, replace \x3d false) {\n  historyWrapperBase.update(\n      {state: /** @type {?State} */ (state), url, replace});\n};\n\n/**\n * Basic inline version of historyWrapper.getCurrent().\n * @type {function(): {state: *, url: string}}\n */\ngoogle.hsgc \x3d function() {\n  const {state, url} \x3d historyWrapperBase.getCurrent();\n  return {state, url};\n};\n\n/**\n * Basic inline version of historyWrapper.go().\n * @type {function(number)}\n */\ngoogle.hsgo \x3d historyWrapperBase.go;\n\nexports \x3d {\n  push: historyWrapperBase.push,\n  replace: historyWrapperBase.replace,\n  update: historyWrapperBase.update,\n  back: historyWrapperBase.back,\n  forward: historyWrapperBase.forward,\n  go: historyWrapperBase.go,\n  addListener: historyWrapperBase.addListener,\n  removeListener: historyWrapperBase.removeListener,\n  addPlugin: historyWrapperBase.addPlugin,\n  removePlugin: historyWrapperBase.removePlugin,\n  hasAnyHistory: historyWrapperBase.hasAnyHistory,\n  getCurrent: historyWrapperBase.getCurrent,\n  FinishedError: historyWrapperBase.FinishedError,\n  validateBasicEntry: historyWrapperBase.validateBasicEntry,\n  UNIQUE_ID_PARAM_KEY: historyWrapperBase.UNIQUE_ID_PARAM_KEY,\n  testing,\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/url/history_wrapper.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy27');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy27');

}catch(e){_DumpException(e)}
/* _Module_:sy25 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy25');
var $googDebugFname="googledata/html/templates/gws/head/xjs/history_state/state_handler.js";
eval("goog.provide(\x27gws.historyState.StateHandler\x27);\n\ngoog.forwardDeclare(\x27gws.historyState.AnalyzedState\x27);\n\ngoog.scope(function() {\n\n/**\n * A StateHandler provides a structure to allow history_state.js to identify\n * and map history events to handlers.\n * @interface\n */\ngws.historyState.StateHandler \x3d goog.defineClass(null, {\n  /**\n   * Returns the name of this handler. This should be unique as it is used by\n   * history state as the key to look up the handler.\n   * @return {string}\n   */\n  getHandlerName: goog.abstractMethod,\n\n\n  /**\n   * Cleans up the page state when transitioning out of a state that was handled\n   * by this state handler.\n   * @param {!gws.historyState.AnalyzedState} newState\n   */\n  cleanUp: goog.abstractMethod,\n\n\n  /**\n   * Indicates if this state handler\x27s handle function should be called for\n   * the new state provided.\n   * @param {!gws.historyState.AnalyzedState} newState\n   * @return {boolean}\n   */\n  shouldHandle: goog.abstractMethod,\n\n\n  /**\n   * Handles the history state event.\n   * @param {!gws.historyState.AnalyzedState} newState\n   * @param {boolean\x3d} firstPage\n   */\n  handle: goog.abstractMethod,\n\n\n  /**\n   * Indicates if this state handler\x27s handleClick function should be called.\n   * @param {!Event} ev The Mouse Event.\n   * @param {!gws.historyState.AnalyzedState} clickTargetState The analyzed\n   *     state built from the href of the clicked element.\n   * @param {!Element} element The clicked element.\n   * @return {boolean} true if click was handled, otherwise false.\n   */\n  shouldHandleClick: goog.abstractMethod,\n\n\n  /**\n   * Handles a click event that will lead to a state that this handler should\n   * handle. History events don\x27t provide the clicked element, so this is\n   * exposed so handlers can override it and perform custom logic where the\n   * element is required.\n   * NOTE: It is up the handler to commit the new state to history_state.\n   * @param {!Event} ev The Mouse Event.\n   * @param {!gws.historyState.AnalyzedState} clickTargetState The analyzed\n   *     state built from the href of the clicked element.\n   * @param {!Element} element The clicked element.\n   */\n  handleClick: goog.abstractMethod\n});\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/history_state/state_handler.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/history_state/history_state.js";
eval("/**\n * @fileoverview Manage the location bar and related history navigation for a\n * webapp. Users that want to change the location bar must use this module to\n * manage the global Location object. To use it:\n * 1) Add your new \x27UPDATE\x27 key to the static list of such keys in this package.\n * 2) In your initialization code, register your key with a handler that will be\n *    called during initialization and any subsequent location change.\n * 3) In order to change the value of your param, use the update or\n *    related method.\n * 4) In order to read the current state of the page, use\n *    historyState.current().\n * TODO(gws-ui): Invent a way, in code, to prevent collisions between different\n *     teams\x27 state namespaces.\n * TODO(twilkinson): Update gws.historyState to use globalUrlState directly.\n */\ngoog.provide(\x27gws.historyState\x27);\ngoog.provide(\x27gws.historyState.StateArgument\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.labs.userAgent.util\x27);\ngoog.require(\x27goog.uri.utils\x27);\ngoog.require(\x27gws.historyState.AnalyzedState\x27);\ngoog.require(\x27gws.historyState.StateHandler\x27);\ngoog.require(\x27gws.location\x27);\ngoog.require(\x27search.Jsonable\x27);\ngoog.require(\x27search.build\x27);\ngoog.require(\x27search.url.historyWrapper\x27);\ngoog.require(\x27search.url.urlParamKeys\x27);\n\ngoog.scope(() \x3d\x3e {\nconst urlParamKeys \x3d goog.module.get(\x27search.url.urlParamKeys\x27);\n\n/**\n * AnalyzedState instance that represents the current requested or\n * established state.\n * @private {!gws.historyState.AnalyzedState}\n */\ngws.historyState.current_;\n\n\n/**\n * AnalyzedState instance that represents the state of the base page.  Only used\n * internally.\n * @private {!gws.historyState.AnalyzedState}\n */\ngws.historyState.initial_;\n\n\n/**\n * AnalyzedState instance that represents the state of the base page, but\n * sanitized.\n * @private {!gws.historyState.AnalyzedState}\n */\ngws.historyState.sanitizedInitial_;\n\n\n/**\n * The map from the module key to the hash change handler.\n * @private {!Object\x3cstring, function(string, boolean)\x3e}\n */\ngws.historyState.handlers_ \x3d {};\n\n\n/**\n * This should be configured by gws.historyState.  When true, window.history\n * will be used to push/replace the URL instead of window.location.\n * @private {boolean}\n */\ngws.historyState.useHistory_ \x3d false;\n\n\n/**\n * This is the namespace name for the history state object. This allows other\n * history managers to write their own state objects.\n * @private {string}\n */\ngws.historyState.HISTORY_STATE_NAMESPACE_ \x3d \x27hss\x27;\n\n\n/**\n * Map of handler names to page level state handlers.\n * @private {!Object\x3cstring, !gws.historyState.StateHandler\x3e}\n */\ngws.historyState.stateHandlers_ \x3d {};\n\n\n/**\n * The currently active page level state handler.\n * @private {?gws.historyState.StateHandler}\n */\ngws.historyState.currentStateHandler_ \x3d null;\n\n\n/**\n * Argument type used to bundle a namespace with a stateObject, making sure that\n * one is never passed to historyState methods without the other.\n * @typedef {{namespace: string, stateObject: *}}\n */\ngws.historyState.StateArgument;\n\n\n/**\n * Register a callback handler associated with a key. The callback will be\n * invoked immediately with the current state.\n * @param {string} key The key for the module.\n * @param {function(string, boolean)} callback The callback function.\n */\ngws.historyState.registerHandler \x3d function(key, callback) {\n  if (search.build.INLINE) {\n    return;\n  }\n  if (!gws.historyState.handlers_[key]) {\n    gws.historyState.handlers_[key] \x3d callback;\n    // Only call the callback once DOMContentLoaded is fired.\n    google.dclc(\n        goog.partial(callback, gws.historyState.current_.getParam(key), true));\n  }\n};\n\n\n/**\n * Register a handler for page level state changes.\n * @param {!gws.historyState.StateHandler} stateHandler\n */\ngws.historyState.registerStateHandler \x3d function(stateHandler) {\n  if (search.build.INLINE) {\n    return;\n  }\n  if (!gws.historyState.stateHandlers_[stateHandler.getHandlerName()]) {\n    gws.historyState.stateHandlers_[stateHandler.getHandlerName()] \x3d\n        stateHandler;\n    google.dclc(() \x3d\x3e {\n      if (stateHandler.shouldHandle(gws.historyState.current_)) {\n        gws.historyState.currentStateHandler_ \x3d stateHandler;\n        stateHandler.handle(gws.historyState.current_, true);\n      }\n    });\n  }\n};\n\n\n/**\n * Unregisters a page level state handler.\n * @param {string} handlerName The handler name of the handler to unregister.\n */\ngws.historyState.unregisterStateHandler \x3d function(handlerName) {\n  if (search.build.INLINE) {\n    return;\n  }\n  if (gws.historyState.currentStateHandler_ \x26\x26\n      gws.historyState.currentStateHandler_.getHandlerName() \x3d\x3d handlerName) {\n    gws.historyState.currentStateHandler_ \x3d null;\n  }\n\n  delete gws.historyState.stateHandlers_[handlerName];\n};\n\n\n/**\n * TODO: Make history state setup the click handler and dispatch to JESR\n * instead of having JESR call this.\n *\n * Determines if the click on the given anchor element should be handled\n * by a registered page level state handler.\n * @param {!Event} ev The Mouse Event.\n * @param {!Element} anchorElement The element that was clicked.\n * @return {boolean} true if handled by a state handler, otherwise false.\n */\ngws.historyState.maybeHandleClick \x3d function(ev, anchorElement) {\n  if (search.build.INLINE) {\n    return false;\n  }\n  var href \x3d /** @type {!HTMLAnchorElement} */ (anchorElement).href;\n  if (href) {\n    var state \x3d gws.historyState.AnalyzedState.fromUrl(href).state;\n\n    // Dispatch to the current one if its present.\n    if (gws.historyState.currentStateHandler_ \x26\x26\n        gws.historyState.currentStateHandler_.shouldHandleClick(\n            ev, state, anchorElement)) {\n      gws.historyState.currentStateHandler_.handleClick(\n          ev, state, anchorElement);\n      return true;\n    }\n\n    for (var handlerName in gws.historyState.stateHandlers_) {\n      var handler \x3d gws.historyState.stateHandlers_[handlerName];\n      if (handler.shouldHandleClick(ev, state, anchorElement)) {\n        handler.handleClick(ev, state, anchorElement);\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Unregisters a callback handler associated with a key.\n * @param {string} key The key for the module.\n */\ngws.historyState.unregisterHandler \x3d function(key) {\n  if (search.build.INLINE) {\n    return;\n  }\n  delete gws.historyState.handlers_[key];\n};\n\n\n/**\n * Calculates an entirely new primary state, according to the normal search\n * business logic, whereby we clear out any update params from the old state in\n * the process.\n * @param {!gws.historyState.AnalyzedState} analyzedState\n * @param {boolean\x3d} replace Set to true to replace the state. By default,\n *     we push.\n * @param {!gws.historyState.StateArgument\x3d} stateArgument\n *     Arbitrary object to store alongside the analyzedState, with a unique\n *     namespace specific to your application.\n * @param {boolean\x3d} preempt\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n * @deprecated Use search.url.historyWrapper.update().\n */\ngws.historyState.updatePrimaryState \x3d function(\n    analyzedState, replace \x3d undefined, stateArgument \x3d undefined,\n    preempt \x3d undefined) {\n  if (search.build.INLINE) {\n    return;\n  }\n  // Compare the old current and the new current.\n  // If the primary states have changed, then replace the update states from\n  // current with the new update states.\n\n  var current \x3d gws.historyState.current_;\n  if (!analyzedState.isEquivalentToConsideringPrimaryOnly(current)) {\n    // Copy over the new primary state, replacing the old.\n    current \x3d current.withClearedParams(current.getEncodedPrimaryStates())\n                  .updatedWithNewEncodedParams(\n                      analyzedState.getEncodedPrimaryStates(), false,\n                      analyzedState.getPath());\n  }\n\n  // Clear the existing update states.\n  current \x3d current.withClearedParams(current.getEncodedUpdateStates());\n\n  // Copy the new update states over the old.\n  current \x3d current.updatedWithNewEncodedParams(\n      analyzedState.getEncodedUpdateStates(), false, analyzedState.getPath());\n\n  // TODO(ericfs): Separate state munging from commiting. Return the new state\n  // here so that the caller can the commit it.\n  gws.historyState.commitState_(current, replace, stateArgument, preempt);\n};\n\n\n/**\n * Update the value for a module key in the history state.\n * @param {string} key The module key.\n * @param {string} value The value string.\n * @param {boolean\x3d} replace Set to true to replace the state.\n * @param {!gws.historyState.StateArgument\x3d} stateArgument\n *     Arbitrary object to store alongside the analyzedState, with a unique\n *     namespace specific to your application.\n * @param {boolean\x3d} preempt\n */\ngws.historyState.update \x3d function(\n    key, value, replace \x3d undefined, stateArgument \x3d undefined,\n    preempt \x3d undefined) {\n  if (search.build.INLINE) {\n    return;\n  }\n  var params \x3d {};\n  params[key] \x3d value;\n  gws.historyState.updateMultiple(params, replace, stateArgument, preempt);\n};\n\n\n/**\n * Update multiple values under multiple keys in the history state\n * as a single history state update.\n * Do not use this for the JESR (primary state) key.\n * @param {!Object\x3cstring, string\x3e} entries The map of key/value pairs\n *     specifying keys and their new associated values.\n * @param {boolean\x3d} replace Set to true to replace the state.\n * @param {!gws.historyState.StateArgument\x3d} stateArgument\n *     Arbitrary object to store alongside the analyzedState, with a unique\n *     namespace specific to your application.\n * @param {boolean\x3d} preempt\n */\ngws.historyState.updateMultiple \x3d function(\n    entries, replace \x3d undefined, stateArgument \x3d undefined,\n    preempt \x3d undefined) {\n  if (search.build.INLINE) {\n    return;\n  }\n  var newAnalyzedState \x3d\n      gws.historyState.current_.updatedWithNewParams(entries);\n  gws.historyState.commitState_(\n      newAnalyzedState, replace, stateArgument, preempt);\n};\n\n\n/**\n * Requests navigation to the prior state in history.  If there is no\n * available prior state the call does nothing.  Integration with\n * alternative history managers such as AGSA, which override the default\n * implementation, may impose additional constraints on when the previous\n * state is available.\n * @param {boolean\x3d} preempt\n */\ngws.historyState.goBack \x3d function(preempt \x3d undefined) {\n  if (search.build.INLINE) {\n    return;\n  }\n  gws.historyState.go(-1, preempt);\n};\n\n\n/**\n * Requests navigation to an arbitrary history state by navigating n states\n * away from the current state.  To navigate forward, give a positive number.\n * To navigate backward, give a negative number. If there are no available prior\n * or next states or the index resulting from adding n to the current index\n * is out of bounds, the call does nothing.\n *\n * @param {number} n\n * @param {boolean\x3d} preempt\n */\ngws.historyState.go \x3d function(n, preempt \x3d true) {\n  if (search.build.INLINE) {\n    return;\n  }\n  search.url.historyWrapper.go(n, {preempt});\n};\n\n\n/**\n * Reloads the current state.\n * This is the specific case of navigating 0 states.\n */\ngws.historyState.reload \x3d function() {\n  if (search.build.INLINE) {\n    return;\n  }\n  gws.location.getLocation().reload();\n};\n\n\n/**\n * Gets the param value associated with the key.\n * NOTE: Returns \x27\x27 when the specified param is absent, null, or empty string.\n * @param {string} key The key string for the client module.\n * @return {string} The param value.\n */\ngws.historyState.getParam \x3d function(key) {\n  // Keep for INLINE\n  if (gws.historyState.AnalyzedState.getParamKind(key) \x3d\x3d\n      gws.historyState.AnalyzedState.ParamKind.UGLY) {\n    // It\x27s an ugly param! Look up in the base page, because we have audited\n    // all possible users of ugly params via the old nav.getParam API, and we\n    // are confident that we can just look in the initial state. Special cases\n    // of ugly params that aren\x27t always available as base page params are\n    // called out explicitly.\n    goog.asserts.assert(\n        !(key \x3d\x3d \x27ei\x27), \x27Event id should be accessed via google.kEI\x27);\n    goog.asserts.assert(\n        !(key \x3d\x3d \x27biw\x27 || key \x3d\x3d \x27bih\x27),\n        \x27biw/bih should be accessed via gws.browser.dimension.get()\x27);\n    return gws.historyState.initial_.getParam(key);\n  }\n\n  // It\x27s a pretty param (primary state) or an update param (secondary state).\n  return gws.historyState.current_.getParam(key);\n};\n\n\n/**\n * Returns the current state.\n * @return {!gws.historyState.AnalyzedState}\n * @deprecated Use gws.historyState.getParam instead.\n */\ngws.historyState.current \x3d function() {\n  return gws.historyState.current_;\n};\n\n\n/**\n * Returns the sanitized initial state.\n * @return {!gws.historyState.AnalyzedState}\n * @deprecated Use gws.historyState.getParam instead.\n */\ngws.historyState.initial \x3d function() {\n  return gws.historyState.sanitizedInitial_;\n};\n\n\n/**\n * Callback all registered handlers, passing component state based on\n * current state.\n *\n * This will call at most 1 page level state handler, falling back to the\n * the default state handler if no other registered handler is used.\n *\n * This also does a callback to all non page level handlers\n * on every state change even to handlers on state pieces that were\n * not affected by the state change.\n * @private\n * @suppress {deprecated} Calls this package\x27s deprecated methods for backwards\n *     compatibility.\n */\ngws.historyState.notifyAllHandlers_ \x3d function() {\n  if (search.build.INLINE) {\n    return;\n  }\n  // If we have a current state handler, try to dispatch to it now. If it\n  // shouldn\x27t handle this state, then call cleanup and clear it.\n  if (gws.historyState.currentStateHandler_ \x26\x26\n      gws.historyState.currentStateHandler_.shouldHandle(\n          gws.historyState.current_)) {\n    google.dclc(goog.bind(\n        gws.historyState.currentStateHandler_.handle,\n        gws.historyState.currentStateHandler_, gws.historyState.current_));\n  } else if (gws.historyState.currentStateHandler_) {\n    google.dclc(goog.bind(\n        gws.historyState.currentStateHandler_.cleanUp,\n        gws.historyState.currentStateHandler_, gws.historyState.current_));\n    gws.historyState.currentStateHandler_ \x3d null;\n  }\n\n  // If we don\x27t already have a state handler try to find one.\n  if (!gws.historyState.currentStateHandler_) {\n    for (var handlerName in gws.historyState.stateHandlers_) {\n      var handler \x3d gws.historyState.stateHandlers_[handlerName];\n      if (handler.shouldHandle(gws.historyState.current_)) {\n        google.dclc(\n            goog.bind(handler.handle, handler, gws.historyState.current_));\n        gws.historyState.currentStateHandler_ \x3d handler;\n        break;\n      }\n    }\n  }\n\n  // Notify all the other handlers.\n  for (var key in gws.historyState.handlers_) {\n    var handler \x3d gws.historyState.handlers_[key];\n    google.dclc(goog.partial(\n        handler,\n\n        gws.historyState.current_.getParam(key), false));\n  }\n};\n\n\n/**\n * Low level function that changes the internal state used by the\n * implementation to a new state, taking an analyzed state to be the\n * new state.  This is the single point where the internal current_\n * variable is directly modified.\n * @param {!gws.historyState.AnalyzedState} analyzedState Instance which\n *     is to become the new state.  The caller should not directly\n *     reference the instance after the call.\n * @private\n */\ngws.historyState.setCurrentState_ \x3d function(analyzedState) {\n  gws.historyState.current_ \x3d analyzedState;\n};\n\n\n/**\n * Sets the current state to given new analyzed state and pushes or replaces it\n * onto browser history as appropriate.\n * This is the main internal high-level function for setting the current\n * state.  It will cause the appropriate state change callbacks to be made\n * or made in response to location change handling.\n * @param {!gws.historyState.AnalyzedState} analyzedState Instance which\n *     is to become the new state.  The caller should not directly\n *     reference the instance after the call.\n * @param {!Object\x3cstring, ?search.Jsonable\x3e} stateObject Arbitrary object to\n *     store alongside the analyzedState.  It may be retrieved later by calling\n *     gws.historyState.getStateObject.\n * @param {boolean\x3d} replace\n * @param {boolean\x3d} preempt\n * @private\n */\ngws.historyState.updateState_ \x3d function(\n    analyzedState, stateObject, replace \x3d false, preempt \x3d true) {\n  search.url.historyWrapper.update(\n      {\n        state: stateObject,\n        url: gws.historyState.getUrl_(analyzedState),\n        replace,\n      },\n      {\n        excludedListeners: new Set([gws.historyState.handleUrlChangeInternal]),\n        preempt\n      });\n  gws.historyState.setCurrentState_(analyzedState);\n  // TODO(twilkinson): Think about removing this synchronous call.\n  gws.historyState.notifyAllHandlers_();\n};\n\n\n/**\n * @param {!gws.historyState.AnalyzedState} analyzedState\n * @return {string} A URL appropriate for adding to the browser\x27s history stack.\n * @private\n */\ngws.historyState.getUrl_ \x3d function(analyzedState) {\n  var location \x3d gws.location.getLocation();\n\n  // If we are transitioning to a state that has the same primary bits as\n  // the old primary bits, we should attempt to preserve the current part of\n  // the query in the URL we generate.\n  let searchPart \x3d analyzedState.composePrimaryStateHash();\n  if (analyzedState.getPath() \x3d\x3d gws.historyState.current_.getPath() \x26\x26\n      analyzedState.isEquivalentToConsideringPrimaryOnly(\n          gws.historyState.current_)) {\n    searchPart \x3d location.search.substr(1);\n  }\n\n  return goog.uri.utils.buildFromEncodedParts(\n      undefined, undefined, undefined, undefined, analyzedState.getPath(),\n      searchPart, analyzedState.composeNonprimaryStateHash());\n};\n\n\n/**\n * @return {!Object\x3cstring, search.Jsonable\x3e}\n * @private\n */\ngws.historyState.getGlobalStateObject_ \x3d function() {\n  var globalStateObject \x3d\n      /** @type {?Object\x3cstring, search.Jsonable\x3e} */ (\n          search.url.historyWrapper.getCurrent().state);\n  // Just in case the browser stores a reference rather than a deep copy,\n  // do a shallow copy of the global state.\n  return Object.assign({}, globalStateObject || {});\n};\n\n\n/**\n * Calls updateState_.\n * @param {!gws.historyState.AnalyzedState} analyzedState Instance which\n *     is to become the new state.  The caller should not directly\n *     reference the instance after the call.\n * @param {boolean\x3d} replace Set to true to replace the state.\n * @param {!gws.historyState.StateArgument\x3d} stateArgument\n *     Arbitrary object to store alongside the analyzedState, with a unique\n *     namespace specific to your application.\n * @param {boolean\x3d} preempt\n * @private\n */\ngws.historyState.commitState_ \x3d function(\n    analyzedState, replace, stateArgument, preempt) {\n  if (search.build.INLINE) {\n    return;\n  }\n  if (analyzedState.equals(gws.historyState.current_)) {\n    // No work to do!\n    return;\n  }\n\n  var globalStateObject \x3d gws.historyState.getGlobalStateObject_();\n  var upcomingStateObject \x3d {};\n\n  if (stateArgument) {\n    upcomingStateObject[stateArgument.namespace] \x3d stateArgument.stateObject;\n  }\n  // Scoped to historyState.\n  globalStateObject[gws.historyState.HISTORY_STATE_NAMESPACE_] \x3d\n      upcomingStateObject;\n\n  gws.historyState.updateState_(\n      analyzedState, globalStateObject, replace, preempt);\n};\n\n\n/**\n * The callback on hash change (or later history state) event.\n * This is public only for access by mod logic to wire up in a special way.\n */\ngws.historyState.handleUrlChangeInternal \x3d function() {\n  if (search.build.INLINE) {\n    return;\n  }\n  var urlState \x3d\n      gws.historyState.AnalyzedState.fromUrl(gws.location.getLocation().href)\n          .state;\n  if (gws.historyState.current_.equals(urlState)) {\n    return;\n  }\n  gws.historyState.setCurrentState_(\n      gws.historyState.AnalyzedState.stripUglyParams(urlState));\n  gws.historyState.notifyAllHandlers_();\n};\n\n\n/**\n * Hashes containing an embedded \x27#\x27 character send JESR into a conniption\n * fit in which it repeatedly NCSRs. It\x27s too hard to fix this for real,\n * so hack around the problem by clearing the hash in this weird case. On\n * 2014-10-28 this happened about 2000 times. b/8782159 has details. Also, we\n * unconditionally clear the hash in iOS Chrome 46.0.2490.73 since it may\n * contain params from a completely different SERP. See b/20384133 for more.\n * @param {string} hash The hash to test.\n * @return {boolean} True if hash is malformed.\n * @private\n */\ngws.historyState.isMalformedHash_ \x3d function(hash) {\n  return (!!hash \x26\x26 hash.substr(1).indexOf(\x27#\x27) \x3e -1) ||\n      // Work around b/20384133.\n      goog.labs.userAgent.util.matchUserAgent(\x27CriOS/46.0.2490.73\x27);\n};\n\n\n/**\n * Sets hash to the empty string if it is malformed.\n * @private\n */\ngws.historyState.clearHashIfMalformed_ \x3d function() {\n  var hash \x3d gws.location.getLocationHash();\n  if (gws.historyState.isMalformedHash_(hash)) {\n    var encodedHash \x3d encodeURIComponent(hash);\n    google.log(\x27jbh\x27, \x27\x26h\x3d\x27 + encodedHash.substr(0, 40));\n    // TODO(ryoji): This will not work under AGSA location management.\n    gws.location.getLocation().hash \x3d \x27\x27;\n  }\n};\n\n\n/**\n * Get the extra state object stored along with the current history state.\n * @param {string} stateKey\n * @return {*}\n */\ngws.historyState.getStateObject \x3d function(stateKey) {\n  if (search.build.INLINE) {\n    return;\n  }\n  var globalStateObject \x3d gws.historyState.getGlobalStateObject_();\n  return (\n      globalStateObject[gws.historyState.HISTORY_STATE_NAMESPACE_] ||\n      {})[stateKey];\n};\n\n\n/**\n * Set the extra state object stored along with the current history state.\n * @param {string} stateKey\n * @param {search.Jsonable} stateObject\n */\ngws.historyState.setStateObject \x3d function(stateKey, stateObject) {\n  if (search.build.INLINE) {\n    return;\n  }\n  var globalStateObject \x3d gws.historyState.getGlobalStateObject_();\n  var nextStateObject \x3d\n      /** @type {!Object\x3cstring, search.Jsonable\x3e} */ (\n          globalStateObject[gws.historyState.HISTORY_STATE_NAMESPACE_]) ||\n      {};\n  nextStateObject[stateKey] \x3d stateObject;\n  globalStateObject[gws.historyState.HISTORY_STATE_NAMESPACE_] \x3d\n      nextStateObject;\n  gws.historyState.updateState_(\n      gws.historyState.current_, globalStateObject, true);\n};\n\n\n/**\n * @return {boolean} Whether the state change callback is fired on the\n *     \x27popstate\x27 or on the \x27hashchange\x27 event.\n */\ngws.historyState.isUsingPopState \x3d function() {\n  return gws.historyState.useHistory_;\n};\n\n\n/**\n * Initializes the module.\n * Should be called only once.\n * @package\n */\ngws.historyState.init \x3d function() {\n  var config \x3d goog.getObjectByName(\x27google.hs\x27);\n  var win \x3d goog.dom.getWindow();\n  if (config) {\n    // JESR assumes that the history state module is present in all Tier1, but\n    // not all Tier1 has support for HTML5 history. The mendel condition\n    // browser.SupportsHTML5History controls config[\x27h\x27]. But since tiering\n    // or the mendel condition could change, we feature detect for extra safety.\n    gws.historyState.useHistory_ \x3d\n        !!config[\x27h\x27] \x26\x26 !!win.history \x26\x26 !!win.history.pushState;\n  }\n  gws.historyState.clearHashIfMalformed_();\n  gws.historyState.initial_ \x3d\n      gws.historyState.AnalyzedState.analyzeLocationHash(\n          gws.location.getLocation().search.substring(1));\n  gws.historyState.sanitizedInitial_ \x3d\n      gws.historyState.AnalyzedState.stripUglyParams(gws.historyState.initial_);\n\n  var prettyUrlState \x3d gws.historyState.AnalyzedState.stripUglyParams(\n      gws.historyState.AnalyzedState.fromUrl(gws.location.getLocation().href)\n          .state);\n  gws.historyState.setCurrentState_(prettyUrlState);\n  if (search.build.INLINE) {\n    return;\n  }\n  search.url.historyWrapper.addListener(\n      gws.historyState.handleUrlChangeInternal);\n};\ngws.historyState.init();\n// TODO(bmt): Move this call into history_state_start.js after tests are updated\n// to properly initialize history state.\n\n/**\n * @package\n */\ngws.historyState.testing \x3d {\n  /**\n   * Set up the history state for testing\n   */\n  setUp() {\n    gws.historyState.current_ \x3d new gws.historyState.AnalyzedState();\n    gws.historyState.handlers_ \x3d {};\n    gws.historyState.useHistory_ \x3d false;\n    gws.historyState.stateHandlers_ \x3d {};\n    gws.historyState.init();\n  },\n\n  /**\n   * This unlistens to external handlers.\n   */\n  tearDown() {\n    search.url.historyWrapper.removeListener(\n        gws.historyState.handleUrlChangeInternal);\n    gws.historyState.currentStateHandler_ \x3d null;\n  },\n\n  /**\n   * @param {!gws.historyState.AnalyzedState} analyzedState\n   */\n  setInitial(analyzedState) {\n    gws.historyState.initial_ \x3d analyzedState;\n  },\n\n  /**\n   * @param {!gws.historyState.AnalyzedState} analyzedState\n   */\n  setSanitizedInitial(analyzedState) {\n    gws.historyState.sanitizedInitial_ \x3d analyzedState;\n  },\n\n  /**\n   * @return {!Object\x3cstring, function(string, boolean)\x3e}\n   */\n  getHandlers() {\n    return gws.historyState.handlers_;\n  },\n\n  /**\n   * @param {!Object\x3cstring, function(string, boolean)\x3e} handlers\n   */\n  setHandlers(handlers) {\n    gws.historyState.handlers_ \x3d handlers;\n  },\n};\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/history_state/history_state.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy25');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy25');

}catch(e){_DumpException(e)}
/* _Module_:hsm */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('hsm');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('hsm');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('hsm');

}catch(e){_DumpException(e)}
/* _Module_:sy1p */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1p');
var $googDebugFname="javascript/jsaction/dom.js";
eval("// Copyright 2013 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Functions that help jsaction interact with the DOM. We\n * deliberately don\x27t use the closure equivalents here because we want\n * to exercise very tight control over the dependencies.\n */\ngoog.provide(\x27jsaction.dom\x27);\n\n\n/**\n * Determines if one node is contained within another. Adapted from\n * {@see goog.dom.contains}.\n * @param {!Node} node Node that should contain otherNode.\n * @param {Node} otherNode Node being contained.\n * @return {boolean} True if otherNode is contained within node.\n */\njsaction.dom.contains \x3d function(node, otherNode) {\n  if (goog.isNull(otherNode)) {\n    return false;\n  }\n\n  // We use browser specific methods for this if available since it is faster\n  // that way.\n\n  // IE DOM\n  if (\x27contains\x27 in node \x26\x26 otherNode.nodeType \x3d\x3d 1) {\n    return node.contains(otherNode);\n  }\n\n  // W3C DOM Level 3\n  if (\x27compareDocumentPosition\x27 in node) {\n    return node \x3d\x3d otherNode ||\n        Boolean(node.compareDocumentPosition(otherNode) \x26 16);\n  }\n\n  // W3C DOM Level 1\n  while (otherNode \x26\x26 node !\x3d otherNode) {\n    otherNode \x3d otherNode.parentNode;\n  }\n  return otherNode \x3d\x3d node;\n};\n\n/**\n * Helper method for broadcastCustomEvent. Returns true if any member of\n * the set is an ancestor of element.\n *\n * @param {!Element} element\n * @param {!NodeList} nodeList\n * @return {boolean}\n*/\njsaction.dom.hasAncestorInNodeList \x3d function(element, nodeList) {\n  for (var i \x3d 0; i \x3c nodeList.length; ++i) {\n    var member \x3d nodeList[i];\n    if (member !\x3d element \x26\x26 jsaction.dom.contains(member, element)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/dom.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1p');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1p');

}catch(e){_DumpException(e)}
/* _Module_:sy1q */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1q');
var $googDebugFname="javascript/jsaction/syntax.js";
eval("// Copyright 2011 Google Inc. All rights reserved.\n\n/**\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview Defines and documents the various lexical components\n * that make up the different aspects of the jsaction syntax.\n *\n * NOTE(mesch): Yep, the things defined here are lexical, but their\n * grouping and documentation is what defines the jsaction syntax.\n */\n\ngoog.provide(\x27jsaction.Attribute\x27);\ngoog.provide(\x27jsaction.Branch\x27);\ngoog.provide(\x27jsaction.Char\x27);\ngoog.provide(\x27jsaction.EventType\x27);\ngoog.provide(\x27jsaction.KeyCodes\x27);\ngoog.provide(\x27jsaction.Name\x27);\ngoog.provide(\x27jsaction.Property\x27);\ngoog.provide(\x27jsaction.TagName\x27);\ngoog.provide(\x27jsaction.Tick\x27);\ngoog.provide(\x27jsaction.UrlParam\x27);\n\n\n/**\n * All attributes used by jsaction.\n * @enum {string}\n */\njsaction.Attribute \x3d {\n  /**\n   * The jsaction attribute defines a mapping of a DOM event to a\n   * generic event (aka jsaction), to which the actual event handlers\n   * that implement the behavior of the application are bound. The\n   * value is a semicolon separated list of colon separated pairs of\n   * an optional DOM event name and a jsaction name. If the optional\n   * DOM event name is omitted, \x27click\x27 is assumed. The jsaction names\n   * are dot separated pairs of a namespace and a simple jsaction\n   * name. If the namespace is absent, it is taken from the closest\n   * ancestor element with a jsnamespace attribute, if there is\n   * any. If there is no ancestor with a jsnamespace attribute, the\n   * simple name is assumed to be the jsaction name.\n   *\n   * Used by EventContract.\n   */\n  JSACTION: \x27jsaction\x27,\n\n  /**\n   * The jsnamespace attribute provides the namespace part of the\n   * jaction names occurring in the jsaction attribute where it\x27s\n   * missing.\n   *\n   * Used by EventContract.\n   */\n  JSNAMESPACE: \x27jsnamespace\x27,\n\n  /**\n   * The oi attribute is a log impression tag for impression logging\n   * and action tracking. For an element that carries a jsaction\n   * attribute, the element is identified for the purpose of\n   * impression logging and click tracking by the dot separated path\n   * of all oi attributes in the chain of ancestors of the element.\n   *\n   * Used by ActionFlow.\n   */\n  OI: \x27oi\x27,\n\n  /**\n   * The ved attribute is an encoded ClickTrackingCGI proto to track\n   * visual elements.\n   *\n   * Used by ActionFlow.\n   */\n  VED: \x27ved\x27,\n\n  /**\n   * The vet attribute is the visual element type used to identify tracked\n   * visual elements.\n   */\n  VET: \x27vet\x27,\n\n  /**\n   * Support for iteration on reprocessing.\n   *\n   * Used by ActionFlow.\n   */\n  JSINSTANCE: \x27jsinstance\x27,\n\n  /**\n   * All click jsactions that happen on the element that carries this\n   * attribute or its descendants are automatically logged.\n   * Impressions of jsactions on these elements are tracked too, if\n   * requested by the impression() method of ActionFlow.\n   *\n   * Used by ActionFlow.\n   */\n  JSTRACK: \x27jstrack\x27\n};\n\n\n/**\n * Special ActionFlow branch names defined by jsaction.\n * @enum {string}\n */\njsaction.Branch \x3d {\n  /**\n   * The main branch, i.e. the branch the action flow instance starts\n   * right at construction.\n   */\n  MAIN: \x27main-actionflow-branch\x27\n};\n\n\n/** All special characters used by jsaction. */\njsaction.Char \x3d {\n  /**\n   * The separator between the namespace and the action name in the\n   * jsaction attribute value.\n   */\n  NAMESPACE_ACTION_SEPARATOR: \x27.\x27,\n\n  /**\n   * The separator between the event name and action in the jsaction\n   * attribute value.\n   */\n  EVENT_ACTION_SEPARATOR: \x27:\x27,\n\n  /**\n   * The separator between the logged oi attribute values in the \x26oi\x3d\n   * URL parameter value.\n   */\n  OI_SEPARATOR: \x27.\x27,\n\n  /**\n   * The separator between the key and the value pairs in the \x26cad\x3d\n   * URL parameter value.\n   */\n  CAD_KEY_VALUE_SEPARATOR: \x27:\x27,\n\n  /**\n   * The separator between the key-value pairs in the \x26cad\x3d URL\n   * parameter value.\n   */\n  CAD_SEPARATOR: \x27,\x27\n};\n\n\n/**\n * Names of events that are special to jsaction. These are not all\n * event types that are legal to use in either HTML or the addEvent()\n * API, but these are the ones that are treated specially. All other\n * DOM events can be used in either addEvent() or in the value of the\n * jsaction attribute. Beware of browser specific events or events\n * that don\x27t bubble though: If they are not mentioned here, then\n * event contract doesn\x27t work around their peculiarities.\n * @enum {string}\n */\njsaction.EventType \x3d {\n  /**\n   * Mouse middle click, introduced in Chrome 55 and not yet supported on\n   * other browsers.\n   */\n  AUXCLICK: \x27auxclick\x27,\n\n  /**\n   * The click event. In addEvent() refers to all click events, in the\n   * jsaction attribute it refers to the unmodified click and Enter/Space\n   * keypress events.  In the latter case, a jsaction click will be triggered,\n   * for accessibility reasons.  See clickmod and clickonly, below.\n   */\n  CLICK: \x27click\x27,\n\n  /**\n   * Specifies the jsaction for a modified click event (i.e. a mouse\n   * click with the modifier key Cmd/Ctrl pressed). This event isn\x27t\n   * separately enabled in addEvent(), because in the DOM, it\x27s just a\n   * click event.\n   */\n  CLICKMOD: \x27clickmod\x27,\n\n  /**\n   * Specifies the jsaction for a click-only event.  Click-only doesn\x27t take\n   * into account the case where an element with focus receives an Enter/Space\n   * keypress.  This event isn\x27t separately enabled in addEvent().\n   */\n  CLICKONLY: \x27clickonly\x27,\n\n  /**\n   * The dblclick event.\n   */\n  DBLCLICK: \x27dblclick\x27,\n\n  /**\n   * Focus doesn\x27t bubble, but you can use it in addEvent() and\n   * jsaction anyway. EventContract does the right thing under the\n   * hood.\n   */\n  FOCUS: \x27focus\x27,\n\n  /**\n   * This event only exists in IE. For addEvent() and jsaction, use\n   * focus instead; EventContract does the right thing even though\n   * focus doesn\x27t bubble.\n   */\n  FOCUSIN: \x27focusin\x27,\n\n  /**\n   * Analog to focus.\n   */\n  BLUR: \x27blur\x27,\n\n  /**\n   * Analog to focusin.\n   */\n  FOCUSOUT: \x27focusout\x27,\n\n  /**\n   * Submit doesn\x27t bubble, so it cannot be used with event\n   * contract. However, the browser helpfully fires a click event on\n   * the submit button of a form (even if the form is not submitted by\n   * a click on the submit button). So you should handle click on the\n   * submit button instead.\n   */\n  SUBMIT: \x27submit\x27,\n\n  /**\n   * The keydown event. In addEvent() and non-click jsaction it represents the\n   * regular DOM keydown event. It represents click actions in non-Gecko\n   * browsers.\n   */\n  KEYDOWN: \x27keydown\x27,\n\n  /**\n   * The keypress event. In addEvent() and non-click jsaction it represents the\n   * regular DOM keypress event. It represents click actions in Gecko browsers.\n   */\n  KEYPRESS: \x27keypress\x27,\n\n  /**\n   * The keyup event. In addEvent() and non-click jsaction it represents the\n   * regular DOM keyup event. It represents click actions in non-Gecko\n   * browsers.\n   */\n  KEYUP: \x27keyup\x27,\n\n  /**\n   * The mouseup event. Can either be used directly or used implicitly to\n   * capture mouseup events. In addEvent(), it represents a regular DOM\n   * mouseup event.\n   */\n  MOUSEUP: \x27mouseup\x27,\n\n  /**\n   * The mousedown event. Can either be used directly or used implicitly to\n   * capture mouseenter events. In addEvent(), it represents a regular DOM\n   * mouseover event.\n   */\n  MOUSEDOWN: \x27mousedown\x27,\n\n  /**\n   * The mouseover event. Can either be used directly or used implicitly to\n   * capture mouseenter events. In addEvent(), it represents a regular DOM\n   * mouseover event.\n   */\n  MOUSEOVER: \x27mouseover\x27,\n\n  /**\n   * The mouseout event. Can either be used directly or used implicitly to\n   * capture mouseover events. In addEvent(), it represents a regular DOM\n   * mouseout event.\n   */\n  MOUSEOUT: \x27mouseout\x27,\n\n  /**\n   * The mouseenter event. Does not bubble and fires individually on each\n   * element being entered within a DOM tree.\n   */\n  MOUSEENTER: \x27mouseenter\x27,\n\n  /**\n   * The mouseleave event. Does not bubble and fires individually on each\n   * element being entered within a DOM tree.\n   */\n  MOUSELEAVE: \x27mouseleave\x27,\n\n  /**\n   * The mousemove event.\n   */\n  MOUSEMOVE: \x27mousemove\x27,\n\n  /**\n   * The error event. The error event doesn\x27t bubble, but you can use it in\n   * addEvent() and jsaction anyway. EventContract does the right thing under\n   * the hood (except in IE8 which does not use error events).\n   */\n  ERROR: \x27error\x27,\n\n  /**\n   * The load event. The load event doesn\x27t bubble, but you can use it in\n   * addEvent() and jsaction anyway. EventContract does the right thing\n   * under the hood.\n   */\n  LOAD: \x27load\x27,\n\n  /**\n   * The unload event.\n   */\n  UNLOAD: \x27unload\x27,\n\n  /**\n   * The touchstart event. Bubbles, will only ever fire in browsers with\n   * touch support.\n   */\n  TOUCHSTART: \x27touchstart\x27,\n\n  /**\n   * The touchend event. Bubbles, will only ever fire in browsers with\n   * touch support.\n   */\n  TOUCHEND: \x27touchend\x27,\n\n  /**\n   * The touchmove event. Bubbles, will only ever fire in browsers with\n   * touch support.\n   */\n  TOUCHMOVE: \x27touchmove\x27,\n\n  /**\n   * The input event.\n   */\n  INPUT: \x27input\x27,\n\n  /**\n   * The scroll event.\n   */\n  SCROLL: \x27scroll\x27,\n\n  /**\n   * A custom event. The actual custom event type is declared as the \x27type\x27\n   * field in the event details. Supported in Firefox 6+, IE 9+, and all Chrome\n   * versions.\n   *\n   * This is an internal name. Users should use jsaction.fireCustomEvent to\n   * fire custom events instead of relying on this type to create them.\n   */\n  CUSTOM: \x27_custom\x27\n};\n\n\n/**\n * Special keycodes used by jsaction for the generic click action.\n * @enum {number}\n */\njsaction.KeyCodes \x3d {\n  /**\n   * If on a Macintosh with an extended keyboard, the Enter key located in the\n   * numeric pad has a different ASCII code.\n   */\n  MAC_ENTER: 3,\n\n  /**\n   * The Enter key.\n   */\n  ENTER: 13,\n\n  /**\n   * The Space key.\n   */\n  SPACE: 32\n};\n\n\n/**\n * Special tag names used by jsaction for the generic click action.\n * @enum {string}\n */\njsaction.TagName \x3d {\n  /**\n   * A textarea tag.\n   */\n  TEXTAREA: \x27TEXTAREA\x27,\n\n  /**\n   * An input tag.\n   */\n  INPUT: \x27INPUT\x27,\n\n  /**\n   * A button tag.\n   */\n  BUTTON: \x27BUTTON\x27,\n\n  /**\n   * An anchor tag.\n   */\n  A: \x27A\x27\n};\n\n\n/**\n * Special names used by jsaction.\n * @enum {string}\n */\njsaction.Name \x3d {\n  /**\n   * The start time property of ActionFlow. TODO(mesch): Maybe a Property?\n   */\n  START: \x27start\x27,\n\n  /**\n   * Click additional data.\n   */\n  CAD: \x27cad\x27,\n\n  /**\n   * Action data to track duplicate ticks. This is used as a key in\n   * additionalData map and in the value of the CLICK_ADDITIONAL_DATA\n   * URL parameter in the reporting request.\n   */\n  DUP: \x27dup\x27\n};\n\n\n/**\n * All the CSI ticks issued by jsaction.\n * @enum {string}\n */\njsaction.Tick \x3d {\n  /**\n   * Tick that indicates that the control flow enters ActionFlow.impression().\n   */\n  IMP0: \x27imp0\x27,\n\n  /**\n   * Tick that indicates that the control flow leaves impression().\n   */\n  IMP1: \x27imp1\x27\n};\n\n\n/**\n * All properties that are used by jsaction.\n * @enum {string}\n */\njsaction.Property \x3d {\n  /**\n   * The parsed value of the jsaction attribute is stored in this\n   * property on the DOM node. The parsed value is an Object. The\n   * property names of the object are the events; the values are the\n   * names of the actions. This property is attached even on nodes\n   * that don\x27t have a jsaction attribute as an optimization, because\n   * property lookup is faster than attribute access.\n   */\n  JSACTION: \x27__jsaction\x27,\n\n  /**\n   * The parsed value of the jsnamespace attribute is stored in this\n   * property on the DOM node.\n   */\n  JSNAMESPACE: \x27__jsnamespace\x27,\n\n  /**\n   * The value of the oi attribute as a property, for faster access.\n   */\n  OI: \x27__oi\x27,\n\n  /**\n   * The owner property references an a logical owner for a DOM node. JSAction\n   * will follow this reference instead of parentNode when traversing the DOM\n   * to find jsaction attributes. This allows overlaying a logical structure\n   * over a document where the DOM structure can\x27t reflect that structure.\n   */\n  OWNER: \x27__owner\x27\n};\n\n\n/**\n * All URL parameters used by jsaction. Many of them relate to click\n * tracking and impression logging.\n * Cf. \x3chttp://go/jsactiondesigndoc\x3e\n * @enum {string}\n */\njsaction.UrlParam \x3d {\n  /**\n   * The type of the click is the name of the jsaction it was mapped to.\n   */\n  CLICK_TYPE: \x27ct\x27,\n\n  /**\n   * Click data contains the positional index of the clicked element\n   * among its sibling as given by the jsinstance attribute value, if\n   * any.\n   */\n  CLICK_DATA: \x27cd\x27,\n\n  /**\n   * Contains more structured data registered during the execution of\n   * the jsaction handler and registered with the ActionFlow\n   * instance. Among these data is informaiton about impressions that\n   * were generated during the handling of the jsaction.\n   */\n  CLICK_ADDITIONAL_DATA: \x27cad\x27,\n\n  /**\n   * The event ID of the response that generated the clicked element,\n   * as obtained from the value of the jstrack attribute.\n   */\n  EVENT_ID: \x27ei\x27,\n\n  /**\n   * The visual element data for the clicked element, as obtained from\n   * the ved attribute.\n   */\n  VISUAL_ELEMENT_CLICK: \x27ved\x27,\n\n  /**\n   * The visual element type of the clicked element, as obtained from the vet\n   * attribute.\n   */\n  VISUAL_ELEMENT_TYPE: \x27vet\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/syntax.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1q');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1q');

}catch(e){_DumpException(e)}
/* _Module_:sy1r */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1r');
var $googDebugFname="javascript/jsaction/event.js";
eval("// Copyright 2011 Google Inc. All Rights Reserved.\n\n/**\n * @author mibuerge@google.com (Michael Buerge)\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview Functions that help jsaction deal with browser\n * events. We deliberately don\x27t use the closure equivalents here\n * because we want to exercise very tight control over the\n * dependencies, because this code is meant to be inlined in the main\n * HTML page and therefore needs to be as small as possible.\n */\n\ngoog.provide(\x27jsaction.ActionInfo\x27);\ngoog.provide(\x27jsaction.ContainerInitializerFunction\x27);\ngoog.provide(\x27jsaction.EventHandlerFunction\x27);\ngoog.provide(\x27jsaction.EventHandlerInfo\x27);\ngoog.provide(\x27jsaction.EventInfo\x27);\ngoog.provide(\x27jsaction.event\x27);\n\ngoog.require(\x27jsaction.EventType\x27);\ngoog.require(\x27jsaction.KeyCodes\x27);\ngoog.require(\x27jsaction.dom\x27);\n\n\n/**\n * Records information for later handling of events. This type is\n * shared, and instances of it are passed, between the eventcontract\n * and the dispatcher jsbinary. Therefore, the fields of this type are\n * referenced by string literals rather than property literals\n * throughout the code.\n *\n * \x27targetElement\x27 is the element the action occured on, \x27actionElement\x27\n * is the element that has the jsaction handler.\n *\n * A null \x27actionElement\x27 identifies an EventInfo instance that didn\x27t match a\n * jsaction attribute.  This allows us to execute global event handlers with the\n * appropriate event type (including a11y clicks and custom events).\n *\n * TODO(mesch): Using literals to access properties makes type\n * checking partially ineffective. Accessing a wrongly spelled field\n * this way doesn\x27t create a compiler error, and passing such an\n * untyped field to a place where a type is expected doesn\x27t create a\n * jscompiler error either. Assigning a value of the wrong type in\n * this way, however, does trigger a jscompiler error (seen when\n * assigning Event to \x27target\x27, which requires !Event).\n *\n * @typedef {{\n *   eventType: string,\n *   event: !Event,\n *   targetElement: !Element,\n *   action: string,\n *   actionElement: Element,\n *   timeStamp: number\n * }}\n */\njsaction.EventInfo;\n\n\n/**\n * Records action information for a given event.  Since this type is only used\n * internally by the EventContract, we don\x27t need to reference fields with\n * string literals (as opposed to jsaction.EventInfo).\n *\n * An empty \x27action\x27 identifies an ActionInfo instance that didn\x27t match a\n * jsaction attribute.  This allows us to execute global event handlers with the\n * appropriate event type (including a11y clicks and custom events).\n *\n * ActionInfo can override the original event with the one provided here (field\n * \x22event\x22). If it\x27s not provided, the original event is used.\n *\n * @typedef {{\n *   eventType: string,\n *   action: string,\n *   event: (Event|undefined|null),\n *   ignore: boolean\n * }}\n */\njsaction.ActionInfo;\n\n\n/**\n * The type of a DOM event handler function.\n * @typedef {function(this: Element, !Event)}\n */\njsaction.EventHandlerFunction;\n\n\n/**\n * Information about a registered event handler, which can be used to\n * deregister the event handler.\n *\n * @typedef {{\n *   eventType: string,\n *   handler: jsaction.EventHandlerFunction,\n *   capture: boolean\n * }}\n */\njsaction.EventHandlerInfo;\n\n\n/**\n * A function used to initialize containers in\n * EventContract.addContainer(). Such a function is passed an HTML DOM\n * Element and registers a specific event handler on it. The\n * EventHandlerInfo that is needed to eventually deregister the event\n * handler is returned by that function.\n * @typedef {function(!Element):jsaction.EventHandlerInfo}\n */\njsaction.ContainerInitializerFunction;\n\n\n/**\n * Registers the event handler function with the given DOM element for\n * the given event type. This function correctly handles registering\n * event handlers in IE using attachEvent(), and it properly deals\n * with the peculiar propagation of focus and blur.\n *\n * @param {!Element} element The element.\n * @param {string} eventType The event type.\n * @param {jsaction.EventHandlerFunction} handler The handler function\n *     to install.\n * @return {jsaction.EventHandlerInfo} Information needed to uninstall\n *     the event handler eventually.\n */\njsaction.event.addEventListener \x3d function(element, eventType, handler) {\n  // In the W3C DOM, all event handlers are registered in the bubbling\n  // phase for compatibility with the IE event model, which only has a\n  // bubbling phase. (IE\x27s event API has event capture, but that\x27s\n  // something different.)\n  //\n  // The exception is focus and blur. For backwards compatibility with\n  // the pre-bubbling event handlers, these events don\x27t bubble at\n  // all. The two event models compensate differently for this\n  // limitation: IE provides a bubbling variant of these events,\n  // focusin and focusout. W3C propagates focus and blur, but *only*\n  // in the capturing phase, and it doesn\x27t define focusin and\n  // focusout.\n  //\n  // Therefore, the event contract handlers for focus and blur must be\n  // treated special:\n  //\n  // * In W3C, we register them in the capture phase. This fact is\n  //   recorded in EventInfo, so we can properly deregister them.\n  //\n  // * In IE, we register focusin and focuout, respectively. This fact\n  //   is also recorded in EventInfo, so that it can be properly\n  //   deregistered.\n  //\n  // It would be a bad idea to register all event handlers in the\n  // capture phase because then regular onclick handlers would not be\n  // executed at all on events that trigger a jsaction. That\x27s not\n  // entirely what we want, at least for now.\n  //\n  // Error and load events (i.e. on images) do not bubble so they are also\n  // handled in the capture phase. These errors are also not supported in IE8\n  // but we set them up here to be used in newer browsers.\n  var capture \x3d false;\n\n  // Mouseenter and mouseleave events are not handled directly because they\n  // are not available everywhere. In browsers where they are available, they\n  // don\x27t bubble and aren\x27t visible at the container boundary. Instead, we\n  // synthesize the mouseenter and mouseleave events from mouseover and\n  // mouseout events, respectively. Cf. eventcontract.js.\n  if (eventType \x3d\x3d jsaction.EventType.MOUSEENTER) {\n    eventType \x3d jsaction.EventType.MOUSEOVER;\n  } else if (eventType \x3d\x3d jsaction.EventType.MOUSELEAVE) {\n    eventType \x3d jsaction.EventType.MOUSEOUT;\n  }\n\n  if (element.addEventListener) {\n    if (eventType \x3d\x3d jsaction.EventType.FOCUS ||\n        eventType \x3d\x3d jsaction.EventType.BLUR ||\n        eventType \x3d\x3d jsaction.EventType.ERROR ||\n        eventType \x3d\x3d jsaction.EventType.LOAD) {\n      capture \x3d true;\n    }\n    element.addEventListener(\n        eventType, /** @type {EventListener} */(handler), capture);\n\n  } else if (element.attachEvent) {\n    if (eventType \x3d\x3d jsaction.EventType.FOCUS) {\n      eventType \x3d jsaction.EventType.FOCUSIN;\n    } else if (eventType \x3d\x3d jsaction.EventType.BLUR) {\n      eventType \x3d jsaction.EventType.FOCUSOUT;\n    }\n    // IE doesn\x27t call handler as method of element (thus \x27this\x27 isn\x27t\n    // set to element), and doesn\x27t pass the Event instance as\n    // argument. The adapter used here takes care of both.\n    //\n    // It\x27s important that this adapter is deregistered eventually,\n    // otherwise it constitutes a memory leak.\n    //\n    // Redefining the argument handler is done for utmost\n    // conciseness. Better style would be more verbose. This needs to\n    // be done such that the adapter rather than the original handler\n    // is returned in event info, because that must be used to\n    // eventually unregister this handler.\n    handler \x3d jsaction.event.attachEventAdapter_(element, handler);\n    element.attachEvent(\x27on\x27 + eventType, handler);\n  }\n  return {eventType: eventType, handler: handler, capture: capture};\n};\n\n\n/**\n * In an event handler registered in IE, \x27this\x27 doesn\x27t refer to the\n * Element the event handler is bound to, and the Event instance isn\x27t\n * passed to the event handler as an argument, but is in the global\n * property window.event. This creates a wrapper around an normal\n * event handler that adapts these two aspects.\n *\n * It\x27s important that this adapter is deregistered eventually,\n * otherwise it will create a memory leak.\n *\n * @param {!Element} target The Element instance on which the handler\n *     is installed.\n * @param {jsaction.EventHandlerFunction} handler The handler to adapt\n *     to.\n * @return {jsaction.EventHandlerFunction} The adapted handler\n *     function.\n * @private\n */\njsaction.event.attachEventAdapter_ \x3d function(target, handler) {\n  return function(e) {\n    // Internet Explorer passes the event details through the global\n    // window.event property. Although this handler wrapper is meant\n    // to be used in IE, it actually is used when the attachEvent()\n    // method is present. This is the case at least in Opera/7 on the\n    // window object. Thus, we again detect features here, not\n    // browsers.\n    if (!e) {\n      e \x3d window.event;\n    }\n    return handler.call(target, e);\n  };\n};\n\n\n/**\n * Removes the event handler for the given event from the element.\n * the given event type.\n *\n * @param {!Element} element The element.\n * @param {jsaction.EventHandlerInfo} info The information\n *     needed to deregister the handler, as returned by\n *     addEventListener(), above.\n */\njsaction.event.removeEventListener \x3d function(element, info) {\n  if (element.removeEventListener) {\n    element.removeEventListener(\n        info.eventType,\n        /** @type {EventListener} */(info.handler),\n        info.capture);\n  } else if (element.detachEvent) {\n    element.detachEvent(\x27on\x27 + info.eventType, info.handler);\n  }\n};\n\n\n/**\n * Cancels propagation of an event.\n * @param {!Event} e The event to cancel propagation for.\n */\njsaction.event.stopPropagation \x3d function(e) {\n  e.stopPropagation ? e.stopPropagation() : (e.cancelBubble \x3d true);\n};\n\n\n/**\n * Prevents the default action of an event.\n * @param {!Event} e The event to prevent the default action for.\n */\njsaction.event.preventDefault \x3d function(e) {\n  e.preventDefault ? e.preventDefault() : (e.returnValue \x3d false);\n};\n\n\n/**\n * Gets the target Element of the event. In IE8 and older the \x27target\x27 property\n * is not supported and the \x27srcElement\x27 property has to be used instead. In\n * Firefox, a text node may appear as the target of the event, in which case\n * we return the parent element of the text node.\n * @param {!Event} e The event to get the target of.\n * @return {!Element} The target element.\n */\njsaction.event.getTarget \x3d function(e) {\n  // In IE8 and older the \x27target\x27 property is not supported and the\n  // \x27srcElement\x27 property has to be used instead.\n  var el \x3d e.target || e.srcElement;\n\n  // In Firefox, the event may have a text node as its target. We always\n  // want the parent Element the text node belongs to, however.\n  if (!el.getAttribute \x26\x26 el.parentNode) {\n    el \x3d el.parentNode;\n  }\n\n  return /** @type {!Element} */ (el);\n};\n\n\n/**\n * Whether we are on a Mac. Not pulling in useragent just for this.\n * NOTE(izaakr): navigator does not exist in google_js_test, hence the test\n * for its existence.\n * @type {boolean}\n * @private\n */\njsaction.event.isMac_ \x3d typeof navigator !\x3d \x27undefined\x27 \x26\x26\n    /Macintosh/.test(navigator.userAgent);\n\n\n/**\n * Determines and returns whether the given event (which is assumed to be a\n * click event) is a middle click.\n * NOTE(jmpagano): There is not a consistent way to identify middle click\n * across all browsers. Some detailed information about this can be found at:\n * http://www.unixpapa.com/js/mouse.html\n * @param {!Event} e The event.\n * @return {boolean} Whether the given event is a middle click.\n * @private\n */\njsaction.event.isMiddleClick_ \x3d function(e) {\n  return (e.which \x3d\x3d 2) ||\n      (e.which \x3d\x3d null \x26\x26 e.button \x3d\x3d 4) /* middle click for IE */ ||\n      (e.type \x3d\x3d jsaction.EventType.AUXCLICK);\n};\n\n\n/**\n * Determines and returns whether the given event (which is assumed\n * to be a click event) is modified. A middle click is considered a modified\n * click to retain the default browser action, which opens a link in a new tab.\n * @param {!Event} e The event.\n * @return {boolean} Whether the given event is modified.\n */\njsaction.event.isModifiedClickEvent \x3d function(e) {\n  return (jsaction.event.isMac_ \x26\x26 e.metaKey) ||\n      (!jsaction.event.isMac_ \x26\x26 e.ctrlKey) ||\n      jsaction.event.isMiddleClick_(e) ||\n      e.shiftKey;\n};\n\n\n/**\n * Whether we are on WebKit (e.g., Chrome).\n * @const {boolean}\n */\njsaction.event.isWebKit \x3d typeof navigator !\x3d \x27undefined\x27 \x26\x26\n    !/Opera/.test(navigator.userAgent) \x26\x26\n    /WebKit/.test(navigator.userAgent);\n\n\n/**\n * Whether we are on Safari.\n * @const {boolean}\n */\njsaction.event.isSafari \x3d typeof navigator !\x3d \x27undefined\x27 \x26\x26\n    /WebKit/.test(navigator.userAgent) \x26\x26\n    /Safari/.test(navigator.userAgent);\n\n\n/**\n * Whether we are on IE.\n * @const {boolean}\n */\njsaction.event.isIe \x3d typeof navigator !\x3d \x27undefined\x27 \x26\x26\n    (/MSIE/.test(navigator.userAgent) ||\n    /Trident/.test(navigator.userAgent));\n\n\n/**\n * Whether we are on Gecko (e.g., Firefox).\n * @type {boolean}\n */\njsaction.event.isGecko \x3d typeof navigator !\x3d \x27undefined\x27 \x26\x26\n    !/Opera|WebKit/.test(navigator.userAgent) \x26\x26\n    /Gecko/.test(navigator.product);\n\n\n/**\n * Determines and returns whether the given element is a valid target for\n * keypress/keydown DOM events that act like regular DOM clicks.\n * @param {!Element} el The element.\n * @return {boolean} Whether the given element is a valid action key target.\n * @private\n */\njsaction.event.isValidActionKeyTarget_ \x3d function(el) {\n  if (!(\x27getAttribute\x27 in el)) {\n    return false;\n  }\n  var tagName \x3d (el.getAttribute(\x27role\x27) || el.tagName).toUpperCase();\n  return !jsaction.event.isTextControl_(el) \x26\x26\n      (tagName !\x3d \x27COMBOBOX\x27 || tagName !\x3d \x27INPUT\x27) \x26\x26 !el.isContentEditable;\n};\n\n\n/**\n * Whether an event has a modifier key activated.\n * @param {!Event} e The event.\n * @return {boolean} True, if a modifier key is activated.\n * @private\n */\njsaction.event.hasModifierKey_ \x3d function(e) {\n  return e.ctrlKey || e.shiftKey || e.altKey || e.metaKey;\n};\n\n\n/**\n * Determines and returns whether the given event has a target that already\n * has event handlers attached because it is a native HTML control. Used to\n * determine if preventDefault should be called when isActionKeyEvent is true.\n * @param {!Event} e The event.\n * @return {boolean} If preventDefault should be called.\n */\njsaction.event.shouldCallPreventDefaultOnNativeHtmlControl \x3d function(e) {\n  var el \x3d jsaction.event.getTarget(e);\n  var tagName \x3d (el.getAttribute(\x27role\x27) || el.tagName).toUpperCase();\n  return jsaction.event.isNativeHTMLControl(el) \x26\x26 tagName !\x3d \x27A\x27 \x26\x26\n      !jsaction.event.processSpace_(el) \x26\x26 !jsaction.event.isTextControl_(el) ||\n      tagName \x3d\x3d \x27BUTTON\x27;\n};\n\n\n/**\n * Determines and returns whether the given event acts like a regular DOM click,\n * and should be handled instead of the click.  If this returns true, the caller\n * will call preventDefault() to prevent a possible duplicate event.\n * This is represented by a keypress (keydown on Gecko browsers) on Enter or\n * Space key.\n * @param {!Event} e The event.\n * @return {boolean} True, if the event emulates a DOM click.\n */\njsaction.event.isActionKeyEvent \x3d function(e) {\n  var key \x3d e.which || e.keyCode || e.key;\n  if (jsaction.event.isWebKit \x26\x26 key \x3d\x3d jsaction.KeyCodes.MAC_ENTER) {\n    key \x3d jsaction.KeyCodes.ENTER;\n  }\n  if (key !\x3d jsaction.KeyCodes.ENTER \x26\x26 key !\x3d jsaction.KeyCodes.SPACE) {\n    return false;\n  }\n  var el \x3d jsaction.event.getTarget(e);\n  var type \x3d (el.getAttribute(\x27role\x27) || el.type || el.tagName).toUpperCase();\n  if (e.type !\x3d jsaction.EventType.KEYDOWN ||\n      !jsaction.event.isValidActionKeyTarget_(el) ||\n      jsaction.event.hasModifierKey_(e)) {\n    return false;\n  }\n\n  // For \x3cinput type\x3d\x22checkbox\x22\x3e, we must only handle the browser\x27s native click\n  // event, so that the browser can toggle the checkbox.\n  if (jsaction.event.processSpace_(el) \x26\x26 key \x3d\x3d jsaction.KeyCodes.SPACE) {\n    return false;\n  }\n\n  // If this element is non-focusable, ignore stray keystrokes (b/18337209)\n  // Sscreen readers can move without tab focus, so any tabIndex is focusable.\n  // See B/21809604\n  if (!jsaction.event.isFocusable_(el)) {\n    return false;\n  }\n\n  var hasType \x3d el.tagName.toUpperCase() !\x3d \x27INPUT\x27 || el.type;\n  var isSpecificTriggerKey \x3d\n      jsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING[type] % key \x3d\x3d 0;\n  var isDefaultTriggerKey \x3d\n      !(type in jsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING) \x26\x26\n      key \x3d\x3d jsaction.KeyCodes.ENTER;\n  return (isSpecificTriggerKey || isDefaultTriggerKey) \x26\x26 !!hasType;\n};\n\n\n/**\n * Checks whether a DOM element can receive keyboard focus.\n * This code is based on goog.dom.isFocusable, but simplified since we shouldn\x27t\n * care about visibility if we\x27re already handling a keyboard event.\n * @param {!Element} el\n * @return {boolean}\n * @private\n */\njsaction.event.isFocusable_ \x3d function(el) {\n  return (el.tagName in jsaction.event.NATIVELY_FOCUSABLE_ELEMENTS_ ||\n      jsaction.event.hasSpecifiedTabIndex_(el)) \x26\x26\n      !el.disabled;\n};\n\n\n/**\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a specified tab index.\n * @private\n */\njsaction.event.hasSpecifiedTabIndex_ \x3d function(element) {\n  // IE returns 0 for an unset tabIndex, so we must use getAttributeNode(),\n  // which returns an object with a \x27specified\x27 property if tabIndex is\n  // specified.  This works on other browsers, too.\n  var attrNode \x3d element.getAttributeNode(\x27tabindex\x27); // Must be lowercase!\n  return goog.isDefAndNotNull(attrNode) \x26\x26 attrNode.specified;\n};\n\n\n/**\n * Element tagnames that are focusable by default.\n * @private {!Object\x3cstring, number\x3e}\n */\njsaction.event.NATIVELY_FOCUSABLE_ELEMENTS_ \x3d {\n  \x27A\x27: 1,\n  \x27INPUT\x27: 1,\n  \x27TEXTAREA\x27: 1,\n  \x27SELECT\x27: 1,\n  \x27BUTTON\x27: 1\n};\n\n\n/**\n * @param {!Event} e\n * @return {boolean} True, if the Space key was pressed.\n */\njsaction.event.isSpaceKeyEvent \x3d function(e) {\n  var key \x3d e.which || e.keyCode || e.key;\n  var el \x3d jsaction.event.getTarget(e);\n  var elementName \x3d (el.type || el.tagName).toUpperCase();\n  return key \x3d\x3d jsaction.KeyCodes.SPACE \x26\x26 elementName !\x3d \x27CHECKBOX\x27;\n};\n\n\n/**\n * Determines whether the event corresponds to a non-bubbling mouse\n * event type (mouseenter and mouseleave).\n *\n * During mouseover (mouseenter), the relatedTarget is the element being\n * entered from. During mouseout (mouseleave), the relatedTarget is the\n * element being exited to.\n *\n * In both cases, if relatedTarget is outside target, then the corresponding\n * special event has occurred, otherwise it hasn\x27t.\n *\n * @param {!Event} e The mouseover/mouseout event.\n * @param {string} type The type of the mouse special event.\n * @param {!Element} element The element on which the jsaction for the\n *     mouseenter/mouseleave event is defined.\n * @return {boolean} True if the event is a mouseenter/mouseleave event.\n */\njsaction.event.isMouseSpecialEvent \x3d function(e, type, element) {\n  var related \x3d /** @type {!Node} */ (e.relatedTarget);\n\n  return ((e.type \x3d\x3d jsaction.EventType.MOUSEOVER \x26\x26\n           type \x3d\x3d jsaction.EventType.MOUSEENTER) ||\n          (e.type \x3d\x3d jsaction.EventType.MOUSEOUT \x26\x26\n           type \x3d\x3d jsaction.EventType.MOUSELEAVE)) \x26\x26\n      (!related || (related !\x3d\x3d element \x26\x26\n          !jsaction.dom.contains(element, related)));\n};\n\n\n/**\n * Creates a new EventLike object for a mouseenter/mouseleave event that\x27s\n * derived from the original corresponding mouseover/mouseout event.\n * @param {!Event} e The event.\n * @param {!Element} target The element on which the jsaction for the\n *     mouseenter/mouseleave event is defined.\n * @return {!Object} A modified event-like object copied from the event object\n *     passed into this function.\n */\njsaction.event.createMouseSpecialEvent \x3d function(e, target) {\n  // We have to create a copy of the event object because we need to mutate\n  // its fields. We do this for the special mouse events because the event\n  // target needs to be retargeted to the action element rather than the real\n  // element (since we are simulating the special mouse events with mouseover/\n  // mouseout).\n  //\n  // Since we\x27re making a copy anyways, we might as well attempt to convert\n  // this event into a pseudo-real mouseenter/mouseleave event by adjusting\n  // its type.\n  var copy \x3d {};\n  for (var i in e) {\n    if (typeof e[i] \x3d\x3d\x3d \x27function\x27 || i \x3d\x3d\x3d \x27srcElement\x27 || i \x3d\x3d\x3d \x27target\x27) {\n      continue;\n    }\n    copy[i] \x3d e[i];\n  }\n  if (e.type \x3d\x3d jsaction.EventType.MOUSEOVER) {\n    copy[\x27type\x27] \x3d jsaction.EventType.MOUSEENTER;\n  } else {\n    copy[\x27type\x27] \x3d jsaction.EventType.MOUSELEAVE;\n  }\n  copy[\x27target\x27] \x3d copy[\x27srcElement\x27] \x3d target;\n  copy[\x27bubbles\x27] \x3d false;\n  return copy;\n};\n\n\n/**\n * Returns touch data extracted from the touch event: clientX, clientY, screenX\n * and screenY. If the event has no touch information at all, the returned\n * value is null.\n *\n * The fields of this Object are unquoted.\n *\n * @param {!Event} event A touch event.\n * @return {?{clientX: number, clientY: number, screenX: number,\n *     screenY: number}}\n */\njsaction.event.getTouchData \x3d function(event) {\n  var touch \x3d (event.changedTouches \x26\x26 event.changedTouches[0]) ||\n      (event.touches \x26\x26 event.touches[0]);\n  if (!touch) {\n    return null;\n  }\n  return {\n    clientX: touch[\x27clientX\x27],\n    clientY: touch[\x27clientY\x27],\n    screenX: touch[\x27screenX\x27],\n    screenY: touch[\x27screenY\x27]\n  };\n};\n\n\n/**\n * Creates a new EventLike object for a \x22click\x22 event that\x27s derived from the\n * original corresponding \x22touchend\x22 event for a fast-click implementation.\n *\n * It takes a touch event, adds common fields found in a click event and\n * changes the type to \x27click\x27, so that the resulting event looks more like\n * a real click event.\n *\n * @param {!Event} event A touch event.\n * @return {!Object} A modified event-like object copied from the event object\n *     passed into this function.\n */\njsaction.event.recreateTouchEventAsClick \x3d function(event) {\n  var click \x3d {};\n  click[\x27originalEventType\x27] \x3d event.type;\n  click[\x27type\x27] \x3d jsaction.EventType.CLICK;\n  for (var p in event) {\n    var v \x3d event[p];\n    if (p !\x3d \x27type\x27 \x26\x26 p !\x3d \x27srcElement\x27 \x26\x26 !goog.isFunction(v)) {\n      click[p] \x3d v;\n    }\n  }\n\n  // TODO(ruilopes): b/18978823 - refactor constants in a enum\n  // Ensure that the event has the most recent timestamp. This timestamp\n  // may be used in the future to validate or cancel subsequent click events.\n  click[\x27timeStamp\x27] \x3d goog.now();\n\n  // Emulate preventDefault and stopPropagation behavior\n  click[\x27defaultPrevented\x27] \x3d false;\n  click[\x27preventDefault\x27] \x3d jsaction.event.syntheticPreventDefault_;\n  click[\x27_propagationStopped\x27] \x3d false;\n  click[\x27stopPropagation\x27] \x3d jsaction.event.syntheticStopPropagation_;\n\n  // Emulate click coordinates using touch info\n  var touch \x3d jsaction.event.getTouchData(event);\n  if (touch) {\n    click[\x27clientX\x27] \x3d touch.clientX;\n    click[\x27clientY\x27] \x3d touch.clientY;\n    click[\x27screenX\x27] \x3d touch.screenX;\n    click[\x27screenY\x27] \x3d touch.screenY;\n  }\n  return click;\n};\n\n\n/**\n * Returns whether the mouse-event canceling has been requested for this\n * event. Currently only defined for \x22touchend\x22 event.\n * @param {!Event} event A touch event.\n * @return {boolean}\n * @package\n */\njsaction.event.isMouseEventsPrevented \x3d function(event) {\n  return !!event[\x27_mouseEventsPrevented\x27];\n};\n\n\n/**\n * Instructs system to cancel mouse events that follow the specified touch\n * event. Currently only defined for \x22touchend\x22 event.\n * @param {!Event} event A touch event.\n * @package\n */\njsaction.event.preventMouseEvents \x3d function(event) {\n  event[\x27_mouseEventsPrevented\x27] \x3d true;\n};\n\n\n/**\n * An implementation of \x22_preventMouseEvents\x22 method to the specified event.\n * Delegates implementation to \x22jsaction.event.preventMouseEvents\x22.\n * @this {!Event}\n * @private\n */\njsaction.event.syntheticPreventMouseEvents_ \x3d function() {\n  jsaction.event.preventMouseEvents(this);\n};\n\n\n/**\n * Adds unobfuscated \x22_preventMouseEvents\x22 method to the Event. This method can\n * be further included in externs for compilation support. This method\n * starts with \x22_\x22 to prevent potential namespace conflict with standard Event\x27s\n * methods.\n * @param {!Event} event\n * @package\n */\njsaction.event.addPreventMouseEventsSupport \x3d function(event) {\n  event[\x27_preventMouseEvents\x27] \x3d jsaction.event.syntheticPreventMouseEvents_;\n};\n\n\n/**\n * An implementation of \x22preventDefault\x22 for a synthesized event. Simply\n * sets \x22defaultPrevented\x22 property to true.\n * @this {!Event}\n * @private\n */\njsaction.event.syntheticPreventDefault_ \x3d function() {\n  this[\x27defaultPrevented\x27] \x3d true;\n};\n\n\n/**\n * An implementation of \x22stopPropagation\x22 for a synthesized event. It simply\n * sets a synthetic non-standard \x22_propagationStopped\x22 property to true.\n * @this {!Event}\n * @private\n */\njsaction.event.syntheticStopPropagation_ \x3d function() {\n  this[\x27_propagationStopped\x27] \x3d true;\n};\n\n\n/**\n * Returns a copy of the event that is safe to keep a reference to.\n * For all non-IE browsers, it is safe to keep the existing event, but\n * since older versions of IE reuse and clobber the same Event object\n * each time a handler is called, we need to make an explicit copy.\n *\n * @param {!Event} e The event to be copied.\n * @return {!Event} The event copy.\n * TODO(mmudure): Add tests for this function.\n */\njsaction.event.maybeCopyEvent \x3d function(e) {\n  var doc \x3d goog.global[\x27document\x27];\n  // We test the following:\n  //\n  // The document may not exist in dom-less tests.\n  //\n  // The absence of document.createEvent signals that we\x27re on an\n  // older version of IE, which needs to copy the event.  In contrast,\n  // when document.createEvent is defined we do not have to copy.\n  //\n  // The method document.createEventObject, if present, is the IE supported\n  // way to copy the event but it should only be used in older versions of\n  // IE, ones which do not define document.createEvent.\n  //\n  // Doc.createEventObject fails for non-browser events (such as custom events),\n  // but those do not require copying, so we just return the existing event.\n  //\n  // NOTE(ruilopes): document.createEventObject is deprecated since IE 9. Its\n  // usage is disallowed in IE 9 standards document mode. More information at\n  // http://msdn.microsoft.com/en-us/library/ff986080(v\x3dvs.85)\n  if (doc \x26\x26 !doc.createEvent \x26\x26 doc.createEventObject) {\n    try {\n      return doc.createEventObject(e);\n    } catch (ignore) {\n      // Copying the event fails. Assume that this is because the event was\n      // not a browser event and thus does not require copying.\n      return e;\n    }\n  } else {\n    return e;\n  }\n};\n\n\n/**\n * Mapping of HTML element identifiers (ARIA role, type, or tagName) to the\n * keys (enter and/or space) that should activate them. A value of zero means\n * that both should activate them.\n * @const {!Object.\x3cstring, number\x3e}\n */\njsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING \x3d {\n  \x27A\x27: jsaction.KeyCodes.ENTER,\n  \x27BUTTON\x27: 0,\n  \x27CHECKBOX\x27: jsaction.KeyCodes.SPACE,\n  \x27COMBOBOX\x27: jsaction.KeyCodes.ENTER,\n  \x27GRIDCELL\x27: jsaction.KeyCodes.ENTER,\n  \x27LINK\x27: jsaction.KeyCodes.ENTER,\n  \x27LISTBOX\x27: jsaction.KeyCodes.ENTER,\n  \x27MENU\x27: 0,\n  \x27MENUBAR\x27: 0,\n  \x27MENUITEM\x27: 0,\n  \x27MENUITEMCHECKBOX\x27: 0,\n  \x27MENUITEMRADIO\x27: 0,\n  \x27OPTION\x27: 0,\n  \x27RADIO\x27: jsaction.KeyCodes.SPACE,\n  \x27RADIOGROUP\x27: jsaction.KeyCodes.SPACE,\n  \x27RESET\x27: 0,\n  \x27SUBMIT\x27: 0,\n  \x27TAB\x27: 0,\n  \x27TREE\x27: jsaction.KeyCodes.ENTER,\n  \x27TREEITEM\x27: jsaction.KeyCodes.ENTER\n};\n\n\n/**\n * Returns whether or not to process space based on the type of the element;\n * checks to make sure that type is not null.\n * @param {!Element} element The element.\n * @return {boolean} Whether or not to process space based on type.\n * @private\n */\njsaction.event.processSpace_ \x3d function(element) {\n  var type \x3d (element.getAttribute(\x27type\x27) || element.tagName).toUpperCase();\n  return type in jsaction.event.PROCESS_SPACE_;\n};\n\n\n/**\n * Returns whether or not the given element is a text control.\n * @param {!Element} el The element.\n * @return {boolean} Whether or not the given element is a text control.\n * @private\n */\njsaction.event.isTextControl_ \x3d function(el) {\n  var type \x3d (el.getAttribute(\x27type\x27) || el.tagName).toUpperCase();\n  return type in jsaction.event.TEXT_CONTROLS_;\n};\n\n\n/**\n * Returns if the given element is a native HTML control.\n * @param {!Element} el The element.\n * @return {boolean} If the given element is a native HTML control.\n */\njsaction.event.isNativeHTMLControl \x3d function(el) {\n  return el.tagName.toUpperCase() in jsaction.event.NATIVE_HTML_CONTROLS_;\n};\n\n\n/**\n * HTML \x3cinput\x3e types (not ARIA roles) which will auto-trigger a click event for\n * the Space key, with side-effects. We will not call preventDefault if space is\n * pressed, nor will we raise a11y click events.  For all other elements, we can\n * suppress the default event (which has no desired side-effects) and handle the\n * keydown ourselves.\n * @private @const {!Object\x3cstring, boolean\x3e}\n */\njsaction.event.PROCESS_SPACE_ \x3d {\n  \x27CHECKBOX\x27: true, \x27OPTION\x27: true, \x27RADIO\x27: true\n};\n\n\n/**\n * TagNames and Input types for which to not process enter/space as click.\n * @private @const {!Object\x3cstring, boolean\x3e}\n */\njsaction.event.TEXT_CONTROLS_ \x3d {\n  \x27COLOR\x27: true,\n  \x27DATE\x27: true,\n  \x27DATETIME\x27: true,\n  \x27DATETIME-LOCAL\x27: true,\n  \x27EMAIL\x27: true,\n  \x27MONTH\x27: true,\n  \x27NUMBER\x27: true,\n  \x27PASSWORD\x27: true,\n  \x27RANGE\x27: true,\n  \x27SEARCH\x27: true,\n  \x27TEL\x27: true,\n  \x27TEXT\x27: true,\n  \x27TEXTAREA\x27: true,\n  \x27TIME\x27: true,\n  \x27URL\x27: true,\n  \x27WEEK\x27: true\n};\n\n\n/**\n * TagNames that are native HTML controls.\n * @private @const {!Object\x3cstring, boolean\x3e}\n */\njsaction.event.NATIVE_HTML_CONTROLS_ \x3d {\n  \x27A\x27: true,\n  \x27AREA\x27: true,\n  \x27BUTTON\x27: true,\n  \x27DIALOG\x27: true,\n  \x27IMG\x27: true,\n  \x27INPUT\x27: true,\n  \x27LINK\x27: true,\n  \x27MENU\x27: true,\n  \x27OPTGROUP\x27: true,\n  \x27OPTION\x27: true,\n  \x27PROGRESS\x27: true,\n  \x27SELECT\x27: true,\n  \x27TEXTAREA\x27: true\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/event.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1r');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1r');

}catch(e){_DumpException(e)}
/* _Module_:sy1s */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1s');
var $googDebugFname="javascript/jsaction/actionflow.js";
eval("// Copyright 2008 Google Inc. All rights reserved.\n\n/**\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview An object that represents a user action. Currently\n * used to collect latency statistics for the activity. In order to do\n * this:.\n *\n *   1. Create an instance of this class whenever a user action begins\n *      to be handled.\n *\n *   2. During progress, call tick() in order to mark events whose\n *      times you want to record.\n *\n *   3. At the end of the flow of control, call done().\n *\n *   4. Whenever an asynchronous operation starts, call branch(). The\n *      flow of control branches there and continues concurrently. At\n *      the end of the asynchronous operation, call done() too.\n *\n * When done() is called for the constructor and each branch, a report\n * with the ticks is sent back to CSI or MFE, cf. stats.js.\n *\n * More generally, this class provides an Object representation for a\n * user action, and for the flow of the control of asynchronous\n * operations. More about these aspects in the designdoc:\n *\n *   \x3chttp://go/jsactiondesigndoc\x3e\n *\n * For details on the port of jsaction.ActionFlow see here\n *   \x3chttp://goto/statsflowport\x3e.\n */\n\ngoog.provide(\x27jsaction.ActionFlow\x27);\ngoog.provide(\x27jsaction.ActionFlow.Event\x27);\ngoog.provide(\x27jsaction.ActionFlow.EventType\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.events.Event\x27);\ngoog.require(\x27goog.events.EventTarget\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.style\x27);\ngoog.require(\x27jsaction.Attribute\x27);\ngoog.require(\x27jsaction.Branch\x27);\ngoog.require(\x27jsaction.Char\x27);\ngoog.require(\x27jsaction.Name\x27);\ngoog.require(\x27jsaction.Property\x27);\ngoog.require(\x27jsaction.Tick\x27);\ngoog.require(\x27jsaction.UrlParam\x27);\ngoog.require(\x27jsaction.event\x27);\n\n\n\n/**\n * Object wrapper around action flow that deals with overlapping action\n * flow instances and provides a nicer API than the procedural\n * API. The constructor implicitly records the start tick.\n *\n * @param {string} flowType For a ActionFlow that tracks a jsaction,\n *     this is the name of the jsaction, including the\n *     namespace. Otherwise it is whatever name the client application\n *     choses to track its actions by.\n * @param {Element\x3d} opt_node The node.\n * @param {Event\x3d} opt_event The event.\n * @param {number\x3d} opt_startTime The time at which the flow started,\n *     defaulting to the current time.\n * @param {?string\x3d} opt_eventType The jsaction event type, e.g. \x22click\x22.\n * @param {!Element\x3d} opt_target The event target\n * @constructor\n * @extends {goog.events.EventTarget}\n */\njsaction.ActionFlow \x3d function(\n    flowType, opt_node, opt_event, opt_startTime, opt_eventType, opt_target) {\n  jsaction.ActionFlow.base(this, \x27constructor\x27);\n\n  /**\n   * The flow type. For an ActionFlow instance that tracks a jsaction,\n   * this is the name of the jsaction including the jsnamespace. This\n   * is cleaned so that CSI likes it as an action name. TODO(mesch):\n   * However, this cleanup should be done at reporting time, and\n   * actually by the report event handler that formats the CSI\n   * request, not here.\n   * @type {string}\n   * @private\n   */\n  this.flowType_ \x3d flowType.replace(jsaction.ActionFlow.FLOWNAME_CLEANUP_RE_,\n      jsaction.ActionFlow.FLOWNAME_SAFE_CHAR_);\n\n  /**\n   * The flow type, without modification. Cf. flowType_, above.\n   * @type {string}\n   * @private\n   */\n  this.unobfuscatedFlowType_ \x3d flowType;\n\n  /**\n   * The node at which the jsaction originated, if any.\n   * @type {Element}\n   * @private\n   */\n  this.node_ \x3d opt_node || null;\n\n  /**\n   * The event which triggered the jsaction, or a copy thereof, if any.\n   * @type {Event}\n   * @private\n   */\n  this.event_ \x3d opt_event ? jsaction.event.maybeCopyEvent(opt_event) : null;\n\n  /**\n   * The jsaction event type.\n   * @type {?string}\n   * @private\n   */\n  this.eventType_ \x3d opt_eventType || null;\n\n  /**\n   * The target of the event.\n   * @type {?Element}\n   * @private\n   */\n  this.target_ \x3d opt_target || null;\n\n  if (!this.target_ \x26\x26 opt_event \x26\x26 opt_event.target \x26\x26\n      goog.dom.isElement(opt_event.target)) {\n    this.target_ \x3d /** @type {!Element} */ (opt_event.target);\n  }\n\n  /**\n   * The collection of timers, as an array of pairs of [name,value].\n   * There are two interfaces for timers: tick() records a timer as\n   * differences from start; intervalStart()/intervalEnd() records a\n   * timer as time difference between arbitrary points in time after\n   * start.  The array is kept sorted by the tick times.\n   * @type {!Array.\x3c!Array\x3e}\n   * @private\n   */\n  this.timers_ \x3d [];\n\n  /**\n   * A map from tick name to tick time (in absolute time).\n   * @type {!Object}\n   * @private\n   */\n  this.ticks_ \x3d {};\n\n  /**\n   * The start time, recorded in the constructor.\n   * @type {number}\n   * @private\n   */\n  this.start_ \x3d opt_startTime || goog.now();\n\n  /**\n   * The maximum tick time in absolute time.\n   * @type {number}\n   * @private\n   */\n  this.maxTickTime_ \x3d this.start_;\n\n  /**\n   * The opened branches and the number of times each branch was\n   * opened (i.e. how many times should done() be called for each\n   * particular branch).\n   * We initialize the main branch as opened (as the constructor itself\n   * is an implicit branch).\n   * @type {!Object.\x3cstring, number\x3e}\n   * @private\n   */\n  this.branches_ \x3d {};\n  this.branches_[jsaction.Branch.MAIN] \x3d 1;\n\n  /**\n   * The set of duplicate ticks. They are reported in extra data in the\n   * jsaction.Name.DUP key.\n   * @const {!Object}\n   * @private\n   */\n  this.duplicateTicks_ \x3d {};\n\n  /**\n   * A flag that indicates that a report was sent for this\n   * flow. Used for diagnosis of errors due to calls after the flow\n   * has finished.\n   * @type {boolean}\n   * @private\n   */\n  this.reportSent_ \x3d false;\n\n  /**\n   * Collects the data for jsaction tracking related to this ActionFlow\n   * instance that are extraced from the DOM context of the\n   * jsaction. Added by action().\n   * @type {!Object}\n   * @private\n   */\n  this.actionData_ \x3d {};\n\n  /**\n   * Collects additional data to be reported after action is done.\n   * The object contains string key-value pairs. Added by\n   * addExtraData().\n   * @type {!Object.\x3cstring, string\x3e}\n   * @private\n   */\n  this.extraData_ \x3d {};\n\n  /**\n   * Collects the data for log impressions related to this ActionFlow\n   * instance. Set by impression().\n   * @type {!Object}\n   * @private\n   */\n  this.impressionData_ \x3d {};\n\n  /**\n   * Flag that indicates if the flow was abandoned. If it was, no report will\n   * be sent when the flow completes.\n   * @type {boolean}\n   * @private\n   */\n  this.abandoned_ \x3d false;\n\n  /**\n   * A flag that indicates if the action is from a wiz controller, false if it\n   * is from a reactive controller or native event.\n   * @type {boolean}\n   * @private\n   */\n  this.isWiz_ \x3d false;\n\n  // If event is a click (plain or modified), generically track the\n  // action. Can possibly be extended to other event types.\n  //\n  // The handler of the action may modify the DOM context, which is\n  // included in the tracking information. Hence, it\x27s important to\n  // track the action *before* the handler executes.\n  //\n  // The flow must be fully constructed before calling action(),\n  // which relies at least on this.actionData_ being defined.\n  if (jsaction.ActionFlow.ENABLE_GENERIC_EVENT_TRACKING \x26\x26 opt_event \x26\x26\n        opt_node \x26\x26 opt_event[\x27type\x27] \x3d\x3d \x27click\x27) {\n    this.action(opt_node);\n  }\n\n  // We store all pending flows to make it easier to find a hung\n  // flow. This is effective only in debug.\n  jsaction.ActionFlow.registerInstance_(this);\n\n  /**\n   * A unique identifier for this flow.\n   * @type {number}\n   * @private\n   */\n  this.id_ \x3d ++jsaction.ActionFlow.nextId_;\n\n  // NOTE(joshharrison): Dispatching this event must always be the last line in\n  // the constructor so that listeners will receive an initialized flow.\n  var event \x3d new jsaction.ActionFlow.Event(\n      jsaction.ActionFlow.EventType.CREATED, this);\n  if (jsaction.ActionFlow.report !\x3d null) {\n    jsaction.ActionFlow.report.dispatchEvent(event);\n  }\n};\ngoog.inherits(jsaction.ActionFlow, goog.events.EventTarget);\n\n\n/**\n * @define {boolean} Whether to do generic event tracking based on the\n *     \x27oi\x27 attribute on action targets or their parent nodes.\n */\ngoog.define(\x27jsaction.ActionFlow.ENABLE_GENERIC_EVENT_TRACKING\x27, true);\n\n\n/**\n * A registry of action flow instances. This makes it easy to find hung\n * ones.\n * @type {!Array.\x3c!jsaction.ActionFlow\x3e}\n */\njsaction.ActionFlow.instances \x3d [];\n\n\n/**\n * Registers a new instance in the instances registry.\n * @param {!jsaction.ActionFlow} instance The instance (of course, gjslint).\n * @private\n */\njsaction.ActionFlow.registerInstance_ \x3d function(instance) {\n  jsaction.ActionFlow.instances.push(instance);\n};\n\n\n/**\n * Removes an instance from the instances registry when it\x27s\n * done.\n * @param {!jsaction.ActionFlow} instance The instance (of course, gjslint).\n * @private\n */\njsaction.ActionFlow.removeInstance_ \x3d function(instance) {\n  goog.array.remove(jsaction.ActionFlow.instances, instance);\n};\n\n\n/**\n * The dispatcher of the events that report about ActionFlow\n * instances. ActionFlow instances trigger events at the end of their\n * life for the application to handle, and e.g. send CSI and click\n * tracking reports. See jsaction.ActionFlow.Event for the event detail\n * data associated with such an event, and\n * jsaction.ActionFlow.EventType for the different events that are\n * fired.\n * If set to null, no reports will be sent.\n * @type {goog.events.EventTarget}\n */\njsaction.ActionFlow.report \x3d new goog.events.EventTarget;\n\n\n/**\n * CSI (see http://go/csi )\n * uses [.,] as a separators, so don\x27t allow them in the flow name. Also\n * don\x27t allow chars that could cause param confusion.\n *\n * MOE:begin_intracomment_strip\n * http://go/stats_reporting.js\n * See maps/webmaps/javascript/stats/stats_reporting.js for code that uses\n * ActionFlow with CSI.\n * MOE:end_intracomment_strip\n *\n * @type {RegExp}\n * @const\n * @private\n */\njsaction.ActionFlow.FLOWNAME_CLEANUP_RE_ \x3d /[~.,?\x26-]/g;\n\n\n/**\n * The character which we use to replace unsafe characters when\n * reporting to CSI.\n * @type {string}\n * @const\n * @private\n */\njsaction.ActionFlow.FLOWNAME_SAFE_CHAR_ \x3d \x27_\x27;\n\n\n/**\n * The marker for the last processed output template element.\n * @type {string}\n * @const\n * @private\n */\njsaction.ActionFlow.TEMPLATE_LAST_OUTPUT_MARKER_ \x3d \x27*\x27;\n\n\n/**\n * Errors reported by the action flow.\n * @enum {string}\n */\njsaction.ActionFlow.Error \x3d {\n  /**\n   * Method action() was called after the flow finished.\n   */\n  ACTION: \x27action\x27,\n\n  /**\n   * Method branch() was called after the flow finished.\n   */\n  BRANCH: \x27branch\x27,\n\n  /**\n   * Method done() was called after the flow finished or on a branch\n   * that was not pending.\n   */\n  DONE: \x27done\x27,\n\n  /**\n   * Method addExtraData() was called after the flow finished.\n   */\n  EXTRA_DATA: \x27extradata\x27,\n\n  /**\n   * Method impression() was called after the flow finished.\n   */\n  IMPRESSION: \x27impression\x27,\n\n  /**\n   * A tick was added on the flow after the flow finished.\n   */\n  TICK: \x27tick\x27,\n\n  /**\n   * Flow didn\x27t have done() called within a time threshold.\n   *\n   * NOTE: There is no detection of this error within the ActionFlow itself.\n   * It\x27s up to the ActionFlow client to implement detection and define the\n   * time threshold.\n   */\n  HUNG: \x27hung\x27\n};\n\n/**\n * A counter used for generating unique identifiers.\n * @type {number}\n * @private\n */\njsaction.ActionFlow.nextId_ \x3d 0;\n\nif (goog.DEBUG) {\n\n  /**\n   * Specifies the flow type we want to show logging for. Only messages for this\n   * flow will show up at the console.\n   * @type {Array.\x3cstring\x3e}\n   */\n  jsaction.ActionFlow.LOG_FOR_FLOW_TYPES \x3d [/* e.g. \x27application_link\x27, \x27*\x27 */];\n\n  /**\n   * Checks whether a particular value of flowType should be logged.\n   * @param {string} flowType The value of the flowType.\n   * @return {boolean} Whether we should log or not for this flow type.\n   */\n  jsaction.ActionFlow.shouldLog \x3d function(flowType) {\n    // This is very inefficient, but it\x27s debug time, so that\x27s okay and we\n    // prefer shorter simpler code.\n    for (var i \x3d 0; i \x3c jsaction.ActionFlow.LOG_FOR_FLOW_TYPES.length; i++) {\n      var flow \x3d jsaction.ActionFlow.LOG_FOR_FLOW_TYPES[i];\n      if (flow \x3d\x3d \x27*\x27 || flowType.indexOf(flow) \x3d\x3d 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n\n  /**\n   * A bit to flip to enable really verbose action flow logging or not.\n   * @param {string} msg The message to log.\n   * @private\n   */\n  jsaction.ActionFlow.prototype.log_ \x3d function(msg) {\n    if (jsaction.ActionFlow.shouldLog(this.flowType_)) {\n      if (window.console) {\n        window.console.log(this.flowType_ + \x27(\x27 + this.id_ + \x27): \x27 + msg);\n      }\n    }\n  };\n}\n\n/**\n * Returns a unique flow identifier.\n * @return {number} The unique flow identifier.\n */\njsaction.ActionFlow.prototype.id \x3d function() {\n  return this.id_;\n};\n\n\n/**\n * Mark this flow as abandoned. No report will be sent when the flow completes.\n */\njsaction.ActionFlow.prototype.abandon \x3d function() {\n  this.abandoned_ \x3d true;\n};\n\n\n/**\n * Mark this flow wraps a wiz event.\n */\njsaction.ActionFlow.prototype.setWiz \x3d function() {\n  this.isWiz_ \x3d true;\n};\n\n\n/**\n * @return {number} The starting tick.\n */\njsaction.ActionFlow.prototype.getStartTick \x3d function() {\n  return this.start_;\n};\n\n\n/**\n * Returns the absolute value of a tick or undefined if the tick hasn\x27t been\n * recorded.  Requesting the special \x27start\x27 tick returns the start timestamp.\n * If the tick was recorded multiple times the method will return the latest\n * value.\n * @param {string} name The name of the tick.\n * @return {number|undefined} The absolute value of the tick.\n */\njsaction.ActionFlow.prototype.getTick \x3d function(name) {\n  if (name \x3d\x3d jsaction.Name.START) {\n    return this.start_;\n  }\n  return this.ticks_[name];\n};\n\n\n/**\n * Returns a list of tick names for all ticks recorded in this ActionFlow.\n * May also include a \x27start\x27 name -- the \x27start\x27 tick contains the time\n * when the timer was created.\n * @return {Array} An array of tick names.\n */\njsaction.ActionFlow.prototype.getTickNames \x3d function() {\n  var tickNames \x3d [];\n  tickNames.push(jsaction.Name.START);\n\n  for (var i \x3d 0; i \x3c this.timers_.length; ++i) {\n    tickNames.push(this.timers_[i][0]);\n  }\n\n  return tickNames;\n};\n\n\n/**\n * Returns the largest tick time of all the ticks recorded so far.\n * @return {number} The max tick time in absolute time.\n */\njsaction.ActionFlow.prototype.getMaxTickTime \x3d function() {\n  return this.maxTickTime_;\n};\n\n\n/**\n * Adopts externally recorded action ticks. Must be invoked immediately\n * after constructor.\n *\n * @param {Object} timers The timers object is used as an associative\n *     container, where each attribute is a key/value pair of tick-label/\n *     tick-time. A tick labeled \x22start\x22 is assumed to exist and will be\n *     used as the flow\x27s start time.  All other ticks will be imported into\n *     the flow\x27s timers. If the start tick is missing no ticks are adopted\n *     into the action flow.\n *\n * @param {Object.\x3cstring, number\x3e\x3d} opt_branches The names and counts for all\n *    the opened branches.\n */\njsaction.ActionFlow.prototype.adopt \x3d function(timers, opt_branches) {\n  if (!timers || !goog.isDef(timers[jsaction.Name.START])) {\n    return;\n  }\n  this.start_ \x3d timers[jsaction.Name.START];\n  jsaction.ActionFlow.merge(this, timers);\n\n  if (opt_branches) {\n    // Method adopt() must be invoked immediately after the\n    // constructor, so the only open branch will be the constructor\n    // one. We can just copy the adopted branches over without\n    // worrying that we\x27ll overwrite.\n    goog.object.forEach(opt_branches, goog.bind(function(count, branch) {\n      this.branches_[branch] \x3d count;\n    }, this));\n  }\n};\n\n\n/**\n * Checks if the ActionFlow instance is of a given type.\n * @param {string} type Flow type.\n * @return {boolean} Whether the type matches.\n */\njsaction.ActionFlow.prototype.isOfType \x3d function(type) {\n  return this.flowType_ \x3d\x3d type.replace(\n      jsaction.ActionFlow.FLOWNAME_CLEANUP_RE_,\n      jsaction.ActionFlow.FLOWNAME_SAFE_CHAR_);\n};\n\n\n/**\n * Returns the type of the ActionFlow instance.\n * @return {string} Flow type.\n */\njsaction.ActionFlow.prototype.getType \x3d function() {\n  return this.flowType_;\n};\n\n\n/**\n * Sets the type of the ActionFlow instance. This can be used in cases where we\n * don\x27t know the type of action at the time we create the ActionFlow, e.g. when\n * a second click produces a doubleclick action. This method should be used\n * sparingly, if at all.\n * @param {string} flowType The flow type.\n */\njsaction.ActionFlow.prototype.setType \x3d function(flowType) {\n  this.flowType_ \x3d flowType.replace(jsaction.ActionFlow.FLOWNAME_CLEANUP_RE_,\n      jsaction.ActionFlow.FLOWNAME_SAFE_CHAR_);\n  this.unobfuscatedFlowType_ \x3d flowType;\n};\n\n\n/**\n * Records one tick. The tick value is relative to the start tick that\n * was recorded in the constructor.\n * @param {string} name The name of the tick.\n * @param {Object\x3d} opt_opts Options with the following optional fields:\n *     time: The timestamp, if it\x27s not goog.now().\n *     doNotReportToServer: If true, do not report this tick to the\n *         server (e.g. csi or mfe).  The tick can still be used in puppet\n *         tests.\n *     doNotIncludeInMaxTime: If true, do not use this tick when calculating\n *         \x27max time\x27 ticks, e.g. pdt, plt.\n */\njsaction.ActionFlow.prototype.tick \x3d function(name, opt_opts) {\n  if (this.reportSent_) {\n    this.error_(jsaction.ActionFlow.Error.TICK, undefined, name);\n  }\n\n  opt_opts \x3d opt_opts || {};\n\n  if (goog.DEBUG \x26\x26 this.reportSent_) {\n    this.log_(this.flowType_ + \x27: late tick \x27 + name);\n  }\n\n  // If we have already recorded this tick, note that.\n  if (name in this.ticks_) {\n    // The duplicate ticks will get reported in extra data in the dup key.\n    this.duplicateTicks_[name] \x3d true;\n  }\n\n  var time \x3d opt_opts.time || goog.now();\n  if (!opt_opts.doNotReportToServer \x26\x26\n      !opt_opts.doNotIncludeInMaxTime \x26\x26 time \x3e this.maxTickTime_) {\n    // Only ticks that are reported to the server should affect max tick time.\n    this.maxTickTime_ \x3d time;\n  }\n\n  var t \x3d time - this.start_;\n  var i \x3d this.timers_.length;\n\n  while (i \x3e 0 \x26\x26 this.timers_[i - 1][1] \x3e t) {\n    i--;\n  }\n\n  goog.array.insertAt(this.timers_, [name, t, opt_opts.doNotReportToServer], i);\n  this.ticks_[name] \x3d time;\n};\n\n\n/**\n * Ends a linear, non-branched fragment of the flow of\n * control. Decrements the expect counter and sends report if there\n * are no more done() calls outstanding.\n *\n * Since the end of the flow is a time when you want to record a tick,\n * this also takes an optional tick name.\n *\n * @param {string} branch The name of the branch that ends. Closes the\n *    flow opened by the branch() call with the same name. The\n *    implicit branch in the constructor has a reserved name\n *    (jsaction.Branch.MAIN).\n * @param {string\x3d} opt_tick Optional tick to record while we are at it.\n * @param {Object\x3d} opt_tickOpts An options object for the tick.\n */\njsaction.ActionFlow.prototype.done \x3d function(branch, opt_tick, opt_tickOpts) {\n  if (this.reportSent_ || !this.branches_[branch]) {\n    // Either the flow has finished or the branch is not pending.\n    this.error_(jsaction.ActionFlow.Error.DONE, branch, opt_tick);\n    return;\n  }\n\n  if (opt_tick) {\n    this.tick(opt_tick, opt_tickOpts);\n  }\n\n  this.branches_[branch]--;\n\n  if (this.branches_[branch] \x3d\x3d 0) {\n    // Branch is closed, remove it from the map.\n    delete this.branches_[branch];\n  }\n\n  if (goog.DEBUG) {\n    this.log_(\x27 \x3c done(\x27 + branch + \x27:\x27 + opt_tick + \x27)\x27);\n  }\n\n  if (goog.object.isEmpty(this.branches_)) {\n    if (goog.DEBUG) {\n      this.log_(\x27    \x3d report time \x27 + branch + \x27:\x27);\n    }\n\n    // Method report_() returns true if the DONE event was actually\n    // fired. Then we can finalize the instance.\n    if (this.report_()) {\n      this.reportSent_ \x3d true;\n      this.finish_();\n    }\n  }\n};\n\n\n/**\n * Called when no more done() calls are outstanding and after the DONE\n * event was fired.\n * @private\n */\njsaction.ActionFlow.prototype.finish_ \x3d function() {\n  jsaction.ActionFlow.removeInstance_(this);\n  this.node_ \x3d null;\n  this.event_ \x3d null;\n  this.dispose();\n};\n\n\n/**\n * Branches this flow, creating a subflow.  done() must be called on the\n * subflow.\n *\n * Branch announces an asynchronous operation, and that a done() call\n * will arrive asynchronously at some later time. This allows a\n * ActionFlow to account for multiple concurrent asynchronous\n * operations to finish in arbitrary order.\n *\n * Since the begin of an asynchronous operation is a time when you\n * want to record a tick, this also takes an optional tick name.\n *\n * @param {string} branch The name of the branch that is created. The\n *     corresponding done() should use the same name to signal that\n *     the branch has finished.\n * @param {string\x3d} opt_tick Optional tick to record while we are at.\n * @param {Object\x3d} opt_tickOpts Tick configuration object. See tick()\n *     for more details.\n */\njsaction.ActionFlow.prototype.branch \x3d\n    function(branch, opt_tick, opt_tickOpts) {\n  if (this.reportSent_) {\n    // Branch was called after the report was called. Trigger an error report.\n    this.error_(jsaction.ActionFlow.Error.BRANCH, branch, opt_tick);\n  }\n\n  if (goog.DEBUG) {\n    this.log_(\x27\x3e branch(\x27 + branch + \x27:\x27 + opt_tick + \x27)\x27);\n  }\n\n  if (opt_tick) {\n    this.tick(opt_tick, opt_tickOpts);\n  }\n\n  if (this.branches_[branch]) {\n    this.branches_[branch]++;\n  } else {\n    this.branches_[branch] \x3d 1;\n  }\n};\n\n\n/**\n * Returns the current timers. Mostly for testing, but may become the\n * primary interface to obtain timers, and relegate reporting to a\n * library function.  Note that the array is sorted by tick times.\n * @return {!Array} Timers.\n */\njsaction.ActionFlow.prototype.timers \x3d function() {\n  return this.timers_;\n};\n\n\n/**\n * Returns the branchs registry. Mostly for testing.\n * @return {!Object} Branches.\n */\njsaction.ActionFlow.prototype.branches \x3d function() {\n  return this.branches_;\n};\n\n\n/**\n * First triggers a BEFOREDONE event on this ActionFlow instance. This\n * can be used for example to add additional ticks to a ActionFlow\n * instance right before sending the report, or even to create a fresh\n * branch, in which case the event handler must cancel the event.\n *\n * If the BEFOREDONE event was not cancelled, sends the DONE event on\n * the ActionFlow class. Usually this is handled by the reporting code\n * of the application, which sends one or more reports to the server.\n *\n * The Event instance is shared between BEFOREDONE and DONE.\n *\n * @return {boolean} Whether the flow is really done and can be\n *     disposed.\n * @private\n */\njsaction.ActionFlow.prototype.report_ \x3d function() {\n  if (!jsaction.ActionFlow.report) {\n    return true;\n  }\n\n  if (this.abandoned_) {\n    var event \x3d new jsaction.ActionFlow.Event(\n        jsaction.ActionFlow.EventType.ABANDONED, this);\n    this.dispatchEvent(event);\n    jsaction.ActionFlow.report.dispatchEvent(event);\n    return true;\n  }\n\n  let sep \x3d \x27\x27;\n  let dup \x3d \x27\x27;\n  for (var k in this.duplicateTicks_) {\n    if (this.duplicateTicks_.hasOwnProperty(k)) {\n      dup \x3d dup + sep + k;\n      sep \x3d \x27|\x27;\n    }\n  }\n  if (dup) {\n    this.extraData_[jsaction.Name.DUP] \x3d dup;\n  }\n\n  event \x3d new jsaction.ActionFlow.Event(\n      jsaction.ActionFlow.EventType.BEFOREDONE, this);\n\n  // BEFOREDONE fires on both the instance and the class.\n  if (!this.dispatchEvent(event) ||\n      !jsaction.ActionFlow.report.dispatchEvent(event)) {\n    return false;\n  }\n\n  // Must come after the BEFOREDONE event fires because event handlers\n  // can add additional data.\n  var cad \x3d jsaction.ActionFlow.foldCadObject_(this.extraData_);\n  if (cad) {\n    this.actionData_[jsaction.UrlParam.CLICK_ADDITIONAL_DATA] \x3d cad;\n  }\n\n  event.type \x3d jsaction.ActionFlow.EventType.DONE;\n  return jsaction.ActionFlow.report.dispatchEvent(event);\n};\n\n\n/**\n * Triggers an error report if:\n * - data is added to the flow after it finished (e.g via tick(),\n *   addExtraData(), etc)\n * - branch/done are called after the flow finished\n * - done is called on a branch that is not open\n * The error report will contain the timing data of the flow and the current\n * opened branches. If the error was triggered by an incorrect branch/done call\n * the name of the branch is passed in and included in the report as well.\n *\n * @param {jsaction.ActionFlow.Error} error The type of error that\n *     triggered the report.\n * @param {string\x3d} opt_branch If the error comes due to an incorrect\n *     call to branch/done, this is the name of the branch.\n * @param {string\x3d} opt_tick If the call that triggered the error has a tick\n *     (i.e. tick()/branch()/done()) this is the name of the tick.\n * @private\n */\njsaction.ActionFlow.prototype.error_ \x3d function(error, opt_branch, opt_tick) {\n  if (!jsaction.ActionFlow.report) {\n    return;\n  }\n  var event \x3d new jsaction.ActionFlow.Event(\n      jsaction.ActionFlow.EventType.ERROR, this);\n  event.error \x3d error;\n  event.branch \x3d opt_branch;\n  event.tick \x3d opt_tick;\n  event.finished \x3d this.reportSent_;\n  jsaction.ActionFlow.report.dispatchEvent(event);\n};\n\n\n/**\n * Folds a key-value data object into a string to be used as \x22cad\x22\n * URL parameter value. Keys and values are separated by colons, and\n * key-value pairs are separated by commas. Both keys and values\n * are escaped with encodeURIComponent to prevent them from having\n * unescaped separator characters. Empty data object will produce\n * empty string.\n *\n * Example:\n *   \x22key1:value1,key2:value2\x22\n *\n * @param {Object.\x3cstring, string\x3e} object Data object containing of key-value\n *    pairs. Both key and value must be strings.\n * @return {string} The string representation of the object suitable\n *    for \x22cad\x22 URL parameter value.\n * @private\n */\njsaction.ActionFlow.foldCadObject_ \x3d function(object) {\n  var cadArray \x3d [];\n  goog.object.forEach(object, function(value, key) {\n    var escKey \x3d encodeURIComponent(key);\n    // Don\x27t escape \x27|\x27 to make it a practical character to use as a separator\n    // within the value.\n    var escValue \x3d encodeURIComponent(value).replace(/%7C/g, \x27|\x27);\n    cadArray.push(escKey + jsaction.Char.CAD_KEY_VALUE_SEPARATOR + escValue);\n  });\n\n  return cadArray.join(jsaction.Char.CAD_SEPARATOR);\n};\n\n\n/**\n * Logs the tracking of jsactions, e.g. click event. It traverses the\n * DOM tree from the target element on which the action is initiated\n * upwards to the document.body, collects the values of the custom\n * attribute \x27oi\x27 attached on the nodes along the path, and then\n * concatenates them as a dotted string that is set to the URL\n * parameter \x27oi\x27 of the log request sent to MFE. When \x27ved\x27 custom\n * attribute is found in the DOM tree, it is set to the URL parameter\n * \x27ved\x27 of the log request.\n *\n * The log record will be created only if there is jstrack is\n * specified on the target element or up its DOM tree. If jstrack is\n * not \x221\x22, the value of jstrack is used as the log event ID.\n *\n * An example: for a DOM tree\n *   \x3cdiv jstrack\x3d\x221\x22\x3e\n *     ...\n *     \x3cdiv oi\x3d\x22tag1\x22\x3e\n *       \x3cdiv oi\x3d\x22tag2\x22 jsaction\x3d\x22action2\x22 jsinstance\x3d\x22x\x22\x3e\x3c/div\x3e\n *     \x3c/div\x3e\n *     ...\n *   \x3c/div\x3e\n * MOE:begin_intracomment_strip\n * when action2 is triggered, the log request will be:\n * /maps/gen_204?oi\x3djsaction\x26ct\x3daction2\x26cd\x3dx\x26cad\x3dtag1.tag2\x26...\n * MOE:end_intracomment_strip\n *\n * @param {Element} target The DOM element the action is acted on.\n */\njsaction.ActionFlow.prototype.action \x3d function(target) {\n  if (this.reportSent_) {\n    this.error_(jsaction.ActionFlow.Error.ACTION);\n  }\n\n  var ois \x3d [];\n  var jsinstance \x3d null;\n  var jstrack \x3d null;\n  var ved \x3d null;\n  var vet \x3d null;\n\n  jsaction.ActionFlow.visitDomNodesUpwards_(target, function(element) {\n    var oi \x3d jsaction.ActionFlow.getOi_(element);\n    if (oi) {\n      ois.unshift(oi);\n      // Find the 1st node with the jsinstance attribute.\n      if (!jsinstance) {\n        jsinstance \x3d element.getAttribute(jsaction.Attribute.JSINSTANCE);\n      }\n    }\n    // We should not try to find a ved outside of the scope of the EventId we\n    // found. If jstrack is present and different from \x271\x27, it is assumed to be\n    // an EventId. Imagine the following case:\n    //\n    // \x3cdiv jstrack\x3deventid1 ved\x3dved1\x3e\n    //   \x3cdiv jstrack\x3deventid2\x3e\n    //     \x3cdiv ved\x3dved2\x3eImagine we do not touch this div.\x3c/div\x3e\n    //     \x3cdiv jsaction\x3dlog.my_action\x3eBut we interact with this div.\x3c/div\x3e\n    //   \x3c/div\x3e\n    // \x3c/div\x3e\n    //\n    // In that case, we would report (eventid2, ved1), which is wrong because\n    // ved1 is relative to eventid1, not eventid2.\n    // As soon as we have found eventid2, we should stop looking for a ved.\n    if (!ved \x26\x26 (!jstrack || jstrack \x3d\x3d \x271\x27)) {\n      ved \x3d element.getAttribute(jsaction.Attribute.VED);\n    }\n    if (!vet) {\n      vet \x3d element.getAttribute(jsaction.Attribute.VET);\n    }\n    if (!jstrack) {\n      jstrack \x3d element.getAttribute(jsaction.Attribute.JSTRACK);\n    }\n  });\n\n  if (vet) {\n    this.actionData_[jsaction.UrlParam.VISUAL_ELEMENT_TYPE] \x3d vet;\n  }\n\n  // Record no other action data if we found no jstrack.\n  if (!jstrack) {\n    return;\n  }\n\n  this.actionData_[jsaction.UrlParam.CLICK_TYPE] \x3d this.flowType_;\n\n  if (ois.length \x3e 0) {\n    this.addExtraData(\n        jsaction.Attribute.OI,\n        ois.join(jsaction.Char.OI_SEPARATOR));\n  }\n\n  if (jsinstance) {\n    if (jsinstance.charAt(0) \x3d\x3d\n        jsaction.ActionFlow.TEMPLATE_LAST_OUTPUT_MARKER_) {\n      jsinstance \x3d parseInt(jsinstance.substr(1), 10);\n    } else {\n      jsinstance \x3d parseInt(/** @type {string} */(jsinstance), 10);\n    }\n    this.actionData_[jsaction.UrlParam.CLICK_DATA] \x3d jsinstance;\n  }\n\n  if (jstrack !\x3d \x271\x27) {\n    // Use jstrack as the log event ID.\n    this.actionData_[jsaction.UrlParam.EVENT_ID] \x3d jstrack;\n  }\n\n  // A ved parameter only makes sense if we found a corresponding EventId in the\n  // DOM. However, we always put it in the ActionData, so that we can detect the\n  // issue and report it.\n  if (ved) {\n    this.actionData_[jsaction.UrlParam.VISUAL_ELEMENT_CLICK] \x3d ved;\n  }\n};\n\n\n/**\n * Sets the event id action data field, if it is not already set.  This is\n * useful for ActionFlows that do not originate from a DOM tree that has a\n * specified event id.\n * @param {string} ei The event id.\n */\njsaction.ActionFlow.prototype.maybeSetEventId \x3d function(ei) {\n  if (!this.actionData_[jsaction.UrlParam.EVENT_ID]) {\n    this.actionData_[jsaction.UrlParam.EVENT_ID] \x3d ei;\n  }\n};\n\n\n/**\n * Adds custom key-value pair to the action log record within\n * the cad parameter value.  When the log record\n * is sent, the pairs are converted to a string of the form:\n * \x22key1:value1,key2:value2,...\x22.\n * The key-value pairs will be added to the cad parameter value\n * in no particular order.\n * @see jsaction.ActionFlow#foldCadObject_\n *\n * @param {string} key Key.\n * @param {string} value Value.\n */\njsaction.ActionFlow.prototype.addExtraData \x3d function(key, value) {\n  if (this.reportSent_) {\n    this.error_(jsaction.ActionFlow.Error.EXTRA_DATA);\n  }\n\n  // Replace all deliminators \x27:\x27, \x27:\x27, and \x27,\x22 used by CAD with\n  // underscores. Also replace white space with underscore.\n  this.extraData_[key] \x3d value.toString().replace(/[:;,\\s]/g, \x27_\x27);\n};\n\n\n/**\n * Gets the extra data as set by addExtraData().\n *\n * @return {Object!} The extra data object.\n */\njsaction.ActionFlow.prototype.getExtraData \x3d function() {\n  return this.extraData_;\n};\n\n\n/**\n * Gets the data collected by the call to action() from the\n * constructor.\n *\n * @return {Object!} The action data object.\n */\njsaction.ActionFlow.prototype.getActionData \x3d function() {\n  return this.actionData_;\n};\n\n\n/**\n * Gets the data collected by the call to impression().\n *\n * @return {Object!} The impression data object.\n */\njsaction.ActionFlow.prototype.getImpressionData \x3d function() {\n  return this.impressionData_;\n};\n\n\n/**\n * Collects impression data when a jstemplate is rendered. It\n * traverses the DOM tree rooted from the target node downwards,\n * aggregates the number of nodes with the same hierarchical\n * impression key, and appends them to the \x27imp\x27 parameter of the log\n * request sent to MFE.\n *\n * An example: for a DOM tree\n *   \x3cdiv oi\x3d\x22tag1\x22\x3e\n *      \x3cdiv oi\x3d\x22tag2\x22 jsinstance\x3d\x221\x22\x3e\x3c/div\x3e\n *      \x3cdiv oi\x3d\x22tag2\x22 jsinstance\x3d\x22*2\x22\x3e\x3c/div\x3e\n *   \x3c/div\x3e\n *\n * when the template is rendered, the log request will be:\n * /maps/gen_204?imp\x3djsaction,tag1:1,tag1.tag2:2...\n *\n * @param {Element} target The DOM container element of the template.\n */\njsaction.ActionFlow.prototype.impression \x3d function(target) {\n  if (this.reportSent_) {\n    this.error_(jsaction.ActionFlow.Error.IMPRESSION);\n  }\n\n  this.tick(jsaction.Tick.IMP0);\n\n  var ois \x3d [];\n  if (target.parentNode) {\n    jsaction.ActionFlow.visitDomNodesUpwards_(\n        target.parentNode, function(element) {\n          var oi \x3d jsaction.ActionFlow.getOi_(element);\n          if (oi) {\n            ois.unshift(oi);\n          }\n        });\n  }\n\n  var oiCounters \x3d this.impressionData_;\n\n  /**\n   * The callback to be called when visiting a node.\n   *\n   * @param {Element} node The DOM node to be visited.\n   * @return {boolean} Whether some cleanup shall be done on calling\n   *     context before leaving the node.\n   */\n  var enterFn \x3d function(node) {\n    var oi \x3d jsaction.ActionFlow.getOi_(node);\n    if (oi) {\n      ois.push(oi);\n\n      var fullOi \x3d ois.join(jsaction.Char.OI_SEPARATOR);\n      if (!oiCounters[fullOi]) {\n        oiCounters[fullOi] \x3d 0;\n      }\n      oiCounters[fullOi]++;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * The callback to be called when leaving a node.\n   */\n  var leaveFn \x3d function() {\n    ois.pop();\n  };\n\n  jsaction.ActionFlow.visitDomNodesDownwards_(target, enterFn, leaveFn);\n\n  this.tick(jsaction.Tick.IMP1);\n};\n\n\n/**\n * Checks whether the impression data whose tags match the given\n * pattern exist.\n *\n * @param {RegExp} pattern The regular expression to be matched with\n * impression tags.\n * @return {boolean} True if the impression data are not empty.\n */\njsaction.ActionFlow.prototype.hasImpression \x3d function(pattern) {\n  for (var tag in this.impressionData_) {\n    if (tag.match(pattern)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Traverses the DOM tree from the start node upwards, and invokes the\n * callback provided on each node visited. Stops at document.body.\n *\n * @param {Node} start The node the traversal starts from.\n * @param {function(!Element)} visitFn The callback to be invoked on each\n *     visited node.\n * @private\n */\njsaction.ActionFlow.visitDomNodesUpwards_ \x3d function(start, visitFn) {\n  for (var node \x3d start; node \x26\x26 node.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n      node \x3d node.parentNode) {\n    visitFn(/** @type {!Element} */ (node));\n  }\n};\n\n\n/**\n * Traverses the DOM tree from the start node downwards, and invokes\n * the callbacks provided when entering a node or leaving it.\n *\n * @param {Element} start The node the traversal starts from.\n * @param {Function} enterFn The callback to be invoked when visiting\n *     a node.\n * @param {Function} leaveFn The callback to be invoked when tracing\n *     back to the parent of a node. enterFn returns a boolean value that\n *     indicates whether leaveFn must be invoked or not.\n * @private\n */\njsaction.ActionFlow.visitDomNodesDownwards_ \x3d\n    function(start, enterFn, leaveFn) {\n  if (!goog.dom.isElement(start) ||\n      goog.style.getStyle(start, \x27display\x27) \x3d\x3d \x27none\x27 ||\n      goog.style.getStyle(start, \x27visibility\x27) \x3d\x3d \x27hidden\x27) {\n    // Hidden elements are not counted as impressions.\n    return;\n  }\n\n  var postCallbackNeeded \x3d enterFn(start);\n\n  for (var node \x3d start.firstChild; node; node \x3d node.nextSibling) {\n    jsaction.ActionFlow.visitDomNodesDownwards_(\n        /** @type {Element} */(node),\n        enterFn, leaveFn);\n  }\n\n  if (postCallbackNeeded) {\n    leaveFn();\n  }\n};\n\n\n/**\n * Returns the value of the attribute \x27oi\x27 attached to the designated node.\n *\n * @param {Element} node The DOM node to be checked.\n * @return {?string} The value of the attribute \x27oi\x27.\n * @private\n */\njsaction.ActionFlow.getOi_ \x3d function(node) {\n  if (!node[jsaction.Property.OI] \x26\x26 node.getAttribute) {\n    node[jsaction.Property.OI] \x3d node.getAttribute(jsaction.Attribute.OI);\n  }\n  return node[jsaction.Property.OI];\n};\n\n\n/**\n * Calls tick on provided flow object if it is defined.\n *\n * @param {jsaction.ActionFlow|undefined} flow The jsaction.ActionFlow object.\n * @param {string} tick The tick name.\n * @param {number\x3d} opt_time The timestamp, if it\x27s not goog.now().\n * @param {Object\x3d} opt_opts Options.  See ActionFlow.tick for details.\n */\njsaction.ActionFlow.tick \x3d function(flow, tick, opt_time, opt_opts) {\n  if (flow) {\n    var opts \x3d opt_opts || {};\n    opts.time \x3d opts.time || opt_time;\n    // Technically we do not need to specify doNotReportToServer or\n    // doNotIncludeMaxTime here since the default is false, but\n    // jscompiler otherwise generates an error in tick() above about\n    // the property being read but never set unless we set it\n    // somewhere. So we set it here to silence that error.\n    opts.doNotReportToServer \x3d !!opts.doNotReportToServer;\n    opts.doNotIncludeInMaxTime \x3d !!opts.doNotIncludeInMaxTime;\n    flow.tick(tick, opts);\n  }\n};\n\n\n/**\n * Calls branch on provided flow object if it is defined.\n *\n * @param {jsaction.ActionFlow|undefined} flow The jsaction.ActionFlow object.\n * @param {string} branch The name of the branch that is created. The\n *    corresponding done() should use the same name to signal that the\n *    branch has finished.\n * @param {string\x3d} opt_tick The tick name.\n * @param {Object\x3d} opt_tickOpts The options for the tick.\n */\njsaction.ActionFlow.branch \x3d function(flow, branch, opt_tick, opt_tickOpts) {\n  if (flow) {\n    flow.branch(branch, opt_tick, opt_tickOpts);\n  }\n};\n\n\n/**\n * Calls done on provided flow object with optional tick if it is defined.\n *\n * @param {jsaction.ActionFlow|undefined} flow The jsaction.ActionFlow object.\n * @param {string} branch The name of the branch that ends. Closes the\n *    flow opened by the branch() call with the same name. The\n *    implicit branch in the constructor has a reserved name\n *    (jsaction.Branch.MAIN).\n * @param {string} opt_tick The tick name.\n * @param {Object} opt_tickOpts The options for the tick.\n */\njsaction.ActionFlow.done \x3d function(flow, branch, opt_tick, opt_tickOpts) {\n  if (flow) {\n    flow.done(branch, opt_tick, opt_tickOpts);\n  }\n};\n\n\n/**\n * Merges externally recorded flow ticks. The start time of the flow\n * is not changed (\x22start\x22 tick is skipped.).\n *\n * @param {jsaction.ActionFlow} flow The ActionFlow to tick.\n * @param {Object} timers Timers as an associative container where each\n * attribute is a key/value pair of tick-label/ tick-time.  All other ticks\n * except \x22start\x22 tick will be imported into the flow\x27s timers.\n */\njsaction.ActionFlow.merge \x3d function(flow, timers) {\n  if (!timers) {\n    return;\n  }\n  goog.object.forEach(timers, function(value, name) {\n    if (name !\x3d jsaction.Name.START) {\n      flow.tick(name, { time: value });\n    }\n  });\n};\n\n\n/**\n * Calls addExtraData on the given flow object if it is defined.\n *\n * @param {jsaction.ActionFlow|undefined} flow The jsaction.ActionFlow object.\n * @param {string} key The key to add.\n * @param {string} value The value for the given key.\n */\njsaction.ActionFlow.addExtraData \x3d function(flow, key, value) {\n  if (flow) {\n    flow.addExtraData(key, value);\n  }\n};\n\n\n/**\n * Returns the flow type of the jsaction for which this flow was created.\n * @return {string} The flow type.\n */\njsaction.ActionFlow.prototype.flowType \x3d function() {\n  return this.unobfuscatedFlowType_;\n};\n\n\n/**\n * Returns the namespace of the jsaction.\n * @return {string} The namespace. If the jsaction doesn\x27t have a namespace,\n *     the empty string.\n */\njsaction.ActionFlow.prototype.actionNamespace \x3d function() {\n  var type \x3d this.unobfuscatedFlowType_;\n  return type.substr(0, type.indexOf(jsaction.Char.NAMESPACE_ACTION_SEPARATOR));\n};\n\n\n/**\n * Returns a actionflow tracked callback that will call the given function and\n * done() on the action flow. Calls branch() with the given branch name.  If\n * the optional ticks are supplied they will be called on branch() and done()\n * respectively.\n *\n * Example:\n * var myCallback \x3d function() {\n * ...\n * };\n * ....\n * setTimeout(flow.callback(myCallback, \x27branchfoo\x27, \x27tick0\x27, \x27tick1\x27), 0);\n *\n * @param {!Function} fn The callback that we want to track with the current\n *    actionflow.\n * @param {string} branchName The name of the branch to be opened before the\n *    callback is used. The branch will be closed when the tracked callback\n *    returned by this method is called.\n * @param {string\x3d} opt_branchTick An optional tick to be called on branch.\n * @param {string\x3d} opt_doneTick An optional tick to be called on done.\n * @return {!Function} The tracked callback.\n */\njsaction.ActionFlow.prototype.callback \x3d\n    function(fn, branchName, opt_branchTick, opt_doneTick) {\n  this.branch(branchName, opt_branchTick);\n  var flow \x3d this;\n  return function() {\n    try {\n      var ret \x3d fn.apply(this, arguments);\n    } finally {\n      flow.done(branchName, opt_doneTick);\n    }\n    return ret;\n  };\n};\n\n\n/**\n * Returns the node associated with this jsaction.ActionFlow.\n *\n * When a jsaction.ActionFlow created, the node is always set. The node is set\n * to null when the ActionFlow report is sent and should not be accessed\n * after that.\n *\n * In opt, this returns null if the node is not set. In debug, we\n * fail immediately.\n *\n * @return {Element} The node.\n */\njsaction.ActionFlow.prototype.node \x3d function() {\n  return this.node_;\n};\n\n\n/**\n * Returns the event associated with this ActionFlow.\n *\n * When a jsaction.ActionFlow created, the event (copy) is always\n * set. The event is set to null when the ActionFlow report is sent and\n * should not be accessed after that.\n *\n * In opt, this returns null if the event is not set. In debug, we\n * fail immediately.\n *\n * @return {Event} The event.\n */\njsaction.ActionFlow.prototype.event \x3d function() {\n  return this.event_;\n};\n\n\n/**\n * Returns the jsaction event type as specified in the jsaction attribute,\n * which may be different from the type obtained from the event.\n *\n * @return {?string} Event type.\n */\njsaction.ActionFlow.prototype.eventType \x3d function() {\n  return this.eventType_;\n};\n\n\n/**\n * Returns the target of the event.\n *\n * This is provided as a separate function from event().target because in some\n * cases, the target becomes null on an Event after a JavaScript tick (such as\n * the load event).\n *\n * @return {?Element}\n */\njsaction.ActionFlow.prototype.target \x3d function() {\n  return this.target_;\n};\n\n\n/**\n * Returns values of properties or attributes stored on the node or\n * undefined if the node is not set.\n * @param {string} key The name of the property or attribute being\n *     asked for.\n * @return {*} The value of the property or attribute.\n */\njsaction.ActionFlow.prototype.value \x3d function(key) {\n  var node \x3d this.node_;\n  return !node ? undefined :\n      key in node ? node[key] :\n      // HACK(mesch): The getAttribute check protects against gratuitous mocks.\n      node.getAttribute ? node.getAttribute(key) : undefined;\n};\n\n\n/**\n * @return {number} The queueing delay in milliseconds if the event has been\n *     queued in the EventContract, waiting for the javascript handler, 0\n *     otherwise.\n */\njsaction.ActionFlow.prototype.getDelay \x3d function() {\n  return (this.event_ \x26\x26 this.event_.originalTimestamp) ?\n      (this.isWiz_ ? (goog.now() - this.event_.originalTimestamp) :\n                     (this.event_.timeStamp - this.event_.originalTimestamp)) :\n      0;\n};\n\n\n/**\n * Event detail object for all the events defined above. This object\n * contains the action flow instance that fired it. It\x27s not the event\n * target, because the ActionFlow instances fires their events on\n * ActionFlow.report, where the application can actually listen for\n * them.\n *\n * The event handlers can inquiry the source ActionFlow instance for\n * the actual details.\n *\n * @param {jsaction.ActionFlow.EventType} type The type of event.\n * @param {!jsaction.ActionFlow} flow The instance that fires this event.\n * @constructor\n * @extends {goog.events.Event}\n */\njsaction.ActionFlow.Event \x3d function(type, flow) {\n  goog.events.Event.call(this, type, flow);\n  this.flow \x3d flow;\n};\ngoog.inherits(jsaction.ActionFlow.Event, goog.events.Event);\n\n\n/**\n * The ActionFlow instance that fired this event. This is also set as\n * target, but as flow it\x27s properly typed.\n * @type {!jsaction.ActionFlow}\n */\njsaction.ActionFlow.Event.prototype.flow;\n\n\n/**\n * If type is ERROR, contains the error condition.\n * @type {(jsaction.ActionFlow.Error|undefined)}\n */\njsaction.ActionFlow.Event.prototype.error;\n\n\n/**\n * If type is ERROR, optionally contains the branch where the error\n * condition occurred.\n * @type {(string|undefined)}\n */\njsaction.ActionFlow.Event.prototype.branch;\n\n\n/**\n * If type is ERROR, optionally it contains the name of the tick that was being\n * recorded when the error occurred.\n * @type {(string|undefined)}\n */\njsaction.ActionFlow.Event.prototype.tick;\n\n\n/**\n * If type is error, includes whether the flow had finished when the error\n * occurred.\n * @type {boolean}\n */\njsaction.ActionFlow.Event.prototype.finished;\n\n\n/**\n * Events fired by ActionFlow instances.\n * @enum {string}\n */\njsaction.ActionFlow.EventType \x3d {\n  /**\n   * Fired when a flow is created. This event cannot be canceled, and so the\n   * return type of the handler is inconsequential. Because the event is\n   * triggered inside the ActionFlow constructor, handlers will be called\n   * synchronously with the new ActionFlow instance. Also because the triggering\n   * happens inside the constructor, the event is only fired on\n   * jsaction.ActionFlow.report.\n   */\n  CREATED: \x27created\x27,\n\n  /**\n   * Fired when the flow is done and before the DONE event is\n   * fired. If a handler cancels the default action, then no DONE\n   * event is fired, and the ActionFlow is not disposed of. This must\n   * happen if a beforedone handler calls branch().\n   */\n  BEFOREDONE: \x27beforedone\x27,\n\n  /**\n   * Fired when the flow is done and no BEFOREDONE handler cancelled\n   * the event.\n   */\n  DONE: \x27done\x27,\n\n  /**\n   * Fired when the flow is done if abandon() was called on the flow.\n   * Neither BEFOREDONE nor DONE are fired for abandoned flows.\n   */\n  ABANDONED: \x27abandoned\x27,\n\n  /**\n   * Fired whenever an error occurs. Can be handled even in production\n   * to obtain error reports from deployed code. Specifically, it\x27s\n   * called when the following conditions ooccur:\n   *\n   * - branch/done/tick/addActionData/action/impression are called\n   *   after the flow finished, or\n   *\n   * - done called on a branch that is not pending.\n   *\n   * - an action flow client detects a suspected HUNG flow.\n   */\n  ERROR: \x27error\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/actionflow.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1s');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1s');

}catch(e){_DumpException(e)}
/* _Module_:sy1t */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1t');
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/gws_action_flow.js";
eval("/**\n * @fileoverview A custom ActionFlow that stores the original eventInfo so that\n * we can reuse it when passing it from Wiz\x27s dispatcher to the GWS dispatcher.\n */\ngoog.provide(\x27gws.jsaction.GwsActionFlow\x27);\n\ngoog.require(\x27jsaction.ActionFlow\x27);\n\n/**\n * @param {!jsaction.EventInfo} eventInfo\n * @constructor\n * @extends {jsaction.ActionFlow}\n */\ngws.jsaction.GwsActionFlow \x3d function(eventInfo) {\n  // These constructor arguments are based on\n  // jsaction.Dispatcher.createActionFlow_, which unfortunately has been\n  // copied/pasted in various varations many times.\n  gws.jsaction.GwsActionFlow.base(\n      this, \x27constructor\x27, eventInfo[\x27action\x27], eventInfo[\x27actionElement\x27],\n      eventInfo[\x27event\x27], eventInfo[\x27timeStamp\x27], eventInfo[\x27eventType\x27],\n      eventInfo[\x27targetElement\x27]);\n\n  /** @const */\n  this.eventInfo \x3d eventInfo;\n};\ngoog.inherits(gws.jsaction.GwsActionFlow, jsaction.ActionFlow);\n\n/**\n * When true, a GwsJsactionFlow will be dispatched for all jsaction events.\n * The original ActionFlow event is still created, but only appears publicly\n * in ActionFlow.report events. Because of this, use gws.jsaction.events when\n * listening for ActionFlow.report events.\n * This should be set to true by the code that wires up the GwsActionFlow to be\n * used in place of the default ActionFlow.\n * @type {boolean}\n */\ngws.jsaction.GwsActionFlow.enabled \x3d false;\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/gws_action_flow.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1t');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1t');

}catch(e){_DumpException(e)}
/* _Module_:sy1u */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1u');
var $googDebugFname="gws/js/log/latency/stopwatch.js";
goog.loadModule("/**\n * @fileoverview Class that emulates a stop watch.\n */\n\ngoog.module(\x27search.latency.Stopwatch\x27);\ngoog.module.declareLegacyNamespace();\n\n/**\n * Class that emulates a stopwatch.\n */\nclass Stopwatch {\n  constructor() {\n    /** @private {number} */\n    this.startTime_ \x3d 0;\n    /** @private {number} */\n    this.elapsedTime_ \x3d 0;\n  }\n\n  /**\n   * @return{number}\n   * @private\n   */\n  now_() {\n    let wp \x3d window.performance;\n    if (wp \x26\x26 wp.now) {\n      return wp.now();\n    }\n    return goog.now();\n  };\n\n  /**\n   * Starts the clock. Multiple calls to start() will not restart the clock.\n   */\n  start() {\n    this.startTime_ \x3d this.startTime_ || this.now_();\n  }\n\n  /**\n   * Pauses the clock and must be called after start().\n   * If you call pause() before start(), elapsedTime will be 0.\n   * If you call start() after pause(), it will resume from where it left off.\n   * Subsequent calls to pause() won\x27t change the elapsed time.\n   */\n  pause() {\n    this.elapsedTime_ \x3d this.startTime_ ?\n        this.elapsedTime_ + this.now_() - this.startTime_ :\n        this.elapsedTime_;\n    // This is set to 0 so subsequent calls to pause won\x27t change the clock.\n    this.startTime_ \x3d 0;\n  }\n\n  /**\n   * This can be called at any time and will return the elapsed time.\n   *\n   * If called after start(), will return elapsedTime since start().\n   * If called after pause(),\n   *   will return the cumulative elapsed time from start to pause.\n   * If called after reset(), will return 0.\n   *\n   * @return{number}\n   */\n  elapsedTime() {\n    return Math.round(\n        this.elapsedTime_ +\n        (this.startTime_ ? this.now_() - this.startTime_ : 0));\n  }\n\n  /**\n   * Resets the start and elapsed time to 0.\n   */\n  reset() {\n    this.startTime_ \x3d 0;\n    this.elapsedTime_ \x3d 0;\n  }\n}\n\nexports \x3d Stopwatch;\n\n//# sourceURL\x3dhttps://qs/gws/js/log/latency/stopwatch.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1u');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1u');

}catch(e){_DumpException(e)}
/* _Module_:sy1v */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1v');
var $googDebugFname="gws/js/log/latency/latency_log_builder.js";
goog.loadModule("// This code is used by both Tier 1 and Tier 2 (Heirloom Plus) browsers, so\n// newer browser functionality must be gated by feature detection.\n//\n// TODO(martone): Enable the appropriate polyfills for Tier 2 so we don\x27t need\n// to restrict ourselves to a subset of JavaScript language features.\n\ngoog.module(\x27search.log.LatencyLogBuilder\x27);\n\nconst LogBuilder \x3d goog.require(\x27search.log.LogBuilder\x27);\nconst Stopwatch \x3d goog.require(\x27search.latency.Stopwatch\x27);\nconst Transport \x3d goog.require(\x27search.log.transport.Transport\x27);\nconst {ActionTypeValues, CsiMetricKeys, SourceValues, WebLatencyParams} \x3d goog.require(\x27search.latency.LatencyParams\x27);\nconst {isEmpty} \x3d goog.require(\x27goog.object\x27);\n\n/**\n * A LatencyLogBuilder wraps a stopwatch functionality, and outputs a log once\n * the desired number of splits have been captured.\n *\n * ```\n * new LatencyLogBuilder().start()\n *     .recordElapsedTime(\x27creatingUrl\x27)\n *     .recordElapsedTime(\x27makingFetch\x27)\n *     .recordElapsedTime(\x27gotresponse\x27)\n *     .log()\n * ```\n */\nclass LatencyLogBuilder {\n  /**\n   * Creates a new LatencyLogBuilder. This class is meant to encapsulate a\n   * stopwatch that the user can repeatedly make calls to with different labels\n   * and then once the user is finished can log all the collected data.\n   * @param {!SourceValues\x3d} service Defaults to web.\n   * @param {!ActionTypeValues\x3d} actionType Defaults to csi.\n   * @param {!Transport\x3d} transport\n   */\n  constructor(\n      service \x3d SourceValues.WEB, actionType \x3d ActionTypeValues.CSI,\n      transport \x3d undefined) {\n    /**\n     * TODO(ndsouza): Decide which EIs are correct to send (search and/or\n     *     beacon)\n     * @private @const\n     */\n    this.logBuilder_ \x3d LogBuilder.createWithEi(google.kEI, transport)\n                           .addData(WebLatencyParams.SOURCE, service)\n                           .setActionType(actionType);\n    /** @private @const {!Object\x3cstring, number\x3e} */\n    this.rt_ \x3d {};\n    /** @private @const */\n    this.stopwatch_ \x3d new Stopwatch();\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @return {!LatencyLogBuilder}\n   */\n  addData(key, value) {\n    this.logBuilder_.addData(key, value);\n    return this;\n  }\n\n  /**\n   * Start the internal stopwatch. Future calls to recordElapsedTime() will be\n   * measured from this point in time.\n   * TODO(ndsouza): May need to add a label to this method.\n   * @return {!LatencyLogBuilder}\n   */\n  start() {\n    this.stopwatch_.start();\n    return this;\n  }\n\n  /**\n   * Record a time since the last call to start() in an internal dictionary.\n   * @param {!CsiMetricKeys} label\n   * @return {!LatencyLogBuilder}\n   */\n  recordElapsedTime(label) {\n    // Will be 0 if the stopwatch hasn\x27t been started yet.\n    return this.addEntry(label, this.stopwatch_.elapsedTime());\n  }\n\n  /**\n   * Adds an entry into the eventually metricized data.\n   * @param {!CsiMetricKeys} label\n   * @param {number} entry\n   * @return {!LatencyLogBuilder}\n   */\n  addEntry(label, entry) {\n    this.rt_[label.gen204] \x3d entry;\n    return this;\n  }\n\n  /**\n   * Logs the latency data to the server.\n   * @return {!LatencyLogBuilder}\n   */\n  log() {\n    // TODO(bcat): Some callers (like those who use gws.csi.taillib.minCsiReport\n    // API) manually specify a premade \x22rt\x22 param via addData instead of adding\n    // their metrics via calls to addEntry. For these callers, this.rt_ will be\n    // empty, and we don\x27t want to overwrite the existing \x22rt\x22 value specified\n    // by the caller (http://b/64690033). We should migrate the callers to all\n    // pass a CSI timer object to minCsiReport (via an API change such as\n    // http://cl/164736380), then remove this check.\n    if (!isEmpty(this.rt_)) {\n      this.addData(WebLatencyParams.CSI_METRICS, getMetricString(this.rt_));\n    }\n    this.logBuilder_\n        .assertCheck()\n        .log();\n    return this;\n  }\n}\n\n/**\n * This returns a string with key-values separated by a \x27.\x27\n * and each element separated by a \x27,\x27.\n * Example:\n *   {a:5, b:6} will return \x22a.5,b.6\x22.\n *\n * @param {!Object\x3cstring, number\x3e} data\n * @return {string} uri encoded string.\n */\nfunction getMetricString(data) {\n  let metrics \x3d [];\n  for (let key in data) {\n    metrics.push(key + \x27.\x27 + data[key]);\n  }\n  return metrics.join(\x27,\x27);\n}\n\nexports \x3d LatencyLogBuilder;\n\n//# sourceURL\x3dhttps://qs/gws/js/log/latency/latency_log_builder.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1v');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1v');

}catch(e){_DumpException(e)}
/* _Module_:sy1z */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1z');
var $googDebugFname="javascript/jsaction/jsaction.js";
eval("/**\n * @fileoverview Public static API for using jsaction.\n */\n\ngoog.provide(\x27jsaction\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jsaction.EventType\x27);\ngoog.require(\x27jsaction.dom\x27);\n\n/**\n * Create a custom event with the specified data.\n * @param {string} type The type of the action, e.g. \x27submit\x27.\n * @param {!Object.\x3cstring, *\x3e\x3d} opt_data An optional data payload.\n * @param {!Event\x3d} opt_triggeringEvent The event that triggers this custom\n *     event. This can be accessed from the custom event\x27s action flow like\n *     so: actionFlow.event().detail.triggeringEvent.\n * @return {!Event} The new custom event.\n */\njsaction.createCustomEvent \x3d function(type, opt_data, opt_triggeringEvent) {\n  var event;\n\n  // We use \x27_type\x27 for the event contract, which lives in a separate\n  // compilation unit, but also include the renamable keys so that event\n  // consumers can access the data directly, e.g. detail.type instead of\n  // detail[\x27type\x27].\n  var detail \x3d {\n    \x27_type\x27: type,\n    type: type,\n    data: opt_data,\n    triggeringEvent: opt_triggeringEvent\n  };\n  try {\n    // We don\x27t use the CustomEvent constructor directly since it isn\x27t\n    // supported in IE 9 or 10 and initCustomEvent below works just fine.\n    event \x3d document.createEvent(\x27CustomEvent\x27);\n    event.initCustomEvent(jsaction.EventType.CUSTOM, true, false, detail);\n  } catch (e) {\n    // If custom events aren\x27t supported, fall back to custom-named HTMLEvent.\n    // Fallback used by Android Gingerbread, FF4-5.\n    event \x3d document.createEvent(\x27HTMLEvents\x27);\n    event.initEvent(jsaction.EventType.CUSTOM, true, false);\n    event[\x27detail\x27] \x3d detail;\n  }\n\n  return event;\n};\n\n\n/**\n * Fires a custom event with an optional payload. Only intended to be consumed\n * by jsaction itself. Supported in Firefox 6+, IE 9+, and all Chrome versions.\n *\n * TODO(masontang): Investigate polyfill options.\n *\n * @param {!Element} target The target element.\n * @param {string} type The type of the action, e.g. \x27submit\x27.\n * @param {!Object.\x3cstring, *\x3e\x3d} opt_data An optional data payload.\n * @param {!Event\x3d} opt_triggeringEvent An optional data for the Event triggered\n *     this custom event.\n */\njsaction.fireCustomEvent \x3d function(\n    target, type, opt_data, opt_triggeringEvent) {\n  var event \x3d jsaction.createCustomEvent(type, opt_data, opt_triggeringEvent);\n  target.dispatchEvent(event);\n};\n\n\n/**\n * Fires a custom event at descendant elements. For a given descendant of the\n * target element, a custom event is fired if (1) it has a jsaction handler for\n * the action type, and (2) the element does not have an ancestor (also a\n * descendant of the target element) that already handled the event.\n * Supported wherever fireCustomEvent is supported.\n *\n * @param {!Element} target The target element.\n * @param {string} type The type of the action, e.g. \x27submit\x27. Because of an\n *     implementation detail, type may not be \x27click\x27.\n * @param {!Object.\x3cstring, *\x3e\x3d} opt_data An optional data payload.\n*/\njsaction.broadcastCustomEvent \x3d function(target, type, opt_data) {\n  goog.asserts.assert(type !\x3d \x27click\x27);\n  var matched \x3d target.querySelectorAll(\x27[jsaction^\x3d\x22\x27 + type + \x27:\x22], \x27 +\n      \x27[jsaction*\x3d\x22;\x27 + type + \x27:\x22], [jsaction*\x3d\x22 \x27 + type + \x27:\x22]\x27);\n  for (var i \x3d 0; i \x3c matched.length; ++i) {\n    var match \x3d matched[i];\n    if (!jsaction.dom.hasAncestorInNodeList(match, matched)) {\n      jsaction.fireCustomEvent(match, type, opt_data);\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/jsaction.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1z');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1z');

}catch(e){_DumpException(e)}
/* _Module_:sy1x */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1x');
var $googDebugFname="javascript/jsaction/cache.js";
eval("// Copyright 2013 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Implements both a per element cache of its jsaction mapping\n * and a global parse cache. The former avoids an attribute access per DOM node\n * and the the latter avoids parsing the same jsaction annotation twice. In\n * a typical application the same jsaction value would be used many times while\n * the overall number of different values should be relatively small.\n */\n\n\ngoog.provide(\x27jsaction.Cache\x27);\n\n\ngoog.require(\x27jsaction.Property\x27);\n\n\n/**\n * Map from jsaction annotation to a parsed map from event name to action name.\n * @private @const {!Object\x3c!Object\x3cstring, string\x3e\x3e}\n */\njsaction.Cache.parseCache_ \x3d {};\n\n\n\n/**\n * Reads the jsaction parser cache from the given DOM Element.\n *\n * @param {!Element} element .\n * @return {!Object.\x3cstring, string\x3e} Map from event to qualified name\n *     of the jsaction bound to it.\n */\njsaction.Cache.get \x3d function(element) {\n  return element[jsaction.Property.JSACTION];\n};\n\n\n/**\n * Writes the jsaction parser cache to the given DOM Element.\n *\n * @param {!Element} element .\n * @param {!Object.\x3cstring, string\x3e} actionMap Map from event to\n *     qualified name of the jsaction bound to it.\n */\njsaction.Cache.set \x3d function(element, actionMap) {\n  element[jsaction.Property.JSACTION] \x3d actionMap;\n};\n\n\n/**\n * Looks up the parsed action map from the source jsaction attribute value.\n *\n * @param {string} text Unparsed jsaction attribute value.\n * @return {!Object.\x3cstring, string\x3e|undefined} Parsed jsaction attribute value,\n *      if already present in the cache.\n */\njsaction.Cache.getParsed \x3d function(text) {\n  return jsaction.Cache.parseCache_[text];\n};\n\n\n/**\n * Inserts the parse result for the given source jsaction value into the cache.\n *\n * @param {string} text Unparsed jsaction attribute value.\n * @param {!Object.\x3cstring, string\x3e} parsed Attribute value parsed into the\n *   action map.\n */\njsaction.Cache.setParsed \x3d function(text, parsed) {\n  jsaction.Cache.parseCache_[text] \x3d parsed;\n};\n\n\n/**\n * Clears the jsaction parser cache from the given DOM Element.\n *\n * @param {!Element} element .\n */\njsaction.Cache.clear \x3d function(element) {\n  if (jsaction.Property.JSACTION in element) {\n    delete element[jsaction.Property.JSACTION];\n  }\n};\n\n\n/**\n * Reads the cached jsaction namespace from the given DOM\n * Element. Undefined means there is no cached value; null is a cached\n * jsnamespace attribute that\x27s absent.\n *\n * @param {!Element} element .\n * @return {string|null|undefined} .\n */\njsaction.Cache.getNamespace \x3d function(element) {\n  return element[jsaction.Property.JSNAMESPACE];\n};\n\n\n/**\n * Writes the cached jsaction namespace to the given DOM Element. Null\n * represents a jsnamespace attribute that\x27s absent.\n *\n * @param {!Element} element .\n * @param {?string} jsnamespace .\n */\njsaction.Cache.setNamespace \x3d function(element, jsnamespace) {\n  element[jsaction.Property.JSNAMESPACE] \x3d jsnamespace;\n};\n\n\n/**\n * Clears the cached jsaction namespace from the given DOM Element.\n *\n * @param {!Element} element .\n */\njsaction.Cache.clearNamespace \x3d function(element) {\n  if (jsaction.Property.JSNAMESPACE in element) {\n    delete element[jsaction.Property.JSNAMESPACE];\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/cache.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1x');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1x');

}catch(e){_DumpException(e)}
/* _Module_:sy1y */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1y');
var $googDebugFname="javascript/jsaction/dispatcher.js";
eval("// Copyright 2005 Google Inc. All Rights Reserved.\n\n/**\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview The jsaction dispatcher serves as the registry where\n * clients register jsaction handlers. When EventContract finds a\n * jsaction to be invoked for an event, it calls the dispatcher, which\n * then looks up the corresponding handler function and invokes it.\n *\n * A fully qualified jsaction name consists of a namespace and an\n * action name separated by a dot: \x22namespace.action\x22. Hierarchichal\n * namespaces are not supported. Namespace and action names must only\n * consist of alphanumeric characters and underscores.\n *\n * Usage:\n *\n * The dispatcher first needs to be hooked up to an instance of\n * jsaction.EventContract:\n *\n *   var dispatcher \x3d new jsaction.Dispatcher;\n *   eventContract.dispatchTo(goog.bind(dispatcher.dispatch, dispatcher);\n *\n * Clients can register handlers for the jsactions they use in their\n * markup. For example, the code to add the action handler for element:\n *\n *   \x3cdiv jsaction\x3d\x22foo.bar\x22\x3eDo stuff\x3c/div\x3e\n *\n * would look like this:\n *\n *   var fooBarHandler \x3d function(context) {\n *     // Do stuff.\n *   };\n *   dispatcher.registerHandlers(\x27foo\x27, null, {\x27bar\x27: fooBarHandler});\n *\n * If a \x27jsaction\x27 attribute doesn\x27t specify a fully qualified\n * jsaction name, the dispatcher will search for an ancestor with a\n * \x27jsnamespace\x27 attribute.  Example markup using the same names as\n * above:\n *\n *   \x3cdiv jsnamespace\x3d\x22foo\x22\x3e\n *     \x3cdiv jsaction\x3d\x22bar\x22\x3eDo Stuff\x3c/div\x3e\n *   \x3c/div\x3e\n *\n * Designdocs:\n *   \x3chttp://go/eventcontractdesigndoc\x3e\n *   \x3chttp://go/jsactiondesigndoc\x3e\n *\n * For actions, and handling of the jsaction HTML attribute, see\n *   \x3chttp://go/statsflowdesigndoc\x3e\n *\n * For details on the port of JsAction from maps see\n *   \x3chttp://go/jsactionport\x3e.\n */\n\ngoog.provide(\x27jsaction.Dispatcher\x27);\ngoog.provide(\x27jsaction.Loader\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.async.run\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27jsaction.ActionFlow\x27);\ngoog.require(\x27jsaction.Branch\x27);\ngoog.require(\x27jsaction.Char\x27);\ngoog.require(\x27jsaction.event\x27);\n\n\n/**\n * A loader is a function that will do whatever is necessary to register\n * handlers for a given namespace. A loader takes a dispatcher and a namespace\n * as parameters.\n * @typedef {function(!jsaction.Dispatcher,string,jsaction.EventInfo):void}\n */\njsaction.Loader;\n\n\n/**\n * An action for a namespace. It consists of two members:\n *   accept -- whether the handler can accept the given\n *       EventInfo immediately. If it returns false, the\n *       dispatcher will queue the events for later replaying, which\n *       can be triggered by calling replay().\n *   handle -- the actual handler for the namespace.\n * @typedef {{accept: function(jsaction.EventInfo): boolean,\n *            handle: function(jsaction.ActionFlow)}}\n */\njsaction.NamespaceAction;\n\n\n/**\n * Receives a DOM event, determines the jsaction associated with the source\n * element of the DOM event, and invokes the handler associated with the\n * jsaction.\n *\n * @param {function(jsaction.EventInfo):jsaction.ActionFlow\x3d} opt_flowFactory\n *     A function that knows how to instantiate an ActionFlow for a particular\n *     browser event. If not provided, a built-in one is used.\n * @param {function(jsaction.EventInfo):Function\x3d} opt_getHandler A function\n *     that knows how to get the handler for a given event info.\n * @param {boolean\x3d} opt_isWiz Whether this dispatcher dispatches wiz events.\n * @constructor\n */\njsaction.Dispatcher \x3d function(opt_flowFactory, opt_getHandler, opt_isWiz) {\n  /**\n   * The actions that are registered for this jsaction.Dispatcher instance.\n   *\n   * @type {Object}\n   * @private\n   */\n  this.actions_ \x3d {};\n\n  /**\n   * A map from namespace to associated actions.\n   * @type {!Object.\x3c!jsaction.NamespaceAction\x3e}\n   * @private\n   */\n  this.namespaceActions_ \x3d {};\n\n  /**\n   * A mapping between namespaces and loader functions.  We also keep a flag\n   * indicating whether the loader was called to prevent it being called\n   * multiple times.\n   * @type {!Object.\x3cstring,{loader: jsaction.Loader, called: boolean}\x3e}\n   * @private\n   */\n  this.loaders_ \x3d {};\n\n  /**\n   * The default loader to be invoked if no loader is found for a particular\n   * namespace.\n   * @type {?jsaction.Loader}\n   * @private\n   */\n  this.defaultLoader_ \x3d null;\n\n  /**\n   * A list of namespaces already loaded by the default loader.  This avoids\n   * loading them once again.  Using Object (with namespaces as keys) instead of\n   * Array for O(1) search.\n   * @type {!Object.\x3cboolean\x3e}\n   * @private\n   */\n  this.defaultLoaderNamespaces_ \x3d {};\n\n  /**\n   * The queue of events.\n   * @type {!Array.\x3cjsaction.EventInfo\x3e}\n   * @private\n   */\n  this.queue_ \x3d [];\n\n  const factory \x3d opt_flowFactory || jsaction.Dispatcher.createActionFlow_;\n  /**\n   * The ActionFlow factory.\n   * @type {function(jsaction.EventInfo):jsaction.ActionFlow}\n   * @private\n   */\n  this.flowFactory_ \x3d function(eventInfo) {\n    const actionFlow \x3d factory(eventInfo);\n    if (actionFlow \x26\x26 opt_isWiz) {\n      actionFlow.setWiz();\n    }\n    return actionFlow;\n  };\n\n\n  /**\n   * A function to retrieve the handler function for a given event info.\n   * @type {function(jsaction.EventInfo):Function|undefined}\n   * @private\n   */\n  this.getHandler_ \x3d opt_getHandler;\n\n  /**\n   * A map of global event handlers, where each key is an event type.\n   * @private {!Object.\x3cstring, !Array.\x3cfunction(!Event):(boolean|undefined)\x3e\x3e}\n   */\n  this.globalHandlers_ \x3d {};\n\n  /**\n   * @private {?function(\n   *     !Array.\x3cjsaction.EventInfo\x3e, !jsaction.Dispatcher):void}\n   */\n  this.eventReplayer_ \x3d null;\n};\n\n\n/**\n * Receives an event or the event queue from the EventContract. The event\n * queue is copied and it attempts to replay.\n * If event info is passed in it looks for an action handler that can handle\n * the given event.  If there is no handler registered queues the event and\n * checks if a loader is registered for the given namespace. If so, calls it.\n *\n * Alternatively, if in global dispatch mode, calls all registered global\n * handlers for the appropriate event type.\n *\n * The three functionalities of this call are deliberately not split into three\n * methods (and then declared as an abstract interface), because the interface\n * is used by EventContract, which lives in a different jsbinary. Therefore the\n * interface between the three is defined entirely in terms that are invariant\n * under jscompiler processing (Function and Array, as opposed to a custom type\n * with method names).\n *\n * @param {(jsaction.EventInfo|!Array.\x3cjsaction.EventInfo\x3e)} eventInfo\n *    The info for the event that triggered this call or the queue of events\n *    from EventContract.\n * @param {boolean\x3d} opt_globalDispatch If true, dispatches a global event\n *    instead of a regular jsaction handler.\n */\njsaction.Dispatcher.prototype.dispatch \x3d function(\n    eventInfo, opt_globalDispatch) {\n  if (goog.isArray(eventInfo)) {\n    // We received the queued events from EventContract. Copy them and try to\n    // replay.\n    this.queue_ \x3d goog.array.clone(eventInfo);\n    this.replayQueuedEvents_();\n    return;\n  }\n\n  if (opt_globalDispatch) {\n    // Skip everything related to jsaction handlers, and execute the global\n    // handlers.\n    var ev \x3d eventInfo[\x27event\x27];\n    var eventTypeHandlers \x3d this.globalHandlers_[eventInfo[\x27eventType\x27]];\n    if (eventTypeHandlers) {\n      var shouldPreventDefault \x3d false;\n      for (var i \x3d 0, handler; handler \x3d eventTypeHandlers[i++];) {\n        if (handler(ev) \x3d\x3d\x3d false) {\n          shouldPreventDefault \x3d true;\n        }\n      }\n    }\n    if (shouldPreventDefault) {\n      jsaction.event.preventDefault(ev);\n    }\n    return;\n  }\n\n  var action \x3d eventInfo[\x27action\x27];\n  var namespace \x3d jsaction.Dispatcher.getNamespace_(action);\n  var namespaceAction \x3d this.namespaceActions_[namespace];\n\n  var handler;\n  if (this.getHandler_) {\n    handler \x3d this.getHandler_(eventInfo);\n  } else if (!namespaceAction) {\n    handler \x3d this.actions_[action];\n  } else if (namespaceAction.accept(eventInfo)) {\n    handler \x3d namespaceAction.handle;\n  }\n\n  if (handler) {\n    var stats \x3d this.flowFactory_(\n        /** @type {jsaction.EventInfo} */ (eventInfo));\n    handler(stats);\n    stats.done(jsaction.Branch.MAIN);\n    return;\n  }\n\n  // No handler was found. Potentially make a copy of the event to extend its\n  // life and queue it.\n  var eventCopy \x3d jsaction.event.maybeCopyEvent(eventInfo[\x27event\x27]);\n  eventInfo[\x27event\x27] \x3d eventCopy;\n  this.queue_.push(eventInfo);\n\n  if (!namespaceAction) {\n    // If there is no handler, check if there is a loader available.\n    // If there already is a handler for the namespace, but it is not\n    // yet ready to accept the event, then the namespace handler\n    // might load handlers on its own, and will call replay() later.\n    this.maybeInvokeLoader_(namespace, eventInfo);\n  }\n};\n\n\n/**\n * Registers a loader function to be called in case a jsaction is encountered\n * for which there is no handler registered.\n * The loader is expected to register the jsaction handlers for the given\n * namespace.\n *\n * @param {string} actionNamespace The action namespace.\n * @param {jsaction.Loader} loaderFn The loader that will install the action\n *     handlers for this namespace. It takes the dispatcher and the namespace\n *     as parameters.\n */\njsaction.Dispatcher.prototype.registerLoader \x3d function(\n    actionNamespace, loaderFn) {\n  this.loaders_[actionNamespace] \x3d {loader: loaderFn, called: false};\n};\n\n\n/**\n * Registers the default loader function to be called if no specific loader\n * exists for a given namespace.\n *\n * @param {jsaction.Loader} loaderFn The loader that will install the action\n *     handlers for this namespace. It takes the dispatcher and the namespace\n *     as parameters.\n */\njsaction.Dispatcher.prototype.registerDefaultLoader \x3d function(loaderFn) {\n  this.defaultLoader_ \x3d loaderFn;\n};\n\n\n/**\n * Registers a handler for a whole namespace. The dispatcher will\n * dispatch all jsaction for the given namespace to the handler.\n *\n * Namespace handlers has higher precedence than other handlers/loader.\n *\n * @param {string} namespace The namespace to register handler on.\n * @param {function(jsaction.ActionFlow)} handler The handler function.\n * @param {(function(jsaction.EventInfo):boolean)\x3d} opt_accept\n *     A function that, given the EventInfo, can determine whether\n *     the event should be immediately handled or be queued. Defaults\n *     to always returning true.\n */\njsaction.Dispatcher.prototype.registerNamespaceHandler \x3d function(\n    namespace, handler, opt_accept) {\n  this.namespaceActions_[namespace] \x3d {\n    accept: opt_accept || goog.functions.TRUE,\n    handle: handler\n  };\n};\n\n\n/**\n * Invokes the loader for the namespace if there is one and it wasn\x27t called\n * already.  The dispatcher is passed as a parameter to the loader.  If no\n * loader is found for the namespace, invoke the default loader.\n *\n * @param {string} namespace The namespace.\n * @param {jsaction.EventInfo} eventInfo The event info.\n * @private\n */\njsaction.Dispatcher.prototype.maybeInvokeLoader_ \x3d function(\n    namespace, eventInfo) {\n  var loaderInfo \x3d this.loaders_[namespace];\n  if (!loaderInfo) {\n    if (this.defaultLoader_ \x26\x26 !(namespace in this.defaultLoaderNamespaces_)) {\n      this.defaultLoaderNamespaces_[namespace] \x3d true;\n      this.defaultLoader_(this, namespace, eventInfo);\n    }\n  } else if (!loaderInfo.called) {\n    loaderInfo.loader(this, namespace, eventInfo);\n    loaderInfo.called \x3d true;\n  }\n};\n\n\n/**\n * Extracts and returns the namespace from a fully qualified jsaction\n * of the form \x22namespace.actionname\x22.\n * @param {string} action The action.\n * @return {string} The namespace.\n * @private\n */\njsaction.Dispatcher.getNamespace_ \x3d function(action) {\n  return action.split(\x27.\x27)[0];\n};\n\n\n/**\n * Creates a jsaction.ActionFlow to be passed to an action handler.\n * @param {jsaction.EventInfo} eventInfo The event info.\n * @return {jsaction.ActionFlow} The newly created ActionFlow.\n * @private\n */\njsaction.Dispatcher.createActionFlow_ \x3d function(eventInfo) {\n  return new jsaction.ActionFlow(\n      eventInfo[\x27action\x27], eventInfo[\x27actionElement\x27], eventInfo[\x27event\x27],\n      eventInfo[\x27timeStamp\x27], eventInfo[\x27eventType\x27],\n      eventInfo[\x27targetElement\x27]);\n};\n\n\n/**\n * Registers multiple methods all bound to the same object\n * instance. This is a common case: an application module binds\n * multiple of its methods under public names to the event contract of\n * the application. So we provide a shortcut for it.\n * Attempts to replay the queued events after registering the handlers.\n *\n * @param {string} namespace The namespace of the jsaction name.\n *     NOTE(mesch): This is not optional in order to encourage uniform\n *     naming for all methods registered by a module.\n *\n * @param {Object} instance The object to bind the methods to. If this\n *     is null, then the functions are not bound, but directly added\n *     under the public names.\n *\n * @param {!Object.\x3cstring, function(jsaction.ActionFlow):void\x3e} methods\n *     A map from public name to functions that will be bound\n *     to instance and registered as action under the public\n *     name. I.e. the property names are the public names. The\n *     property values are the methods of instance.\n */\njsaction.Dispatcher.prototype.registerHandlers \x3d function(\n    namespace, instance, methods) {\n  goog.object.forEach(methods, goog.bind(function(method, name) {\n    var handler \x3d instance ? goog.bind(method, instance) : method;\n    // Include a \x27.\x27 separator between namespace name and action name.\n    // In the case that no namespace name is provided, the jsaction name\n    // consists of the action name only (no period).\n    if (namespace) {\n      var fullName \x3d namespace + jsaction.Char.NAMESPACE_ACTION_SEPARATOR +\n          name;\n      this.actions_[fullName] \x3d handler;\n    } else {\n      this.actions_[name] \x3d handler;\n    }\n  }, this));\n\n  this.replayQueuedEvents_();\n};\n\n\n/**\n * Unregisters an action.  Provided as an easy way to reverse the effects of\n * registerHandlers.\n * @param {string} namespace The namespace of the jsaction name.\n * @param {string} name The action name to unbind.\n */\njsaction.Dispatcher.prototype.unregisterHandler \x3d function(namespace, name) {\n  var fullName \x3d null;\n  if (namespace) {\n    fullName \x3d namespace + jsaction.Char.NAMESPACE_ACTION_SEPARATOR + name;\n  } else {\n    fullName \x3d name;\n  }\n  delete this.actions_[fullName];\n};\n\n\n/**\n * Registers a global event handler.\n * @param {string} eventType\n * @param {function(!Event):(boolean|undefined)} handler\n */\njsaction.Dispatcher.prototype.registerGlobalHandler \x3d function(\n    eventType, handler) {\n  this.globalHandlers_[eventType] \x3d this.globalHandlers_[eventType] || [];\n  this.globalHandlers_[eventType].push(handler);\n};\n\n\n/**\n * Unregisters a global event handler.\n * @param {string} eventType\n * @param {function(!Event):(boolean|undefined)} handler\n */\njsaction.Dispatcher.prototype.unregisterGlobalHandler \x3d function(\n    eventType, handler) {\n  if (this.globalHandlers_[eventType]) {\n    goog.array.remove(this.globalHandlers_[eventType], handler);\n  }\n};\n\n\n/**\n * Checks whether there is an action registered under the given\n * name. This returns true if there is a namespace handler, even\n * if it can not yet handle the event.\n *\n * TODO(chrishenry): Remove this when canDispatch is used everywhere.\n *\n * @param {string} name Action name.\n * @return {boolean} Whether the name is registered.\n * @see #canDispatch\n */\njsaction.Dispatcher.prototype.hasAction \x3d function(name) {\n  return this.actions_.hasOwnProperty(name) ||\n      this.namespaceActions_.hasOwnProperty(\n          jsaction.Dispatcher.getNamespace_(name));\n};\n\n\n/**\n * Whether this dispatcher can dispatch the event. This can be used by\n * event replayer to check whether the dispatcher can replay an event.\n * @param {jsaction.EventInfo} eventInfo\n * @return {boolean}\n */\njsaction.Dispatcher.prototype.canDispatch \x3d function(eventInfo) {\n  var name \x3d eventInfo[\x27action\x27];\n  if (this.actions_.hasOwnProperty(name)) {\n    return true;\n  }\n  var ns \x3d jsaction.Dispatcher.getNamespace_(name);\n  if (this.namespaceActions_.hasOwnProperty(ns)) {\n    return this.namespaceActions_[ns].accept(eventInfo);\n  }\n  return false;\n};\n\n\n/**\n * Replays queued events, if any. The replaying will happen in its own\n * stack once the current flow cedes control. This is done to mimic\n * browser event handling.\n */\njsaction.Dispatcher.prototype.replay \x3d function() {\n  this.replayQueuedEvents_();\n};\n\n\n/**\n * Replays queued events, if any. The replaying will happen in its own\n * stack once the current flow cedes control. As opposed to the replay()\n * method, the replay happens immediately.\n */\njsaction.Dispatcher.prototype.replayNow \x3d function() {\n  if (!this.eventReplayer_ || goog.array.isEmpty(this.queue_)) {\n    return;\n  }\n  this.eventReplayer_(this.queue_, this);\n};\n\n\n/**\n * Replays queued events. The replaying will happen in its own stack once the\n * current flow cedes control. This is done to mimic browser event handling.\n * @private\n */\njsaction.Dispatcher.prototype.replayQueuedEvents_ \x3d function() {\n  if (!this.eventReplayer_ || goog.array.isEmpty(this.queue_)) {\n    return;\n  }\n  goog.async.run(function() {\n    this.eventReplayer_(this.queue_, this);\n  }, this);\n};\n\n\n/**\n * Sets the event replayer, enabling queued events to be replayed when actions\n * are bound. After setting the event replayer, tries to replay queued events.\n * The event replayer takes as parameters the queue of events and the dispatcher\n * (used to check whether actions have handlers registered and can be replayed).\n * The event replayer is also responsible for dequeuing events.\n *\n * Example: An event replayer that replays only the last event.\n *\n *   var dispatcher \x3d new Dispatcher;\n *   // ...\n *   dispatcher.setEventReplayer(function(queue, dispatcher) {\n *     var lastEventInfo \x3d goog.array.peek(queue);\n *     if (dispatcher.canDispatch(lastEventInfo.action) {\n *       jsaction.replay.replayEvent(lastEventInfo);\n *       goog.array.clear(queue);\n *     }\n *   });\n *\n * @param {function(!Array.\x3cjsaction.EventInfo\x3e, !jsaction.Dispatcher):void}\n *    eventReplayer It allows elements to be replayed and dequeuing.\n */\njsaction.Dispatcher.prototype.setEventReplayer \x3d function(eventReplayer) {\n  this.eventReplayer_ \x3d eventReplayer;\n  this.replayQueuedEvents_();\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/dispatcher.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1y');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1y');

}catch(e){_DumpException(e)}
/* _Module_:sy1w */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1w');
var $googDebugFname="javascript/jsaction/actionlogger.js";
eval("/**\n * @fileoverview Interface for a logger used to log user interaction via\n * jsactions.\n */\ngoog.provide(\x27jsaction.ActionLogger\x27);\n\ngoog.require(\x27jsaction.ActionFlow\x27);\n\ngoog.scope(function() {\n\n\n\n/**\n * Creates a no-op ActionLogger.\n *\n * @constructor\n */\njsaction.ActionLogger \x3d function() {};\n\nvar ActionLogger \x3d jsaction.ActionLogger;\n\n\n/**\n * Logs when an action is actually dispatched. Should be invoked by handler\n * before the action is actually handled.\n *\n * @param {!jsaction.ActionFlow} actionFlow The action flow for the action.\n * @param {string\x3d} opt_info optional string to identify information on\n *     the controller that handles the action.\n */\nActionLogger.prototype.logDispatch \x3d function(actionFlow, opt_info) {};\n\n});   // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/actionlogger.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/log/jsaction/jsaction_logger.js";
goog.loadModule("/**\n * @fileoverview An implementation for jsaction.ActionLogger that sends action\n * information via Clearcut logger.\n */\ngoog.module(\x27search.log.jsaction\x27);\n\nconst ActionFlow \x3d goog.require(\x27jsaction.ActionFlow\x27);\nconst ActionLogger \x3d goog.require(\x27jsaction.ActionLogger\x27);\nconst EventType \x3d goog.require(\x27jsaction.EventType\x27);\nconst LatencyLogBuilder \x3d goog.require(\x27search.log.LatencyLogBuilder\x27);\nconst gArray \x3d goog.require(\x27goog.array\x27);\nconst veUtil \x3d goog.require(\x27search.log.ve.util\x27);\nconst {JsactionInfo, SourceValues, WebLatencyParams} \x3d goog.require(\x27search.latency.LatencyParams\x27);\n\n\n/**\n * These events are considered as user interaction that we want to log the\n * delays.\n * @type {!Array\x3cstring\x3e}\n */\nconst EVENTS_TYPES_TO_LOG \x3d [\n  EventType.CLICK,\n  EventType.FOCUS,\n  EventType.TOUCHSTART,\n  EventType.MOUSEDOWN,\n];\n\n\n/**\n * We only log delays for the first N (this value) of user interactions.\n * @type {number}\n */\nconst NUM_EVENTS_TO_LOG \x3d 1;\n\n\n/**\n * Creates an instance of jsaction.ActionLogger that sends log via LogBuilder.\n */\nclass ActionLoggerImpl extends ActionLogger {\n  /**\n   * @param {!ActionFlow} actionFlow the action flow to extract delay.\n   * @return {number} queueing delay if the actionFlow is for an event that\n   *     has been queued, 0 otherwise.\n   * @private\n   */\n  static getDelay_(actionFlow) {\n    const actionEvent \x3d actionFlow.event();\n    return (actionEvent \x26\x26 actionEvent.originalTimestamp) ?\n        (actionEvent.timeStamp - actionEvent.originalTimestamp) :\n        0;\n  }\n\n  /**\n   * @param {boolean\x3d} report if we should actually send logs to servers.\n   * @param {LatencyLogBuilder\x3d} latencyLogBuilderOverride the log builder\n   *     instance to use.\n   */\n  constructor(report \x3d true, latencyLogBuilderOverride \x3d null) {\n    super();\n\n    /** @private {boolean} if interaction should be reported. */\n    this.shouldReport_ \x3d report;\n    /** @private {number} number of interactions we have reported. */\n    this.numActionsLogged_ \x3d 0;\n    /** @private {!Object\x3cstring, number\x3e} a map for custom events delays. */\n    this.customEventDelay_ \x3d {};\n    /** @private {LatencyLogBuilder} log builder to be used, if not null. */\n    this.latencyLogBuilderOverride_ \x3d latencyLogBuilderOverride;\n  }\n\n  /** @override */\n  logDispatch(actionFlow, opt_info) {\n    if (!this.shouldReport_ || this.numActionsLogged_ \x3e\x3d NUM_EVENTS_TO_LOG) {\n      return;\n    }\n\n    if (this.maybeHandleCustomEvent_(actionFlow)) {\n      return;\n    }\n\n    let eventType \x3d actionFlow.eventType();\n    let isCustomEvent \x3d eventType \x26\x26 eventType in this.customEventDelay_;\n    if (!gArray.contains(EVENTS_TYPES_TO_LOG, eventType) \x26\x26 !isCustomEvent) {\n      return;\n    }\n\n    this.numActionsLogged_++;\n\n    let element \x3d actionFlow.node();\n    if (element !\x3d null) {\n      let delayMs \x3d Math.round(\n          (isCustomEvent \x26\x26 eventType) ?\n              this.customEventDelay_[eventType] :\n              ActionLoggerImpl.getDelay_(actionFlow));\n      const controllerName \x3d opt_info || null;\n      this.reportDelay_(eventType, element, delayMs, controllerName);\n    }\n  }\n\n  /**\n   * Check if the action flow is a custom event that will be re-fired. We should\n   * then log the re-fired event (so we have template information) rather than\n   * this one.\n   *\n   * @param {!ActionFlow} actionFlow the action flow to check.\n   * @return {boolean} true if the action flow contains a GWS customized event\n   *     that will be re-fired.\n   *\n   * @private\n   */\n  maybeHandleCustomEvent_(actionFlow) {\n    if (!actionFlow.node()) {\n      return false;\n    }\n\n    var split \x3d actionFlow.flowType().split(\x27.\x27);\n    if (split.length !\x3d 2 || split[0] !\x3d \x27fire\x27) {\n      return false;\n    }\n\n    const delayMs \x3d ActionLoggerImpl.getDelay_(actionFlow);\n    this.customEventDelay_[split[1]] \x3d delayMs;\n    return true;\n  }\n\n\n  /**\n   * @param {?string} eventType type of the event.\n   * @param {!Element} element the elements that user interacts with.\n   * @param {number} delayMs the delay this event experiences.\n   * @param {?string} controllerName some ID string that can used to identify\n   *     the module at server side.\n   *\n   * @private\n   */\n  reportDelay_(eventType, element, delayMs, controllerName) {\n    let infoSection \x3d `${JsactionInfo.DELAY_MS}.` + delayMs.toString();\n    if (eventType) {\n      infoSection +\x3d `,${JsactionInfo.EVENT_TYPE}.` + eventType;\n    }\n    const ved \x3d veUtil.getVedFromElement(element);\n    if (ved) {\n      infoSection +\x3d `,${JsactionInfo.VED}.` + ved;\n    }\n    if (controllerName !\x3d null) {\n      infoSection +\x3d `,${JsactionInfo.CONTROLLER_NAME}.` + controllerName;\n    }\n\n    let logBuilder \x3d this.latencyLogBuilderOverride_ ||\n        new LatencyLogBuilder(SourceValues.JSA);\n    logBuilder.addData(WebLatencyParams.JSACTION_INFO, infoSection).log();\n  }\n\n\n  /**\n   * Do not report anything from this logger instance.\n   */\n  disableReport() {\n    this.shouldReport_ \x3d false;\n  }\n}\n\n/** @private @const {!ActionLoggerImpl} */\nconst ACTION_LOGGER_INSTANCE \x3d new ActionLoggerImpl();\n\n/** @return {!ActionLogger} a singleton implementation for ActionLogger. */\nconst getActionLogger \x3d function() {\n  return ACTION_LOGGER_INSTANCE;\n};\n\n/** Disables the report for ActionLogger. */\nconst disableActionLoggerReport \x3d function() {\n  ACTION_LOGGER_INSTANCE.disableReport();\n};\n\n/**\n * Creates a ActionLogger for testing purposes.\n * @param {boolean} report should report logs.\n * @param {?} latencyLogBuilder log builder to use for testing.\n * @return {!ActionLogger}\n */\nconst getNewActionLoggerForTesting \x3d function(report, latencyLogBuilder) {\n  return new ActionLoggerImpl(report, latencyLogBuilder);\n};\n\nexports \x3d {\n  getActionLogger,\n  disableActionLoggerReport,\n  getNewActionLoggerForTesting\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/log/jsaction/jsaction_logger.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/jsaction/replay.js";
eval("// Copyright 2011 Google Inc. All rights reserved.\n\n/**\n * @author mibuerge@google.com (Michael Buerge)\n *\n * @fileoverview Functions for replaying events by the jsaction\n * Dispatcher.\n */\ngoog.provide(\x27jsaction.createKeyboardEvent\x27);\ngoog.provide(\x27jsaction.createMouseEvent\x27);\ngoog.provide(\x27jsaction.createUiEvent\x27);\ngoog.provide(\x27jsaction.replayEvent\x27);\ngoog.provide(\x27jsaction.triggerEvent\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27jsaction\x27);\ngoog.require(\x27jsaction.EventType\x27);\ngoog.require(\x27jsaction.event\x27);\n\n\n/**\n * Replays an event.\n * @param {!jsaction.EventInfo} eventInfo The event info record.\n */\njsaction.replayEvent \x3d function(eventInfo) {\n  var event \x3d jsaction.createEvent(eventInfo[\x27event\x27], eventInfo[\x27eventType\x27]);\n  jsaction.triggerEvent(eventInfo[\x27targetElement\x27], event);\n};\n\n\n/**\n * Checks if a given event was triggered by the keyboard.\n * @param {string} eventType The event type.\n * @return {boolean} Whether it\x27s a keyboard event.\n * @private\n */\njsaction.isKeyboardEvent_ \x3d function(eventType) {\n  return eventType \x3d\x3d jsaction.EventType.KEYPRESS ||\n      eventType \x3d\x3d jsaction.EventType.KEYDOWN ||\n      eventType \x3d\x3d jsaction.EventType.KEYUP;\n};\n\n\n/**\n * Checks if a given event was triggered by the mouse.\n * @param {string} eventType The event type.\n * @return {boolean} Whether it\x27s a mouse event.\n * @private\n */\njsaction.isMouseEvent_ \x3d function(eventType) {\n  // TODO(ruilopes): Verify if Drag events should be bound here.\n  return eventType \x3d\x3d jsaction.EventType.CLICK ||\n      eventType \x3d\x3d jsaction.EventType.DBLCLICK ||\n      eventType \x3d\x3d jsaction.EventType.MOUSEDOWN ||\n      eventType \x3d\x3d jsaction.EventType.MOUSEOVER ||\n      eventType \x3d\x3d jsaction.EventType.MOUSEOUT ||\n      eventType \x3d\x3d jsaction.EventType.MOUSEMOVE;\n};\n\n\n/**\n * Checks if a given event is a general UI event.\n * @param {string} eventType The event type.\n * @return {boolean} Whether it\x27s a focus event.\n * @private\n */\njsaction.isUiEvent_ \x3d function(eventType) {\n  // Almost nobody supports the W3C method of creating FocusEvents.\n  // For now, we\x27re going to use the UIEvent as a super-interface.\n  return eventType \x3d\x3d jsaction.EventType.FOCUS ||\n      eventType \x3d\x3d jsaction.EventType.BLUR ||\n      eventType \x3d\x3d jsaction.EventType.FOCUSIN ||\n      eventType \x3d\x3d jsaction.EventType.FOCUSOUT ||\n      eventType \x3d\x3d jsaction.EventType.SCROLL;\n};\n\n\n/**\n * Create a whitespace-delineated list of modifier keys that should be\n * considered to be active on the event\x27s key. See details at\n * https://developer.mozilla.org/en/DOM/KeyboardEvent.\n * @param {boolean} alt Alt pressed.\n * @param {boolean} ctrl Control pressed.\n * @param {boolean} meta Command pressed (OSX only).\n * @param {boolean} shift Shift pressed.\n * @return {string} The constructed modifier keys string.\n * @private\n */\njsaction.createKeyboardModifiersList_ \x3d function(alt, ctrl, meta, shift) {\n  var keys \x3d [];\n  if (alt) {\n    keys.push(\x27Alt\x27);\n  }\n  if (ctrl) {\n    keys.push(\x27Control\x27);\n  }\n  if (meta) {\n    keys.push(\x27Meta\x27);\n  }\n  if (shift) {\n    keys.push(\x27Shift\x27);\n  }\n  return keys.join(\x27 \x27);\n};\n\n\n/**\n * Creates a UI event object for replaying through the DOM.\n * @param {!Event} original The event to create a new event from.\n * @param {string\x3d} opt_eventType The type this event is being handled as by\n *     jsaction. E.g. blur events are handled as focusout\n * @return {!Event} The event object.\n */\njsaction.createUiEvent \x3d function(original, opt_eventType) {\n  var event;\n  if (document.createEvent) {\n    // Event creation as per W3C event model specification.  This codepath\n    // is used by most non-IE browsers and also by IE 9 and later.\n    event \x3d document.createEvent(\x27UIEvent\x27);\n    // On IE and Opera \x3c 12, we must provide non-undefined values to\n    // initEvent, otherwise it will fail.\n    event.initUIEvent(\n        opt_eventType || original.type,\n        goog.isDef(original.bubbles) ? original.bubbles : true,\n        original.cancelable || false,\n        original.view || window,\n        original.detail || 0 //detail\n    );\n  } else {\n    goog.asserts.assert(document.createEventObject);\n    // Older versions of IE (up to version 8) do not support the\n    // W3C event model. Use the IE specific function instead.\n    event \x3d document.createEventObject();\n    event.type \x3d opt_eventType || original.type;\n    event.bubbles \x3d goog.isDef(original.bubbles) ? original.bubbles : true;\n    event.cancelable \x3d original.cancelable || false;\n    event.view \x3d original.view || window;\n    event.detail \x3d original.detail || 0;\n  }\n  // Some focus events also have a nullable relatedTarget value which isn\x27t\n  // directly supported in the initUIEvent() method.\n  event.relatedTarget \x3d original.relatedTarget || null;\n  event.originalTimestamp \x3d original.timeStamp;\n  return event;\n};\n\n/**\n * Creates a keyboard event object for replaying through the DOM.\n * @param {!Event} original The event to create a new event from.\n * @param {string\x3d} opt_eventType The type this event is being handled as by\n *     jsaction. E.g. a keypress is handled as click in some cases.\n * @return {!Event} The event object.\n */\njsaction.createKeyboardEvent \x3d function(original, opt_eventType) {\n  var event;\n  if (jsaction.event.isSafari) {\n    // We have to fall back to a generic event for Safari, which has the WebKit\n    // keyCode bug noted below, but is also incapable of fixing it with\n    // Object.defineProperty due to another bug:\n    // https://bugs.webkit.org/show_bug.cgi?id\x3d36423\n    event \x3d jsaction.createGenericEvent_(original, opt_eventType);\n    event.ctrlKey \x3d original.ctrlKey;\n    event.altKey \x3d original.altKey;\n    event.shiftKey \x3d original.shiftKey;\n    event.metaKey \x3d original.metaKey;\n    event.keyCode \x3d original.keyCode;\n    event.charCode \x3d original.charCode;\n    event.originalTimestamp \x3d original.timeStamp;\n    return event;\n  }\n  if (document.createEvent) {\n    // Event creation as per W3C event model specification.  This codepath\n    // is used by most non-IE browsers and also by IE 9 and later.\n    event \x3d document.createEvent(\x27KeyboardEvent\x27);\n    if (event.initKeyboardEvent) {\n      // W3C DOM Level 3 Events model.\n      var modifiers \x3d jsaction.createKeyboardModifiersList_(original.altKey,\n          original.ctrlKey, original.metaKey, original.shiftKey);\n      event.initKeyboardEvent(\n          opt_eventType || original.type,\n          true,\n          true,\n          window,\n          original.charCode,\n          original.keyCode,\n          original.location,\n          modifiers,\n          original.repeat,\n          original.locale);\n\n      // Blink and Webkit have a long-standing bug that causes the \x27keyCode\x27 and\n      // \x27which\x27 properties to always be set to 0 when synthesizing a keyboard\n      // event. Details at: https://bugs.webkit.org/show_bug.cgi?id\x3d16735\n      // It unfortunately looks like IE9+ also copied this behavior, when they\n      // implemented DOM3 events.  We work around it by redefining the noted\n      // properties; a simple assignment here would fail because the native\n      // properties are readonly.\n      if (jsaction.event.isWebKit || jsaction.event.isIe ||\n          jsaction.event.isGecko) {\n        var keyCodeGetter \x3d goog.functions.constant(original.keyCode);\n        Object.defineProperty(event, \x27keyCode\x27, {\n          get: keyCodeGetter\n        });\n        Object.defineProperty(event, \x27which\x27, {\n          get: keyCodeGetter\n        });\n      }\n\n    } else {\n      // Gecko only supports an older/deprecated version from DOM Level 2. See\n      // https://developer.mozilla.org/en/DOM/event.initKeyEvent for details.\n      goog.asserts.assert(event.initKeyEvent);\n      event.initKeyEvent(\n          opt_eventType || original.type,\n          true,\n          true,\n          window,\n          original.ctrlKey,\n          original.altKey,\n          original.shiftKey,\n          original.metaKey,\n          original.keyCode,\n          original.charCode);\n    }\n  } else {\n    // Older versions of IE (up to version 8) do not support the\n    // W3C event model. Use the IE specific function instead.\n    goog.asserts.assert(document.createEventObject);\n    event \x3d document.createEventObject();\n    event.type \x3d opt_eventType || original.type;\n    event.repeat \x3d original.repeat;\n    event.ctrlKey \x3d original.ctrlKey;\n    event.altKey \x3d original.altKey;\n    event.shiftKey \x3d original.shiftKey;\n    event.metaKey \x3d original.metaKey;\n    event.keyCode \x3d original.keyCode;\n    event.charCode \x3d original.charCode;\n  }\n  event.originalTimestamp \x3d original.timeStamp;\n  return event;\n};\n\n\n/**\n * Creates a mouse event object for replaying through the DOM.\n * @param {!Event} original The event to create a new event from.\n * @param {string\x3d} opt_eventType The type this event is being handled as by\n *     jsaction. E.g. a keypress is handled as click in some cases.\n * @return {!MouseEvent} The event object.\n */\njsaction.createMouseEvent \x3d function(original, opt_eventType) {\n  var event;\n  if (document.createEvent) {\n    // Event creation as per W3C event model specification.  This codepath\n    // is used by most non-IE browsers and also by IE 9 and later.\n    event \x3d document.createEvent(\x27MouseEvent\x27);\n    // On IE and Opera \x3c 12, we must provide non-undefined values to\n    // initMouseEvent, otherwise it will fail.\n    event.initMouseEvent(\n        opt_eventType || original.type,\n        true,  // canBubble\n        true,  // cancelable\n        window,\n        original.detail || 1,\n        original.screenX || 0,\n        original.screenY || 0,\n        original.clientX || 0,\n        original.clientY || 0,\n        original.ctrlKey || false,\n        original.altKey || false,\n        original.shiftKey || false,\n        original.metaKey || false,\n        original.button || 0,\n        original.relatedTarget || null);\n\n  } else {\n    goog.asserts.assert(document.createEventObject);\n    // Older versions of IE (up to version 8) do not support the\n    // W3C event model. Use the IE specific function instead.\n    event \x3d document.createEventObject();\n    event.type \x3d opt_eventType || original.type;\n    event.clientX \x3d original.clientX;\n    event.clientY \x3d original.clientY;\n    event.button \x3d original.button;\n    event.detail \x3d original.detail;\n    event.ctrlKey \x3d original.ctrlKey;\n    event.altKey \x3d original.altKey;\n    event.shiftKey \x3d original.shiftKey;\n    event.metaKey \x3d original.metaKey;\n  }\n  event.originalTimestamp \x3d original.timeStamp;\n  return event;\n};\n\n\n/**\n * Creates a generic event object for replaying through the DOM.\n * @param {!Event} original The event to create a new event from.\n * @param {string\x3d} opt_eventType The type this event is being handled as by\n *     jsaction. E.g. a keypress is handled as click in some cases.\n * @return {!Event} The event object.\n * @private\n */\njsaction.createGenericEvent_ \x3d function(original, opt_eventType) {\n  var event;\n  if (document.createEvent) {\n    // Event creation as per W3C event model specification.  This codepath\n    // is used by most non-IE browsers and also by IE 9 and later.\n    event \x3d document.createEvent(\x27Event\x27);\n    event.initEvent(\n        opt_eventType || original.type,\n        true,\n        true);\n  } else {\n    // Older versions of IE (up to version 8) do not support the\n    // W3C event model. Use the IE specific function instead.\n    goog.asserts.assert(document.createEventObject);\n    event \x3d document.createEventObject();\n    event.type \x3d opt_eventType || original.type;\n  }\n  event.originalTimestamp \x3d original.timeStamp;\n  return event;\n};\n\n\n/**\n * Creates an event object for replaying through the DOM.\n * NOTE(ruilopes): This function is visible just for testing.  Please don\x27t use\n * it outside JsAction internal testing.\n * TODO(ruilopes): Add support for FocusEvent and WheelEvent.\n * @param {!Event} original The event to create a new event from.\n * @param {string\x3d} opt_eventType The type this event is being handled as by\n *     jsaction. E.g. a keypress is handled as click in some cases.\n * @return {!Event} The event object.\n */\njsaction.createEvent \x3d function(original, opt_eventType) {\n  var event;\n  var eventType;\n  if (original.type \x3d\x3d jsaction.EventType.CUSTOM) {\n    eventType \x3d jsaction.EventType.CUSTOM;\n  } else {\n    eventType \x3d opt_eventType || original.type;\n  }\n\n  if (jsaction.isKeyboardEvent_(eventType)) {\n    event \x3d jsaction.createKeyboardEvent(original, opt_eventType);\n  } else if (jsaction.isMouseEvent_(eventType)) {\n    event \x3d jsaction.createMouseEvent(original, opt_eventType);\n  } else if (jsaction.isUiEvent_(eventType)) {\n    event \x3d jsaction.createUiEvent(original, opt_eventType);\n  } else if (eventType \x3d\x3d jsaction.EventType.CUSTOM) {\n    goog.asserts.assert(opt_eventType);\n    event \x3d jsaction.createCustomEvent(\n        opt_eventType,\n        original[\x27detail\x27][\x27data\x27],\n        original[\x27detail\x27][\x27triggeringEvent\x27]);\n    event.originalTimestamp \x3d original.timeStamp;\n  } else {\n    // This ensures we don\x27t send an undefined event object to the replayer.\n    event \x3d jsaction.createGenericEvent_(original, opt_eventType);\n  }\n  return event;\n};\n\n\n/**\n * Sends an event for replay to the DOM.\n * @param {!EventTarget} target The target for the event.\n * @param {!Event} event The event object.\n * @return {boolean} The return value of the event replay, i.e., whether\n *     preventDefault() was called on it.\n */\njsaction.triggerEvent \x3d function(target, event) {\n  if (target.dispatchEvent) {\n    return target.dispatchEvent(event);\n  } else {\n    goog.asserts.assert(target.fireEvent);\n    return target.fireEvent(\x27on\x27 + event.type, event);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/jsaction/replay.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/jsaction_dispatcher.js";
eval("/**\n * @fileoverview Initialization of JsAction dispatching.\n */\n\ngoog.provide(\x27gws.jsaction\x27);\ngoog.provide(\x27gws.jsaction.Handler\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom.dataset\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.math\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27gws.debug.telemetry\x27);\ngoog.require(\x27gws.debug.telemetry.Beacon\x27);\ngoog.require(\x27gws.jsaction.GwsActionFlow\x27);\ngoog.require(\x27gws.moduleManager\x27);\ngoog.require(\x27jsaction\x27);\ngoog.require(\x27jsaction.ActionFlow\x27);\ngoog.require(\x27jsaction.Attribute\x27);\ngoog.require(\x27jsaction.Cache\x27);\ngoog.require(\x27jsaction.Char\x27);\ngoog.require(\x27jsaction.Dispatcher\x27);\ngoog.require(\x27jsaction.event\x27);\ngoog.require(\x27jsaction.replayEvent\x27);\ngoog.require(\x27search.log.errorLogger\x27);\ngoog.require(\x27search.log.jsaction\x27);\n\n/**\n * A JsAction handler with expanded arguments:\n *\n * 1) The element where the action was triggered;\n * 2) The dataset for the element (i.e., all data-* attribute values);\n * 3) The event triggered at the element;\n * 4) The action triggered at the element.\n *\n * Optionally, return true to trigger document-level event handlers.\n *\n * @typedef {function(!Element, !Object\x3cstring, string\x3e, !Event,\n *                    !jsaction.ActionFlow): (?boolean|undefined)}\n */\ngws.jsaction.Handler;\n\n/**\n * Default handlers that should be registered on init().\n * @type {!Object\x3cstring, !gws.jsaction.Handler\x3e}\n */\ngws.jsaction.defaultHandlers \x3d {};\n\n/**\n * The handler for the fire event.\n * @type {?function(?jsaction.ActionFlow)}\n */\ngws.jsaction.fireHandler \x3d null;\n\n/**\n * The GWS JsAction Dispatcher instance.\n * @private @const {!jsaction.Dispatcher}\n */\ngws.jsaction.dispatcher_ \x3d new jsaction.Dispatcher();\n\n\n/**\n * A map of namespaces and all corresponding handlers that have been registered.\n * @type {!Object\x3c!Array\x3cstring\x3e\x3e}\n * @private\n */\ngws.jsaction.handlers_ \x3d {};\n\n\n/**\n * A map of all proxy handlers.\n * @private {!Object\x3cstring, gws.jsaction.Handler\x3e}\n */\ngws.jsaction.proxyHandlers_ \x3d {};\n\n\n/**\n * JsAction logger instance.\n * @private {goog.log.Logger}\n */\ngws.jsaction.logger_ \x3d goog.log.getLogger(\x27gws.jsaction\x27);\n\n\n/**\n * The maximum report rate.\n * @private {number}\n * @const\n */\ngws.jsaction.CSI_REPORT_RATE_MAX_ \x3d 100;\n\n\n/**\n * Whether we will report latency information.\n * @private {boolean}\n */\ngws.jsaction.csiReportActive_ \x3d false;\n\n\n/**\n * The rate a which we will be report latency information.  This number must be\n * between 0 and 100, where 100 means we will always report.\n * @private {number}\n */\ngws.jsaction.csiReportRate_ \x3d 0;\n\n\n/**\n * @return {!jsaction.Dispatcher}\n */\ngws.jsaction.getDispatcher \x3d function() {\n  return gws.jsaction.dispatcher_;\n};\n\n\n/**\n * When Wiz is enabled, there are 2 active jsaction dispatchers: the Wiz one\n * and the GWS one. This works by having the Wiz Dispatcher forward anything it\n * doesn\x27t recognize to gws.jsaction.dispatchFromWiz. To see how this is wired\n * up, see gws.jsaction_wiz.FusionBootstrapModule.\n *\n * gws.jsaction.dispatcher_ will always be defined, but it may sit behind the\n * Wiz Dispatcher. In some cases, we need to access whichever is the primary\n * one.\n *\n * @suppress {missingProperties}\n * @return {!jsaction.Dispatcher}\n * @private\n */\ngws.jsaction.getPrimaryDispatcher_ \x3d function() {\n  if (window.document[\x27__wizdispatcher\x27]) {\n    return window.document[\x27__wizdispatcher\x27].getJsActionDispatcher();\n  }\n  return gws.jsaction.dispatcher_;\n};\n\n\n/**\n * Binds the JsAction Dispatcher instance to the EventContract instance.\n * @private\n */\ngws.jsaction.bindDispatcher_ \x3d function() {\n  if (google.jsad) {\n    google.jsad(\n        goog.bind(gws.jsaction.dispatcher_.dispatch, gws.jsaction.dispatcher_));\n    goog.log.info(gws.jsaction.logger_, \x27Dispatcher bound to EventContract.\x27);\n  }\n};\n\n\n/**\n * Replays queued events. This allows for events that were captured before the\n * JsAction dispatcher is loaded to be replayed.\n * @param {!Array\x3c!jsaction.EventInfo\x3e} queue The queued events.\n * @param {!jsaction.Dispatcher} dispatcher The dispatcher instance.\n * @private\n */\ngws.jsaction.replayQueuedEvents_ \x3d function(queue, dispatcher) {\n  // We must use a forward for() loop here, since events have to be dispatched\n  // in a FIFO order.\n  for (var index \x3d 0; index \x3c queue.length;) {\n    var eventInfo \x3d queue[index];\n    if (dispatcher.canDispatch(eventInfo)) {\n      // We can only replay and remove an event from the queue if there\x27s an\n      // action registered to process it.\n      jsaction.replayEvent(eventInfo);\n      goog.array.splice(queue, index, 1);\n    } else {\n      // Otherwise, keep processing the queue and leave the event in it for\n      // future event replaying (e.g., when new actions are registered on the\n      // dispatcher).\n      index++;\n    }\n  }\n};\n\n\n/**\n * @param {!jsaction.ActionFlow} actionFlow\n */\ngws.jsaction.dispatchFromWiz \x3d function(actionFlow) {\n  goog.asserts.assert(actionFlow instanceof gws.jsaction.GwsActionFlow);\n  var gwsActionFlow \x3d /** @type {!gws.jsaction.GwsActionFlow} */ (actionFlow);\n  gws.jsaction.dispatcher_.dispatch(gwsActionFlow.eventInfo);\n};\n\n\n/**\n * Splits the namespaced action into its namespace and action name.\n * @param {string} action The action we want to split.\n * @return {{namespace: string, actionName: string}}\n */\ngws.jsaction.splitNamespacedAction \x3d function(action) {\n  goog.asserts.assert(\n      goog.string.contains(action, jsaction.Char.NAMESPACE_ACTION_SEPARATOR));\n  var parts \x3d goog.string.splitLimit(\n      action, jsaction.Char.NAMESPACE_ACTION_SEPARATOR, 1);\n  return {namespace: parts[0], actionName: parts[1]};\n};\n\n\n/**\n * Sets the action for the given element.  This erases the current computed\n * JsAction event name cache.\n * @param {!Element} element The element containing the jsaction attribute.\n * @param {string} newAction The new action to be set on the element.\n */\ngws.jsaction.setAction \x3d function(element, newAction) {\n  element.setAttribute(jsaction.Attribute.JSACTION, newAction);\n  jsaction.Cache.clear(element);\n};\n\n\n/**\n * Sets the action for the given element.  This erases the current computed\n * JsAction event name cache.\n * @param {!Element} element The element containing the jsaction attribute.\n * @param {string} moduleId The Pinto Module ID which contains \x27newAction\x27.\n * @param {string} newAction The new action to be set on the element.\n */\ngws.jsaction.setActionFromModule \x3d function(element, moduleId, newAction) {\n  gws.jsaction.setAction(element, moduleId + \x27.\x27 + newAction);\n};\n\n\n/**\n * Dispatch an event to a different action/element.\n * @param {!Event} event The event to be dispatched.\n * @param {!Element} element The element to dispatch the action to.\n */\ngws.jsaction.dispatchTo \x3d function(event, element) {\n  var eventInfo \x3d {\x27event\x27: event, \x27targetElement\x27: element};\n  jsaction.replayEvent(/** @type {!jsaction.EventInfo} */ (eventInfo));\n};\n\n\n/**\n * Invokes a specific jsaction using gws.jsaction.Handler handler function\n * signature.  This function must invoked with the \x3celement, dataset, event,\n * flow\x3e parameters expected by the action handler. This will attempt to load\n * the relevant pinto module if no handler is already loaded.\n * @param {string} action The action to be invoked.\n * @param {!Element\x3d} opt_element If provided, the action\x27s context element.\n * @param {!Object\x3cstring,string\x3e\x3d} opt_dataset If provided, the action\x27s\n *     context dataset.\n * @param {!Event\x3d} opt_event If provided, the action\x27s context event.\n * @param {!jsaction.ActionFlow\x3d} opt_actionFlow If provided, the action\x27s\n *     context flow.\n * @param {boolean\x3d} opt_noLoad If true, module load will not be attempted.\n */\ngws.jsaction.invokeAction \x3d function(\n    action, opt_element, opt_dataset, opt_event, opt_actionFlow, opt_noLoad) {\n  var handler \x3d gws.jsaction.proxyHandlers_[action];\n  if (handler) {\n    var dataset \x3d opt_dataset;\n    if (!dataset \x26\x26 opt_element) {\n      dataset \x3d goog.dom.dataset.getAll(opt_element);\n    }\n    // Re-casting to make the compiler happy.  Handlers implement signatures by\n    // adding parameters at their will, hence the optional bit in this\n    // function\x27s parameter signatures.\n    handler(\n        /** @type {!Element} */ (opt_element),\n        /** @type {!Object\x3cstring,string\x3e} */ (dataset),\n        /** @type {!Event} */ (opt_event),\n        /** @type {!jsaction.ActionFlow} */ (opt_actionFlow));\n  } else if (!opt_noLoad) {\n    gws.jsaction.loader_(\n        gws.jsaction.dispatcher_,\n        gws.jsaction.splitNamespacedAction(action).namespace, null,\n        goog.partial(\n            gws.jsaction.invokeAction, action, opt_element, opt_dataset,\n            opt_event, opt_actionFlow, true /* no load */));\n  }\n};\n\n\n/**\n * Computes the qualified name for a given action.\n * @param {string} ns The namespace of the action.\n * @param {string} actionName The name of the action.\n * @param {string\x3d} opt_eventName The optional DOM event name.\n * @return {string} The qualified name.\n * @private\n */\ngws.jsaction.computeQualifiedName_ \x3d function(ns, actionName, opt_eventName) {\n  var computedName \x3d \x27\x27;\n  if (opt_eventName) {\n    computedName +\x3d opt_eventName + jsaction.Char.EVENT_ACTION_SEPARATOR;\n  }\n  computedName +\x3d ns + jsaction.Char.NAMESPACE_ACTION_SEPARATOR + actionName;\n  return computedName;\n};\n\n\n/**\n * Registers a proxy handler for a given action, by expanding its ActionFlow\n * parameter into parameters accepted by gws.jsaction.Handler functions.\n * @param {string} ns The namespace of the action.\n * @param {string} actionName The name of the action.\n * @param {gws.jsaction.Handler} handler An event handling callback.\n * @private\n */\ngws.jsaction.registerProxyHandler_ \x3d function(ns, actionName, handler) {\n  var qualifiedName \x3d gws.jsaction.computeQualifiedName_(ns, actionName);\n  gws.jsaction.proxyHandlers_[qualifiedName] \x3d handler;\n\n  var namespaceProxyHandlers \x3d {};\n  namespaceProxyHandlers[actionName] \x3d function(actionFlow) {\n    var telemetryBeacon \x3d\n        new gws.debug.telemetry.Beacon(\x27jsaction\x27, qualifiedName);\n    gws.debug.telemetry.beginInteraction(telemetryBeacon);\n    goog.log.fine(gws.jsaction.logger_, \x27Handler invoked: \x27 + qualifiedName);\n    var element \x3d goog.asserts.assert(actionFlow.node());\n    var dataset \x3d goog.dom.dataset.getAll(element);\n    var event \x3d goog.asserts.assert(actionFlow.event());\n    if (!handler(element, dataset, event, actionFlow)) {\n      jsaction.event.stopPropagation(event);\n    }\n    gws.debug.telemetry.endInteraction(telemetryBeacon);\n  };\n  goog.log.info(gws.jsaction.logger_, \x27Registered action \x27 + qualifiedName);\n  gws.jsaction.dispatcher_.registerHandlers(ns, null, namespaceProxyHandlers);\n};\n\n\n/**\n * Registers a set of JsAction handlers.\n * @param {string} ns Namespace where handlers are registered.\n * @param {!Object\x3cgws.jsaction.Handler\x3e} handlers A map from names to event\n *     handling callbacks.\n * @param {boolean\x3d} opt_manualUnregister If true, don\x27t keep track of handlers\n *     internally. In this case, handlers must be manually unregistered.\n */\ngws.jsaction.registerHandlers \x3d function(ns, handlers, opt_manualUnregister) {\n  // See go/reactive-model design doc.\n  goog.asserts.assert(ns !\x3d \x27r\x27, \x27The \x22r\x22 namespace is reserved by reactive.\x27);\n  goog.asserts.assert(\n      ns !\x3d \x27fire\x27, \x27The \x22fire\x22 namespace is reserved by GWS custom jsaction.\x27);\n\n  for (var name in handlers) {\n    gws.jsaction.registerProxyHandler_(ns, name, handlers[name]);\n  }\n\n  // Skip internal registration lifecycle.\n  if (opt_manualUnregister) {\n    return;\n  }\n\n  gws.jsaction.handlers_[ns] \x3d gws.jsaction.handlers_[ns] || [];\n\n  for (var name in handlers) {\n    if (!goog.array.contains(gws.jsaction.handlers_[ns], name)) {\n      goog.array.insert(gws.jsaction.handlers_[ns], name);\n    }\n  }\n};\n\n\n/**\n * Registers a JsAction handler for which exceptions are caught and logged. The\n * exceptions are passed to opt_errorHandler or search.log.errorLogger.log.\n * Note that asynchronous code launched by the handler will not be checked.\n * @param {string} ns Namespace where handlers are registered.\n * @param {!Object\x3cgws.jsaction.Handler\x3e} handlers A map from names to event\n *     handling callbacks.\n * @param {function(Error)\x3d} opt_errorHandler A callback to receive the\n *     exception and respond appropriately. If not passed, the default is\n *     to log the exception with search.log.errorLogger.logs.\n */\ngws.jsaction.registerCheckedHandlers \x3d function(\n    ns, handlers, opt_errorHandler) {\n  var errorHandler \x3d opt_errorHandler || function(e) {\n    search.log.errorLogger.log(e);\n  };\n  var wrappedHandlers \x3d goog.object.map(handlers, function(handler) {\n    return function() {\n      try {\n        return handler.apply(this, arguments);\n      } catch (e) {\n        errorHandler(e);\n      }\n    };\n  });\n  gws.jsaction.registerHandlers(ns, wrappedHandlers);\n};\n\n\n/**\n * Wrapper for JsAction Dispatcher handler unregistration.\n * @param {string} ns Namespace where the handlers are registered.\n * @param {!Array\x3cstring\x3e} names The handlers names to be unregistered.\n */\ngws.jsaction.unregisterHandlers \x3d function(ns, names) {\n  // Iterate backwards in case names and handlers_[ns] are the same array.\n  for (var i \x3d names.length - 1; i \x3e\x3d 0; --i) {\n    gws.jsaction.dispatcher_.unregisterHandler(ns, names[i]);\n    if (ns in gws.jsaction.handlers_) {\n      goog.array.remove(gws.jsaction.handlers_[ns], names[i]);\n      gws.jsaction.unregisterProxyHandlers_(ns);\n      if (gws.jsaction.handlers_[ns].length \x3d\x3d 0) {\n        delete gws.jsaction.handlers_[ns];\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} eventType\n * @param {function(!Event):(boolean|undefined)} handler\n * @return {function(!Event):(boolean|undefined)} The handler.  This can be\n *     useful in cases where the handler is wrapped in goog.bind() and later\n *     passed to `unregisterGlobalHandler`.\n */\ngws.jsaction.registerGlobalHandler \x3d function(eventType, handler) {\n  gws.jsaction.getPrimaryDispatcher_().registerGlobalHandler(\n      eventType, handler);\n  return handler;\n};\n\n\n/**\n * @param {string} eventType\n * @param {function(!Event):(boolean|undefined)} handler\n */\ngws.jsaction.unregisterGlobalHandler \x3d function(eventType, handler) {\n  gws.jsaction.getPrimaryDispatcher_().unregisterGlobalHandler(\n      eventType, handler);\n};\n\n\n/**\n * Loads a Pinto module with an id matching a JsAction namepsace.\n * @param {!jsaction.Dispatcher} dispatcher The JsAction dispatcher for this\n *     loader.\n * @param {string} namespace The namespace that will match a Pinto module id.\n * @param {?jsaction.EventInfo} eventInfo The event info.\n * @param {!Function\x3d} opt_callback A callback to be called when the load\n *     completes.\n * @private\n */\ngws.jsaction.loader_ \x3d function(\n    dispatcher, namespace, eventInfo, opt_callback) {\n  var element \x3d eventInfo \x26\x26 eventInfo[\x27actionElement\x27];\n  if (element \x26\x26 goog.dom.dataset.get(element, \x27noload\x27) !\x3d null) {\n    return;\n  }\n\n  // Note: If the jsaction namespace is equal to \x27jsl\x27 then it corresponds to\n  // client side jslayout that hasn\x27t loaded yet. If so, fail silently to\n  // avoid unnecessary error spam.\n  // https://cs.corp.google.com/piper///depot/google3/javascript/template/jslayout/syntax.js?l\x3d608\n  if (namespace \x3d\x3d \x27jsl\x27) {\n    return;\n  }\n\n  try {\n    gws.moduleManager.load(namespace, opt_callback);\n  } catch (e) {\n    search.log.errorLogger.log(e, {\x27ns\x27: namespace});\n    goog.log.error(\n        gws.jsaction.logger_,\n        \x27Error auto-loading pinto module \x27 + namespace + \x27 from jsaction.  \x27 +\n            \x27Perhaps the module does not exist? Rename your jsaction \x27 +\n            \x27namespace to match your pinto module id. If you cannot use a module \x27 +\n            \x27id for the namespace, add data-noload to the DOM element.\x27,\n        e);\n  }\n};\n\n\n/**\n * The initialization function for this module.\n * @param {!Object\x3d} opt_config Configuration from the module interface.  May be\n *     undefined since jsaction is an \x22always activated\x22 module.\n */\ngws.jsaction.init \x3d function(opt_config) {\n  if (opt_config \x26\x26 opt_config[\x27csi\x27]) {\n    gws.jsaction.csiReportActive_ \x3d true;\n    gws.jsaction.csiReportRate_ \x3d Number(opt_config[\x27csir\x27]);\n  }\n\n  if (!gws.jsaction.csiReportActive_ ||\n      (goog.math.randomInt(gws.jsaction.CSI_REPORT_RATE_MAX_) \x3e\x3d\n       gws.jsaction.csiReportRate_)) {\n    const {disableActionLoggerReport} \x3d goog.module.get(\x27search.log.jsaction\x27);\n    // Do not report, disabled by sampling.\n    disableActionLoggerReport();\n  }\n\n  gws.jsaction.dispatcher_.setEventReplayer(gws.jsaction.replayQueuedEvents_);\n  gws.jsaction.dispatcher_.registerDefaultLoader(gws.jsaction.loader_);\n\n  // If Wiz is enabled, we don\x27t bind the jsaction Dispatcher, but instead\n  // jsaction events will be delegated to us via gws.jsaction.dispatchFromWiz.\n  if (!gws.jsaction.isWizEnabled_()) {\n    gws.jsaction.bindDispatcher_();\n  }\n\n  // Register common handlers.\n  gws.jsaction.registerHandlers(\x27jsa\x27, gws.jsaction.defaultHandlers);\n\n  const fireHandler \x3d gws.jsaction.fireHandler;\n  if (fireHandler) {\n    gws.jsaction.dispatcher_.registerNamespaceHandler(\x27fire\x27, fireHandler);\n  }\n};\n\n\n/**\n * Unregisters all proxy handlers with the given namespace.\n * @param {string} ns Namespace to unregister.\n * @private\n */\ngws.jsaction.unregisterProxyHandlers_ \x3d function(ns) {\n  for (var qualifiedName in gws.jsaction.proxyHandlers_) {\n    var handlerNs \x3d gws.jsaction.splitNamespacedAction(qualifiedName).namespace;\n    if (handlerNs \x3d\x3d ns) {\n      delete gws.jsaction.proxyHandlers_[qualifiedName];\n    }\n  }\n};\n\n\n/**\n * Disposes JsAction handlers and removes non-retainable document callbacks.\n */\ngws.jsaction.dispose \x3d function() {\n  for (var ns in gws.jsaction.handlers_) {\n    gws.jsaction.unregisterHandlers(ns, gws.jsaction.handlers_[ns]);\n    gws.jsaction.unregisterProxyHandlers_(ns);\n  }\n};\n\n\n/**\n * @return {boolean} true if Wiz was successfully installed, false if Wiz is\n * either not in use by this page, or did not install successfully.\n * Wiz is either installed by the \x27wb\x27 module or installed by the\n * jsaction_dispatcher_wiz.js, which is enabled via a mod when\n * Wiz.wiz_via_jsaction_mod is active.\n * @private\n */\ngws.jsaction.isWizEnabled_ \x3d function() {\n  // First, check if the Wiz jsaction contract was installed.  This happens if\n  // wiz.enable_wiz in wiz.gcl is true.\n  if (window[\x27gws_wizbind\x27]) {\n    // Second, check that the Wiz dispatcher was set up.  This could have\n    // been done either by the \x27wb\x27 module or the wiz_via_jsaction_mod.\n    if (window.document[\x27__wizdispatcher\x27]) {\n      // Wiz has already been correctly set up.\n      return true;\n    }\n    // The Wiz jsaction contract was installed, but nothing actually installed\n    // the Wiz dispatcher.\n    // This will log the problem but proceed with jsaction initialization so\n    // non-wiz interactivity still works.\n    search.log.errorLogger.log(\n        new Error(\x27Wiz jsaction contract enabled but Wiz not installed.\x27));\n  }\n  // Wiz was not enabled for this page.\n  return false;\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/jsaction_dispatcher.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1w');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1w');

}catch(e){_DumpException(e)}
/* _Module_:sy39 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy39');
var $googDebugFname="javascript/template/jslayout/reactive/controllerdata.js";
eval("goog.provide(\x27jslayout.reactive.ControllerData\x27);\n\ngoog.forwardDeclare(\x27goog.promise.Resolver\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.Context\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.JsnameDomBase\x27);\ngoog.forwardDeclare(\x27proto.jslayout.reactive.ReactiveTemplateMetadata\x27);\n\n\n\n/**\n * A struct for per-controller data. This data is typically attached\n * to a controller instance as `reactiveData__` field. The data\n * is then used by reactive API (e.g. getModel uses this data to\n * retrieve the model data).\n * @constructor\n * @struct\n */\njslayout.reactive.ControllerData \x3d function() {\n  /**\n   * The controller instance. May be null if the controller has not been created\n   * yet, or creation failed due to an exception thrown by the constructor.\n   * @type {Object}\n   */\n  this.controller \x3d null;\n\n  /**\n   * @type {proto.jslayout.reactive.ReactiveTemplateMetadata}\n   */\n  this.metadata \x3d null;\n\n  /**\n   * Constructor error. Set if controller cannot be created.\n   * @type {?}\n   */\n  this.error \x3d null;\n\n  /**\n   * Resolves to the controller instance. Set the first time a controller\n   * promise is requested.\n   * @type {?goog.promise.Resolver\x3c!Object\x3e}\n   */\n  this.resolver \x3d null;\n\n  /**\n   * This may be set to true by jslayout.reactive.delayConstructionBy() called\n   * from the controller\x27s constructor. When this is true, the controller is not\n   * accessible to other controllers and the jsaction functions on the\n   * controller will not be called.\n   * @type {boolean}\n   */\n  this.constructionDelayed \x3d false;\n\n  /**\n   * Set to true immediately after the controller\x27s constructor is called. This\n   * is used to ensure that jslayout.reactive.delayConstructionBy() is only\n   * called synchronously from within a controller\x27s constructor.\n   * @type {boolean}\n   */\n  this.constructorExecuted \x3d false;\n\n  /**\n   * The controller pool that creates this controller.\n   * @type {jslayout.reactive.ControllerPool}\n   */\n  this.controllerPool \x3d null;\n\n  /**\n   * The context this controller belongs to.\n   * @type {jslayout.reactive.Context}\n   */\n  this.context \x3d null;\n\n  /**\n   * The model object for the controller.\n   * @type {Object}\n   */\n  this.model \x3d null;\n\n  /**\n   * The DOM object for the controller.\n   * @type {jslayout.reactive.JsnameDomBase}\n   */\n  this.dom \x3d null;\n\n  /**\n   * The root element for the controller\x27s jslayout template.\n   *\n   * If this is null, the root element may still be available if\n   * rootElementClass is filled.\n   *\n   * @type {Element}\n   */\n  this.rootElement \x3d null;\n\n  /**\n   * The root element generated class for the controller\x27s jslayout\n   * template.\n   * @type {?string}\n   */\n  this.rootElementClass \x3d null;\n\n  /**\n   * The instantiation id. This is non-null only for controllers not\n   * managed by jslayout_js (i.e. controllers that are rendered from\n   * server).\n   * @type {?string}\n   */\n  this.instantiationId \x3d null;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/controllerdata.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/debug_api.js";
eval("/**\n * @fileoverview Shim API for jslayout.reactive.debug.*. Delegates to the global\n * ControllerDebugger object (google.cd) if it exists, otherwise does nothing.\n */\n\ngoog.provide(\x27jslayout.reactive.debugApi\x27);\n\ngoog.scope(function() {\n\nvar debugApi \x3d jslayout.reactive.debugApi;\n\n\n/**\n * Returns whether the controller debugger is enabled.\n * @return {boolean}\n */\ndebugApi.isEnabled \x3d function() {\n  return !!goog.getObjectByName(\x27google.cd\x27);\n};\n\n\n/**\n * @param {function(!Object)} callback Called with global ControllerDebugger\n *     object, if it exists.\n * @private\n */\ndebugApi.withDebugger_ \x3d function(callback) {\n  var controllerDebugger \x3d goog.getObjectByName(\x27google.cd\x27);\n  if (controllerDebugger) {\n    callback(controllerDebugger);\n  }\n};\n\n\n/**\n * @see {jslayout.reactive.debug.ControllerDebugger#frameworkLoaded}\n */\ndebugApi.frameworkLoaded \x3d function() {\n  debugApi.withDebugger_(function(controllerDebugger) {\n    controllerDebugger[\x27f\x27]();\n  });\n};\n\n\n/**\n * @see {jslayout.reactive.debug.ControllerDebugger#controllerMetadataAdded}\n * @param {!Array} rawMetadata\n */\ndebugApi.controllerMetadataAdded \x3d function(rawMetadata) {\n  debugApi.withDebugger_(function(controllerDebugger) {\n    controllerDebugger[\x27a\x27](rawMetadata);\n  });\n};\n\n\n/**\n * @see {jslayout.reactive.debug.ControllerDebugger#controllerRegistered}\n * @param {string} templateKey\n */\ndebugApi.controllerRegistered \x3d function(templateKey) {\n  debugApi.withDebugger_(function(controllerDebugger) {\n    controllerDebugger[\x27r\x27](templateKey);\n  });\n};\n\n\n/**\n * @see {jslayout.reactive.debug.ControllerDebugger#controllerCreated}\n * @param {string} templateKey\n * @param {?string} instantiationId\n * @param {Object\x3d} opt_controller\n * @param {Object\x3d} opt_model\n * @param {?\x3d} opt_error\n */\ndebugApi.controllerCreated \x3d function(templateKey, instantiationId,\n    opt_controller, opt_model, opt_error) {\n  debugApi.withDebugger_(function(controllerDebugger) {\n    controllerDebugger[\x27c\x27](templateKey, instantiationId, opt_controller,\n                            opt_model, opt_error);\n  });\n};\n\n\n/**\n * @see {jslayout.reactive.debug.ControllerDebugger#controllerDisposed}\n * @param {string} instantiationId\n */\ndebugApi.controllerDisposed \x3d function(instantiationId) {\n  debugApi.withDebugger_(function(controllerDebugger) {\n    controllerDebugger[\x27d\x27](instantiationId);\n  });\n};\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/debug_api.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/migratedkey.js";
eval("goog.provide(\x27jslayout.reactive.MigratedKey\x27);\n\ngoog.require(\x27goog.asserts\x27);\n\n\n/**\n * Parsed key that contains a current value, and optionally an old value used\n * for go/jscontroller-migrations. These keys are used in various places in\n * Reactive: template key (for controller registration), jsaction key, model\n * param name, etc.\n *\n * Current and old key values are not directly accessible. Instead, a general\n * looping construct, applyUntilReturn, is provided.\n *\n * @package\n */\njslayout.reactive.MigratedKey \x3d goog.defineClass(null, {\n  statics: {\n    // Keep in sync with kMigrationKeySeparator in\n    // google3/template/prototemplate/jslayout/constants.h.\n    /**\n     * Key separator for migrations.\n     * @private @const\n     */\n    SEPARATOR_: \x27$\x27\n  },\n\n\n  /**\n   * @param {string} encodedKey Encoded key that may contain migration\n   *     information. An encoded key is the current value, then the migration\n   *     key separator ($), then the old value. If the separator is missing,\n   *     then the entire encoded key is the current value, and the old value is\n   *     null.\n   */\n  constructor: function(encodedKey) {\n    var split \x3d encodedKey.split(jslayout.reactive.MigratedKey.SEPARATOR_);\n    goog.asserts.assert(split.length \x3c\x3d 2);\n\n    /**\n     * Current key value.\n     * @private @const {string}\n     */\n    this.val_ \x3d split[0];\n\n    /**\n     * Previous key value if there is a migration, otherwise null.\n     * @private @const {?string}\n     */\n    this.old_ \x3d split[1] || null;\n  },\n\n\n  /**\n   * Applies a given function to the current key, then to the old key if it\n   * exists. If the function returns a value (not undefined), then\n   * applyUntilReturn immediately returns that value. That is, if the function\n   * is applied to the current key and it returns a value, then it will not be\n   * applied to the old key.\n   * @param {function(this:THIS, string): (RET|undefined)} f Function to apply\n   *     to key values.\n   * @param {THIS\x3d} opt_this this object for f.\n   * @return {RET|undefined} The first defined return value from f.\n   * @template THIS\n   * @template RET\n   */\n  applyUntilReturn: function(f, opt_this) {\n    var value \x3d f.call(opt_this, this.val_);\n    if (!goog.isDef(value) \x26\x26 this.old_ !\x3d null) {\n      value \x3d f.call(opt_this, this.old_);\n    }\n    return value;\n  }\n});\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/migratedkey.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/controllerpool.js";
eval("goog.provide(\x27jslayout.reactive.ActionFunction\x27);\ngoog.provide(\x27jslayout.reactive.ControllerConstructor\x27);\ngoog.provide(\x27jslayout.reactive.ControllerPool\x27);\ngoog.provide(\x27jslayout.reactive.DomConstructor\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dispose\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27jslayout.reactive.ControllerData\x27);\ngoog.require(\x27jslayout.reactive.MigratedKey\x27);\ngoog.require(\x27jslayout.reactive.debugApi\x27);\n\ngoog.forwardDeclare(\x27jslayout.EvalContext\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.JsnameDomBase\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.TemplateParams\x27);\n\n\n/**\n * A typedef for controller constructors, each corresponding to a jslayout\n * template. The constructor accepts its model object as its first and only\n * argument.\n *\n * @typedef {function(new:Object, ...?)}\n */\njslayout.reactive.ControllerConstructor;\n\n\n/**\n * A typedef for DOM constructors, used for generated classes when jsname is\n * used.\n *\n * @typedef {function(new:jslayout.reactive.JsnameDomBase, !Object)}\n */\njslayout.reactive.DomConstructor;\n\n\n/**\n * A typedef for an action function. The actual function is typically\n * auto generated.\n *\n * TODO(chrishenry): The second parameter is supposed to be\n * !jsaction.ActionFlow, but we can not use that yet because there are\n * many compilation rules that have not forward declare/include\n * ActionFlow in their compilation.\n *\n * @typedef {function(?, ?, !jslayout.EvalContext)}\n */\njslayout.reactive.ActionFunction;\n\n\n\n/**\n * Creates a controller pool. A controller pool contains the necessary\n * data to create controllers and invoke actions on those controllers.\n * @param {!jslayout.reactive.Options} options\n * @constructor\n */\njslayout.reactive.ControllerPool \x3d function(options) {\n  /** @const @private {!jslayout.reactive.Options} */\n  this.options_ \x3d options;\n\n  /**\n   * A map from template id to constructor.\n   * @const\n   * @private {!Object.\x3cstring, jslayout.reactive.ControllerConstructor\x3e}\n   */\n  this.controllerCtors_ \x3d {};\n\n  /**\n   * A map from template id to empty constructor that creates an\n   * object with the same type and structure as the corresponding\n   * controller constructor. This is necessary because we want to be\n   * able to add metadata on the controller object before the\n   * controller is called, allowing jslayout.reactive.* functions\n   * (such as getRootElement) to work correctly even in the\n   * constructor code.\n   *\n   * This allows us to not require a base class for user-defined\n   * controller, which is a good idea because we want to discourage\n   * inheritance and encourage composition of controllers instead.\n   *\n   * Each constructor in ctors_ has a corresponding temporary\n   * constructor.\n   *\n   * TODO(chrishenry): Investigate other design options (such as base\n   * class) again in the future.\n   * @const\n   * @private {!Object.\x3cstring, function(new: Object)\x3e}\n   */\n  this.controllerEmptyCtors_ \x3d {};\n\n  /**\n   * A map from template id to model constructor for the corresponding\n   * template.\n   * @const\n   * @private {!Object.\x3cstring,\n   *     ?function(new:Object, !jslayout.reactive.TemplateParams)\x3e}\n   */\n  this.modelCtors_ \x3d {};\n\n  /**\n   * A map from template id to DOM class constructor for the corresponding\n   * template.\n   * @const\n   * @private {!Object.\x3cstring, ?jslayout.reactive.DomConstructor\x3e}\n   */\n  this.domCtors_ \x3d {};\n\n  /**\n   * A map from template id to a function that will call the\n   * controller constructor. The function accepts 3 parameters:\n   *  - tmpObj: The temporary object we create in `#createController`\n   *  - model: The created model object or null, if one does not exist.\n   *  - dom: The created DOM object or null, if one does not exist.\n   * @const\n   * @private {!Object.\x3cstring,\n   *     !jslayout.reactive.ControllerPool.ControllerCreationFunction\x3e}\n   */\n  this.controllerCreationFn_ \x3d {};\n\n  /**\n   * A map from reactive action name to actual handler.\n   * @const\n   * @private {!Object.\x3cstring, jslayout.reactive.ActionFunction\x3e}\n   */\n  this.actions_ \x3d {};\n\n  /**\n   * A map from reactive action name to jsname key, used for instance lookup on\n   * the parent controller.\n   * @const\n   * @private {!Object.\x3cstring, string\x3e}\n   */\n  this.jsnameKeys_ \x3d {};\n\n  /**\n   * A map from template key to human readable controller names.\n   * @const\n   * @private {!Object.\x3cstring, string\x3e}\n   */\n  this.controllerNames_ \x3d {};\n\n  /**\n   * A map from instantiation id to ControllerData instance. This map is\n   * only populated with controllers that have explicit instantiation\n   * ids. These are controllers that are instantiated from reactive\n   * metadata generated from server-side rendering of jslayout\n   * templates. In particular, templates that are managed by\n   * jslayout_js will not have their controllers registered here (in\n   * this case, the controllers can be found in the EvalContext\n   * associated with the element containing jsaction).\n   * @const\n   * @private {!Object\x3cstring, !jslayout.reactive.ControllerData\x3e}\n   */\n  this.controllerDataInstances_ \x3d {};\n\n  /**\n   * Function that is triggered around controller interactions (e.g. init and\n   * dispose calls.)\n   * @private {function(!jslayout.reactive.ControllerPool.ControllerEvent_,\n   *     !string)}\n   */\n  this.controllerLifecycleCallback_ \x3d goog.nullFunction;\n};\n\n\n/**\n * @define {boolean} Flag specifies whether to enable the human readable\n * controller names for use in the controller lifecycle callback functions.\n * Enabling this will result in leaking them in the js source. Ensure that this\n * is intended before using.\n */\ngoog.define(\x27jslayout.reactive.ControllerPool.UNOBFUSCATED_IDS_ENABLED\x27, false);\n\n\n/**\n * @typedef {function(!Object, ?, ?)}\n */\njslayout.reactive.ControllerPool.ControllerCreationFunction;\n\n\n/**\n * Sets the controller callback function for lifecycle events (e.g. init and\n * dispose). This function takes an event type and a sub type as its input.\n * @param {function(!jslayout.reactive.ControllerPool.ControllerEvent_,\n *     !string)} lifecycleCallback\n */\njslayout.reactive.ControllerPool.prototype.setControllerLifecycleCallback \x3d\n    function(lifecycleCallback) {\n  this.controllerLifecycleCallback_ \x3d lifecycleCallback;\n};\n\n\n/**\n * Registers a controller type and its associated model class for the given\n * template id. Calls to this method are auto-generated.\n * @param {string} encodedTemplateKey Either a template key corresponding to\n *     the controller class, or a string that encodes two template keys (for\n *     jscontroller migrations). This will be used to look up for the controller\n *     constructor when instantiating controller.\n * @param {jslayout.reactive.ControllerConstructor} controllerCtor The\n *     controller class constructor.\n * @param {?function(new:Object, !jslayout.reactive.TemplateParams)}\n *     modelCtor The generated model class constructor.\n * @param {?jslayout.reactive.DomConstructor} domCtor\n *     The generated DOM member class constructor, which provides accessors for\n *     named DOM elements in the template (jsname).\n * @param {jslayout.reactive.ControllerPool.ControllerCreationFunction}\n *     controllerCreationFn\n * @param {string} controllerName The name of the controller class.\n */\njslayout.reactive.ControllerPool.prototype.registerController \x3d function(\n    encodedTemplateKey, controllerCtor, modelCtor, domCtor,\n    controllerCreationFn, controllerName) {\n  /** @constructor */\n  var emptyCtor \x3d function() {};\n  goog.inherits(emptyCtor, controllerCtor);\n\n  var migratedTemplateKey \x3d\n      new jslayout.reactive.MigratedKey(encodedTemplateKey);\n  migratedTemplateKey.applyUntilReturn(function(templateKey) {\n    this.controllerCtors_[templateKey] \x3d controllerCtor;\n    this.controllerEmptyCtors_[templateKey] \x3d emptyCtor;\n    this.modelCtors_[templateKey] \x3d modelCtor;\n    this.domCtors_[templateKey] \x3d domCtor;\n    this.controllerCreationFn_[templateKey] \x3d controllerCreationFn;\n    if (jslayout.reactive.ControllerPool.UNOBFUSCATED_IDS_ENABLED) {\n      this.controllerNames_[templateKey] \x3d controllerName;\n    }\n    jslayout.reactive.debugApi.controllerRegistered(templateKey);\n  }, this);\n};\n\n\n/**\n * Registers a reactive handler. Calls to this method are auto-generated.\n * @param {string} actionName The action name, usually of the form\n *     ns_MyController#handleFoo, but may be obfuscated.\n * @param {jslayout.reactive.ActionFunction} fn The handler\n *     function. This function will be called with 3 parameters: the\n *     controller instance, the jsaction.ActionFlow instance, and the\n *     jslayout.EvalContext associated with the element containing the\n *     jsaction handler.\n * @param {string\x3d} opt_jsnameKey If present, the jsname key to use for\n *     looking up the child instance to actually use for action handling. This\n *     parameter is filled for actions like: jsaction\x3d\x22some_jsname.foo()\x22.\n */\njslayout.reactive.ControllerPool.prototype.registerAction \x3d\n    function(actionName, fn, opt_jsnameKey) {\n  var migratedActionName \x3d new jslayout.reactive.MigratedKey(actionName);\n  migratedActionName.applyUntilReturn(function(key) {\n    this.actions_[key] \x3d fn;\n  }, this);\n  if (opt_jsnameKey) {\n    this.jsnameKeys_[actionName] \x3d opt_jsnameKey;\n  }\n};\n\n\n/**\n * Whether a template with the given templateKey has a controller. If\n * this method is called before the template\x27s registerTemplate is\n * called, this will always return false.\n *\n * @param {string} templateKey\n * @return {boolean}\n */\njslayout.reactive.ControllerPool.prototype.hasController \x3d function(\n    templateKey) {\n  // This currently is equivalent to isControllerRegistered. In the\n  // future, controller can be late-loaded, so this would need to be updated.\n  return this.isControllerRegistered(templateKey);\n};\n\n\n/**\n * Whether the controller class for a template with the given\n * templateKey has been registered to this pool. This differ from\n * hasController in that hasController describes whether a template\n * can have a controller, and this describes whether a template\x27s\n * controller can be instantiated.\n * @param {string} encodedTemplateKey The template key to check--either a\n *     template key corresponding to the controller class, or a string that\n *     encodes two template keys (for jscontroller migrations).\n * @return {boolean} Whether the controller has been registered in the pool.\n */\njslayout.reactive.ControllerPool.prototype.isControllerRegistered \x3d function(\n    encodedTemplateKey) {\n  var migratedTemplateKey \x3d\n      new jslayout.reactive.MigratedKey(encodedTemplateKey);\n  return !!migratedTemplateKey.applyUntilReturn(function(templateKey) {\n    return this.controllerCtors_[templateKey];\n  }, this);\n};\n\n\n/**\n * Returns true if no reactive controller is registered at all.\n * @return {boolean}\n */\njslayout.reactive.ControllerPool.prototype.isEmpty \x3d function() {\n  for (var prop in this.controllerCtors_) {\n    if (this.controllerCtors_.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Creates a new controller with the given template id and reactive\n * data. Controller must be registered before createController is called.\n * @param {string} encodedTemplateKey Either a template key corresponding to\n *     the controller class, or a string that encodes two template keys (for\n *     jscontroller migrations). This will be used to look up for the controller\n *     constructor when instantiating controller.\n * @param {!jslayout.reactive.ControllerData} reactiveData The\n *     reactive controller data.\n * @param {!jslayout.reactive.TemplateParams} templateParams The template\n *     parameters.\n * @return {?Object} The newly created controller or null if the controller\n *     constructor throws an exception.\n */\njslayout.reactive.ControllerPool.prototype.createController \x3d function(\n    encodedTemplateKey, reactiveData, templateParams) {\n  goog.asserts.assert(!reactiveData.controller, \x27Controller already created\x27);\n  goog.asserts.assert(!reactiveData.error,\n                      \x27Controller creation already failed\x27);\n\n  var migratedTemplateKey \x3d\n      new jslayout.reactive.MigratedKey(encodedTemplateKey);\n  var templateKey \x3d migratedTemplateKey.applyUntilReturn(function(key) {\n    return key in this.controllerCtors_ ? key : undefined;\n  }, this);\n\n  var tempCtor \x3d this.controllerEmptyCtors_[templateKey];\n  var controllerCtor \x3d this.controllerCtors_[templateKey];\n  var modelCtor \x3d this.modelCtors_[templateKey];\n  var domCtor \x3d this.domCtors_[templateKey];\n  var controllerCreationFn \x3d this.controllerCreationFn_[templateKey];\n\n  goog.asserts.assert(controllerCtor, \x27Controller not registered.\x27);\n\n  try {\n    // We use a temporary ctor here so that we can construct the\n    // instance and append reactiveData__ before running the\n    // constructor logic. This allows constructor logic to access\n    // reactiveData__ as necessary (e.g. via jslayout.reactive.getRootElement).\n    var controller \x3d new tempCtor();\n    reactiveData.controller \x3d controller;\n    controller.reactiveData__ \x3d reactiveData;\n    controller.controllerName \x3d this.getControllerName(templateKey);\n    reactiveData.controllerPool \x3d this;\n    var model \x3d modelCtor ? new modelCtor(templateParams) : null;\n    reactiveData.model \x3d model;\n    var dom \x3d domCtor ? new domCtor(controller) : null;\n    reactiveData.dom \x3d dom;\n    this.controllerLifecycleCallback_(\n        jslayout.reactive.ControllerPool.ControllerEvent_.INIT,\n        controller.controllerName);\n    controllerCreationFn(controller, model, dom);\n    reactiveData.constructorExecuted \x3d true;\n    this.controllerLifecycleCallback_(\n        jslayout.reactive.ControllerPool.ControllerEvent_.INIT,\n        controller.controllerName);\n\n    if (reactiveData.instantiationId) {\n      jslayout.reactive.debugApi.controllerCreated(\n          templateKey, reactiveData.instantiationId, controller, model);\n    }\n\n    jslayout.reactive.ControllerPool.resolvePromise(reactiveData);\n    return controller;\n  } catch (e) {\n    reactiveData.controller \x3d null;\n    reactiveData.error \x3d e;\n    goog.log.error(\n        jslayout.reactive.ControllerPool.logger_,\n        \x27Exceptions occur while instantiating controllers for template id: \x27 +\n        templateKey, e);\n    jslayout.reactive.debugApi.controllerCreated(\n        templateKey, reactiveData.instantiationId, undefined /* controller */,\n        undefined /* model */, e);\n    this.options_.reportError(e);\n    jslayout.reactive.ControllerPool.resolvePromise(reactiveData);\n    return null;\n  }\n};\n\n\n/**\n * Tries to resolve the controller promise. Does nothing if a promise has not\n * been requested, or if the controller is still pending.\n * @param {!jslayout.reactive.ControllerData} controllerData The ControllerData\n *     for which to resolve the promise.\n */\njslayout.reactive.ControllerPool.resolvePromise \x3d function(controllerData) {\n  if (!controllerData.resolver) {\n    return;\n  }\n  if (controllerData.controller \x26\x26 !controllerData.constructionDelayed) {\n    controllerData.resolver.resolve(controllerData.controller);\n  } else if (controllerData.error) {\n    controllerData.resolver.reject(controllerData.error);\n  }\n};\n\n\n/**\n * Disposes the given controller. For controllers managed by a context\n * (server-rendered templates), this should only be called from context dispose.\n * @param {!jslayout.reactive.ControllerData} controllerData The controllerData\n *   from which we want the controller disposed.\n */\njslayout.reactive.ControllerPool.prototype.disposeController \x3d function(\n    controllerData) {\n  if (controllerData.controller) {\n    goog.asserts.assert(controllerData.controller.reactiveData__,\n        \x27Cannot dispose object: already disposed or not a controller\x27);\n    try {\n      this.controllerLifecycleCallback_(\n          jslayout.reactive.ControllerPool.ControllerEvent_.DISPOSE,\n          controllerData.controller.controllerName);\n      goog.dispose(controllerData.controller);\n    } catch (e) {\n      // Continue with cleanup when we got exception from dispose().\n      goog.log.error(\n          jslayout.reactive.ControllerPool.logger_,\n          \x27Exceptions occurs while disposing controllers with instance id: \x27 +\n          controllerData.instantiationId || \x27\x3cnone\x3e\x27, e);\n      this.options_.reportError(e);\n    } finally {\n      this.controllerLifecycleCallback_(\n          jslayout.reactive.ControllerPool.ControllerEvent_.DISPOSE,\n          controllerData.controller.controllerName);\n      // We remove this property because other code\n      // (cf. jslayout.reactive.bindToController) uses this property for\n      // verification purpose. We do not want disposed controller to\n      // pass such verification.\n      controllerData.controller.reactiveData__ \x3d null;\n    }\n  }\n  if (controllerData.instantiationId) {\n    delete this.controllerDataInstances_[controllerData.instantiationId];\n    jslayout.reactive.debugApi.controllerDisposed(\n        controllerData.instantiationId);\n  }\n};\n\n\n/**\n * Returns a name for the controller. If we are in unobfuscated mode, use the\n * full controller name. Otherwise use the controller\x27s templateId.\n * @param {string} templateId The template id corresponding to the\n *     model class.\n * @return {string} The name to use for this controller.\n */\njslayout.reactive.ControllerPool.prototype.getControllerName \x3d function(\n    templateId) {\n  if (jslayout.reactive.ControllerPool.UNOBFUSCATED_IDS_ENABLED) {\n    return this.controllerNames_[templateId];\n  }\n  return templateId;\n};\n\n\n/**\n * @param {string} instantiationId Controller instantiation id.\n * @return {!jslayout.reactive.ControllerData} The ControllerData\n *     associated with the id, or null if none exists.\n */\njslayout.reactive.ControllerPool.prototype.getControllerData \x3d function(\n    instantiationId) {\n  return this.controllerDataInstances_[instantiationId] || null;\n};\n\n\n/**\n * Starts tracking ControllerData regardless of whether controller can be\n * initialized immediately.\n *\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} metadata\n *     The template metadata.\n * @param {!jslayout.reactive.Context} context The reactive context.\n * @return {!jslayout.reactive.ControllerData} The controller instance\n *      for the template metadata and context.\n */\njslayout.reactive.ControllerPool.prototype.addControllerMetadata \x3d\n    function(metadata, context) {\n  var instantiationId \x3d goog.asserts.assert(metadata.getInstantiationId());\n\n  goog.asserts.assert(!this.controllerDataInstances_[instantiationId],\n      \x27Encountered duplicate template instantiation id.\x27);\n  var controllerData \x3d new jslayout.reactive.ControllerData;\n  controllerData.metadata \x3d metadata;\n  controllerData.instantiationId \x3d instantiationId;\n  controllerData.rootElementClass \x3d metadata.getDomRootClass();\n  controllerData.context \x3d context;\n  this.controllerDataInstances_[instantiationId] \x3d controllerData;\n\n  // Check if controller debugger is enabled before serializing JSPB.\n  if (jslayout.reactive.debugApi.isEnabled()) {\n    jslayout.reactive.debugApi.controllerMetadataAdded(metadata.toArray());\n  }\n\n  return controllerData;\n};\n\n\n/**\n * @param {string} actionName The action name.\n * @return {?jslayout.reactive.ActionFunction} The action function\n *     corresponding to the actionName.\n */\njslayout.reactive.ControllerPool.prototype.getAction \x3d function(actionName) {\n  var migratedActionName \x3d new jslayout.reactive.MigratedKey(actionName);\n  return migratedActionName.applyUntilReturn(function(key) {\n    return this.actions_[key];\n  }, this);\n};\n\n\n/**\n * @param {string} actionName\n * @return {string} The jsname key to use to find the instance to use to handle\n *     the given action.\n * @package\n */\njslayout.reactive.ControllerPool.prototype.getJsnameKey \x3d function(actionName) {\n  return this.jsnameKeys_[actionName];\n};\n\n\n/**\n * @private {goog.debug.Logger}\n */\njslayout.reactive.ControllerPool.logger_ \x3d goog.log.getLogger(\n    \x27jslayout.reactive.ControllerPool\x27);\n\n\n/**\n * @enum {string}\n * @private\n */\njslayout.reactive.ControllerPool.ControllerEvent_ \x3d {\n  INIT: \x27controller_init\x27,\n  DISPOSE: \x27controller_dispose\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/controllerpool.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/options.js";
eval("goog.provide(\x27jslayout.reactive.Options\x27);\n\ngoog.require(\x27goog.async.nextTick\x27);\n\ngoog.forwardDeclare(\x27jsaction.Dispatcher\x27);\ngoog.forwardDeclare(\x27jslayout.TemplatePool\x27);\n\n\n/**\n * Provides a container for all reactive customizable options.\n */\njslayout.reactive.Options \x3d goog.defineClass(null, {\n  /** @constructor */\n  constructor: function() {\n    /**\n     * @private {jslayout.TemplatePool}\n     */\n    this.templatePool_ \x3d null;\n\n    /**\n     * Handler for reporting caught exceptions (e.g. during controller\n     * creation and disposal).\n     * @private {function(!Error)}\n     */\n    this.errorHandler_ \x3d goog.nullFunction;\n\n    /**\n     * The global jsaction.Dispatcher registered by dispatcher.js.\n     * @private {jsaction.Dispatcher}\n     */\n    this.jsactionDispatcher_ \x3d null;\n\n    /**\n     * A loader function to be used to load additional pinto modules.\n     * May be used to load further pinto modules containing jscontroller\n     * in cases of async updates or lazy-loaded jscontroller.\n     * @private {?function(!Array.\x3cstring\x3e)}\n     */\n    this.pintoModuleLoader_ \x3d null;\n\n    /**\n     * Whether there is a scheduled pinto module loading already.\n     * @private {boolean}\n     */\n    this.isModuleLoaderScheduled_ \x3d false;\n\n    /**\n     * List of to be loaded pinto modules. This will be loaded in a\n     * goog.async.nextTick using this.pintoModuleLoader_.\n     * @private {!Array.\x3cstring\x3e}\n     */\n    this.queuedPintoModules_ \x3d [];\n  },\n\n  /**\n   * Sets the default template pool.\n   * @param {!jslayout.TemplatePool} templatePool\n   * @package\n   */\n  setTemplatePool: function(templatePool) {\n    this.templatePool_ \x3d templatePool;\n  },\n\n  /**\n   * Gets the default template pool. May be null if none is available.\n   * @return {jslayout.TemplatePool}\n   * @package\n   */\n  getTemplatePool: function() {\n    return this.templatePool_;\n  },\n\n  /**\n   * Sets an error handler for reporting caught exceptions (e.g.,\n   * during controller creation and disposal). Any exception thrown by\n   * the error handler itself will be caught and silently discarded.\n   * @param {!function(!Error)} errorHandler\n   * @package\n   */\n  setErrorHandler: function(errorHandler) {\n    this.errorHandler_ \x3d errorHandler;\n  },\n\n  /**\n   * Reports an error to the error handler.\n   * @param {!Error} error\n   * @package\n   */\n  reportError: function(error) {\n    try {\n      this.errorHandler_(error);\n    } catch (e) {\n      // Do not allow error handler to rethrow.\n    }\n  },\n\n  /**\n   * Sets the global jsaction.Dispatcher.\n   * @param {jsaction.Dispatcher} dispatcher\n   * @package\n   */\n  setJsactionDispatcher: function(dispatcher) {\n    this.jsactionDispatcher_ \x3d dispatcher;\n  },\n\n  /**\n   * Returns the global jsaction dispatcher.\n   * @return {jsaction.Dispatcher}\n   * @package\n   */\n  getJsactionDispatcher: function() {\n    return this.jsactionDispatcher_;\n  },\n\n  /**\n   * Sets a loader function to be used to load additional pinto modules.\n   * @param {function(!Array.\x3cstring\x3e)} loaderFn A function that\n   *     accepts an array of pinto modules to load.\n   * @package\n   */\n  setPintoModuleLoader: function(loaderFn) {\n    this.pintoModuleLoader_ \x3d loaderFn;\n  },\n\n  /**\n   * Loads the given list of pinto module ids asynchronously.\n   * @param {!Array.\x3cstring\x3e} moduleIds\n   * @package\n   */\n  requestPintoModules: function(moduleIds) {\n    if (!this.pintoModuleLoader_ || !moduleIds.length) {\n      return;\n    }\n\n    this.queuedPintoModules_.push.apply(this.queuedPintoModules_, moduleIds);\n    if (!this.isModuleLoaderScheduled_) {\n      this.isModuleLoaderScheduled_ \x3d true;\n      goog.async.nextTick(this.loadPintoModules_, this);\n    }\n  },\n\n  /**\n   * Loads the pinto modules. This is scheduled on a nextTick so that\n   * we can batch up all pinto module loading to a single request.\n   * @private\n   */\n  loadPintoModules_: function() {\n    this.isModuleLoaderScheduled_ \x3d false;\n    if (this.queuedPintoModules_.length) {\n      this.pintoModuleLoader_(this.queuedPintoModules_);\n      this.queuedPintoModules_ \x3d [];\n    }\n  }\n});\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/options.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy39');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy39');

}catch(e){_DumpException(e)}
/* _Module_:sy3a */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3a');
var $googDebugFname="javascript/template/jslayout/reactive/templateparams.js";
eval("/**\n * @fileoverview An interface for a collection of template parameters and\n * their associated values.\n */\n\ngoog.provide(\x27jslayout.reactive.ProtoCache\x27);\ngoog.provide(\x27jslayout.reactive.TemplateParams\x27);\n\ngoog.forwardDeclare(\x27jspb.Message\x27);\n\n\n\n/**\n * Represents a collection of template parameters.\n * This interface should only be used by the framework code.\n *\n * @interface\n */\njslayout.reactive.TemplateParams \x3d function() {};\n\n\n/**\n * Gets the current value of the given parameter name as the given\n * protocol buffer. For a given parameter name, you must always\n * pass the same protobuf constructor.\n * @param {function(new:T, !Array)} protoCtor The protobuf constructor.\n * @param {string} paramName The parameter name.\n * @return {T} The current value of the given parameter name, or null\n *     if none is available.\n * @template T\n */\njslayout.reactive.TemplateParams.prototype.getAsProto \x3d function(\n    protoCtor, paramName) {};\n\n\n/**\n * Gets the current value of the given parameter name. This is\n * typically used with non-protobuf fields (such as IDL interface and\n * primitive type).\n * @param {string} paramName The parameter name.\n * @return {*} The current value of the given parameter name, or null\n *     if none is available.\n */\njslayout.reactive.TemplateParams.prototype.get \x3d function(paramName) {};\n\n\n\n/**\n * A protobuf wrapper cache, keyed by parameter name.\n * @constructor\n */\njslayout.reactive.ProtoCache \x3d function() {\n  /**\n   * A map of parameter name to cached instances of jspb.Message.\n   * @const @private {!Object.\x3cstring, !jspb.Message\x3e}\n   */\n  this.cachedProtoWrappers_ \x3d {};\n};\n\n\n/**\n * Gets a protobuf wrapper for the given parameter name.\n *\n * If the cache does not contain a protobuf for the given name, or if the\n * cached protobuf\x27s underlying value does not match currentValue (compared\n * by reference), this will create a new protobuf wrapper with the given\n * protobuf constructor and cache it.\n *\n * @param {string} paramName\n * @param {Array} currentValue If null is given, returns null.\n * @param {function(new:T, !Array)} protoCtor The protobuf constructor.\n * @return {T} The protobuf wrapper for the parameter. Returns null if\n *     currentValue is null.\n * @template T\n */\njslayout.reactive.ProtoCache.prototype.get \x3d function(\n    paramName, currentValue, protoCtor) {\n  if (!currentValue) {\n    return null;\n  }\n\n  var proto \x3d this.cachedProtoWrappers_[paramName];\n  if (!proto || proto.toArray() !\x3d currentValue) {\n    proto \x3d this.cachedProtoWrappers_[paramName] \x3d new protoCtor(currentValue);\n  }\n  return proto;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/templateparams.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3a');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3a');

}catch(e){_DumpException(e)}
/* _Module_:sy3b */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3b');
var $googDebugFname="javascript/template/jslayout/reactive/reactivetemplateparams.js";
eval("goog.provide(\x27jslayout.reactive.ReactiveTemplateParams\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jslayout.reactive.MigratedKey\x27);\ngoog.require(\x27jslayout.reactive.ProtoCache\x27);\ngoog.require(\x27jslayout.reactive.TemplateParams\x27);\ngoog.forwardDeclare(\n    \x27proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x27);\n\n\n\n/**\n * An implementation of TemplateParams based on reactive server-issued\n * metadata.\n *\n * This class should only be used by the framework code.\n *\n * @param {!Array.\x3c\n *     !proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x3e}\n *     paramListProto A list of template parameter proto, from which we\n *     retrieve parameter information.\n * @constructor\n * @implements {jslayout.reactive.TemplateParams}\n */\njslayout.reactive.ReactiveTemplateParams \x3d function(paramListProto) {\n\n  /** @const @private */\n  this.paramList_ \x3d paramListProto;\n\n  /** @const @private */\n  this.cache_ \x3d new jslayout.reactive.ProtoCache;\n};\n\n\n/** @override */\njslayout.reactive.ReactiveTemplateParams.prototype.getAsProto \x3d function(\n    protoCtor, paramName) {\n  var data \x3d /** @type {Array} */ (this.get(paramName));\n  return this.cache_.get(paramName, data, protoCtor);\n};\n\n\n/** @override */\njslayout.reactive.ReactiveTemplateParams.prototype.get \x3d function(\n    encodedParamName) {\n  var migratedParamName \x3d new jslayout.reactive.MigratedKey(encodedParamName);\n  var paramProto \x3d migratedParamName.applyUntilReturn(function(paramName) {\n    for (var i \x3d 0; i \x3c this.paramList_.length; ++i) {\n      if (this.paramList_[i].getName() \x3d\x3d paramName) {\n        return this.paramList_[i];\n      }\n    }\n    return undefined;\n  }, this);\n  if (!goog.isDef(paramProto)) {\n    goog.asserts.fail(\x27Cannot find parameter named: \x27 + encodedParamName);\n    return null;\n  }\n  return jslayout.reactive.ReactiveTemplateParams.resolveParam_(paramProto);\n};\n\n\n/**\n * Gets all parameter names that are defined in this instance.\n * @return {!Array.\x3cstring\x3e}\n */\njslayout.reactive.ReactiveTemplateParams.prototype.getParamNames \x3d function() {\n  var paramNames \x3d [];\n  for (var i \x3d 0; i \x3c this.paramList_.length; ++i) {\n    paramNames.push(this.paramList_[i].getName());\n  }\n  return paramNames;\n};\n\n\n/**\n * Resolves the template parameter value from the given parameter metadata\n * and model object.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter}\n *     templateParamProto The parameter metadata proto.\n * @return {*} The resolved value.\n * @private\n */\njslayout.reactive.ReactiveTemplateParams.resolveParam_ \x3d\n    function(templateParamProto) {\n\n  // Look for new-style Relaxative data, which is directly stored on the\n  // TemplateParameter.\n  var modelData \x3d templateParamProto.getModelData();\n  if (goog.isDefAndNotNull(modelData)) {\n    var messageValue \x3d modelData.getMessageValue();\n    if (goog.isDefAndNotNull(messageValue)) {\n      return /** @type {!Object} */ (JSON.parse(messageValue));\n    } else if (goog.isDefAndNotNull(modelData.getStringValue())) {\n      return modelData.getStringValue();\n    } else if (goog.isDefAndNotNull(modelData.getNumberValue())) {\n      return modelData.getNumberValue();\n    } else if (goog.isDefAndNotNull(modelData.getBooleanValue())) {\n      return modelData.getBooleanValue();\n    } else if (goog.isDefAndNotNull(modelData.getEnumValue())) {\n      return modelData.getEnumValue();\n    } else if (modelData.getRepeatedMessageValueList().length \x3e 0) {\n      return goog.array.map(modelData.getRepeatedMessageValueList(),\n          function(messageString) {\n            return /** @type {!Object} */ (JSON.parse(messageString));\n          });\n    } else if (modelData.getRepeatedStringValueList().length \x3e 0) {\n      return modelData.getRepeatedStringValueList();\n    } else if (modelData.getRepeatedNumberValueList().length \x3e 0) {\n      return modelData.getRepeatedNumberValueList();\n    } else if (modelData.getRepeatedBooleanValueList().length \x3e 0) {\n      return modelData.getRepeatedBooleanValueList();\n    } else if (modelData.getRepeatedEnumValueList().length \x3e 0) {\n      return modelData.getRepeatedEnumValueList();\n    }\n    // This is pretty unexpected.  However, it can happen when an empty\n    // collection is handed to Reactive on the server side.  It\x27s currently\n    // sent to the controller as null, but maybe it should be [].\n    // TODO(jaredking): []?\n    return null;\n  }\n  return null;\n};\n\n\n/**\n * Gets extension data object from the given containing message\x27s data\n * object and extension\x27s field number.\n * @param {!Object} dataObj The containing message\x27s data object.\n * @param {number} fieldNum The extension\x27s field number.\n * @return {Object} The extension data object or null if it\x27s not found.\n * @private\n */\njslayout.reactive.ReactiveTemplateParams.getExtensionData_ \x3d function(\n    dataObj, fieldNum) {\n  var extensions \x3d jslayout.reactive.ReactiveTemplateParams.getExtensions(\n      dataObj);\n  if (extensions) {\n    return extensions[fieldNum] || null;\n  }\n  return null;\n};\n\n\n/**\n * Gets extensions data object from the given containing message\x27s data object\n * @param {!Object} dataObj The containing message\x27s data object.\n * @return {Object} The extension data object or null if it\x27s not found.\n */\njslayout.reactive.ReactiveTemplateParams.getExtensions \x3d function(dataObj) {\n  if (dataObj.length \x3d\x3d 0) {\n    return null;\n  }\n  var extensions \x3d dataObj[dataObj.length - 1];\n  if (goog.isObject(extensions) \x26\x26 !goog.isArray(extensions)) {\n    return extensions;\n  }\n  return null;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/reactivetemplateparams.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/context.js";
eval("/**\n * @fileoverview A context represents a reactive-managed DOM\n * subtree, where the subtree itself may change in a large-scale\n * manner, typically necessitating a rendering/re-rendering/deletion\n * of the structure. The context abstraction allows reactive framework\n * to manage and dispose a large number of jslayout_js templates or\n * controllers that have similar lifetime.\n *\n * An example of jslayout control structure that require a new child\n * context to be created are:\n *\n *  - updatable: DOM structure changes in a large-scale manner on\n *    server-side updates; the new structure potentially has no\n *    correspondence to the original structure.\n *\n * A context consists of a collection of rendered templates\x27\n * jslayout_js templates or controllers, as well as child contexts.\n */\n\ngoog.provide(\x27jslayout.reactive.Context\x27);\n\ngoog.require(\x27goog.Disposable\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27jslayout.reactive.ReactiveTemplateParams\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.ControllerData\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.ControllerPool\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.Template\x27);\ngoog.forwardDeclare(\x27jslayout.reactive.TemplateFactory\x27);\ngoog.forwardDeclare(\x27proto.jslayout.reactive.ReactiveTemplateMetadata\x27);\n\ngoog.scope(function() {\n\n\n\n/**\n * Creates a new context instance.\n * @param {!jslayout.reactive.Options} options\n * @param {!jslayout.reactive.ControllerPool} controllerPool The controller pool\n *     used to create controllers.\n * @param {string} id The id of the DOM element this context is associated with.\n * @constructor\n * @extends {goog.Disposable}\n */\njslayout.reactive.Context \x3d function(options, controllerPool, id) {\n  jslayout.reactive.Context.base(this, \x27constructor\x27);\n\n  /** @const @private */\n  this.options_ \x3d options;\n\n  /** @const @private */\n  this.controllerPool_ \x3d controllerPool;\n\n  /**\n   * The updatable id corresponding to this context.\n   * @const @private\n   */\n  this.id_ \x3d id;\n\n  /**\n   * A list of all ControllerData objects used\n   * to manage their associated controller instances.\n   * @const @private {!Array\x3c!jslayout.reactive.ControllerData\x3e}\n   */\n  this.managedControllerDataObjs_ \x3d [];\n\n  /**\n   * List of Templates managed by this Context.\n   * @const @private {!Array.\x3c!jslayout.reactive.Template\x3e}\n   */\n  this.managedTemplates_ \x3d [];\n\n  /**\n   * A list of uninitialized templates. This can happen if the\n   * controller class is late-loaded.\n   * @private {!Array.\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata\x3e}\n   */\n  this.uninitializedTemplates_ \x3d [];\n\n  /**\n   * The set of instantiation ids in this context.\n   * @private {!Set\x3cstring\x3e}\n   */\n  this.instantiationIds_ \x3d new Set();\n\n  goog.log.fine(jslayout.reactive.Context.logger_, \x27Context created: \x27 +\n      (this.id_ || \x27\x3croot\x3e\x27));\n};\ngoog.inherits(jslayout.reactive.Context, goog.Disposable);\n\n\n/**\n * @return {string} id for the current context or empty string for the root\n *   context.\n */\njslayout.reactive.Context.prototype.getId \x3d function() {\n  return this.id_;\n};\n\n\n/**\n * Attempts to load the pinto module for a lazy loaded controller.\n * @param {!jslayout.reactive.ControllerData} controllerData The controller data\n *     for which to load the Pinto module.\n * @private\n */\njslayout.reactive.Context.prototype.preloadPintoModule_ \x3d function(\n    controllerData) {\n  var id \x3d controllerData.metadata.getPintoModuleId();\n  if (id) {\n    this.options_.requestPintoModules([id]);\n  }\n};\n\n\n/**\n * Updates the context with the data in the proto: creates new controllers.\n * @param {!proto.jslayout.reactive.ReactiveContext} contextProto\n */\njslayout.reactive.Context.prototype.update \x3d function(contextProto) {\n  if (this.id_ !\x3d (contextProto.getId() || \x27\x27)) {\n    goog.log.error(jslayout.reactive.Context.logger_, \x27Cannot update \x27 +\n        \x27context; the given context proto has mismatched id. Context id:\x27 +\n        this.id_ + \x27, but received: \x27 + contextProto.getId());\n    return;\n  }\n\n  var templateMetadata \x3d contextProto.getTemplateMetadataList();\n  for (var i \x3d 0; i \x3c templateMetadata.length; ++i) {\n    var metadata \x3d templateMetadata[i];\n    const instantiationId \x3d metadata.getInstantiationId();\n    if (!instantiationId) {\n      goog.log.warning(\n          jslayout.reactive.Context.logger_,\n          \x27Got an empty instantiation id. Queuing the template for \x27 +\n              \x27initalization anyway.\x27);\n      this.uninitializedTemplates_.push(metadata);\n      continue;\n    }\n    // Instantiation ids may be duplicated if a chunk boundary is within a\n    // reactive context. Ignore the duplicates, since they\x27ve already been\n    // added to the context.\n    if (this.instantiationIds_.has(\n            goog.asserts.assertString(instantiationId))) {\n      goog.log.info(\n          jslayout.reactive.Context.logger_,\n          \x27Already processed instantiation id: \x27 + instantiationId +\n              \x27 Skipping duplicate.\x27);\n      continue;\n    }\n    // Check type \x3d\x3d null, which implies a default value of CONTROLLER.\n    if (metadata.getType() \x3d\x3d null ||\n        metadata.getType() \x3d\x3d\n            proto.jslayout.reactive.ReactiveTemplateMetadata.Type.CONTROLLER) {\n      var controllerData \x3d\n          this.controllerPool_.addControllerMetadata(metadata, this);\n      this.managedControllerDataObjs_.push(controllerData);\n    }\n    this.uninitializedTemplates_.push(metadata);\n    this.instantiationIds_.add(goog.asserts.assertString(instantiationId));\n  }\n  this.reprocessUninitializedTemplates();\n};\n\n\n/** @override */\njslayout.reactive.Context.prototype.disposeInternal \x3d function() {\n  goog.array.forEach(this.managedControllerDataObjs_, function(controllerData) {\n    this.controllerPool_.disposeController(controllerData);\n  }, this);\n\n  for (var i \x3d 0; i \x3c this.managedTemplates_.length; i++) {\n    this.managedTemplates_[i].disposeAllControllers();\n  }\n\n  goog.log.fine(jslayout.reactive.Context.logger_,\n      \x27Context disposed: \x27 + (this.id_ || \x27\x3croot\x3e\x27));\n};\n\n\n/**\n * Reprocesses uninitialized templates, if any. This includes both jslayout_js\n * templates and templates whose controllers are now available, otherwise they\n * will remain uninitialized.\n */\njslayout.reactive.Context.prototype.reprocessUninitializedTemplates \x3d\n    function() {\n  var uninitializedTemplates \x3d [];\n  for (var i \x3d 0; i \x3c this.uninitializedTemplates_.length; i++) {\n    var metadata \x3d this.uninitializedTemplates_[i];\n    if (this.canInitializeTemplate_(metadata)) {\n      this.initializeTemplate_(metadata);\n    } else {\n      uninitializedTemplates.push(metadata);\n    }\n  }\n  this.uninitializedTemplates_ \x3d uninitializedTemplates;\n};\n\n\n/**\n * Returns whether the browserside template or server-side template\x27s controller\n * can be initialized.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} metadata\n *     The template metadata.\n * @return {boolean}\n * @private\n */\njslayout.reactive.Context.prototype.canInitializeTemplate_ \x3d function(\n    metadata) {\n  var templateKey \x3d metadata.getTemplateId();\n  goog.asserts.assertString(templateKey);\n\n  if (metadata.getType() \x3d\x3d\n      proto.jslayout.reactive.ReactiveTemplateMetadata.Type.TEMPLATE) {\n    var templatePool \x3d this.options_.getTemplatePool();\n    return !!(templatePool \x26\x26 templatePool.getEntry(templateKey) \x26\x26\n              templatePool.getArgNames(templateKey));\n  } else {\n    return this.controllerPool_.isControllerRegistered(templateKey);\n  }\n};\n\n\n/**\n * Initializes browserside template or a server-side template\x27s controller.\n * Browserside template controllers are instantiated by the jslayout_js\n * processor. Should only be called if canInitializeTemplate_(metadata) is true.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} metadata\n *     The template metadata.\n * @private\n */\njslayout.reactive.Context.prototype.initializeTemplate_ \x3d function(metadata) {\n  goog.asserts.assert(this.canInitializeTemplate_(metadata));\n  var templateId \x3d goog.asserts.assert(metadata.getTemplateId());\n\n  if (metadata.getType() \x3d\x3d\n      proto.jslayout.reactive.ReactiveTemplateMetadata.Type.TEMPLATE) {\n\n    // Needed to satisfy compiler, since templatePool may be null.\n    var templatePool \x3d goog.asserts.assert(this.options_.getTemplatePool());\n\n    var domRootClass \x3d metadata.getDomRootClass() || \x27\x27;\n    goog.asserts.assert(domRootClass,\n        \x27Missing DOM root class for browserside template.\x27);\n\n    var templateParams \x3d\n        new jslayout.reactive.ReactiveTemplateParams(metadata.getParamList());\n    var templateElement \x3d goog.dom.getElementByClass(domRootClass);\n    var template \x3d jslayout.reactive.Context.templateFactory.create(\n        templatePool, templateId, templateParams);\n    template.attach(templateElement);\n    templateElement.template__ \x3d template;\n    template.fill();\n    template.render();\n\n    this.managedTemplates_.push(template);\n\n  } else {  // Controller for server rendered template.\n    var instantiationId \x3d goog.asserts.assert(metadata.getInstantiationId());\n    var controllerData \x3d\n        this.controllerPool_.getControllerData(instantiationId);\n    goog.asserts.assert(controllerData,\n        \x27Cannot find controller data for instance \x27 + instantiationId);\n    var templateParams \x3d\n        new jslayout.reactive.ReactiveTemplateParams(metadata.getParamList());\n    this.controllerPool_.createController(\n        templateId, controllerData, templateParams);\n  }\n};\n\n\n/**\n * Re-render this context and all child context\x27s managed templates.\n */\njslayout.reactive.Context.prototype.applyManagedTemplates \x3d function() {\n  goog.array.forEach(this.managedTemplates_, function(managedTemplate) {\n    managedTemplate.fill();\n    managedTemplate.render();\n  });\n};\n\n\n/**\n * jslayout.reactive.Template factory to be late loaded.  We construct our\n * template instances this way so we can avoid pulling in the large template.js\n * dependencies with context.\n * @type {jslayout.reactive.TemplateFactory}\n */\njslayout.reactive.Context.templateFactory \x3d null;\n\n\n/**\n * @private {goog.debug.Logger}\n */\njslayout.reactive.Context.logger_ \x3d goog.log.getLogger(\n    \x27jslayout.reactive.Context\x27);\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/context.js\n");

$googDebugFname=undefined;
var $googDebugFname="template/prototemplate/proto/reactive.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.jslayout.reactive.ModelData\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveContext\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveMetadata\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveTemplateMetadata\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x27);\ngoog.provide(\x27proto.jslayout.reactive.ReactiveTemplateMetadata.Type\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ReactiveMetadata \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.jslayout.reactive.ReactiveMetadata.repeatedFields_, null);\n};\ngoog.inherits(proto.jslayout.reactive.ReactiveMetadata, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ReactiveMetadata.displayName \x3d \x27proto.jslayout.reactive.ReactiveMetadata\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.jslayout.reactive.ReactiveMetadata.repeatedFields_ \x3d [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ReactiveMetadata.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ReactiveMetadata.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ReactiveMetadata} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveMetadata.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    contextList: jspb.Message.toObjectList(msg.getContextList(),\n    proto.jslayout.reactive.ReactiveContext.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ReactiveMetadata}\n */\nproto.jslayout.reactive.ReactiveMetadata.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ReactiveMetadata;\n  return proto.jslayout.reactive.ReactiveMetadata.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ReactiveMetadata} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ReactiveMetadata}\n */\nproto.jslayout.reactive.ReactiveMetadata.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d new proto.jslayout.reactive.ReactiveContext;\n      reader.readMessage(value,proto.jslayout.reactive.ReactiveContext.deserializeBinaryFromReader);\n      msg.addContext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ReactiveMetadata.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ReactiveMetadata.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ReactiveMetadata} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveMetadata.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d message.getContextList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.jslayout.reactive.ReactiveContext.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ReactiveContext context \x3d 1;\n * @return {!Array\x3c!proto.jslayout.reactive.ReactiveContext\x3e}\n */\nproto.jslayout.reactive.ReactiveMetadata.prototype.getContextList \x3d function() {\n  return /** @type{!Array\x3c!proto.jslayout.reactive.ReactiveContext\x3e} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.jslayout.reactive.ReactiveContext, 1));\n};\n\n\n/** @param {Array\x3c!proto.jslayout.reactive.ReactiveContext\x3e|undefined} value */\nproto.jslayout.reactive.ReactiveMetadata.prototype.setContextList \x3d function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.jslayout.reactive.ReactiveContext\x3d} opt_value\n * @param {number\x3d} opt_index\n * @return {!proto.jslayout.reactive.ReactiveContext}\n */\nproto.jslayout.reactive.ReactiveMetadata.prototype.addContext \x3d function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.jslayout.reactive.ReactiveContext, opt_index);\n};\n\n\nproto.jslayout.reactive.ReactiveMetadata.prototype.clearContextList \x3d function() {\n  this.setContextList([]);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ReactiveMetadata}\n */\nproto.jslayout.reactive.ReactiveMetadata.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ReactiveMetadata, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ReactiveContext \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.jslayout.reactive.ReactiveContext.repeatedFields_, null);\n};\ngoog.inherits(proto.jslayout.reactive.ReactiveContext, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ReactiveContext.displayName \x3d \x27proto.jslayout.reactive.ReactiveContext\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.jslayout.reactive.ReactiveContext.repeatedFields_ \x3d [2,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ReactiveContext.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ReactiveContext} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveContext.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    id: jspb.Message.getField(msg, 1),\n    templateMetadataList: jspb.Message.toObjectList(msg.getTemplateMetadataList(),\n    proto.jslayout.reactive.ReactiveTemplateMetadata.toObject, includeInstance),\n    pintoModuleIdList: jspb.Message.getRepeatedField(msg, 6)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ReactiveContext}\n */\nproto.jslayout.reactive.ReactiveContext.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ReactiveContext;\n  return proto.jslayout.reactive.ReactiveContext.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ReactiveContext} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ReactiveContext}\n */\nproto.jslayout.reactive.ReactiveContext.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata;\n      reader.readMessage(value,proto.jslayout.reactive.ReactiveTemplateMetadata.deserializeBinaryFromReader);\n      msg.addTemplateMetadata(value);\n      break;\n    case 6:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.addPintoModuleId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ReactiveContext.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ReactiveContext} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveContext.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d message.getTemplateMetadataList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.jslayout.reactive.ReactiveTemplateMetadata.serializeBinaryToWriter\n    );\n  }\n  f \x3d message.getPintoModuleIdList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id \x3d 1;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.getId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveContext.prototype.setId \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.jslayout.reactive.ReactiveContext.prototype.clearId \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.hasId \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * repeated ReactiveTemplateMetadata template_metadata \x3d 2;\n * @return {!Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata\x3e}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.getTemplateMetadataList \x3d function() {\n  return /** @type{!Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata\x3e} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.jslayout.reactive.ReactiveTemplateMetadata, 2));\n};\n\n\n/** @param {Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata\x3e|undefined} value */\nproto.jslayout.reactive.ReactiveContext.prototype.setTemplateMetadataList \x3d function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata\x3d} opt_value\n * @param {number\x3d} opt_index\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.addTemplateMetadata \x3d function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.jslayout.reactive.ReactiveTemplateMetadata, opt_index);\n};\n\n\nproto.jslayout.reactive.ReactiveContext.prototype.clearTemplateMetadataList \x3d function() {\n  this.setTemplateMetadataList([]);\n};\n\n\n/**\n * repeated string pinto_module_id \x3d 6;\n * @return {!Array\x3cstring\x3e}\n */\nproto.jslayout.reactive.ReactiveContext.prototype.getPintoModuleIdList \x3d function() {\n  return /** @type {!Array\x3cstring\x3e} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/** @param {Array\x3cstring\x3e|undefined} value */\nproto.jslayout.reactive.ReactiveContext.prototype.setPintoModuleIdList \x3d function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ReactiveContext.prototype.addPintoModuleId \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ReactiveContext.prototype.clearPintoModuleIdList \x3d function() {\n  this.setPintoModuleIdList([]);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ReactiveContext}\n */\nproto.jslayout.reactive.ReactiveContext.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ReactiveContext, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.jslayout.reactive.ReactiveTemplateMetadata.repeatedFields_, null);\n};\ngoog.inherits(proto.jslayout.reactive.ReactiveTemplateMetadata, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ReactiveTemplateMetadata.displayName \x3d \x27proto.jslayout.reactive.ReactiveTemplateMetadata\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.repeatedFields_ \x3d [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    type: jspb.Message.getField(msg, 5),\n    templateId: jspb.Message.getField(msg, 1),\n    instantiationId: jspb.Message.getField(msg, 2),\n    domRootClass: jspb.Message.getField(msg, 3),\n    paramList: jspb.Message.toObjectList(msg.getParamList(),\n    proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.toObject, includeInstance),\n    pintoModuleId: jspb.Message.getField(msg, 6),\n    debugInfo: (f \x3d msg.getDebugInfo()) \x26\x26 proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata;\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 5:\n      var value \x3d /** @type {!proto.jslayout.reactive.ReactiveTemplateMetadata.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setTemplateId(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setInstantiationId(value);\n      break;\n    case 3:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setDomRootClass(value);\n      break;\n    case 4:\n      var value \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter;\n      reader.readMessage(value,proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.deserializeBinaryFromReader);\n      msg.addParam(value);\n      break;\n    case 6:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setPintoModuleId(value);\n      break;\n    case 20:\n      var value \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo;\n      reader.readMessage(value,proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.deserializeBinaryFromReader);\n      msg.setDebugInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ReactiveTemplateMetadata.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {!proto.jslayout.reactive.ReactiveTemplateMetadata.Type} */ (jspb.Message.getField(message, 5));\n  if (f !\x3d null) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 2));\n  if (f !\x3d null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 3));\n  if (f !\x3d null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f \x3d message.getParamList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.serializeBinaryToWriter\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 6));\n  if (f !\x3d null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f \x3d message.getDebugInfo();\n  if (f !\x3d null) {\n    writer.writeMessage(\n      20,\n      f,\n      proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.Type \x3d {\n  CONTROLLER: 0,\n  TEMPLATE: 1\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.displayName \x3d \x27proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    name: jspb.Message.getField(msg, 1),\n    modelData: (f \x3d msg.getModelData()) \x26\x26 proto.jslayout.reactive.ModelData.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter;\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 6:\n      var value \x3d new proto.jslayout.reactive.ModelData;\n      reader.readMessage(value,proto.jslayout.reactive.ModelData.deserializeBinaryFromReader);\n      msg.setModelData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d message.getModelData();\n  if (f !\x3d null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.jslayout.reactive.ModelData.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name \x3d 1;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.getName \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.setName \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.clearName \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.hasName \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * optional ModelData model_data \x3d 6;\n * @return {?proto.jslayout.reactive.ModelData}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.getModelData \x3d function() {\n  return /** @type{?proto.jslayout.reactive.ModelData} */ (\n    jspb.Message.getWrapperField(this, proto.jslayout.reactive.ModelData, 6));\n};\n\n\n/** @param {?proto.jslayout.reactive.ModelData|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.setModelData \x3d function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.clearModelData \x3d function() {\n  this.setModelData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.prototype.hasModelData \x3d function() {\n  return jspb.Message.getField(this, 6) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.displayName \x3d \x27proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    controllerName: jspb.Message.getField(msg, 1),\n    templateFilename: jspb.Message.getField(msg, 2),\n    templateName: jspb.Message.getField(msg, 3),\n    pintoModuleId: jspb.Message.getField(msg, 4),\n    isLazyJscontroller: jspb.Message.getField(msg, 5)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo;\n  return proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setControllerName(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setTemplateFilename(value);\n      break;\n    case 3:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setTemplateName(value);\n      break;\n    case 4:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setPintoModuleId(value);\n      break;\n    case 5:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setIsLazyJscontroller(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 2));\n  if (f !\x3d null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 3));\n  if (f !\x3d null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 4));\n  if (f !\x3d null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 5));\n  if (f !\x3d null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string controller_name \x3d 1;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.getControllerName \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.setControllerName \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.clearControllerName \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.hasControllerName \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * optional string template_filename \x3d 2;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.getTemplateFilename \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.setTemplateFilename \x3d function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.clearTemplateFilename \x3d function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.hasTemplateFilename \x3d function() {\n  return jspb.Message.getField(this, 2) !\x3d null;\n};\n\n\n/**\n * optional string template_name \x3d 3;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.getTemplateName \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 3));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.setTemplateName \x3d function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.clearTemplateName \x3d function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.hasTemplateName \x3d function() {\n  return jspb.Message.getField(this, 3) !\x3d null;\n};\n\n\n/**\n * optional string pinto_module_id \x3d 4;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.getPintoModuleId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 4));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.setPintoModuleId \x3d function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.clearPintoModuleId \x3d function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.hasPintoModuleId \x3d function() {\n  return jspb.Message.getField(this, 4) !\x3d null;\n};\n\n\n/**\n * optional bool is_lazy_jscontroller \x3d 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.getIsLazyJscontroller \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 5));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.setIsLazyJscontroller \x3d function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.clearIsLazyJscontroller \x3d function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.prototype.hasIsLazyJscontroller \x3d function() {\n  return jspb.Message.getField(this, 5) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo, data);\n};\n\n\n/**\n * optional Type type \x3d 5;\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.Type}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getType \x3d function() {\n  return /** @type {!proto.jslayout.reactive.ReactiveTemplateMetadata.Type} */ (jspb.Message.getField(this, 5));\n};\n\n\n/** @param {?proto.jslayout.reactive.ReactiveTemplateMetadata.Type|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setType \x3d function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearType \x3d function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasType \x3d function() {\n  return jspb.Message.getField(this, 5) !\x3d null;\n};\n\n\n/**\n * optional string template_id \x3d 1;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getTemplateId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setTemplateId \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearTemplateId \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasTemplateId \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * optional string instantiation_id \x3d 2;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getInstantiationId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setInstantiationId \x3d function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearInstantiationId \x3d function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasInstantiationId \x3d function() {\n  return jspb.Message.getField(this, 2) !\x3d null;\n};\n\n\n/**\n * optional string dom_root_class \x3d 3;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getDomRootClass \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 3));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setDomRootClass \x3d function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearDomRootClass \x3d function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasDomRootClass \x3d function() {\n  return jspb.Message.getField(this, 3) !\x3d null;\n};\n\n\n/**\n * repeated TemplateParameter param \x3d 4;\n * @return {!Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x3e}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getParamList \x3d function() {\n  return /** @type{!Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x3e} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter, 4));\n};\n\n\n/** @param {Array\x3c!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x3e|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setParamList \x3d function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter\x3d} opt_value\n * @param {number\x3d} opt_index\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.addParam \x3d function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.jslayout.reactive.ReactiveTemplateMetadata.TemplateParameter, opt_index);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearParamList \x3d function() {\n  this.setParamList([]);\n};\n\n\n/**\n * optional string pinto_module_id \x3d 6;\n * @return {?string}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getPintoModuleId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 6));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setPintoModuleId \x3d function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearPintoModuleId \x3d function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasPintoModuleId \x3d function() {\n  return jspb.Message.getField(this, 6) !\x3d null;\n};\n\n\n/**\n * optional DebugInfo debug_info \x3d 20;\n * @return {?proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.getDebugInfo \x3d function() {\n  return /** @type{?proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo} */ (\n    jspb.Message.getWrapperField(this, proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo, 20));\n};\n\n\n/** @param {?proto.jslayout.reactive.ReactiveTemplateMetadata.DebugInfo|undefined} value */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.setDebugInfo \x3d function(value) {\n  jspb.Message.setWrapperField(this, 20, value);\n};\n\n\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.clearDebugInfo \x3d function() {\n  this.setDebugInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.prototype.hasDebugInfo \x3d function() {\n  return jspb.Message.getField(this, 20) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ReactiveTemplateMetadata}\n */\nproto.jslayout.reactive.ReactiveTemplateMetadata.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ReactiveTemplateMetadata, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.jslayout.reactive.ModelData \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.jslayout.reactive.ModelData.repeatedFields_, null);\n};\ngoog.inherits(proto.jslayout.reactive.ModelData, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.jslayout.reactive.ModelData.displayName \x3d \x27proto.jslayout.reactive.ModelData\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.jslayout.reactive.ModelData.repeatedFields_ \x3d [8,9,10,11,12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.jslayout.reactive.ModelData.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.jslayout.reactive.ModelData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.jslayout.reactive.ModelData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ModelData.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    messageValue: jspb.Message.getField(msg, 2),\n    stringValue: jspb.Message.getField(msg, 3),\n    numberValue: jspb.Message.getOptionalFloatingPointField(msg, 4),\n    booleanValue: jspb.Message.getField(msg, 5),\n    enumValue: jspb.Message.getField(msg, 6),\n    repeatedMessageValueList: jspb.Message.getRepeatedField(msg, 8),\n    repeatedStringValueList: jspb.Message.getRepeatedField(msg, 9),\n    repeatedNumberValueList: jspb.Message.getRepeatedFloatingPointField(msg, 10),\n    repeatedBooleanValueList: jspb.Message.getRepeatedField(msg, 11),\n    repeatedEnumValueList: jspb.Message.getRepeatedField(msg, 12)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.jslayout.reactive.ModelData}\n */\nproto.jslayout.reactive.ModelData.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.jslayout.reactive.ModelData;\n  return proto.jslayout.reactive.ModelData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.jslayout.reactive.ModelData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.jslayout.reactive.ModelData}\n */\nproto.jslayout.reactive.ModelData.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setMessageValue(value);\n      break;\n    case 3:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setStringValue(value);\n      break;\n    case 4:\n      var value \x3d /** @type {number} */ (reader.readDouble());\n      msg.setNumberValue(value);\n      break;\n    case 5:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setBooleanValue(value);\n      break;\n    case 6:\n      var value \x3d /** @type {number} */ (reader.readInt32());\n      msg.setEnumValue(value);\n      break;\n    case 8:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.addRepeatedMessageValue(value);\n      break;\n    case 9:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.addRepeatedStringValue(value);\n      break;\n    case 10:\n      var value \x3d /** @type {number} */ (reader.readDouble());\n      msg.addRepeatedNumberValue(value);\n      break;\n    case 11:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.addRepeatedBooleanValue(value);\n      break;\n    case 12:\n      var value \x3d /** @type {number} */ (reader.readInt32());\n      msg.addRepeatedEnumValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.jslayout.reactive.ModelData.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.jslayout.reactive.ModelData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.jslayout.reactive.ModelData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.jslayout.reactive.ModelData.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 2));\n  if (f !\x3d null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 3));\n  if (f !\x3d null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f \x3d /** @type {?number} */ (jspb.Message.getField(message, 4));\n  if (f !\x3d null) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 5));\n  if (f !\x3d null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f \x3d /** @type {?number} */ (jspb.Message.getField(message, 6));\n  if (f !\x3d null) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f \x3d message.getRepeatedMessageValueList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedString(\n      8,\n      f\n    );\n  }\n  f \x3d message.getRepeatedStringValueList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedString(\n      9,\n      f\n    );\n  }\n  f \x3d message.getRepeatedNumberValueList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedDouble(\n      10,\n      f\n    );\n  }\n  f \x3d message.getRepeatedBooleanValueList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedBool(\n      11,\n      f\n    );\n  }\n  f \x3d message.getRepeatedEnumValueList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedInt32(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message_value \x3d 2;\n * @return {?string}\n */\nproto.jslayout.reactive.ModelData.prototype.getMessageValue \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setMessageValue \x3d function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearMessageValue \x3d function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.hasMessageValue \x3d function() {\n  return jspb.Message.getField(this, 2) !\x3d null;\n};\n\n\n/**\n * optional string string_value \x3d 3;\n * @return {?string}\n */\nproto.jslayout.reactive.ModelData.prototype.getStringValue \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 3));\n};\n\n\n/** @param {?string|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setStringValue \x3d function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearStringValue \x3d function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.hasStringValue \x3d function() {\n  return jspb.Message.getField(this, 3) !\x3d null;\n};\n\n\n/**\n * optional double number_value \x3d 4;\n * @return {?number}\n */\nproto.jslayout.reactive.ModelData.prototype.getNumberValue \x3d function() {\n  return /** @type {?number} */ (jspb.Message.getOptionalFloatingPointField(this, 4));\n};\n\n\n/** @param {?number|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setNumberValue \x3d function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearNumberValue \x3d function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.hasNumberValue \x3d function() {\n  return jspb.Message.getField(this, 4) !\x3d null;\n};\n\n\n/**\n * optional bool boolean_value \x3d 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.getBooleanValue \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 5));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setBooleanValue \x3d function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearBooleanValue \x3d function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.hasBooleanValue \x3d function() {\n  return jspb.Message.getField(this, 5) !\x3d null;\n};\n\n\n/**\n * optional int32 enum_value \x3d 6;\n * @return {?number}\n */\nproto.jslayout.reactive.ModelData.prototype.getEnumValue \x3d function() {\n  return /** @type {?number} */ (jspb.Message.getField(this, 6));\n};\n\n\n/** @param {?number|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setEnumValue \x3d function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearEnumValue \x3d function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.jslayout.reactive.ModelData.prototype.hasEnumValue \x3d function() {\n  return jspb.Message.getField(this, 6) !\x3d null;\n};\n\n\n/**\n * repeated string repeated_message_value \x3d 8;\n * @return {!Array\x3cstring\x3e}\n */\nproto.jslayout.reactive.ModelData.prototype.getRepeatedMessageValueList \x3d function() {\n  return /** @type {!Array\x3cstring\x3e} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/** @param {Array\x3cstring\x3e|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setRepeatedMessageValueList \x3d function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ModelData.prototype.addRepeatedMessageValue \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearRepeatedMessageValueList \x3d function() {\n  this.setRepeatedMessageValueList([]);\n};\n\n\n/**\n * repeated string repeated_string_value \x3d 9;\n * @return {!Array\x3cstring\x3e}\n */\nproto.jslayout.reactive.ModelData.prototype.getRepeatedStringValueList \x3d function() {\n  return /** @type {!Array\x3cstring\x3e} */ (jspb.Message.getRepeatedField(this, 9));\n};\n\n\n/** @param {Array\x3cstring\x3e|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setRepeatedStringValueList \x3d function(value) {\n  jspb.Message.setField(this, 9, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ModelData.prototype.addRepeatedStringValue \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 9, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearRepeatedStringValueList \x3d function() {\n  this.setRepeatedStringValueList([]);\n};\n\n\n/**\n * repeated double repeated_number_value \x3d 10;\n * @return {!Array\x3cnumber\x3e}\n */\nproto.jslayout.reactive.ModelData.prototype.getRepeatedNumberValueList \x3d function() {\n  return /** @type {!Array\x3cnumber\x3e} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));\n};\n\n\n/** @param {Array\x3cnumber\x3e|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setRepeatedNumberValueList \x3d function(value) {\n  jspb.Message.setField(this, 10, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ModelData.prototype.addRepeatedNumberValue \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 10, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearRepeatedNumberValueList \x3d function() {\n  this.setRepeatedNumberValueList([]);\n};\n\n\n/**\n * repeated bool repeated_boolean_value \x3d 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {!Array\x3cboolean\x3e}\n */\nproto.jslayout.reactive.ModelData.prototype.getRepeatedBooleanValueList \x3d function() {\n  return /** @type {!Array\x3cboolean\x3e} */ (jspb.Message.getRepeatedField(this, 11));\n};\n\n\n/** @param {Array\x3cboolean\x3e|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setRepeatedBooleanValueList \x3d function(value) {\n  jspb.Message.setField(this, 11, value || []);\n};\n\n\n/**\n * @param {boolean} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ModelData.prototype.addRepeatedBooleanValue \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 11, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearRepeatedBooleanValueList \x3d function() {\n  this.setRepeatedBooleanValueList([]);\n};\n\n\n/**\n * repeated int32 repeated_enum_value \x3d 12;\n * @return {!Array\x3cnumber\x3e}\n */\nproto.jslayout.reactive.ModelData.prototype.getRepeatedEnumValueList \x3d function() {\n  return /** @type {!Array\x3cnumber\x3e} */ (jspb.Message.getRepeatedField(this, 12));\n};\n\n\n/** @param {Array\x3cnumber\x3e|undefined} value */\nproto.jslayout.reactive.ModelData.prototype.setRepeatedEnumValueList \x3d function(value) {\n  jspb.Message.setField(this, 12, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number\x3d} opt_index\n */\nproto.jslayout.reactive.ModelData.prototype.addRepeatedEnumValue \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 12, value, opt_index);\n};\n\n\nproto.jslayout.reactive.ModelData.prototype.clearRepeatedEnumValueList \x3d function() {\n  this.setRepeatedEnumValueList([]);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.jslayout.reactive.ModelData}\n */\nproto.jslayout.reactive.ModelData.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.jslayout.reactive.ModelData, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/template/prototemplate/proto/reactive.jspb.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/reactive/framework.js";
eval("/**\n * @fileoverview This contains API necessary to install reactive\n * framework. Most developer-centric API is in `reactive.js`.\n */\n\ngoog.provide(\x27jslayout.reactive.framework\x27);\n\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.Timer\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27jslayout.reactive.Context\x27);\ngoog.require(\x27jslayout.reactive.ControllerData\x27);\ngoog.require(\x27jslayout.reactive.ControllerPool\x27);\ngoog.require(\x27jslayout.reactive.Options\x27);\ngoog.require(\x27jslayout.reactive.debugApi\x27);\ngoog.require(\x27proto.jslayout.reactive.ReactiveContext\x27);\n\n\ngoog.scope(function() {\nvar framework \x3d jslayout.reactive.framework;\n\n\n/**\n * Prefix for class names generated by the Reactive metadata tracker. Added to\n * elements that have an attached controller. We assume that rest of the class\n * name after the prefix is the controller\x27s instantiation ID. This should only\n * be used within the Reactive framework.\n * @package {string}\n */\nframework.CLASS_NAME_PREFIX \x3d \x27r-\x27;\n\n\n/**\n * Common reactive options.\n * @private {!jslayout.reactive.Options}\n */\nframework.options_ \x3d new jslayout.reactive.Options;\n\n\n/**\n * The default controller pool.\n * @private {!jslayout.reactive.ControllerPool}\n */\nframework.controllerPool_ \x3d new jslayout.reactive.ControllerPool(\n    framework.options_);\n\n\n/**\n * @return {!jslayout.reactive.Options}\n */\nframework.getOptions \x3d function() {\n  return framework.options_;\n};\n\n\n/**\n * @return {!jslayout.reactive.ControllerPool} Returns the default\n *     pool. This is used when registering controllers where there are\n *     no template pool.\n */\nframework.getDefaultControllerPool \x3d function() {\n  return framework.controllerPool_;\n};\n\n\n/**\n * Gets the template pool used by reactive, if any.\n * @return {jslayout.TemplatePool} May be null.\n */\nframework.getTemplatePool \x3d function() {\n  return framework.options_.getTemplatePool();\n};\n\n\n/**\n * Resets the framework state for testing.\n */\nframework.resetForTesting \x3d function() {\n  framework.isReady_ \x3d true;\n  framework.disposeAllContexts();\n  framework.options_ \x3d new jslayout.reactive.Options;\n  framework.controllerPool_ \x3d new jslayout.reactive.ControllerPool(\n      framework.options_);\n  framework.contextMap_ \x3d {};\n  framework.timerId_ \x3d 0;\n};\n\n\n/**\n * Global registry of contexts, keyed by updatable\x27s DOM ID.\n * @private {!Object.\x3cstring, !jslayout.reactive.Context\x3e}\n */\nframework.contextMap_ \x3d {};\n\n\n/**\n * @param {string} instantiationId Controller instantiation id.\n * @param {boolean\x3d} opt_loadPintoModule Whether to attempt to load the\n *     pinto module if the controller is a lazy controller which has not\n *     been created yet.\n * @return {Object} The controller instance associated with the id, or\n *     null if none exists or the controller isn\x27t ready.\n * @package\n */\nframework.getControllerInstance \x3d function(instantiationId,\n    opt_loadPintoModule) {\n  var controllerData \x3d\n      framework.controllerPool_.getControllerData(instantiationId);\n  if (!controllerData) {\n    return null;\n  }\n  if (opt_loadPintoModule \x26\x26 !controllerData.controller) {\n    framework.preloadPintoModule_(controllerData);\n    return null;\n  }\n  if (controllerData.constructionDelayed) {\n    return null;\n  }\n  return controllerData.controller;\n};\n\n\n/**\n * @param {string} instantiationId Controller instantiation id.\n * @return {jslayout.reactive.JsnameDomBase} The dom instance associated with\n *     the id, or null if none exists.\n * @package\n */\nframework.getDomInstance \x3d function(instantiationId) {\n  var controllerData \x3d\n      framework.controllerPool_.getControllerData(instantiationId);\n  if (!controllerData) {\n    return null;\n  }\n  return controllerData.dom;\n};\n\n\n/**\n * Attempts to load the pinto module for a lazy loaded controller.\n * @param {!jslayout.reactive.ControllerData} controllerData The controller data\n *     for which to load the Pinto module.\n * @private\n */\nframework.preloadPintoModule_ \x3d function(controllerData) {\n  var id \x3d controllerData.metadata.getPintoModuleId();\n  if (id) {\n    framework.options_.requestPintoModules([id]);\n  }\n};\n\n/** @private {boolean} */\nframework.isReady_ \x3d true;\n\n/**\n * Marks the framework as being ready. At this time, any requests for\n * controllers will be resolved, as we\x27re confident that the host for the\n * reactive framework has downloaded the necessary (maybe empty) metadata.\n * This function can be called multiple times, with the Nth \x3e 1st call being a\n * no-op.\n */\nframework.ready \x3d function() {\n  framework.isReady_ \x3d true;\n\n  for (const {fn, resolve, reject} of framework.queuedWorkToRunWhenReady_) {\n    fn().then(obj \x3d\x3e resolve(obj), err \x3d\x3e reject(err));\n  }\n  framework.queuedWorkToRunWhenReady_.length \x3d 0;\n};\n\n\n/**\n * @private {!Array\x3c{\n *   fn: function(): !goog.Promise\x3c!Object\x3e,\n *   resolve: function(!Object),\n *   reject: function(*)\n * }\x3e}\n */\nframework.queuedWorkToRunWhenReady_ \x3d [];\n\n/**\n * Runs a function that returns a promise when reactive is ready to.\n * @param {function(): !goog.Promise\x3c!Object\x3e} fn\n * @return {!goog.Promise\x3c!Object\x3e}\n * @private\n */\nframework.performWhenReady_ \x3d function(fn) {\n  if (framework.isReady_) {\n    return fn();\n  }\n  return new goog.Promise((resolve, reject) \x3d\x3e {\n    framework.queuedWorkToRunWhenReady_.push({fn, resolve, reject});\n  });\n};\n\n/**\n * Gets the controller instance with the given instantiation id, if the\n * controller is managed by this context. This triggers loading of lazy\n * controllers.\n * @param {string} instantiationId Controller instantiation id.\n * @return {!goog.Promise\x3c!Object\x3e} Resolves to the controller instance.\n *     Rejects if the controller creation fails, or this context does not have a\n *     controller with the given ID.\n * @package\n */\nframework.getControllerPromise \x3d function(instantiationId) {\n  return framework.performWhenReady_(() \x3d\x3e {\n    var controllerData \x3d\n        framework.controllerPool_.getControllerData(instantiationId);\n    if (!controllerData) {\n      return goog.Promise.reject(null);\n    }\n    return framework.getPromiseFromControllerData_(controllerData);\n  });\n};\n\n\n/**\n * @param {!Object} controller\n * @return {!goog.Promise\x3c!Object\x3e} Resolves to the controller instance.\n *     Rejects if the controller creation fails, or this context does not have a\n *     controller with the given ID.\n * @package\n */\nframework.getPromiseFromController \x3d function(controller) {\n  const controllerData \x3d controller.reactiveData__;\n  goog.asserts.assertInstanceof(\n      controllerData, jslayout.reactive.ControllerData,\n      \x27Provided controller does not appear to be a reactive controller.\x27);\n  return framework.getPromiseFromControllerData_(controllerData);\n};\n\n\n/**\n * @param {!jslayout.reactive.ControllerData} controllerData\n * @return {!goog.Promise\x3c!Object\x3e} Resolves to the controller instance.\n *     Rejects if the controller creation fails, or this context does not have a\n *     controller with the given ID.\n * @private\n */\nframework.getPromiseFromControllerData_ \x3d function(controllerData) {\n  if (!controllerData.controller) {\n    framework.preloadPintoModule_(controllerData);\n  }\n  if (!controllerData.resolver) {\n    controllerData.resolver \x3d goog.Promise.withResolver();\n    jslayout.reactive.ControllerPool.resolvePromise(controllerData);\n  }\n  return controllerData.resolver.promise;\n};\n\n\n/**\n * Sets an error handler for reporting caught exceptions (e.g.,\n * during controller creation and disposal). Any exception thrown by\n * the error handler itself will be caught and silently discarded.\n * @param {!function(!Error)} errorHandler\n */\nframework.setErrorHandler \x3d function(errorHandler) {\n  framework.options_.setErrorHandler(errorHandler);\n};\n\n\n/**\n * Sets a loader function to be used to load additional pinto modules.\n * @param {function(!Array.\x3cstring\x3e)} loaderFn A loader function that\n *     accepts an array of pinto modules to load.\n */\nframework.setPintoModuleLoader \x3d function(loaderFn) {\n  framework.options_.setPintoModuleLoader(loaderFn);\n};\n\n\n/**\n * Sets the controller callback function for lifecycle events (e.g. init and\n * dispose). This function takes an event type and a sub type as its input.\n * @param {function(!jslayout.reactive.ControllerPool.ControllerEvent_,\n *     !string)} lifecycleCallback\n */\nframework.setControllerLifecycleCallback \x3d function(lifecycleCallback) {\n  framework.controllerPool_.setControllerLifecycleCallback(lifecycleCallback);\n};\n\n\n/**\n * @param {string} id The DOM ID of the context to dispose.\n */\nframework.disposeContext \x3d function(id) {\n  if (id in framework.contextMap_) {\n    framework.contextMap_[id].dispose();\n    delete framework.contextMap_[id];\n  }\n};\n\n\n/**\n * Disposes all contexts.\n */\nframework.disposeAllContexts \x3d function() {\n  for (var id in framework.contextMap_) {\n    framework.disposeContext(id);\n  }\n};\n\n\n/**\n * Disposes contexts found within the given element, as well as the context\n * associated with the element itself. Contexts are disposed in reverse order of\n * where they appear in the dom, so when a nested controller is disposed, it can\n * rely on ancestor controllers still existing.\n * @param {!Element} element\n */\nframework.disposeContextsInContainer \x3d function(element) {\n  // Find child contexts, associated with Async/JESR containers, identified by\n  // data-jiis.\n  const containers \x3d element.querySelectorAll(\x27[data-jiis]\x27);\n  for (let i \x3d containers.length - 1; i \x3e\x3d 0; i--) {\n    framework.disposeContext(containers[i].id);\n  }\n  framework.disposeContext(element.id);\n};\n\n\n/**\n * Registers a controller to reactive framework.\n * @param {!function(!jslayout.reactive.ControllerPool)} registrationFn\n *     Registration function registerController generated by\n *     jslayout_js.\n */\nframework.registerController \x3d function(registrationFn) {\n  registrationFn(framework.getDefaultControllerPool());\n  framework.scheduleContextReprocessing();\n};\n\n\n/**\n * @private {number}\n */\nframework.timerId_ \x3d 0;\n\n\n/**\n * Schedules context reprocessing asynchronously. Reprocessing will\n * attempt to initializes any uninitialized templates, if\n * possible. This may be needed if more controllers have been\n * registered (e.g. because a pinto module is loaded).\n *\n * This is done asynchronously because there may be more controllers\n * yet to be loaded in this execution cycle. This lets those\n * controllers be registered and batch up the reprocessing.\n *\n * Users should never need to call this directly (unless they are\n * registering controllers manually).\n */\nframework.scheduleContextReprocessing \x3d function() {\n  if (!framework.timerId_) {\n    framework.timerId_ \x3d goog.Timer.callOnce(\n        framework.reprocessContexts_, 0);\n  }\n};\n\n\n/**\n * Reprocesses all contexts.\n * @private\n */\nframework.reprocessContexts_ \x3d function() {\n  for (var id in framework.contextMap_) {\n    framework.contextMap_[id].reprocessUninitializedTemplates();\n  }\n  // Ensure that we replay any queued events, in case any of the\n  // created controllers can now handle the queued events.\n  var jsactionDispatcher \x3d framework.options_.getJsactionDispatcher();\n  if (jsactionDispatcher) {\n    jsactionDispatcher.replay();\n  }\n  framework.timerId_ \x3d 0;\n};\n\n\n/**\n * Processes a context metadata. Skips an existing context.\n * @param {!proto.jslayout.reactive.ReactiveContext} contextMetadata\n */\nframework.processContextMetadata \x3d function(contextMetadata) {\n  var id \x3d contextMetadata.getId();\n  goog.asserts.assert(id, \x27Missing context id\x27);\n\n  if (id in framework.contextMap_) {\n    goog.log.info(\n        framework.logger_,\n        \x27id: \x27 + id + \x27 already found, appending contextMetadata.\x27);\n    framework.appendContextMetadata_(contextMetadata);\n    return;\n  }\n\n  // Schedule pinto module loading if necessary.\n  framework.options_.requestPintoModules(\n      contextMetadata.getPintoModuleIdList());\n\n  var context \x3d new jslayout.reactive.Context(\n      framework.options_, framework.controllerPool_, id);\n  framework.contextMap_[context.getId()] \x3d context;\n  context.update(contextMetadata);\n};\n\n\n/**\n * Returns true if the value is null or an empty array.\n * @param {?} value\n * @return {boolean}\n * @private\n */\nframework.isEmpty_ \x3d function(value) {\n  return goog.isArray(value) ? value.length \x3d\x3d 0 : goog.isNull(value);\n};\n\n\n/**\n * Processes a raw, jspb-encoded context metadata. Skips existing context.\n * @param {!Array} contextMetadataArray jspb-encoded ReactiveContext\n */\nframework.processRawContextMetadata \x3d function(contextMetadataArray) {\n  // Check to ensure that there is some context to parse.\n  if (!contextMetadataArray.length ||\n      contextMetadataArray.every(framework.isEmpty_)) {\n    return;\n  }\n  framework.checkContextMetadataIsArray_(contextMetadataArray);\n  framework.processContextMetadata(\n      new proto.jslayout.reactive.ReactiveContext(contextMetadataArray));\n};\n\n\n/**\n * Checks that the contextMetadata is an array.\n * TODO(ndsouza): Perhaps change this check to an assert.\n * @param {!Array} contextMetadataArray jspb-encoded ReactiveContext\n * @private\n */\nframework.checkContextMetadataIsArray_ \x3d function(contextMetadataArray) {\n  // Checking it here since it can be called from \x27google.jsc.x\x27 that does not\n  // check types.\n  if (!goog.isArrayLike(contextMetadataArray)) {\n    goog.log.warning(framework.logger_, \x27Could not process this context \x27 +\n        \x27metadata, skipping: \x27 + contextMetadataArray);\n  }\n};\n\n\n/**\n * Appends the raw, jspb-encoded context metadata.\n * @param {!Array} contextMetadataArray jspb-encoded ReactiveContext\n */\nframework.appendRawContextMetadata \x3d function(contextMetadataArray) {\n  // Check to ensure that there is some context to parse.\n  if (!contextMetadataArray.length ||\n      contextMetadataArray.every(framework.isEmpty_)) {\n    return;\n  }\n  framework.checkContextMetadataIsArray_(contextMetadataArray);\n  framework.appendContextMetadata_(\n      new proto.jslayout.reactive.ReactiveContext(contextMetadataArray));\n};\n\n\n/**\n * Appends the new context metadata.\n * @param {!proto.jslayout.reactive.ReactiveContext} contextMetadata\n * @private\n */\nframework.appendContextMetadata_ \x3d function(contextMetadata) {\n  var id \x3d contextMetadata.getId();\n  goog.asserts.assert(id, \x27Missing context id\x27);\n\n  var context;\n  if (id in framework.contextMap_) {\n    // Get the previous context.\n    context \x3d framework.contextMap_[id];\n    // Schedule pinto module loading if necessary.\n    framework.options_.requestPintoModules(\n        contextMetadata.getPintoModuleIdList());\n    // Update with new context.\n    context.update(contextMetadata);\n  } else {\n    // Got here because either\n    // a) Append is called for the first time OR\n    // b) Previous append/update did not have any reactive context.\n    // So let\x27s just process this context metadata.\n    framework.processContextMetadata(contextMetadata);\n  }\n};\n\n\n/**\n * Installs global framework hooks, and processes any reactive contexts that\n * were outputted before the framework loaded.\n * @private\n */\nframework.install_ \x3d function() {\n  // Reactive should only be loaded once (in a single JS binary). Otherwise the\n  // google.jsc.* exports will be clobbered.\n  if (goog.getObjectByName(\x27google.jsc.i\x27)) {\n    goog.asserts.fail(\x27Reactive framework already loaded\x27);\n    // NOTE(domnit): In non-debug mode we silently return, assuming that the\n    // first JS binary to install reactive is the right one. We do not throw an\n    // exception because a second JS binary may inadvertly depend on reactive,\n    // which immediately tries to install itself. See b/19339014.\n    return;\n  }\n  goog.exportSymbol(\x27google.jsc.i\x27, true);\n\n  // Before this code is loaded, context metadata might have been stored at\n  // google.jsc.xx. Adding those contexts here.\n  var contextsToCreate \x3d goog.getObjectByName(\x27google.jsc.xx\x27);\n  if (contextsToCreate \x26\x26 goog.isArrayLike(contextsToCreate)) {\n    goog.array.forEach(contextsToCreate, framework.processRawContextMetadata);\n  }\n\n  goog.exportSymbol(\x27google.jsc.xx\x27, []);\n  goog.exportSymbol(\x27google.jsc.x\x27, framework.processRawContextMetadata);\n  jslayout.reactive.debugApi.frameworkLoaded();\n};\n\n\n/**\n * @const @private\n */\nframework.logger_ \x3d goog.log.getLogger(\x27jslayout.reactive.framework\x27);\n\n\nframework.install_();\n\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/framework.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3b');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3b');

}catch(e){_DumpException(e)}
/* _Module_:sy3c */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3c');
var $googDebugFname="javascript/template/jslayout/syntax.js";
eval("// Copyright 2010 Google Inc. All rights reserved.\n\n/**\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview Defines and documents the various lexical components\n * that make up different aspects of the jslayout syntax.\n *\n * NOTE(mesch): Yep, the things defined here are lexical, but their\n * grouping and documentation is what defines the jslayout syntax.\n *\n * NOTE(mesch): I went for this name alternative because (1) I wanted\n * to steer clear from a file constants.js, because such a file\n * eventually just becomes the dumping ground of unrelated\n * items. Moreover, it doesn\x27t make sense to group things together by\n * a single grammatical property. It would be like having a file for\n * functions that return integers. But (2) I also didn\x27t want to split\n * the file up in files for attributes, properties, names, etc.,\n * because they belong too closely together. I (3) also couldn\x27t put\n * them together with the code that uses them, because they are shared\n * across files.\n *\n * TODO(mesch): Arguably all the items here could be in a package\n * jslayout.syntax.*, but I was afraid of the resulting long names.\n *\n * TODO(mesch): String and Type don\x27t belong here. They can be\n * inlined.\n *\n * See also //javascript/jsaction/syntax.js.\n *\n * @visibility {//javascript/apps/bigtop/action:__pkg__}\n * @visibility {//javascript/jsaction:__subpackages__}\n * @visibility {//javascript/template/jslayout:jslayout_js_internal}\n */\n\ngoog.provide(\x27jslayout.ActionType\x27);\ngoog.provide(\x27jslayout.Attribute\x27);\ngoog.provide(\x27jslayout.Char\x27);\ngoog.provide(\x27jslayout.CmdOffset\x27);\ngoog.provide(\x27jslayout.Command\x27);\ngoog.provide(\x27jslayout.DescentType\x27);\ngoog.provide(\x27jslayout.Element\x27);\ngoog.provide(\x27jslayout.ElementDataIndex\x27);\ngoog.provide(\x27jslayout.JsRenderingMode\x27);\ngoog.provide(\x27jslayout.Name\x27);\ngoog.provide(\x27jslayout.Property\x27);\ngoog.provide(\x27jslayout.String\x27);\ngoog.provide(\x27jslayout.Type\x27);\n\n\n/**\n * All attributes used by jslayout. See\n * \x3chttps://sites.google.com/a/google.com/jslayout/docs/control-structures\x3e\n * for detailed semantics of the attributes.\n * @enum {string}\n */\njslayout.Attribute \x3d {\n  /**\n   * Manifest of attributes set on this element. Used to remove\n   * attributeson dynamic bind expressions, classes from full class\n   * assignments in transclusions, and to handle dynamic attributes.\n   */\n  JSAN: \x27jsan\x27,\n\n  /**\n   * Not strictly a jslayout attribute, but gets special merging\n   * treatment in jslayout.\n   */\n  JSACTION: \x27jsaction\x27,\n\n  /**\n   * Iteration.\n   */\n  JSFOR: \x27jsfor\x27,\n\n  /**\n   * Iteration with stable identity of the iteration elements.\n   */\n  JSKEY: \x27jskey\x27,\n\n  /**\n   * Support for iteration on reprocessing. Identifies the different\n   * instances of the same element in the template created by jsfor.\n   */\n  JSINSTANCE: \x27jsinstance\x27,\n\n  /**\n   * Conditional display of the element.\n   */\n  JSDISPLAY: \x27jsdisplay\x27,\n\n  /**\n   * Conditional presence of the element. Distinct from jsdisplay only\n   * on the server. On the browser, treated the same as\n   * jsdisplay. TODO(mesch): Reconcile with jsdisplay. Jsif can be\n   * treated like jsdisplay on the server if it depends on a\n   * browserside parameter.\n   */\n  JSIF: \x27jsif\x27,\n\n  /**\n   * Conditionally set variables, combined with conditional presence\n   * of the element. There is no corresponding command; this is parsed\n   * into a sequence of if and var commands.\n   */\n  JSMATCH: \x27jsmatch\x27,\n\n  /**\n   * Attribute values of an element.\n   */\n  JSATTRS: \x27jsattrs\x27,\n\n  /**\n   * Variables defined in the scope of the element.\n   */\n  JSVARS: \x27jsvars\x27,\n\n  /**\n   * A javascript expression that is evaluated during processing with\n   * the current DOM node in scope. Only for browser side\n   * processing. TODO(mesch): Parse this on the server, so that it can\n   * be checked at build time.\n   */\n  JSEVAL: \x27jseval\x27,\n\n  /**\n   * Transclusion of another template identified by template key. Only\n   * for testing of browser side processing. Server side processing uses jsuse\n   * for transclusion.\n   */\n  TRANSCLUDE: \x27transclude\x27,\n\n  /**\n   * Sets the content of the element, and stops traversal downwards.\n   */\n  JSCONTENT: \x27jscontent\x27,\n\n  /**\n   * Conditionally stops processing. Handled only on\n   * browser. TODO(mesch): Also handle on server.\n   */\n  JSSKIP: \x27jsskip\x27,\n\n  /**\n   * After preprocessing all the nodes in a template at load time, the\n   * key under which the parsed jslayout attributes of this element\n   * are stored in the cache. Elements that have the same set of\n   * processing attributes with the same values have the same cache\n   * key. The cache entry, which contains all jslayout attributes of\n   * this element compiled into Function objects, is stored under the\n   * key in a global map, and the cache entry is also stored as\n   * property __jstcache (cf. jslayout.Property, below) directly on\n   * the DOM node. That way, the cache entry can be accessed fast as a\n   * property during processing, but can still be found through the\n   * attribute value, albeit a little slower, on clones of the element\n   * (where the custom properties are lost).\n   */\n  JSTCACHE: \x27jstcache\x27,\n\n  /**\n   * Related to jsaction. There may be jsattrs determined on the\n   * server side. Those are made available to jsaction andlers through\n   * the custom attribute jsprops. TODO(mesch): May be more related to\n   * jsaction.\n   */\n  JSPROPS: \x27jsprops\x27,\n\n  /**\n   * Switch/case/default processing instruction in jslayout. The\n   * jsswitch attribute must be on the parent of the element that hase\n   * the jscase and jscasedefault. Siblings without jscase or\n   * jscasedefault set to display:none. (If the template comes from\n   * serverside jslayout, there are no such siblings.)\n   */\n  JSSWITCH: \x27jsswitch\x27,\n\n  /**\n   * Cf. JSSWITCH.\n   */\n  JSCASE: \x27jscase\x27,\n\n  /**\n   * Cf. JSSWITCH.\n   */\n  JSCASEDEFAULT: \x27jscasedefault\x27,\n\n  /**\n   * Declares a mapping from instances in the global variable pool to\n   * local variables.\n   */\n  JSGLOBALS: \x27jsglobals\x27,\n\n  /**\n   * Generic processing instruction. Currently not supported in the syntax,\n   * used internally to represent a list of commands.\n   */\n  JSL: \x27jsl\x27,\n\n  /**\n   * Attributes containing all serveronly subexpressions\x27 values, in\n   * order of template processing. This means, for elements containing\n   * transclusions, all serveronly values in transcluding template\n   * will appear before those of transcluded template.\n   */\n  JSVS: \x27jsvs\x27,\n\n  /**\n   * ID of the Tag instance used to create this Element. Used to reuse\n   * the Tag instances created in browserside gencode for\n   * processing. Unlike jstcache, this ID is valid only for one\n   * instance of the Element, not for any clone of it.\n   */\n  JSTID: \x27jstid\x27,\n\n  /**\n   * Attribute containing the skew check fingerprint, see\n   * jslayou.Processor.checkSkew().\n   */\n  JSSC: \x27jssc\x27\n\n  // TODO(chrishenry): Consider implementing reactive jsaction parsing\n  // as well. But beware of the additional code that needs to be brought in\n  // for a feature that will be unused in production. (We can solve this\n  // by flagging off parsing logic for production code that does not use it.)\n};\n\n\n/**\n * String constants representing a single character used throughout\n * the processor.\n * @enum {string}\n */\njslayout.Char \x3d {\n  AMPERSAND: \x27\x26\x27,\n  ASTERISK: \x27*\x27,\n  AT: \x27@\x27,\n  CARET: \x27^\x27,\n  COLON: \x27:\x27,\n  COMMA: \x27,\x27,\n  DOLLAR: \x27$\x27,\n  G: \x27g\x27,\n  PARENCLOSE: \x27)\x27,\n  PARENOPEN: \x27(\x27,\n  PERIOD: \x27.\x27,\n  PIPE: \x27|\x27,\n  PLUS: \x27+\x27,\n  QUESTIONMARK: \x27?\x27,\n  SPACE: \x27 \x27\n};\n\n\n/**\n * @enum {number}\n */\njslayout.JsRenderingMode \x3d {\n  TRADITIONAL: 0,\n  DOMDIFF: 1\n};\n\n\n/**\n * Special names used in jslayout expressions and bound automatically\n * in the eval context.\n * @enum {string}\n */\njslayout.Name \x3d {\n  /**\n   * Names of special variables defined by the jstemplate evaluation\n   * context. These can be used in js expression in jstemplate\n   * attributes.\n   */\n  INDEX: \x27$index\x27,\n  COUNT: \x27$count\x27,\n  THIS: \x27$this\x27,\n\n  /**\n   * Names of intrinsic functions that are provided by the evaluation\n   * context. Unlike the other intrinsics defined in\n   * e.g. jstemplate_bidi.js and jstemplate_jslayout.js, these are not\n   * global functions, because they are evaluated in the specific\n   * context.\n   */\n  HAS: \x27has\x27,\n  SIZE: \x27size\x27,\n\n  /**\n   * The name of the global variable that holds the runtime service.\n   */\n  RUNTIME: \x27runtime\x27\n};\n\n\n/**\n * All special properties used in the processing of jslayout expressions.\n * @enum {string}\n */\njslayout.Property \x3d {\n  /**\n   * The cache entry pointed to by the value of the attribute jstcache\n   * is also added as a property for faster access. The attribute\n   * value is there too in order to also survive cloning.\n   */\n  JSTCACHE: \x27__jstcache\x27,\n\n  /**\n   * Cache for the value of jscontent, used to prevent flicker when\n   * applying jscontent with unchanged\n   * values. Cf. Processor::content_().\n   */\n  INNERHTML: \x27__innerhtml\x27,\n\n  /**\n   * The property is added to elements with a jscontroller in\n   * rebinding mode and contains the eval context that holds the\n   * jscontroller instance and its data.\n   */\n  CONTEXT: \x27__ctx\x27,\n\n  /**\n   * The property is added to elements in rebinding mode and contains\n   * the command data list of bound commands that covers this\n   * node.\n   */\n  COMMAND_DATA_NODE: \x27__cdn\x27,\n\n  /**\n   * Used to store EvalContext for reactive jsaction invocation.\n   */\n  REACTIVE_JSACTION_CONTEXT: \x27__rjsctx\x27,\n\n  /**\n   * Used to store the parsed values of jsvs attributes. This is an\n   * array of [m, v1, v2, ..., vN], where m is the next unprocessed\n   * values and v1, ..., vN are the serveronly values.\n   */\n  SERVERONLY_VALUES: \x27__vs\x27,\n\n  /**\n   * Used to store resolved transclusions in this element. The value\n   * may be updated when processing $u/$ue commands. This is an array\n   * of [t1, ..., tN], where the values are template keys of each\n   * resolved transclusions on the element, in the order of\n   * transclusions.\n   */\n  RESOLVED_TRANSCLUSIONS: \x27__rt\x27,\n\n  /**\n   * This property holds the jslayout.Tag instance of the DOM Element\n   * when debugging.\n   */\n  TAG: \x27__tag\x27,\n\n  /**\n   * Holds the command list source code location in DEBUG mode.\n   */\n  SRC_POS: \x27__src_pos\x27,\n\n  /**\n   * Holds the template pool in DEBUG mode. Needed to resolve\n   * template keys in the chrome extension.\n   */\n  DEBUG_TEMPLATE_POOL: \x27__template_pool\x27,\n\n  /**\n   * Hold a reference to the attached template instance. Allows to perform\n   * rendering without knowing the template instance, e.g. in narrow rendering.\n   */\n  ATTACHED_TEMPLATE: \x27__attached_template\x27,\n\n  /**\n   * If set, makes the processor skip elements outside of the narrow path when\n   * rendering. Can be null or one of jslayout.Processor.NarrowStrategy_ values.\n   *\n   * See go/jsl-narrow-rendering.\n   */\n  NARROW_STRATEGY: \x27__narrow_strategy\x27,\n\n  /**\n   * If set on the first element of FOR_KEY loop, on rebinding forkeyCmd_ action\n   * processes all the elements even if fingerprint has not changed.\n   *\n   * During narrow rendering (go/jsl-narrow-rendering) of a server-side rendered\n   * template, some elements may be skipped, but the fingerprint calculation\n   * does not take that into account. So on rebinding some of the subCdn\x27s\n   * on a FOR_KEY loop may be null, which means that fingerprint check should be\n   * ignored and re-processing of all the elements is needed.\n   * We could just scan the descendants array and check for nulls, but it would\n   * have a performance penalty for all renderings, including non-narrow ones,\n   * so we cache this info in a property.\n   */\n  FORKEY_HAS_UNPROCESSED_ELEMENTS: \x27__forkey_has_unprocessed_elements\x27,\n\n  /**\n   * The vdom node associated with this element, used in DOMDIFF mode.\n   */\n  VDOM: \x27__vdom\x27\n};\n\n\n/**\n * All commands used by jslayout. Commands are a linear form of\n * jslayout control attributes. Jslayout control attributes get\n * transformed to commands at parse time. In the case of jsvars,\n * jseval, jsfor and jsglobals, each part of the control attribute\n * value gets transformed into a separate command (of the same\n * type). At entry points, the command lists of the\n * transcluding and transcluded template are concatenated. The list\n * positions for each entry point are marked by the $t command. This\n * allows for starting reprocessing at a given entry point,\n * ignoring the transcluder\x27s command list.\n *\n * @enum {string}\n */\njslayout.Command \x3d {\n  ATTR: \x27$a\x27,\n  ATTR_LEGACY: \x27_a\x27,  // Legacy attributes from jsattrs; processed to $a and _p.\n  CONTENT: \x27$c\x27,\n  CSS: \x27css\x27,  // Only handled during instantiation.\n  DIR_HTML: \x27$dh\x27,\n  DIR_JSCONTENT: \x27$dc\x27,\n  DIR_JSDIR: \x27$dd\x27,\n  DISPLAY: \x27display\x27,\n  EVAL: \x27$e\x27,\n  FOR: \x27for\x27,\n  FORKEY: \x27$fk\x27,  // Never parsed, only in extern command list.\n  GLOBAL: \x27$g\x27,\n  IDL_CONTROLLER: \x27$ic\x27,  // Never parsed, only in extern command list.\n  IDL_ACTION: \x27$ia\x27,      // Never parsed, only in extern command list.\n  IF: \x27$if\x27,              // Similar to display, but prunes transclusions.\n  KEY: \x27$k\x27,              // Only parsed, not in extern command list.\n  OBSERVE: \x27$o\x27,          // Never parsed, only in extern command list.\n  REACTIVE_JSACTION: \x27$rj\x27,\n  RENDER: \x27$r\x27,\n  SKIP: \x27$sk\x27,\n  SPLICE: \x27$x\x27,\n  SWITCH: \x27$s\x27,\n  SWITCHCASE: \x27$sc\x27,\n  SWITCHDEFAULT: \x27$sd\x27,\n  TAG: \x27$tg\x27,  // Only handled during instantiation.\n  TEMPLATE: \x27$t\x27,\n  USE: \x27$u\x27,\n  USEATTR: \x27$ua\x27,       // Only parsed from jsl, not from jsuseattrs.\n  USEATTREXPR: \x27$uae\x27,  // Only parsed from jsl, not from jsuseattrs.\n  USEEXPR: \x27$ue\x27,\n  USEPARAM: \x27$up\x27,  // Use with explicit params\n  VAR: \x27var\x27,\n  VAR_SERVERONLY: \x27$vs\x27\n};\n\n\n/**\n * Identifiers for offsets in the command argument arrays.\n * See jslayout.ExpressionParser.evalToAttrs().\n *\n * @enum {number}\n */\njslayout.CmdOffset \x3d {\n  ATTR_TYPE: 0,\n  ATTR_SANITIZATION_CONTEXT: 1,\n  ATTR_JSCONTROLLER_FLAG: 2,  // Unused. TODO(mesch): Remove.\n  ATTR_CONDITION: 3,\n  ATTR_VALUE_FUNCTION: 4,\n  ATTR_NAME: 5,\n  ATTR_PROP_NAME: 6,\n  ATTR_INIT_ONLY: 7,\n  ATTR_CHECK_DISPLAY_NONE: 8\n};\n\n\n/**\n * Elements that are have special meaning for jslayout.\n *\n * @enum {string}\n */\njslayout.Element \x3d {\n  JSL: \x27jsl\x27\n};\n\n\n/**\n * Indices of the field in the element data tuple used for\n * instantiation from data. Cf. function MakeElementData() in\n * api_js.cc.\n * @enum {number}\n */\njslayout.ElementDataIndex \x3d {\n  NAME: 0,\n  FLAGS: 1,\n  NEEDED_FOR_UPDATE: 2,\n  COMMAND_LIST: 3,\n  CHILDREN: 4\n};\n\n\n/**\n * Other string constants used throughout the processor.\n * @enum {string}\n */\njslayout.String \x3d {\n  /**\n   * Empty string.\n   */\n  EMPTY: \x27\x27,\n\n  /**\n   * HTML element.\n   */\n  DIV: \x27div\x27,\n\n  /**\n   * HTML attribute.\n   */\n  ID: \x27id\x27,\n\n  /**\n   * HTML attribute.\n   */\n  VALUE: \x27value\x27,\n\n  /**\n   * HTML attribute.\n   */\n  CHECKED: \x27checked\x27,\n\n  /**\n   * Special value of the jsinstance attribute.\n   */\n  ASTERISKZERO: \x27*0\x27,\n\n  /**\n   * Special value of the jstcache attribute.\n   */\n  ZERO: \x270\x27,\n\n  /**\n   * HTML attribute, and special value in jsattrs.\n   */\n  CLASS: \x27class\x27,\n\n  /**\n   * HTML attribute, and special value in jsattrs.\n   */\n  STYLE: \x27style\x27,\n\n  /**\n   * Special value in jsattrs.\n   */\n  PARAM: \x27param\x27,\n\n  /**\n   * Special value for escaping mode in jscontent.\n   */\n  RAW: \x27raw\x27,\n\n  /**\n   * Special value for escaping mode in jscontent.\n   */\n  SAFE: \x27safe\x27,\n\n  /**\n   * Special value for escaping mode in jscontent.\n   */\n  HTML_SNIPPET: \x27html_snippet\x27,\n\n  /**\n   * Used in regular expressions.\n   */\n  DOLLARONE: \x27$1\x27,\n\n  /**\n   * Represents an escaped ampersand character when computing label\n   * keys in jslayout.ExpressionParser.evalToAttrs().\n   */\n  AMPERSAND_DOUBLE: \x27\x26\x26\x27,\n\n  /**\n   * The jsaction event type that is triggered automatically when\n   * the DOM element is available (this is the old name for the create\n   * event, to be phased out because a DOM event with the same exists).\n   */\n  IDL_LOAD_JSACTION_EVENT_TYPE: \x27load\x27,\n\n  /**\n   * The jsaction event type that is triggered automatically when\n   * the DOM element is available.\n   */\n  IDL_CREATE_JSACTION_EVENT_TYPE: \x27create\x27,\n\n  /**\n   * The string null. Used as the template key for templates not\n   * resolvable on the browser.\n   */\n  NULL: \x27null\x27,\n\n  /**\n   * Prefix for controller keys in the IDL action map.\n   */\n  IDL_CONTROLLER_KEY_PREFIX: \x27controller:\x27,\n\n  /**\n   * Prefix for controller keys in the IDL action map.\n   */\n  IDL_ACTION_KEY_PREFIX: \x27action:\x27,\n\n  /**\n   * The jsaction action namespace for idl actions.\n   */\n  IDL_ACTION_NAMESPACE: \x27jsl\x27,\n\n  /**\n   * The jsaction action name for idl actions.\n   */\n  IDL_ACTION: \x27_\x27,\n\n  /**\n   * The fully-qualified jsaction action name for idl actions (including\n   * namespace).\n   */\n  IDL_ACTION_FULL: \x27jsl._\x27,\n\n  /**\n   * Key prefix for update requests listening to observables in the IDL map.\n   */\n  OBSERVER_KEY_PREFIX: \x27observer:\x27\n};\n\n\n/**\n * Strings representing the return values of the typeof operator, as\n * used by the jslayout processor.\n * @enum {string}\n */\njslayout.Type \x3d {\n  UNDEFINED: \x27undefined\x27,\n  BOOLEAN: \x27boolean\x27\n};\n\n\n/**\n * Describes how actions affect the flow of control along the command\n * list.\n * @enum {number}\n */\njslayout.ActionType \x3d {\n  NORMAL: 0,                 // everything else\n  SIMPLE: 1,                 // CONTENT, DISPLAY, IF, SKIP\n  TRANSCLUSION: 3,           // USE, USEEXPR, USEPARAM\n  DESCENDANTS: 4             // FOR, FORKEY, SWITCH\n};\n\n\n/**\n * Describes the type of descent for the descendants field in CDN.\n * @enum {number}\n */\njslayout.DescentType \x3d {\n  NONE: 0,\n  DESCENDANT_ELEMENTS: 1,\n  FOR: 2,\n  SWITCH: 3\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/syntax.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3c');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3c');

}catch(e){_DumpException(e)}
/* _Module_:sy3g */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3g');
var $googDebugFname="net/proto2/contrib/js_proto/public/js_proto.js";
eval("// Copyright 2012 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Defines types used and exported by jsproto.\n * @author jacobsa@google.com (Aaron Jacobs)\n */\n\ngoog.provide(\x27jsproto\x27);\n\ngoog.require(\x27goog.asserts\x27);\n\n\n/**\n * @class Possible types for fields. See compact_proto_url_parser.h for details.\n *\n * @enum {string}\n * @const\n */\njsproto.Type \x3d {\n  DOUBLE: \x27d\x27,\n  FLOAT: \x27f\x27,\n\n  INT32: \x27i\x27,\n  INT64: \x27j\x27,\n\n  UINT32: \x27u\x27,\n  UINT64: \x27v\x27,\n\n  BOOL: \x27b\x27,\n  ENUM: \x27e\x27,\n  STRING: \x27s\x27,\n  BASE64_STRING: \x27z\x27,\n  BYTES: \x27B\x27,\n  MESSAGE: \x27m\x27,\n\n  FIXED32: \x27x\x27,\n  FIXED64: \x27y\x27,\n  SFIXED32: \x27g\x27,\n  SFIXED64: \x27h\x27,\n  SINT32: \x27n\x27,\n  SINT64: \x27o\x27\n};\n\n\n/**\n * @class Values to extend jsproto.Type for encoding CompactMessageDescriptor.\n * These complement jsproto.Type to allow upper-case to encode repeated and\n * to represent string defaults for 64 bit numeric types.\n * @enum {string}\n * @const\n */\njsproto.CompactDescriptorExtensionType \x3d {\n  BYTES: \x27a\x27,\n  INT64_STRING: \x27k\x27,\n  SINT64_STRING: \x27p\x27,\n  UINT64_STRING: \x27w\x27,\n  FIXED64_STRING: \x27q\x27,\n  SFIXED64_STRING: \x27r\x27,\n};\n\n\n/**\n * @class Possible field labels.\n * @enum {number}\n * @const\n */\njsproto.Label \x3d {\n  OPTIONAL: 1,\n  REQUIRED: 2,\n  REPEATED: 3\n};\n\n\n\n/** @record */\njsproto.MessageDescriptor \x3d function() {};\n\n\n/**\n * The FieldDescriptors, one for each field in the message.  For JSPB based\n * messages, this is indexed by the field\x27s tag number (that is, the field\n * number used in the .proto file).  For JSON based messages, this is indexed by\n * the tag name.\n *\n * @type {Array\x3cjsproto.FieldDescriptor\x3e|\n *        Object\x3cstring, jsproto.FieldDescriptor\x3e}\n */\njsproto.MessageDescriptor.prototype.fieldDescriptor;\n\n\n/**\n * How much to offset the tag number for a field within this message in order to\n * generate the index into the message\x27s data array. For zero-based protos, the\n * offset will be -1, for one-based protos the offset will be 0. See the\n * build_defs file for more information on zero- vs. one-based protos.  For\n * JSON-based messages, this is undefined.\n *\n * @type {number|undefined}\n */\njsproto.MessageDescriptor.prototype.arrayIndexOffset;\n\n\n\n/**\n * A more compact message version of the message descriptor with the minimum\n * information needed to serialize the data array in the js proto url formats.\n * The descriptor string encodes:\n *  arrayIndexOffset: for the message (leading \x271\x27 for one-based arrays)\n *  type: character from `jsproto.Type` or\n *      `jsproto.CompactDescriptorExtensionType`\n *  repetition: repeated fields use an upper case version of the type character\n *  tag number: as the position of the type in the string, or as a decimal\n *      number preceding the type.\n *\n * The CompactMessageDescriptorStruct is used when embedded messages are\n * present and subDescriptors needs to provide descriptors for each nested\n * message type.\n *\n * If the string starts with \x271\x27 it indicates a one-based proto.\n * The rest of the string are the jsproto.Type enum values of each field in\n * order. If the tag numbers are non-sequential, the base-10 encoding of the\n * tag is encoded. E.g. \x27si5dm\x27 indicates tag 1 is a string, 2 is an integer\n * and 5 is a double and 6 is a message.\n *\n * subDescripters are the compact descriptors for fields with message type and\n * appear in the order that message fields appear in the\n * descriptor string. Following the example above, the first entry in\n * the subDescriptors array would describe field with tag 6.\n *\n * For examples see:\n * google3/net/proto2/contrib/js_proto/internal/golden_descriptor_test.js\n *\n * Design doc: go/jsproto-descriptors-2018\n *\n * @typedef {string|!jsproto.CompactMessageDescriptorStruct}\n */\njsproto.CompactMessageDescriptor;\n\n/**\n * Compact message descriptor for messages with embedded messages.\n * @record\n */\njsproto.CompactMessageDescriptorStruct \x3d function() {\n  /**\n   * See documentation for `jsproto.CompactMessageDescriptor`.\n   * @const {string}\n   */\n  this.descriptor;\n\n  /**\n   * See documentation for `jsproto.CompactMessageDescriptor`.\n   * @type {undefined|!Array\x3c!jsproto.CompactMessageDescriptor\x3e}\n   */\n  this.subDescriptors;\n\n  /**\n   * Holds the closest approximation of jsproto.MessageDescriptor that can\n   * be constructed from the compact message descriptor.\n   * Filled in by `jsproto.fillJspbMessageDescriptor` when extended data isn\x27t\n   * available. Caching needed to avoid infinite recursion on messages with\n   * cycles.\n   * @type {undefined|!jsproto.MessageDescriptor}\n   */\n  this.partialDescriptor;\n};\n\n\n/** @interface */\njsproto.FieldDescriptor \x3d function() {};\n\n\n/**\n * @type {jsproto.Type}\n */\njsproto.FieldDescriptor.prototype.type;\n\n\n/**\n * @type {jsproto.Label}\n */\njsproto.FieldDescriptor.prototype.label;\n\n\n/**\n * The default value for this field. Required for fields that are REQUIRED or\n * OPTIONAL. Not present on fields that are REPEATED.\n *\n * NOTE(yatin): We don\x27t call this field \x22defaultValue\x22 because that name is\n * declared in externs, which causes it to not get obfuscated away anywhere in\n * compiled JS:\n * https://cs.corp.google.com/#google3/javascript/externs/w3c_dom2.js\x26l\x3d756\n *\n * @type {*}\n */\njsproto.FieldDescriptor.prototype.defaultVal;\n\n\n/**\n * A descriptor for the type of an embedded message field. Required for fields\n * of type MESSAGE.\n *\n * @type {jsproto.MessageDescriptor}\n */\njsproto.FieldDescriptor.prototype.descriptor;\n\n\n\n/**\n * Interface of objects representing a single bytes field, providing the ability\n * to read in different encodings independent of the internal representation the\n * message.\n * @record\n */\njsproto.BytesReader \x3d function() {};\n\n\n/**\n * Returns the field as a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @return {string}\n */\njsproto.BytesReader.prototype.getBase64;\n\n\n/**\n * Returns the field as a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @return {string}\n */\njsproto.BytesReader.prototype.getBase64Url;\n\n\n/**\n * Returns the field as an unencoded Uint8Array.\n * @return {!Uint8Array}\n */\njsproto.BytesReader.prototype.getUint8Array;\n\n\n/**\n * Returns the field as an unencoded javascript string.\n * @return {string}\n */\njsproto.BytesReader.prototype.getUnencodedString;\n\n\n\n/**\n * Interface of objects representing a single bytes field, providing the ability\n * to read and write in different formats independent of the internal\n * representation the message.\n *\n * @record\n * @extends {jsproto.BytesReader}\n */\njsproto.BytesField \x3d function() {};\n\n\n/**\n * Sets the field from a BytesReader.\n * @param {!jsproto.BytesReader} that\n */\njsproto.BytesField.prototype.copyFrom;\n\n\n/**\n * Sets the field from a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @param {string} base64\n */\njsproto.BytesField.prototype.setBase64;\n\n\n/**\n * Sets the field from a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @param {string} base64url\n */\njsproto.BytesField.prototype.setBase64Url;\n\n\n/**\n * Sets the field from an unencoded Uint8Array.\n * @param {!Uint8Array} uint8Array\n */\njsproto.BytesField.prototype.setUint8Array;\n\n\n/**\n * Sets the field from an unencoded javascript string.\n * @param {string} unencodedString\n */\njsproto.BytesField.prototype.setUnencodedString;\n\n\n/**\n * Return the value for a field within a message\x27s data array given the\n * tag number of the field.\n *\n * @param {!Array} messageArray\n *     Contents of the proto buffer, as an array.\n *\n * @param {{arrayIndexOffset: (number|undefined)}} descriptor\n *     The descriptor for the message associated with messageArray.\n *\n * @param {number} tagNumber\n *     The tag number to look up inside messageArray.\n *\n * @return {*} The value of the field.  Returns undefined if there is a\n *     lookup error.\n */\njsproto.getValueByTagNumber \x3d function(messageArray, descriptor, tagNumber) {\n  return messageArray[tagNumber + descriptor.arrayIndexOffset];\n};\n\n\n/**\n * Given an object, array, or scalar, return a matching value that is\n * recursively equal to the input value, but not a reference to it.\n *\n * @param {*} original The value to clone.\n * @return {*}\n */\njsproto.recursiveClone \x3d function(original) {\n  var output \x3d original;\n\n  // Handle non-scalars.\n  if (original instanceof Array) {\n    // Allocate the right size of the array. If we simply set [] and then set\n    // the length later, arrays get a minimum backing storage of 16 elements in\n    // Chrome. Clearing the length of an array and resetting it has the same\n    // effect.  See CL 55867700 for details.\n    output \x3d new Array(original.length);\n    jsproto.recursiveCopyArray_(output, original);\n  } else if (original instanceof Object) {\n    output \x3d {};\n    jsproto.recursiveCopyObject_(output, original);\n  }\n\n  return output;\n};\n\n\n/**\n * Recursively copy nested arrays. Used by copyFrom() method when wrapping JSPB.\n * Arrays must contain other arrays, objects, or scalars.\n *\n * Unlike recursiveCopyArray, recursiveCopyArray_ does not verify \x22to\x22 and\n * \x22from\x22 are different. It also assumes the \x22to\x22 has the same length as \x22from\x22\n * array.\n *\n * @param {!Array} to Array instance to copy to.\n * @param {Array} from Array instance to copy from.\n * @private\n */\njsproto.recursiveCopyArray_ \x3d function(to, from) {\n  // Copy each value.\n  for (var i \x3d 0; i \x3c from.length; ++i) {\n    // Only set a value in \x27to\x27 if \x27from\x27 actually has that index defined.\n    if (from.hasOwnProperty(i)) {\n      to[i] \x3d jsproto.recursiveClone(from[i]);\n    }\n  }\n};\n\n\n/**\n * Recursively copy nested arrays. Used by copyFrom() method when wrapping JSPB.\n * Arrays must contain other arrays, objects, or scalars.\n *\n * @param {!Array} to Array instance to copy to.\n * @param {Array} from Array instance to copy from.\n */\njsproto.recursiveCopyArray \x3d function(to, from) {\n  if (to \x3d\x3d\x3d from) {\n    return;  // Otherwise we\x27d clear both.\n  }\n  // Wipe out previous content of \x27to\x27, since we only copy values that are set.\n  to.length \x3d 0;\n  if (!from) {\n    return;\n  }\n  // Make the output array the correct length.\n  to.length \x3d from.length;\n\n  jsproto.recursiveCopyArray_(to, from);\n};\n\n\n/**\n * Recursively copy nested objects. Used by copyFrom() method when wrapping\n * JSON. Objects must contain only other objects, arrays, or scalars.\n *\n * Unlike recursiveCopyObject, recursiveCopyObject_ does not verify \x22to\x22 and\n * \x22from\x22 are different and assumes that \x22to\x22 is empty.\n *\n * @param {!Object} to Object instance to copy to.\n * @param {Object} from Object instance to copy from.\n * @private\n */\njsproto.recursiveCopyObject_ \x3d function(to, from) {\n  // Copy each value, skipping ones inherited from the prototype chain.\n  for (var key in from) {\n    if (from.hasOwnProperty(key)) {\n      to[key] \x3d jsproto.recursiveClone(from[key]);\n    }\n  }\n};\n\n\n/**\n * Recursively copy nested objects. Used by copyFrom() method when wrapping\n * JSON. Objects must contain only other objects, arrays, or scalars.\n *\n * @param {!Object} to Object instance to copy to.\n * @param {Object} from Object instance to copy from.\n */\njsproto.recursiveCopyObject \x3d function(to, from) {\n  if (to \x3d\x3d\x3d from) {\n    return;  // Otherwise we\x27d clear both.\n  }\n  // Eliminate any contents already present.\n  for (var i in to) {\n    if (to.hasOwnProperty(i)) {\n      delete to[i];\n    }\n  }\n\n  jsproto.recursiveCopyObject_(to, from);\n};\n\n\n/**\n * Accesses a possibly uninitialized repeated field.\n *\n * @param {!Object|!Array} base Object to access the field on.\n * @param {string|number} fieldId The ID of the field.\n * @return {!Array} The value of the field as an Array.\n */\njsproto.repeatedField \x3d function(base, fieldId) {\n  if (!base[fieldId]) {\n    base[fieldId] \x3d [];\n  }\n  return base[fieldId];\n};\n\n\n/**\n * Return true if the two input objects are the same. The inputs can only be\n * either raw objects or raw arrays. Used by the equals() method on js_proto\n * classes.\n *\n * @param {Object} obj1 First Object instance.\n * @param {Object} obj2 Second Object instance.\n * @return {boolean} Whether the two input objects have the same contents.\n */\njsproto.areObjectsEqual \x3d function(obj1, obj2) {\n  if (obj1 \x3d\x3d null || obj2 \x3d\x3d null) {\n    return (obj1 \x3d\x3d null) \x3d\x3d (obj2 \x3d\x3d null);\n  }\n\n  if (obj1.constructor !\x3d Array \x26\x26 obj1.constructor !\x3d Object) {\n    throw new Error(\n        \x27Invalid object type passed into jsproto.areObjectsEqual()\x27);\n  }\n\n  // If the two inputs are both pointing to the same underlying object, we can\n  // short circuit the equality check.\n  if (obj1 \x3d\x3d\x3d obj2) {\n    return true;\n  }\n\n  // If the objects don\x27t have the same constructor i.e. they aren\x27t of the same\n  // exact type, then even if their contents are the same, we don\x27t consider\n  // them equal.\n  if (obj1.constructor !\x3d obj2.constructor) {\n    return false;\n  }\n\n  // For each key in obj1, check that the value is the same as the corresponding\n  // value in obj2.\n  for (var key1 in obj1) {\n    if (!(key1 in obj2)) {\n      return false;\n    }\n    if (!jsproto.areElementsEqual_(obj1[key1], obj2[key1])) {\n      return false;\n    }\n  }\n\n  // Verify that there aren\x27t any keys in obj2 that aren\x27t also in obj1.\n  for (var key2 in obj2) {\n    if (!(key2 in obj1)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Helper method that returns true if the two input elements are the same.\n *\n * @param {*} elem1 First element.\n * @param {*} elem2 Second element.\n * @return {boolean} Whether the two elements are the same.\n * @private\n */\njsproto.areElementsEqual_ \x3d function(elem1, elem2) {\n  if (elem1 \x3d\x3d\x3d elem2 ||\n      // NOTE(savv): JSPB serializers may serialize booleans as either\n      // true/false or 0/1 (to save space). Here, we handle cases where we are\n      // comparing two protos generated by different formats.\n      ((elem1 \x3d\x3d\x3d true || elem1 \x3d\x3d\x3d 1) \x26\x26 (elem2 \x3d\x3d\x3d true || elem2 \x3d\x3d\x3d 1)) ||\n      ((elem1 \x3d\x3d\x3d false || elem1 \x3d\x3d\x3d 0) \x26\x26 (elem2 \x3d\x3d\x3d false || elem2 \x3d\x3d\x3d 0))) {\n    return true;\n  }\n\n  if (elem1 instanceof Object \x26\x26 elem2 instanceof Object) {\n    if (!jsproto.areObjectsEqual(/** @type {Object} */(elem1),\n                                 /** @type {Object} */(elem2))) {\n      return false;\n    }\n  } else {\n    // We already handled the primitive data-type equality case at the start of\n    // this method.\n    return false;\n  }\n\n  return true;\n};\n\n\n/** @const @package {!RegExp} */\njsproto.BASE64_REGEXP \x3d /^[+a-zA-Z0-9/\x3d]*$/;\n\n\n/** @const @package {!RegExp} */\njsproto.BASE64URL_REGEXP \x3d /^[-a-zA-Z0-9_]*$/;\n\n\n/**\n * Replaces the standard base64 encoding character set with the \x27websafe\x27\n * variant as defined in RFC 4648 section 5.  \x27+\x27 -\x3e \x27-\x27  \x27/\x27 -\x3e \x27_\x27\n *\n * @param {string} base64 base64 or base64url encoded string.\n * @return {string}\n */\njsproto.normalizeToBase64Url \x3d function(base64) {\n  return jsproto.stripBase64Padding(base64.replace(/[+/]/g, function(match) {\n    return match \x3d\x3d \x27+\x27 ? \x27-\x27 : \x27_\x27;\n  }));\n};\n\n\n/**\n * Replaces the base64url encoding character set with the standard\n * variant as defined in RFC 4648 section 4.  \x27-\x27 -\x3e \x27+\x27  \x27_\x27 -\x3e \x27/\x27\n *\n * @param {string} base64 base64 or base64url encoded string.\n * @return {string}\n */\njsproto.normalizeToBase64 \x3d function(base64) {\n  return jsproto.stripBase64Padding(base64.replace(/[-_]/g, function(match) {\n    return match \x3d\x3d \x27-\x27 ? \x27+\x27 : \x27/\x27;\n  }));\n};\n\n\n/**\n * Strips the base64 padding characters from the end of the string.\n * Matches either the standard padding \x27\x3d\x27 or the javascript \x22websafe\x22 padding\n * character \x27.\x27.\n * @param {string} value Either base64 or base64url encoded.\n * @return {string}\n */\njsproto.stripBase64Padding \x3d function(value) {\n  return value.replace(/[.\x3d]+$/, \x27\x27);\n};\n\n\n/**\n * Constructs a complete `jsproto.MessageDescriptor` from a\n * `jsproto.CompactMessageDescriptor` and suplimental per-field\n * `jsproto.ExtendedFieldDescriptor` to override default values and encode\n * required-ness of fields.\n * @param {!jsproto.CompactMessageDescriptor} compactDescriptor\n * @param {!jsproto.MessageDescriptor} output\n * @param {!Array\x3c!jsproto.ExtendedFieldDescriptor\x3e\x3d} opt_extendedData\n */\njsproto.fillJspbMessageDescriptor \x3d function(\n    compactDescriptor, output, opt_extendedData) {\n  var iterator \x3d new jsproto.CompactMessageDescriptorReader(compactDescriptor);\n  output.arrayIndexOffset \x3d iterator.arrayIndexOffset;\n  /** @type {!Array\x3c!jsproto.FieldDescriptor\x3e} */\n  var fieldDescriptors \x3d [];\n  iterator.forEach(function(field) {\n    var tag \x3d field.number;\n    var type \x3d goog.asserts.assert(field.type);\n    var label;\n    var defaultVal;\n    var descriptor;\n    if (field.int64String) {\n      defaultVal \x3d \x27\x27;\n    }\n    if (opt_extendedData \x26\x26 opt_extendedData[tag]) {\n      label \x3d opt_extendedData[tag].label;\n      defaultVal \x3d opt_extendedData[tag].defaultVal;\n      descriptor \x3d opt_extendedData[tag].descriptor;\n    }\n    label \x3d label ||\n        (field.repeated ? jsproto.Label.REPEATED : jsproto.Label.OPTIONAL);\n    if (!field.repeated \x26\x26 !goog.isDef(defaultVal)) {\n      defaultVal \x3d jsproto.standardDefaultValue_(type);\n    }\n    if (type \x3d\x3d jsproto.Type.MESSAGE \x26\x26 !descriptor) {\n      var subDescriptor \x3d field.subDescriptor;\n      if (goog.isString(subDescriptor)) {\n        descriptor \x3d /** @type {!jsproto.MessageDescriptor} */ ({});\n        jsproto.fillJspbMessageDescriptor(subDescriptor, descriptor);\n      } else {\n        subDescriptor \x3d goog.asserts.assert(subDescriptor);\n        if (subDescriptor.partialDescriptor) {\n          descriptor \x3d subDescriptor.partialDescriptor;\n        } else {\n          descriptor \x3d subDescriptor.partialDescriptor \x3d\n              /** @type {!jsproto.MessageDescriptor} */ ({});\n          jsproto.fillJspbMessageDescriptor(\n              subDescriptor, subDescriptor.partialDescriptor);\n        }\n      }\n    }\n\n    fieldDescriptors[tag] \x3d\n        new jsproto.FieldDescriptorImpl(type, label, defaultVal, descriptor);\n  });\n\n  output.fieldDescriptor \x3d fieldDescriptors;\n};\n\n\n/**\n * Creates a message descriptor shell.\n * @param {!Object\x3cstring, jsproto.FieldDescriptor\x3e} fieldDescriptors\n * @return {!jsproto.MessageDescriptor}\n */\njsproto.makeJsonMessageDescriptor \x3d function(fieldDescriptors) {\n  return {\n    fieldDescriptor: fieldDescriptors\n  };\n};\n\n\n\n/**\n * Data needed to build a `jsproto.FieldDescriptor` from\n * `jsproto.CompactMessageDescriptorReader`\n * @record\n */\njsproto.ExtendedFieldDescriptor \x3d function() {\n  /**\n   * Default value, only if it isn\x27t the standard default value for the type.\n   * @const {*|undefined}\n   */\n  this.defaultVal;\n\n\n  /**\n   * Label for the field, but OPTIONAL and REPEATED should be omitted, as\n   * repetition is encoded in the compact descriptor. Only needed to signal\n   * REQUIRED vs OPTIONAL. OPTIONAL is more common, thus the default.\n   * @const {undefined|!jsproto.Label}\n   */\n  this.label;\n\n\n  /**\n   * Message descriptor for this field.\n   * @const {undefined|!jsproto.MessageDescriptor}\n   */\n  this.descriptor;\n};\n\n\n\n/**\n * Concrete implementation of jsproto.FieldDescriptor.\n * @param {!jsproto.Type} type The type of the field.\n * @param {!jsproto.Label} label The repeated/optional/required label.\n * @param {*} defaultValue The default value of the field, except for repeated\n *    fields which have none, and should provide undefined.\n * @param {!jsproto.MessageDescriptor\x3d} opt_descriptor The message descriptor,\n *    required for fields with type MESSAGE.\n * @implements {jsproto.FieldDescriptor}\n * @final @struct @constructor\n */\njsproto.FieldDescriptorImpl \x3d function(\n    type, label, defaultValue, opt_descriptor) {\n  this.type \x3d type;\n  this.label \x3d label;\n  this.defaultVal \x3d defaultValue;\n  this.descriptor \x3d opt_descriptor;\n  goog.asserts.assert(\n      !goog.isDef(opt_descriptor) || type \x3d\x3d jsproto.Type.MESSAGE,\n      \x27Only messages should give a message descriptor.\x27);\n};\n\n\n/**\n * Iterator over a compact message descriptor.\n * @param {!jsproto.CompactMessageDescriptor} descriptor\n * @final @struct @constructor\n */\njsproto.CompactMessageDescriptorReader \x3d function(descriptor) {\n  /** @type {undefined|!Array\x3c!jsproto.CompactMessageDescriptor\x3e} */\n  this.subDescriptors_;\n\n  /** @private {string} */\n  this.descriptorStr_;\n\n  if (goog.isString(descriptor)) {\n    this.descriptorStr_ \x3d descriptor;\n  } else {\n    this.descriptorStr_ \x3d descriptor.descriptor;\n    this.subDescriptors_ \x3d descriptor.subDescriptors;\n  }\n\n  /**\n   * How much to offset the tag number for a field within this message in order\n   * to generate the index into the message\x27s data array. For zero-based protos,\n   * the offset will be -1, for one-based protos the offset will be 0. See the\n   * build_defs file for more information on zero- vs. one-based protos.  For\n   * JSON-based messages, this is undefined.\n   * @const {number}\n   */\n  this.arrayIndexOffset \x3d parseInt(this.descriptorStr_, 10) \x3d\x3d 1 ? 0 : -1;\n};\n\n\n/**\n * @record\n */\njsproto.CompactMessageDescriptorReader.Field \x3d function() {\n  /**\n   * Type of the field.\n   * @const {!jsproto.Type}\n   */\n  this.type;\n\n  /**\n   * Tag number of the field.\n   * @const {number}\n   */\n  this.number;\n\n  /**\n   * If `type` \x3d\x3d `jsproto.Type.MESSAGE`, descriptor of this message.\n   * @const {?jsproto.CompactMessageDescriptor}\n   */\n  this.subDescriptor;\n\n  /**\n   * True if the field is repeated, false if required or optional.\n   * @const {boolean}\n   */\n  this.repeated;\n\n  /**\n   * True if the field is a 64 bit number that should be stored as a string.\n   * @const {boolean}\n   */\n  this.int64String;\n};\n\n\n/**\n * Calls `f` once for each field described by the descriptor.\n * @param {function(!jsproto.CompactMessageDescriptorReader.Field)} f\n */\njsproto.CompactMessageDescriptorReader.prototype.forEach \x3d function(f) {\n  var offset \x3d 1 + this.arrayIndexOffset;\n  var subDescriptorOffset \x3d 0;\n  var field \x3d {\n    type: jsproto.Type.STRING,\n    number: 0,\n    subDescriptor: null,\n    repeated: false,\n    int64String: false\n  };\n  var length \x3d this.descriptorStr_.length;\n  while (offset \x3c length) {\n    field.int64String \x3d false;\n    var digits \x3d this.descriptorStr_.substr(offset).match(/^(\\d+)/);\n    if (digits) {\n      offset +\x3d digits[1].length;\n      field.number \x3d parseInt(digits, 10);\n    } else {\n      field.number++;\n    }\n    var char \x3d this.descriptorStr_[offset++];\n    var lower \x3d char.toLowerCase();\n    field.repeated \x3d lower !\x3d char;\n    if (lower in jsproto.CompactMessageDescriptorReader.EXTENDED_TYPES_) {\n      field.type \x3d\n          jsproto.CompactMessageDescriptorReader.EXTENDED_TYPES_[lower];\n      field.int64String \x3d field.type !\x3d jsproto.Type.BYTES;\n    } else {\n      field.type \x3d /** @type {!jsproto.Type} */ (lower);\n    }\n\n    if (field.type \x3d\x3d jsproto.Type.MESSAGE) {\n      field.subDescriptor \x3d\n          goog.asserts.assert(this.subDescriptors_)[subDescriptorOffset++];\n    } else {\n      field.subDescriptor \x3d null;\n    }\n    f(field);\n  }\n};\n\n\n/** @const @private {!Object\x3cstring, jsproto.Type\x3e} */\njsproto.CompactMessageDescriptorReader.EXTENDED_TYPES_ \x3d {\n  \x27a\x27: jsproto.Type.BYTES,\n  \x27k\x27: jsproto.Type.INT64,\n  \x27p\x27: jsproto.Type.SINT64,\n  \x27w\x27: jsproto.Type.UINT64,\n  \x27q\x27: jsproto.Type.FIXED64,\n  \x27r\x27: jsproto.Type.SFIXED64\n};\n\n\n/**\n * Returns the default value of a field to use when the .proto message schema\n * did not define one.\n *\n * @param {!jsproto.Type} type The type of the field.\n * @return {*}\n * @private\n */\njsproto.standardDefaultValue_ \x3d function(type) {\n  switch (type) {\n    case jsproto.Type.DOUBLE:\n    case jsproto.Type.FLOAT:\n    case jsproto.Type.INT32:\n    case jsproto.Type.INT64:\n    case jsproto.Type.UINT32:\n    case jsproto.Type.UINT64:\n    case jsproto.Type.FIXED32:\n    case jsproto.Type.FIXED64:\n    case jsproto.Type.SFIXED32:\n    case jsproto.Type.SFIXED64:\n    case jsproto.Type.SINT32:\n    case jsproto.Type.SINT64:\n    case jsproto.Type.ENUM:\n      // NOTE(mrolig): the true \x22standard\x22 default for enum is the first value\n      // of the enum. This use of zero as the default value needs to match\n      // the logic of the js_proto_generator.cc that decides if the default\n      // value should be generated in the javascript code for the field\n      // descriptor. For the case that the proper default of an ENUM is\n      // non-zero, the\n      // net/proto2/contrib/js_proto/internal/js_proto_generator.cc must emit\n      // the proper default value.\n      return 0;\n    case jsproto.Type.STRING:\n    case jsproto.Type.BASE64_STRING:\n    case jsproto.Type.BYTES:\n      return \x27\x27;\n    case jsproto.Type.BOOL:\n      return false;\n    case jsproto.Type.MESSAGE:\n    default:\n      // Note, we should never get here, all types should be handled explicitly,\n      // and message types should always have defaultValue_ set.\n      goog.asserts.assert(\x27Message descriptors must provide a default value.\x27);\n      return null;\n  }\n};\n\n\n/**\n * Builds a field descriptor for an optional field.\n * @param {jsproto.Type} type The field\x27s type.\n * @param {*\x3d} opt_defaultValue The default value of the field, if omited,\n *    the default value appropriate for the type is used.\n * @param {!jsproto.MessageDescriptor\x3d} opt_descriptor The message descriptor\n *    if this type is a MESSAGE.\n * @return {!jsproto.FieldDescriptor}\n * @private\n */\njsproto.makeFieldDescriptorOptional_ \x3d function(\n    type, opt_defaultValue, opt_descriptor) {\n  var defaultValue \x3d goog.isDef(opt_defaultValue) ?\n      opt_defaultValue :\n      jsproto.standardDefaultValue_(type);\n  return new jsproto.FieldDescriptorImpl(\n      type, jsproto.Label.OPTIONAL, defaultValue, opt_descriptor);\n};\n\n\n/**\n * Builds a field descriptor for a required field.\n * @param {jsproto.Type} type The field\x27s type.\n * @param {*\x3d} opt_defaultValue The default value of the field, if omited,\n *    the default value appropriate for the type is used.\n * @param {!jsproto.MessageDescriptor\x3d} opt_descriptor The message descriptor\n *    if this type is a MESSAGE.\n * @return {!jsproto.FieldDescriptor}\n * @private\n */\njsproto.makeFieldDescriptorRequired_ \x3d function(\n    type, opt_defaultValue, opt_descriptor) {\n  var defaultValue \x3d goog.isDef(opt_defaultValue) ?\n      opt_defaultValue :\n      jsproto.standardDefaultValue_(type);\n  return new jsproto.FieldDescriptorImpl(\n      type, jsproto.Label.REQUIRED, defaultValue, opt_descriptor);\n};\n\n\n/**\n * Builds a field descriptor for a repeated field.\n * @param {jsproto.Type} type The field\x27s type.\n * @param {!jsproto.MessageDescriptor\x3d} opt_descriptor The message descriptor\n *    if this type is a MESSAGE.\n * @param {string\x3d} opt_defaultValue Only used for int64 types to distinguish\n *    between those that encode the number as a string vs not.\n * @return {!jsproto.FieldDescriptor}\n * @private\n */\njsproto.makeFieldDescriptorRepeated_ \x3d function(\n    type, opt_descriptor, opt_defaultValue) {\n  return new jsproto.FieldDescriptorImpl(\n      type, jsproto.Label.REPEATED, opt_defaultValue, opt_descriptor);\n};\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Below are makeFieldDescriptor{Label}{Type} methods for all permutations of\n// jsproto.Label and jsproto.Type. These allow the generated javascript for\n// field descriptors to be smaller. You can think of this as asking the\n// jscompiler to compress the Label and Type information into the shortened\n// names rather than including a pair of string and integer literals which\n// at a minimum would be 5 characters: \x22s\x22,1. With constants this allows\n// the value to be as short as 3 characters _.x depending on how the jscompiler\n// shortens the name of the constants and/or factory method names.\n////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalDouble \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.DOUBLE, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredDouble \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.DOUBLE, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedDouble \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.DOUBLE);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_DOUBLE \x3d\n    jsproto.makeFieldDescriptorOptionalDouble();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_DOUBLE \x3d\n    jsproto.makeFieldDescriptorRequiredDouble();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_DOUBLE \x3d\n    jsproto.makeFieldDescriptorRepeatedDouble();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalFloat \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.FLOAT, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredFloat \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.FLOAT, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedFloat \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.FLOAT);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_FLOAT \x3d\n    jsproto.makeFieldDescriptorOptionalFloat();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_FLOAT \x3d\n    jsproto.makeFieldDescriptorRequiredFloat();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_FLOAT \x3d\n    jsproto.makeFieldDescriptorRepeatedFloat();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.INT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.INT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedInt32 \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.INT32);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_INT32 \x3d\n    jsproto.makeFieldDescriptorOptionalInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_INT32 \x3d\n    jsproto.makeFieldDescriptorRequiredInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_INT32 \x3d\n    jsproto.makeFieldDescriptorRepeatedInt32();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.INT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.INT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRepeated_(\n      jsproto.Type.INT64, undefined, opt_defaultValue);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_INT64 \x3d\n    jsproto.makeFieldDescriptorOptionalInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_INT64 \x3d\n    jsproto.makeFieldDescriptorRequiredInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_INT64 \x3d\n    jsproto.makeFieldDescriptorRepeatedInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_INT64_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedInt64(\x27\x27);\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalUInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.UINT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredUInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.UINT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedUInt32 \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.UINT32);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_UINT32 \x3d\n    jsproto.makeFieldDescriptorOptionalUInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_UINT32 \x3d\n    jsproto.makeFieldDescriptorRequiredUInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_UINT32 \x3d\n    jsproto.makeFieldDescriptorRepeatedUInt32();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalUInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.UINT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredUInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.UINT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedUInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRepeated_(\n      jsproto.Type.UINT64, undefined, opt_defaultValue);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_UINT64 \x3d\n    jsproto.makeFieldDescriptorOptionalUInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_UINT64 \x3d\n    jsproto.makeFieldDescriptorRequiredUInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_UINT64 \x3d\n    jsproto.makeFieldDescriptorRepeatedUInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_UINT64_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedUInt64(\x27\x27);\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {boolean\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalBool \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.BOOL, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {boolean\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredBool \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.BOOL, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedBool \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.BOOL);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL \x3d\n    jsproto.makeFieldDescriptorOptionalBool();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_BOOL \x3d\n    jsproto.makeFieldDescriptorRequiredBool();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_BOOL \x3d\n    jsproto.makeFieldDescriptorRepeatedBool();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalEnum \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.ENUM, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredEnum \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.ENUM, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedEnum \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.ENUM);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM \x3d\n    jsproto.makeFieldDescriptorOptionalEnum();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_ENUM \x3d\n    jsproto.makeFieldDescriptorRequiredEnum();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_ENUM \x3d\n    jsproto.makeFieldDescriptorRepeatedEnum();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalString \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.STRING, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredString \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.STRING, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedString \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.STRING);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING \x3d\n    jsproto.makeFieldDescriptorOptionalString();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_STRING \x3d\n    jsproto.makeFieldDescriptorRequiredString();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedString();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalBytes \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.BYTES, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredBytes \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.BYTES, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedBytes \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.BYTES);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_BYTES \x3d\n    jsproto.makeFieldDescriptorOptionalBytes();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_BYTES \x3d\n    jsproto.makeFieldDescriptorRequiredBytes();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_BYTES \x3d\n    jsproto.makeFieldDescriptorRepeatedBytes();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {!Object} defaultValue\n * @param {!jsproto.MessageDescriptor} descriptor\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalMessage \x3d function(\n    defaultValue, descriptor) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.MESSAGE, defaultValue, descriptor);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {!Object} defaultValue\n * @param {!jsproto.MessageDescriptor} descriptor\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredMessage \x3d function(\n    defaultValue, descriptor) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.MESSAGE, defaultValue, descriptor);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {!jsproto.MessageDescriptor} descriptor\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedMessage \x3d function(descriptor) {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.MESSAGE, descriptor);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalFixed32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.FIXED32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredFixed32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.FIXED32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedFixed32 \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.FIXED32);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_FIXED32 \x3d\n    jsproto.makeFieldDescriptorOptionalFixed32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_FIXED32 \x3d\n    jsproto.makeFieldDescriptorRequiredFixed32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_FIXED32 \x3d\n    jsproto.makeFieldDescriptorRepeatedFixed32();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.FIXED64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.FIXED64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRepeated_(\n      jsproto.Type.FIXED64, undefined, opt_defaultValue);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_FIXED64 \x3d\n    jsproto.makeFieldDescriptorOptionalFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_FIXED64 \x3d\n    jsproto.makeFieldDescriptorRequiredFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_FIXED64 \x3d\n    jsproto.makeFieldDescriptorRepeatedFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_FIXED64_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedFixed64(\x27\x27);\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalSFixed32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.SFIXED32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredSFixed32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.SFIXED32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedSFixed32 \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SFIXED32);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_SFIXED32 \x3d\n    jsproto.makeFieldDescriptorOptionalSFixed32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_SFIXED32 \x3d\n    jsproto.makeFieldDescriptorRequiredSFixed32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SFIXED32 \x3d\n    jsproto.makeFieldDescriptorRepeatedSFixed32();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalSFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.SFIXED64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredSFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.SFIXED64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedSFixed64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRepeated_(\n      jsproto.Type.SFIXED64, undefined, opt_defaultValue);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_SFIXED64 \x3d\n    jsproto.makeFieldDescriptorOptionalSFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_SFIXED64 \x3d\n    jsproto.makeFieldDescriptorRequiredSFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SFIXED64 \x3d\n    jsproto.makeFieldDescriptorRepeatedSFixed64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SFIXED64_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedSFixed64(\x27\x27);\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalSInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.SINT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredSInt32 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.SINT32, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedSInt32 \x3d function() {\n  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SINT32);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_SINT32 \x3d\n    jsproto.makeFieldDescriptorOptionalSInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_SINT32 \x3d\n    jsproto.makeFieldDescriptorRequiredSInt32();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SINT32 \x3d\n    jsproto.makeFieldDescriptorRepeatedSInt32();\n\n\n/**\n * @see jsproto.makeFieldDescriptorOptional_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorOptionalSInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorOptional_(\n      jsproto.Type.SINT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRequired_\n * @param {number|string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRequiredSInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRequired_(\n      jsproto.Type.SINT64, opt_defaultValue);\n};\n\n\n/**\n * @see jsproto.makeFieldDescriptorRepeated_\n * @param {string\x3d} opt_defaultValue\n * @return {!jsproto.FieldDescriptor}\n */\njsproto.makeFieldDescriptorRepeatedSInt64 \x3d function(opt_defaultValue) {\n  return jsproto.makeFieldDescriptorRepeated_(\n      jsproto.Type.SINT64, undefined, opt_defaultValue);\n};\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_OPTIONAL_SINT64 \x3d\n    jsproto.makeFieldDescriptorOptionalSInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REQUIRED_SINT64 \x3d\n    jsproto.makeFieldDescriptorRequiredSInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SINT64 \x3d\n    jsproto.makeFieldDescriptorRepeatedSInt64();\n\n\n/** @const {!jsproto.FieldDescriptor} */\njsproto.FIELD_DESCRIPTOR_REPEATED_SINT64_STRING \x3d\n    jsproto.makeFieldDescriptorRepeatedSInt64(\x27\x27);\n\n//# sourceURL\x3dhttps://qs/net/proto2/contrib/js_proto/public/js_proto.js\n");

$googDebugFname=undefined;
var $googDebugFname="net/proto2/contrib/js_proto/public/serializer.js";
eval("/**\n * @fileoverview A base serializer interface for JS protos. Callers can\n * instantiate implementations of this interface\n * (e.g. jsproto.QueryStringSerializer or maps.util.proto.JsProtoSerializer) and\n * pass them into the serializeToString() or deserializeFromString() methods of\n * jsproto objects to convert back and forth between the JS proto object\n * representation and a serialized string representation.\n *\n * @author yatin@google.com (Yatin Chawathe)\n */\n\ngoog.provide(\x27jsproto.Serializer\x27);\n\n\n\n/**\n * A base serializer interface for jsproto objects. Callers should not invoke\n * methods on this interface directly. Instead, they should pass an instance of\n * this interface to the serializeToString() method on jsproto objects.\n * @interface\n */\njsproto.Serializer \x3d function() {};\n\n\n/**\n * @param {!Array} messageArray\n *     Contents of the proto buffer, as an array. Embedded messages should\n *     themselves be represented as an array, and similarly for repeated fields.\n *     (Repeated fields of embedded messages should be arrays of arrays.) See\n *     jspblite (http://goto/jspblite) for a canonical definition.\n *\n * @param {!jsproto.CompactMessageDescriptor} descriptor\n *     The message descriptor for the proto message associated with\n *     messageArray.\n *\n * @return {string}\n *     A serialized representation of the protocol message associated with the\n *     input messageArray and descriptor.\n */\njsproto.Serializer.prototype.serialize \x3d goog.abstractMethod;\n\n\n/**\n * @param {string} serializedProto A serialized representation in the same\n *     format as would have been generated by the serialize() method above.\n *\n * @param {!Array} messageArray\n *     Contents of the proto buffer, as an array. Embedded messages should\n *     themselves be represented as an array, and similarly for repeated fields.\n *     (Repeated fields of embedded messages should be arrays of arrays.) See\n *     jspblite (http://goto/jspblite) for a canonical definition.\n *\n * @param {!jsproto.CompactMessageDescriptor} compactDescriptor\n *     The message descriptor for the proto message associated with\n *     messageArray.\n *\n * @return {boolean} Return false on failure.\n */\njsproto.Serializer.prototype.deserialize \x3d goog.abstractMethod;\n\n//# sourceURL\x3dhttps://qs/net/proto2/contrib/js_proto/public/serializer.js\n");

$googDebugFname=undefined;
var $googDebugFname="net/proto2/contrib/js_proto/internal/query_string_serializer.js";
eval("/**\n * @fileoverview Serialization primitives for JS protos.\n * @author jacobsa@google.com (Aaron Jacobs)\n */\n\ngoog.provide(\x27jsproto.QueryStringSerializer\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jsproto\x27);\ngoog.require(\x27jsproto.Serializer\x27);\n\n\n\n/**\n * An implementation of the jsproto.Serializer interface that serializes the\n * input proto into a format appropriate for appending as a query string to\n * an HTTP URL path.\n * @constructor\n * @implements {jsproto.Serializer}\n */\njsproto.QueryStringSerializer \x3d function() {\n};\n\n\n/**\n * A globally available instance of this serializer.\n * @const {!jsproto.QueryStringSerializer}\n */\njsproto.QueryStringSerializer.INSTANCE \x3d new jsproto.QueryStringSerializer();\n\n\n/**\n * Regular expression for single quotes.\n * @private {!RegExp}\n */\njsproto.QueryStringSerializer.singleQuoteRegExp_ \x3d new RegExp(\x22\x27\x22, \x27g\x27);\n\n\n/**\n * @override\n */\njsproto.QueryStringSerializer.prototype.serialize \x3d function(\n    messageArray, descriptor) {\n  var components \x3d /** @type {!Array} */([]);\n  jsproto.QueryStringSerializer.serializeToUrlComponents_(\n      messageArray, descriptor, components);\n  var queryString \x3d components.join(\x27\x26\x27);\n  // Work around Firefox escaping bug: \x27 is escaped inconsistently.\n  // See http://b/2659814.\n  return queryString.replace(\n      jsproto.QueryStringSerializer.singleQuoteRegExp_, \x27%27\x27);\n};\n\n\n/**\n * @override\n */\njsproto.QueryStringSerializer.prototype.deserialize \x3d function(\n    serializedString, messageArray, descriptor) {\n  // We don\x27t support deserialization for this serializer. Since this serializer\n  // is internal to the js_proto library and the library doesn\x27t invoke\n  // deserialize(), this is fine.\n  throw Error(\x27QueryStringSerializer.deserialize is not implemented\x27);\n};\n\n\n/**\n * @param {!Array} messageArray\n *     Contents of the proto buffer, as an array. Embedded messages should\n *     themselves be represented as an array, and similarly for repeated fields.\n *     (Repeated fields of embedded messages should be arrays of arrays.) See\n *     jspblite (http://goto/jspblite) for a canonical definition.\n *\n * @param {!jsproto.CompactMessageDescriptor} descriptor\n *     The message descriptor for the proto message associated with\n *     messageArray.\n *\n * @param {!Array\x3cstring\x3e} components\n *     An array to append componentss to, for performance reasons.\n * @private\n */\njsproto.QueryStringSerializer.serializeToUrlComponents_ \x3d\n    function(messageArray, descriptor, components) {\n  // Walk through all of the field descriptors within this message\x27s descriptor.\n  // Emit query components for each field\x27s value. Tag numbers have a minimum\n  // value of 1, so we can start the for() loop at that.\n  var iterator \x3d new jsproto.CompactMessageDescriptorReader(descriptor);\n  iterator.forEach(function(field) {\n    var tag \x3d field.number;\n    var value \x3d jsproto.getValueByTagNumber(messageArray, iterator, tag);\n\n    // We only return something for non-null, non-undefined elements that are\n    // known to the loaded MessageDescriptor (unknown tags are not passed\n    // through).\n    if (!goog.isDefAndNotNull(value)) return;\n\n    // Does this field contain an array of values?\n    if (field.repeated) {\n      var arr \x3d goog.asserts.assertArray(value);\n      for (var i \x3d 0; i \x3c arr.length; ++i) {\n        var singularValue \x3d arr[i];\n        jsproto.QueryStringSerializer.getUrlComponentsForField_(\n            singularValue, tag, field, components);\n      }\n    } else {\n      jsproto.QueryStringSerializer.getUrlComponentsForField_(\n          value, tag, field, components);\n    }\n  });\n};\n\n\n/**\n * @param {*} value\n *     The value for this field.\n *\n * @param {number} tag\n * @param {!jsproto.CompactMessageDescriptorReader.Field} fieldDescriptor\n *\n * @param {!Array\x3cstring\x3e} result\n *     An array to append the results to.\n * @private\n */\njsproto.QueryStringSerializer.getUrlComponentsForField_ \x3d\n    function(value, tag, fieldDescriptor, result) {\n  // Is this an embedded message? If so, prepend a length delimiter to its\n  // components.\n  if (fieldDescriptor.type \x3d\x3d jsproto.Type.MESSAGE) {\n    var previousLength \x3d result.length;\n\n    // The case for fieldDescriptor.descriptor below is safe, because embedded\n    // message fields are guaranteed to have a non-null subDescriptor.\n    jsproto.QueryStringSerializer.serializeToUrlComponents_(\n        goog.asserts.assertArray(value),\n        goog.asserts.assert(fieldDescriptor.subDescriptor), result);\n\n    var delimiter \x3d [\n      tag,\n      jsproto.Type.MESSAGE,\n      result.length - previousLength\n    ].join(\x27\x27);\n\n    result.splice(previousLength, 0, delimiter);\n  } else {\n    // This is a scalar element, so simply output its tag number, what the\n    // descriptor says its type is, and its value.\n    if (fieldDescriptor.type \x3d\x3d jsproto.Type.BOOL) {\n      value \x3d value ? \x271\x27 : \x270\x27;\n    }\n    var component \x3d\n        [tag, fieldDescriptor.type,\n         encodeURIComponent(/** @type {string} */(value))].join(\x27\x27);\n    result.push(component);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/net/proto2/contrib/js_proto/internal/query_string_serializer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3g');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3g');

}catch(e){_DumpException(e)}
/* _Module_:sy3f */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3f');
var $googDebugFname="javascript/template/jslayout/globals.js";
eval("/**\n * @fileoverview Jslayout global symbols; intended mainly to register\n * immutable global objects, such as functions, at load time, and not\n * to add global data at runtime. I.e. the same objections as to\n * global variables in general apply also here (Hence the name\n * \x22global\x22, not \x22global var\x22).\n *\n * This predates the jsglobals attribute in jslayout, and has nothing\n * to with it. See instance methods setGlobalVariablePool() and\n * inject() for binding globals referenced by jslayout.mainly\n *\n * @visibility {//visibility:public}\n */\n\ngoog.provide(\x27jslayout.globals\x27);\n\n\n/**\n * A map of globally defined symbols.\n * @type {!Object}\n * @private\n */\njslayout.globals.globals_ \x3d {};\n\n\n/**\n * Sets a global symbol. It will be available like a variable in every\n * jslayout.EvalContext instance.\n *\n * @param {string} name Name.\n * @param {Object} value Value.\n */\njslayout.globals.setGlobal \x3d function(name, value) {\n  jslayout.globals.globals_[name] \x3d value;\n};\n\n\n/**\n * Returns the map of globally defined symbols.\n * @return {!Object}\n */\njslayout.globals.getGlobals \x3d function() {\n  return jslayout.globals.globals_;\n};\n\n\n/**\n * Returns true if the given identifier is a globally defined symbol.\n * @param {string} name\n * @return {boolean}\n */\njslayout.globals.isGlobal \x3d function(name) {\n  return jslayout.globals.globals_[name] !\x3d null;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/globals.js\n");

$googDebugFname=undefined;
var $googDebugFname="net/proto2/contrib/js_proto/public/js_proto_message_base_json.js";
eval("/**\n * @fileoverview Base classes for implementing protocol buffer messages with\n * an Object based data structure.\n *\n * Note on implementation: protected methods are also prefixed with \x27internal\x27\n * to avoid name collisions with the fields for implemented fields and to\n * emphasize that clients of protocol buffers shouldn\x27t expect to call them.\n */\n\ngoog.provide(\x27jsproto.MessageBaseJson\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.crypt\x27);\ngoog.require(\x27goog.crypt.base64\x27);\ngoog.require(\x27jsproto\x27);\n\n\n\n/**\n * Base messages implemented with a JSON Object backing storage.\n * @param {?Object\x3d} opt_data Backing data of this message.\n * @constructor @struct\n * @template MESSAGE,CONST_MESSAGE\n */\njsproto.MessageBaseJson \x3d function(opt_data) {\n  /** @protected {!Object} */\n  this.data \x3d opt_data || {};\n};\n\n\n/**\n * Returns the underlying object storage for this message\x27s fields.\n * @return {!Object}\n * @final\n */\njsproto.MessageBaseJson.prototype.getMessageContents \x3d function() {\n  return this.data;\n};\n\n\n/**\n * Implementation for hasXXX methods of optional/required fields.\n * @param {string} fieldKey The field name.\n * @return {boolean} True if the field is explicitly set.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalHas \x3d function(fieldKey) {\n  return this.data[fieldKey] !\x3d null;\n};\n\n\n/**\n * Implementation for getXXX methods. Called directly from generated code\n * for (poorly supported) group type fields, and used within MessageBase\n * for all other non-message fields with the type specific default value.\n * @param {string} fieldKey The field name.\n * @param {?} defaultValue\n * @return {?} The field\x27s value or defaultValue if unset.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalGetScalar \x3d function(\n    fieldKey, defaultValue) {\n  var value \x3d this.data[fieldKey];\n  return value !\x3d null ? value : defaultValue;\n};\n\n\n/**\n * Implementation for getXXX methods of optional/required boolean fields.\n * @param {string} fieldKey The field name.\n * @param {boolean\x3d} opt_defaultValue The default value, if unspecified, assumes\n *     this field defaults to false.\n * @return {boolean} The field\x27s value, or the default value if unset.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalGetScalarBoolean \x3d function(\n    fieldKey, opt_defaultValue) {\n  // Must coerce to boolean with !!, the serialized form of message produces\n  // 1/0 values.\n  return !!this.internalGetScalar(fieldKey, opt_defaultValue);\n};\n\n\n/**\n * Implementation for getXXX methods of optional/required enum fields.\n * @param {string} fieldKey The field name.\n * @param {?\x3d} opt_defaultValue The default value, if unspecified, assumes this\n *     field defaults to 0.\n * @return {?} The field\x27s value, or the default value if unset.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalGetScalarEnum \x3d function(\n    fieldKey, opt_defaultValue) {\n  return this.internalGetScalar(fieldKey, opt_defaultValue || 0);\n};\n\n\n/**\n * Implementation for getXXX methods of optional/required number fields.\n * @param {string} fieldKey The field name.\n * @param {number\x3d} opt_defaultValue The default value, if unspecified, assumes\n *     this field defaults to 0.\n * @return {number} The field\x27s value, or the default value if unset.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalGetScalarNumber \x3d function(\n    fieldKey, opt_defaultValue) {\n  return this.internalGetScalar(fieldKey, opt_defaultValue || 0);\n};\n\n\n/**\n * Implementation for getXXX methods of optional/required string fields.\n * @param {string} fieldKey The field name.\n * @param {string\x3d} opt_defaultValue The default value, if unspecified, assumes\n *     this field defaults to the empty string.\n * @return {string} The field\x27s value, or the default value if unset.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalGetScalarString \x3d function(\n    fieldKey, opt_defaultValue) {\n  return this.internalGetScalar(fieldKey, opt_defaultValue || \x27\x27);\n};\n\n\n/**\n * Implementation of mutableXXX methods for optional/required message fields.\n * Does make an optional message field become present. (i.e. hasXXX() will\n * return true after calling internalMutableMessage).\n * @param {string} fieldKey The field name.\n * @return {!Object}\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalMutableMessage \x3d function(fieldKey) {\n  var value \x3d this.data[fieldKey];\n  if (!value) {\n    value \x3d this.data[fieldKey] \x3d {};\n  }\n  return value;\n};\n\n\n/**\n * Implementation for clearXXX methods of optional, required or repeated fields.\n * @param {string} fieldKey The field name.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalClear \x3d function(fieldKey) {\n  if (fieldKey in this.data) {\n    delete this.data[fieldKey];\n  }\n};\n\n\n/**\n * Accesses a possibly uninitialized repeated field.\n * @param {string} fieldKey The field name.\n * @return {!Array\x3c?\x3e} The value of the field as an Array.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedField \x3d function(fieldKey) {\n  return jsproto.repeatedField(this.data, fieldKey);\n};\n\n\n/**\n * Implementation for addXXX methods for a non-message type field. Appends\n * the value x to the repeated field.\n * @param {string} fieldKey The field name.\n * @param {?} x The value to append to the list.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldAdd \x3d function(\n    fieldKey, x) {\n  this.internalRepeatedField(fieldKey).push(x);\n};\n\n\n/**\n * Implementation for the getXXX(i) methods for a non-message type field. ith\n * element must exist, doesn\x27t insert an entry if the ith element doesn\x27t exist.\n * @param {string} fieldKey The field name.\n * @param {number} i Index of the element in the repeated field.\n * @return {?}\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldGet \x3d function(\n    fieldKey, i) {\n  return this.internalRepeatedField(fieldKey)[i];\n};\n\n\n/**\n * Implementation for the getXXX(i) methods for a bool field. ith\n * element must exist, doesn\x27t insert an entry if the ith element doesn\x27t exist.\n * @param {string} fieldKey The field name.\n * @param {number} i Index of the element in the repeated field.\n * @return {boolean}\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldGetBool \x3d function(\n    fieldKey, i) {\n  // Must coerce to boolean with !!, the serialized form of message produces\n  // 1/0 values.\n  return !!this.internalRepeatedField(fieldKey)[i];\n};\n\n\n/**\n * Implementation of addXXX method for repeated message fields.\n * Appends a new entry to the repeated field and returns a message wrapper for\n * it.\n * @param {string} fieldKey The field name.\n * @return {!Object} The unwrapped object for the newly inserted message.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldAddMessage \x3d function(\n    fieldKey) {\n  var newData \x3d {};\n  this.internalRepeatedField(fieldKey).push(newData);\n  return newData;\n};\n\n\n/**\n * Implementation of getXXX method for repeated message fields.\n * Assumes the ith field exists, does not insert a message at position i.\n * @param {string} fieldKey The field name.\n * @param {number} i Index of the element in the repeated field.\n * @return {!Object}\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldGetMessage \x3d function(\n    fieldKey, i) {\n  return this.internalRepeatedField(fieldKey)[i];\n};\n\n/**\n * Implementation of getXXXArray method for repeated message fields.\n * Returns an array of references to messages, does not copy any data.\n * @param {string} fieldKey The field name.\n * @param {function(new:T, Object\x3d)} messageCtor\n * @return {!Array\x3cT\x3e}\n * @protected\n * @final\n * @template T\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldGetMessageArray \x3d\n    function(fieldKey, messageCtor) {\n  var array \x3d [];\n  for (var i \x3d 0; i \x3c this.internalSizeOfRepeatedField(fieldKey); i++) {\n    array.push(\n        new messageCtor(this.internalRepeatedFieldGetMessage(fieldKey, i)));\n  }\n  return array;\n};\n\n/**\n * Implementation of setXXXArray method for repeated message fields.\n * Replaces the contents of the repeated field array with the data from\n * the wrapped messages.\n * @param {string} fieldKey The field name.\n * @param {!Array\x3c!jsproto.MessageBaseJson.ToObject\x3e} arr\n * @protected\n * @final\n * @template T\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldSetMessageArray \x3d\n    function(fieldKey, arr) {\n  var data \x3d goog.asserts.assertArray(this.internalRepeatedField(fieldKey));\n  data.length \x3d arr.length;\n  for (var i \x3d 0; i \x3c arr.length; i++) {\n    data[i] \x3d goog.asserts.assert(arr[i]).toObject();\n  }\n};\n\n/**\n * Implementation of setXXXArray method for repeated scalar fields.\n * Replaces the contents of the repeated field array with the data from\n * the wrapped messages.\n * @param {string} fieldKey The field name.\n * @param {!Array\x3c?\x3e} arr\n * @protected\n * @final\n * @template T\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldSetArray \x3d function(\n    fieldKey, arr) {\n  var data \x3d goog.asserts.assertArray(this.internalRepeatedField(fieldKey));\n  data.length \x3d arr.length;\n  for (var i \x3d 0; i \x3c arr.length; i++) {\n    data[i] \x3d arr[i];\n  }\n};\n\n/**\n * Implementation for the removeXXX(i) methods for any field.\n * @param {string} fieldKey The field name.\n * @param {number} i Index of the entry to remove.\n * @return {!Array\x3c?\x3e}\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldRemove \x3d function(\n    fieldKey, i) {\n  return this.internalRepeatedField(fieldKey).splice(i, 1);\n};\n\n\n/**\n * Implementation for the setXXX(i) methods for non-message fields.\n * @param {string} fieldKey The field name.\n * @param {number} i Index of the entry to set.\n * @param {?} x The value to set.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalRepeatedFieldSet \x3d function(\n    fieldKey, i, x) {\n  this.internalRepeatedField(fieldKey)[i] \x3d x;\n};\n\n\n/**\n * Returns the size of a possibly uninitalized repeated field.\n * @param {string} fieldKey The field name.\n * @return {number} The size of the field.\n * @protected\n * @final\n */\njsproto.MessageBaseJson.prototype.internalSizeOfRepeatedField \x3d function(\n    fieldKey) {\n  if (!this.data[fieldKey]) {\n    return 0;\n  } else {\n    return this.data[fieldKey].length;\n  }\n};\n\n\n/**\n * Compares two messages and returns true if they are identical.\n * @param {?CONST_MESSAGE} other\n * @return {boolean}\n * @final\n */\njsproto.MessageBaseJson.prototype.equals \x3d function(other) {\n  var otherJsonObject \x3d\n      other \x26\x26 goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);\n  return jsproto.areObjectsEqual(\n      this.data, other ? otherJsonObject.data : null);\n};\n\n\n/**\n * Returns a reference to the backing data object for this message.\n * @return {!Object}\n * @final\n */\njsproto.MessageBaseJson.prototype.toObject \x3d function() {\n  return this.data;\n};\n\n\n/**\n * Return a copy of the backing data object for this message.\n * @return {!Object}\n * @final\n */\njsproto.MessageBaseJson.prototype.copyToObject \x3d function() {\n  var output \x3d {};\n  jsproto.recursiveCopyObject(output, this.data);\n  return output;\n};\n\n\n/**\n * Returns a new instance of the message with a deep copy of the backing arrays.\n * @return {!MESSAGE}\n * @final\n */\njsproto.MessageBaseJson.prototype.clone \x3d function() {\n  return new this.constructor(\n      goog.asserts.assertInstanceof(this, jsproto.MessageBaseJson)\n          .copyToObject());\n};\n\n\n/**\n * Copies the contents of another message into this message.\n * @param {?CONST_MESSAGE} other\n * @final\n */\njsproto.MessageBaseJson.prototype.copyFrom \x3d function(other) {\n  var otherJsonObject \x3d\n      other \x26\x26 goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);\n  jsproto.recursiveCopyObject(\n      this.data, otherJsonObject ? otherJsonObject.toObject() : null);\n};\n\n/**\n * Swaps the contents of two messages.\n * @param {!MESSAGE} other\n * @final\n */\njsproto.MessageBaseJson.prototype.swap \x3d function(other) {\n  var wellTypedOther \x3d\n      goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);\n  var temp \x3d this.data;\n  this.data \x3d wellTypedOther.data;\n  wellTypedOther.data \x3d temp;\n};\n\n/**\n * BytesReader implementation for MessageBaseJson with support_bytes \x3d 1\n * generated code to use base64 encoded bytes fields.\n *\n * @param {!Object} data Underlying jsproto storage object of the\n *     message containing the field, or the array of repeating fields.\n * @param {number|string} index Index of the field within data.\n * @implements {jsproto.BytesReader}\n * @constructor @struct\n */\njsproto.MessageBaseJson.BytesReaderOfBase64 \x3d function(data, index) {\n  /** @protected {!Object} */\n  this.data \x3d data;\n\n  /** @protected {number|string} */\n  this.index \x3d index;\n};\n\n/**\n * Returns the field as a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getBase64 \x3d function() {\n  return this.data[this.index] || \x27\x27;\n};\n\n\n/**\n * Returns the field as a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getBase64Url \x3d\n    function() {\n  return jsproto.normalizeToBase64Url(this.getBase64());\n};\n\n\n/**\n * Returns the field as an unencoded Uint8Array.\n * @return {!Uint8Array}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getUint8Array \x3d\n    function() {\n  return goog.crypt.base64.decodeStringToUint8Array(this.getBase64());\n};\n\n\n/**\n * Returns the field as an unencoded javascript string.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getUnencodedString \x3d\n    function() {\n  return goog.crypt.base64.decodeString(this.getBase64());\n};\n\n\n/**\n * BytesField implementation for MessageBaseJson with support_bytes \x3d 1\n * generated code to use base64 encoded bytes fields.\n *\n * @param {!Object} data Underlying jsproto storage object of the message\n *     containing the field, or the array of repeating fields.\n * @param {number|string} index Index of the field within data.\n * @implements {jsproto.BytesField}\n * @extends {jsproto.MessageBaseJson.BytesReaderOfBase64}\n * @constructor @struct @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64 \x3d function(data, index) {\n  jsproto.MessageBaseJson.BytesFieldOfBase64.base(\n      this, \x27constructor\x27, data, index);\n};\ngoog.inherits(\n    jsproto.MessageBaseJson.BytesFieldOfBase64,\n    jsproto.MessageBaseJson.BytesReaderOfBase64);\n\n\n/**\n * Sets the field from a BytesReader.\n * @param {!jsproto.BytesReader} that\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64.prototype.copyFrom \x3d function(that) {\n  this.setBase64(that.getBase64());\n};\n\n\n/**\n * Sets the field from a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @param {string} base64\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setBase64 \x3d function(\n    base64) {\n  if (goog.DEBUG) {\n    goog.asserts.assert(\n        base64.match(jsproto.BASE64_REGEXP),\n        \x27Expected base64 encoding, got \x22\x27 + base64 + \x27\x22\x27);\n  }\n  this.data[this.index] \x3d base64;\n};\n\n\n/**\n * Sets the field from a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @param {string} base64url\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setBase64Url \x3d function(\n    base64url) {\n  if (goog.DEBUG) {\n    goog.asserts.assert(\n        base64url.match(jsproto.BASE64URL_REGEXP),\n        \x27Expected base64url encoding, got \x22\x27 + base64url + \x27\x22\x27);\n  }\n  this.setBase64(jsproto.normalizeToBase64(base64url));\n};\n\n\n/**\n * Sets the field from an unencoded Uint8Array.\n * @param {!Uint8Array} uint8Array\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setUint8Array \x3d function(\n    uint8Array) {\n  this.setBase64(goog.crypt.base64.encodeByteArray(uint8Array, false));\n};\n\n\n/**\n * Sets the field from an unencoded javascript string.\n * @param {string} unencodedString\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setUnencodedString \x3d\n    function(unencodedString) {\n  this.setBase64(goog.crypt.base64.encodeString(unencodedString, false));\n};\n\n\n\n/**\n * BytesReader implementation for MessageBaseJson with support_bytes \x3d 0\n * generated code to use unencoded strings for bytes fields.\n *\n * @param {!Object} data Underlying jsproto storage object of the message\n *     containing the field, or the array of repeating fields.\n * @param {number|string} index Index of the field within data.\n * @implements {jsproto.BytesReader}\n * @constructor @struct\n */\njsproto.MessageBaseJson.BytesReaderOfString \x3d function(data, index) {\n  /** @protected {!Object} */\n  this.data \x3d data;\n\n  /** @protected {string|number} */\n  this.index \x3d index;\n};\n\n/**\n * Returns the field as a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfString.prototype.getBase64 \x3d function() {\n  return jsproto.stripBase64Padding(\n      goog.crypt.base64.encodeString(this.getUnencodedString(), false));\n};\n\n\n/**\n * Returns the field as a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfString.prototype.getBase64Url \x3d\n    function() {\n  return jsproto.stripBase64Padding(\n      goog.crypt.base64.encodeString(this.getUnencodedString(), true));\n};\n\n\n/**\n * Returns the field as an unencoded Uint8Array.\n * @return {!Uint8Array}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfString.prototype.getUint8Array \x3d\n    function() {\n  return new Uint8Array(\n      goog.crypt.stringToByteArray(this.getUnencodedString()));\n};\n\n\n/**\n * Returns the field as an unencoded javascript string.\n * @return {string}\n * @override @final\n */\njsproto.MessageBaseJson.BytesReaderOfString.prototype.getUnencodedString \x3d\n    function() {\n  return this.data[this.index] || \x27\x27;\n};\n\n\n/**\n * BytesField implementation for MessageBaseJson with support_bytes \x3d 1\n * generated code to use base64 encoded bytes fields.\n *\n * @param {!Object} data Underlying jsproto storage array of the message\n *     containing the field, or the array of repeating fields.\n * @param {number|string} index Index of the field within data.\n * @implements {jsproto.BytesField}\n * @extends {jsproto.MessageBaseJson.BytesReaderOfString}\n * @constructor @struct @final\n */\njsproto.MessageBaseJson.BytesFieldOfString \x3d function(data, index) {\n  jsproto.MessageBaseJson.BytesFieldOfString.base(\n      this, \x27constructor\x27, data, index);\n};\ngoog.inherits(\n    jsproto.MessageBaseJson.BytesFieldOfString,\n    jsproto.MessageBaseJson.BytesReaderOfString);\n\n\n/**\n * Sets the field from a BytesReader.\n * @param {!jsproto.BytesReader} that\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfString.prototype.copyFrom \x3d function(that) {\n  this.setUnencodedString(that.getUnencodedString());\n};\n\n\n/**\n * Sets the field from a standard base64 encoded string as defined in RFC 4648\n * section 5.\n * @param {string} base64\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfString.prototype.setBase64 \x3d function(\n    base64) {\n  if (goog.DEBUG) {\n    goog.asserts.assert(\n        base64.match(jsproto.BASE64_REGEXP),\n        \x27Expected base64 encoding, got \x22\x27 + base64 + \x27\x22\x27);\n  }\n  this.setUnencodedString(goog.crypt.base64.decodeString(base64, false));\n};\n\n\n/**\n * Sets the field from a base64url encoded string (a.k.a. websafe base64) as\n * defined in RFC 4648 section 5.\n * @param {string} base64url\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfString.prototype.setBase64Url \x3d function(\n    base64url) {\n  if (goog.DEBUG) {\n    goog.asserts.assert(\n        base64url.match(jsproto.BASE64URL_REGEXP),\n        \x27Expected base64url encoding, got \x22\x27 + base64url + \x27\x22\x27);\n  }\n  this.setUnencodedString(goog.crypt.base64.decodeString(base64url, true));\n};\n\n\n/**\n * Sets the field from an unencoded Uint8Array.\n * @param {!Uint8Array} uint8Array\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfString.prototype.setUint8Array \x3d function(\n    uint8Array) {\n  // This could be probably be done more efficiently, for now use base64\n  // encoding to normalize to string. At the time of writing, it seems unlikely\n  // to be used and not worth optimizing.\n  this.setBase64(goog.crypt.base64.encodeByteArray(uint8Array));\n};\n\n\n/**\n * Sets the field from an unencoded javascript string.\n * @param {string} unencodedString\n * @override @final\n */\njsproto.MessageBaseJson.BytesFieldOfString.prototype.setUnencodedString \x3d\n    function(unencodedString) {\n  this.data[this.index] \x3d unencodedString;\n};\n\n\n\n/** @record */\njsproto.MessageBaseJson.ToObject \x3d function() {};\n\n/** @return {!Object} */\njsproto.MessageBaseJson.ToObject.prototype.toObject \x3d function() {};\n\n//# sourceURL\x3dhttps://qs/net/proto2/contrib/js_proto/public/js_proto_message_base_json.js\n");

$googDebugFname=undefined;
var $googDebugFname="template/prototemplate/proto/css3_prefix_rules_proto_js.js";
eval("/**\n * @fileoverview This file was automatically generated by\n * net/proto2/contrib/js_proto; do not modify it directly.\n *\n * See go/jsproto for documentation.\n *\n * @suppress {extraRequire}\n */\ngoog.provide(\x27prototemplate.ConstCss3PrefixRules\x27);\ngoog.provide(\x27prototemplate.Css3PrefixRules\x27);\ngoog.provide(\x27prototemplate.Css3PrefixRules.ConstRule\x27);\ngoog.provide(\x27prototemplate.Css3PrefixRules.Role\x27);\ngoog.provide(\x27prototemplate.Css3PrefixRules.Rule\x27);\ngoog.require(\x27jsproto\x27);\ngoog.require(\x27jsproto.QueryStringSerializer\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jsproto.MessageBaseJson\x27);\n  ////////////////////////////////////////\n  // Const proto interface. This allows the jscompiler to enforce this type\n  // isn\x27t used to change the object. But the object can be changed via\n  // reference to the underlying class either by other code with a reference\n  // or a downcast to the concrete class with mutable methods.\n  // @see prototemplate.Css3PrefixRules\n  ////////////////////////////////////////\n  /** @interface */\n  prototemplate.ConstCss3PrefixRules \x3d function() {};\n  /**\n   * @param {?prototemplate.ConstCss3PrefixRules} other\n   * @return {boolean}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.equals \x3d goog.abstractMethod;\n  /**\n   * Returns a deep copy of the message.\n   * @return {!prototemplate.Css3PrefixRules}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.clone \x3d goog.abstractMethod;\n  /**\n   * Exports a JSON object with the same data as the (JSPB) proto message\n   * object. This is a convenience wrapper for the static version below.\n   * This method is only provided in debug builds, and should not be\n   * relied upon for production.\n   * @return {!Object}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.debugObject \x3d goog.abstractMethod;\n  /**\n   * Return the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.toObject \x3d goog.abstractMethod;\n  /**\n   * Return a copy of the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.copyToObject \x3d goog.abstractMethod;\n  /**\n   * Returns the guts of this proto, which could be either an array or an\n   * object.\n   * @return {!Array\x3c?\x3e|!Object}\n   */\n  prototemplate.ConstCss3PrefixRules.prototype.getMessageContents \x3d\n      goog.abstractMethod;\n  ////////////////////////////////////////\n  // Class Field Accessors\n  ////////////////////////////////////////\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @return {number}\n     */\n    prototemplate.ConstCss3PrefixRules.prototype.ruleSize \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @param {number} i Index of the element in the range [0, ruleSize()).\n     * @return {!prototemplate.Css3PrefixRules.Rule.Const}\n     */\n    prototemplate.ConstCss3PrefixRules.prototype.getRule \x3d goog.abstractMethod;\n    /**\n     * Get an array of all elements currently in the field.\n     *\n     * This returns references to elements and does not make copies. Changes to\n     * the returned array (appending, deleting, replacing) have no effect on the\n     * underlying repeated field, but those changed can be saved by calling\n     * setRuleArray.\n     *\n     * @see prototemplate.Css3PrefixRules.rule\n     * @return {!Array\x3cprototemplate.Css3PrefixRules.Rule.Const\x3e}\n     */\n    prototemplate.ConstCss3PrefixRules.prototype.getRuleArray \x3d goog.abstractMethod;\n////////////////////////////////////////\n// Constructor\n////////////////////////////////////////\n/**\n * @see prototemplate.Css3PrefixRules\n * \n * @param {?Object\x3d} opt_data\n * @extends {jsproto.MessageBaseJson\x3c!prototemplate.Css3PrefixRules, !prototemplate.ConstCss3PrefixRules\x3e}\n * @constructor\n * @struct\n * @implements prototemplate.ConstCss3PrefixRules\n */\nprototemplate.Css3PrefixRules \x3d function(opt_data) {\n  prototemplate.Css3PrefixRules.base(this, \x27constructor\x27, opt_data);\n};\ngoog.inherits(prototemplate.Css3PrefixRules, jsproto.MessageBaseJson);\n/** @typedef {!prototemplate.ConstCss3PrefixRules} */\nprototemplate.Css3PrefixRules.Const;\n  ////////////////////////////////////////\n  // Const proto interface. This allows the jscompiler to enforce this type\n  // isn\x27t used to change the object. But the object can be changed via\n  // reference to the underlying class either by other code with a reference\n  // or a downcast to the concrete class with mutable methods.\n  // @see prototemplate.Css3PrefixRules.Rule\n  ////////////////////////////////////////\n  /** @interface */\n  prototemplate.Css3PrefixRules.ConstRule \x3d function() {};\n  /**\n   * @param {?prototemplate.Css3PrefixRules.ConstRule} other\n   * @return {boolean}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.equals \x3d goog.abstractMethod;\n  /**\n   * Returns a deep copy of the message.\n   * @return {!prototemplate.Css3PrefixRules.Rule}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.clone \x3d goog.abstractMethod;\n  /**\n   * Exports a JSON object with the same data as the (JSPB) proto message\n   * object. This is a convenience wrapper for the static version below.\n   * This method is only provided in debug builds, and should not be\n   * relied upon for production.\n   * @return {!Object}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.debugObject \x3d goog.abstractMethod;\n  /**\n   * Return the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.toObject \x3d goog.abstractMethod;\n  /**\n   * Return a copy of the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.copyToObject \x3d goog.abstractMethod;\n  /**\n   * Returns the guts of this proto, which could be either an array or an\n   * object.\n   * @return {!Array\x3c?\x3e|!Object}\n   */\n  prototemplate.Css3PrefixRules.ConstRule.prototype.getMessageContents \x3d\n      goog.abstractMethod;\n  ////////////////////////////////////////\n  // Class Field Accessors\n  ////////////////////////////////////////\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name::\n     * @return {boolean}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.hasName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     * @return {string}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.getName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name::\n     * @return {boolean}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.hasPrefixedName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     * @return {string}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.getPrefixedName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role::\n     * @return {boolean}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.hasRole \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     * @return {prototemplate.Css3PrefixRules.Role}\n     */\n    prototemplate.Css3PrefixRules.ConstRule.prototype.getRole \x3d goog.abstractMethod;\n////////////////////////////////////////\n// Constructor\n////////////////////////////////////////\n/**\n * @see prototemplate.Css3PrefixRules.Rule\n * \n * @param {?Object\x3d} opt_data\n * @extends {jsproto.MessageBaseJson\x3c!prototemplate.Css3PrefixRules.Rule, !prototemplate.Css3PrefixRules.ConstRule\x3e}\n * @constructor\n * @struct\n * @implements prototemplate.Css3PrefixRules.ConstRule\n */\nprototemplate.Css3PrefixRules.Rule \x3d function(opt_data) {\n  prototemplate.Css3PrefixRules.Rule.base(this, \x27constructor\x27, opt_data);\n};\ngoog.inherits(prototemplate.Css3PrefixRules.Rule, jsproto.MessageBaseJson);\n/** @typedef {!prototemplate.Css3PrefixRules.ConstRule} */\nprototemplate.Css3PrefixRules.Rule.Const;\n////////////////////////////////////////\n// Enums\n////////////////////////////////////////\n/**\n * @see prototemplate.Css3PrefixRules.Role\n * @name prototemplate.Css3PrefixRules.Role\n * @enum {number}\n */\nprototemplate.Css3PrefixRules.Role \x3d {\n    /**\n     * @member prototemplate.Css3PrefixRules.Role\n     * @constant\n     * @name ANY\n     */\n    ANY: 0\n    ,\n    /**\n     * @member prototemplate.Css3PrefixRules.Role\n     * @constant\n     * @name PROPERTY_NAME\n     */\n    PROPERTY_NAME: 1\n    ,\n    /**\n     * @member prototemplate.Css3PrefixRules.Role\n     * @constant\n     * @name PROPERTY_VALUE\n     */\n    PROPERTY_VALUE: 2\n    \n};\n////////////////////////////////////////\n// Class Descriptors\n////////////////////////////////////////\n/** @return {!jsproto.CompactMessageDescriptor} */\nprototemplate.Css3PrefixRules.getCompactMessageDescriptor \x3d function() {\n  if (!prototemplate.Css3PrefixRules.compactMessageDescriptor_) {\n    \n    prototemplate.Css3PrefixRules.compactMessageDescriptor_ \x3d {\n        descriptor: \x27M\x27\n    };\n    prototemplate.Css3PrefixRules.compactMessageDescriptor_.subDescriptors \x3d [\n        prototemplate.Css3PrefixRules.Rule.getCompactMessageDescriptor()];\n  }\n  return /** @type {!jsproto.CompactMessageDescriptor} */ (\n      prototemplate.Css3PrefixRules.compactMessageDescriptor_);\n};\n/**\n * @return {!jsproto.MessageDescriptor}\n */\nprototemplate.Css3PrefixRules.getMessageDescriptor \x3d function() {\n  if (!prototemplate.Css3PrefixRules.messageDescriptor_) {\n    prototemplate.Css3PrefixRules.createMessageDescriptor_();\n  }\n  return prototemplate.Css3PrefixRules.messageDescriptor_;\n};\n/**\n * Same as the static method above, but available directly as a method on the\n * object itself.\n */\nprototemplate.Css3PrefixRules.prototype.getMessageDescriptor \x3d\n  prototemplate.Css3PrefixRules.getMessageDescriptor;\n/**\n * Helper method for creating the descriptor for this message class.\n * @private\n */\nprototemplate.Css3PrefixRules.createMessageDescriptor_ \x3d function() {\n  /** @type {!Object\x3cstring, !jsproto.FieldDescriptor\x3e} */\n  var fieldDescriptors \x3d {};\n  // Set the message descriptor immediately, to prevent protos with self-\n  // referential fields from causing infinite loops.\n  /** @const {!jsproto.MessageDescriptor} */\n  prototemplate.Css3PrefixRules.messageDescriptor_ \x3d jsproto.makeJsonMessageDescriptor(\n     fieldDescriptors);\n  \n      fieldDescriptors[\x27rule\x27] \x3d jsproto.makeFieldDescriptorRepeatedMessage(prototemplate.Css3PrefixRules.Rule.getMessageDescriptor());\n};\n/**\n * NOTE: Jscompiler is smart enough to inline this function and dead-code\n * eliminate unused branches, so we will rarely pay the cost of the seemingly\n * verbose and duplicate appearance of this function.\n * @param {!jsproto.Label} label\n * @return {!jsproto.ExtendedFieldDescriptor}\n */\nprototemplate.Css3PrefixRules.internalExtendedFieldDescriptor \x3d function(label) {\n    if (label \x3d\x3d jsproto.Label.REPEATED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* REPEATED label is encoded in the compact descriptor. */\n          descriptor: prototemplate.Css3PrefixRules.getMessageDescriptor()\n      });\n    } else if (label \x3d\x3d jsproto.Label.REQUIRED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          defaultVal: new prototemplate.Css3PrefixRules(),\n          descriptor: prototemplate.Css3PrefixRules.getMessageDescriptor(),\n          label: label\n      });\n    } else {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* OPTIONAL label is encoded in the compact descriptor. */\n          defaultVal: new prototemplate.Css3PrefixRules(),\n          descriptor: prototemplate.Css3PrefixRules.getMessageDescriptor()\n      });\n    }\n};\nif (goog.DEBUG) {\n  /**\n   * Builds a proto from a JSON object.  For compatibility with JSPB.\n   * @param {!Object} obj\n   * @return {!prototemplate.Css3PrefixRules}\n   */\n  prototemplate.Css3PrefixRules.fromObject \x3d function(obj) {\n    return new prototemplate.Css3PrefixRules(obj);\n  };\n  /**\n   * Returns the backing JSON object.  For compatibility with JSPB.\n   * @return {!Object}\n   * @override\n   */\n  prototemplate.Css3PrefixRules.prototype.debugObject \x3d function() {\n    return this.data;\n  };\n}\n////////////////////////////////////////\n// Class Field Accessors\n////////////////////////////////////////\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @return {number}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.prototype.ruleSize \x3d function() {\n      return this.internalSizeOfRepeatedField(\x27rule\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @param {number} i Index of the element in the range [0, ruleSize()).\n     * @return {!prototemplate.Css3PrefixRules.Rule.Const}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.prototype.getRule \x3d function(i) {\n      return new prototemplate.Css3PrefixRules.Rule(\n          this.internalRepeatedFieldGetMessage(\x27rule\x27, i));\n    };\n    /**\n     * Get an array of all elements currently in the field.\n     *\n     * This returns references to elements and does not make copies. Changes to\n     * the returned array (appending, deleting, replacing) have no effect on the\n     * underlying repeated field. Changes made to the original message will\n     * affect the messages in the returned array.\n     * Use setRuleArray to save chages to the array.\n     *\n     * @see prototemplate.Css3PrefixRules.rule\n     * @return {!Array\x3c!prototemplate.Css3PrefixRules.Rule.Const\x3e}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.prototype.getRuleArray \x3d function() {\n      return this.internalRepeatedFieldGetMessageArray(\n          \x27rule\x27, prototemplate.Css3PrefixRules.Rule);\n    };\n    /**\n     * Replaces all elements currently in the field.\n     *\n     * Updates the array to hold all the elements passed in, sharing the\n     * underlying data referances.\n     *\n     * @see prototemplate.Css3PrefixRules.rule\n     * @param {!Array\x3c!prototemplate.Css3PrefixRules.Rule.Const\x3e} arr\n     */\n    prototemplate.Css3PrefixRules.prototype.setRuleArray \x3d function(arr) {\n      this.internalRepeatedFieldSetMessageArray(\x27rule\x27, arr);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @param {number} i Index of the element in the range [0, ruleSize()).\n     */\n    prototemplate.Css3PrefixRules.prototype.removeRule \x3d\n        function(i) {\n      this.internalRepeatedFieldRemove(\x27rule\x27, i);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @param {number} i Index of the element in the range [0, ruleSize()).\n     * @return {!prototemplate.Css3PrefixRules.Rule}\n     */\n    prototemplate.Css3PrefixRules.prototype.mutableRule \x3d function(i) {\n      return new prototemplate.Css3PrefixRules.Rule(\n          this.internalRepeatedFieldGetMessage(\x27rule\x27, i));\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     * @return {!prototemplate.Css3PrefixRules.Rule}\n     */\n    prototemplate.Css3PrefixRules.prototype.addRule \x3d function() {\n      return new prototemplate.Css3PrefixRules.Rule(this.internalRepeatedFieldAddMessage(\n          \x27rule\x27));\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.rule\n     */\n    prototemplate.Css3PrefixRules.prototype.clearRule \x3d function() {\n      this.internalClear(\x27rule\x27);\n    };\n////////////////////////////////////////\n// Class Descriptors\n////////////////////////////////////////\n/** @return {!jsproto.CompactMessageDescriptor} */\nprototemplate.Css3PrefixRules.Rule.getCompactMessageDescriptor \x3d function() {\n    return \x27sse\x27;\n};\n/**\n * @return {!jsproto.MessageDescriptor}\n */\nprototemplate.Css3PrefixRules.Rule.getMessageDescriptor \x3d function() {\n  if (!prototemplate.Css3PrefixRules.Rule.messageDescriptor_) {\n    prototemplate.Css3PrefixRules.Rule.createMessageDescriptor_();\n  }\n  return prototemplate.Css3PrefixRules.Rule.messageDescriptor_;\n};\n/**\n * Same as the static method above, but available directly as a method on the\n * object itself.\n */\nprototemplate.Css3PrefixRules.Rule.prototype.getMessageDescriptor \x3d\n  prototemplate.Css3PrefixRules.Rule.getMessageDescriptor;\n/**\n * Helper method for creating the descriptor for this message class.\n * @private\n */\nprototemplate.Css3PrefixRules.Rule.createMessageDescriptor_ \x3d function() {\n  /** @type {!Object\x3cstring, !jsproto.FieldDescriptor\x3e} */\n  var fieldDescriptors \x3d {};\n  // Set the message descriptor immediately, to prevent protos with self-\n  // referential fields from causing infinite loops.\n  /** @const {!jsproto.MessageDescriptor} */\n  prototemplate.Css3PrefixRules.Rule.messageDescriptor_ \x3d jsproto.makeJsonMessageDescriptor(\n     fieldDescriptors);\n  \n      fieldDescriptors[\x27name\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27prefixed_name\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27role\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM;\n};\n/**\n * NOTE: Jscompiler is smart enough to inline this function and dead-code\n * eliminate unused branches, so we will rarely pay the cost of the seemingly\n * verbose and duplicate appearance of this function.\n * @param {!jsproto.Label} label\n * @return {!jsproto.ExtendedFieldDescriptor}\n */\nprototemplate.Css3PrefixRules.Rule.internalExtendedFieldDescriptor \x3d function(label) {\n    if (label \x3d\x3d jsproto.Label.REPEATED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* REPEATED label is encoded in the compact descriptor. */\n          descriptor: prototemplate.Css3PrefixRules.Rule.getMessageDescriptor()\n      });\n    } else if (label \x3d\x3d jsproto.Label.REQUIRED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          defaultVal: new prototemplate.Css3PrefixRules.Rule(),\n          descriptor: prototemplate.Css3PrefixRules.Rule.getMessageDescriptor(),\n          label: label\n      });\n    } else {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* OPTIONAL label is encoded in the compact descriptor. */\n          defaultVal: new prototemplate.Css3PrefixRules.Rule(),\n          descriptor: prototemplate.Css3PrefixRules.Rule.getMessageDescriptor()\n      });\n    }\n};\nif (goog.DEBUG) {\n  /**\n   * Builds a proto from a JSON object.  For compatibility with JSPB.\n   * @param {!Object} obj\n   * @return {!prototemplate.Css3PrefixRules.Rule}\n   */\n  prototemplate.Css3PrefixRules.Rule.fromObject \x3d function(obj) {\n    return new prototemplate.Css3PrefixRules.Rule(obj);\n  };\n  /**\n   * Returns the backing JSON object.  For compatibility with JSPB.\n   * @return {!Object}\n   * @override\n   */\n  prototemplate.Css3PrefixRules.Rule.prototype.debugObject \x3d function() {\n    return this.data;\n  };\n}\n////////////////////////////////////////\n// Class Field Accessors\n////////////////////////////////////////\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     * @type {!string}\n     * @const\n     */\n    prototemplate.Css3PrefixRules.Rule.DEFAULT_NAME \x3d \x27\x27;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.hasName \x3d function() {\n      return this.internalHas(\x27name\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     * @return {string}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.getName \x3d function() {\n      return this.internalGetScalarString(\x27name\x27\n        );\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     * @param {string} x\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.setName \x3d function(x) {\n      this.data[\x27name\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.name\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.clearName \x3d function() {\n      this.internalClear(\x27name\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     * @type {!string}\n     * @const\n     */\n    prototemplate.Css3PrefixRules.Rule.DEFAULT_PREFIXED_NAME \x3d \x27\x27;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.hasPrefixedName \x3d function() {\n      return this.internalHas(\x27prefixed_name\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     * @return {string}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.getPrefixedName \x3d function() {\n      return this.internalGetScalarString(\x27prefixed_name\x27\n        );\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     * @param {string} x\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.setPrefixedName \x3d function(x) {\n      this.data[\x27prefixed_name\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.prefixed_name\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.clearPrefixedName \x3d function() {\n      this.internalClear(\x27prefixed_name\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     * @type {!prototemplate.Css3PrefixRules.Role}\n     * @const\n     */\n    prototemplate.Css3PrefixRules.Rule.DEFAULT_ROLE \x3d prototemplate.Css3PrefixRules.Role.ANY;\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.hasRole \x3d function() {\n      return this.internalHas(\x27role\x27);\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     * @return {prototemplate.Css3PrefixRules.Role}\n     * @override\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.getRole \x3d function() {\n      return this.internalGetScalarEnum(\x27role\x27\n        );\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     * @param {prototemplate.Css3PrefixRules.Role} x\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.setRole \x3d function(x) {\n      this.data[\x27role\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.Css3PrefixRules.Rule.role\n     */\n    prototemplate.Css3PrefixRules.Rule.prototype.clearRole \x3d function() {\n      this.internalClear(\x27role\x27);\n    };\n\n//# sourceURL\x3dhttps://qs/template/prototemplate/proto/css3_prefix_rules_proto_js.js\n");

$googDebugFname=undefined;
var $googDebugFname="template/prototemplate/proto/rendering_mode_proto_js.js";
eval("/**\n * @fileoverview This file was automatically generated by\n * net/proto2/contrib/js_proto; do not modify it directly.\n *\n * See go/jsproto for documentation.\n *\n * @suppress {extraRequire}\n */\ngoog.provide(\x27prototemplate.RenderingMode\x27);\ngoog.require(\x27jsproto\x27);\ngoog.require(\x27jsproto.QueryStringSerializer\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jsproto.MessageBaseJson\x27);\n////////////////////////////////////////\n// Enums\n////////////////////////////////////////\n/**\n * @see prototemplate.RenderingMode\n * @name prototemplate.RenderingMode\n * @enum {number}\n */\nprototemplate.RenderingMode \x3d {\n    /**\n     * @member prototemplate.RenderingMode\n     * @constant\n     * @name TRADITIONAL\n     */\n    TRADITIONAL: 2\n    ,\n    /**\n     * @member prototemplate.RenderingMode\n     * @constant\n     * @name ASYNC_DEBUG\n     */\n    ASYNC_DEBUG: 3\n    ,\n    /**\n     * @member prototemplate.RenderingMode\n     * @constant\n     * @name ACT\n     */\n    ACT: 4\n    \n};\n\n//# sourceURL\x3dhttps://qs/template/prototemplate/proto/rendering_mode_proto_js.js\n");

$googDebugFname=undefined;
var $googDebugFname="template/prototemplate/proto/runtime_proto_js.js";
eval("/**\n * @fileoverview This file was automatically generated by\n * net/proto2/contrib/js_proto; do not modify it directly.\n *\n * See go/jsproto for documentation.\n *\n * @suppress {extraRequire}\n */\ngoog.provide(\x27prototemplate.ConstRuntimeProto\x27);\ngoog.provide(\x27prototemplate.RuntimeProto\x27);\ngoog.provide(\x27prototemplate.RuntimeProto.ConstDebugOptions\x27);\ngoog.provide(\x27prototemplate.RuntimeProto.DebugOptions\x27);\ngoog.require(\x27prototemplate.Css3PrefixRules\x27);\ngoog.require(\x27prototemplate.RenderingMode\x27);\ngoog.require(\x27jsproto\x27);\ngoog.require(\x27jsproto.QueryStringSerializer\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jsproto.MessageBaseJson\x27);\n  ////////////////////////////////////////\n  // Const proto interface. This allows the jscompiler to enforce this type\n  // isn\x27t used to change the object. But the object can be changed via\n  // reference to the underlying class either by other code with a reference\n  // or a downcast to the concrete class with mutable methods.\n  // @see prototemplate.RuntimeProto\n  ////////////////////////////////////////\n  /** @interface */\n  prototemplate.ConstRuntimeProto \x3d function() {};\n  /**\n   * @param {?prototemplate.ConstRuntimeProto} other\n   * @return {boolean}\n   */\n  prototemplate.ConstRuntimeProto.prototype.equals \x3d goog.abstractMethod;\n  /**\n   * Returns a deep copy of the message.\n   * @return {!prototemplate.RuntimeProto}\n   */\n  prototemplate.ConstRuntimeProto.prototype.clone \x3d goog.abstractMethod;\n  /**\n   * Exports a JSON object with the same data as the (JSPB) proto message\n   * object. This is a convenience wrapper for the static version below.\n   * This method is only provided in debug builds, and should not be\n   * relied upon for production.\n   * @return {!Object}\n   */\n  prototemplate.ConstRuntimeProto.prototype.debugObject \x3d goog.abstractMethod;\n  /**\n   * Return the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.ConstRuntimeProto.prototype.toObject \x3d goog.abstractMethod;\n  /**\n   * Return a copy of the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.ConstRuntimeProto.prototype.copyToObject \x3d goog.abstractMethod;\n  /**\n   * Returns the guts of this proto, which could be either an array or an\n   * object.\n   * @return {!Array\x3c?\x3e|!Object}\n   */\n  prototemplate.ConstRuntimeProto.prototype.getMessageContents \x3d\n      goog.abstractMethod;\n  ////////////////////////////////////////\n  // Class Field Accessors\n  ////////////////////////////////////////\n    /**\n     * @see prototemplate.RuntimeProto.language::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasLanguage \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.language\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getLanguage \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasIsRtl \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getIsRtl \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasEncodingName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getEncodingName \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.user_agent::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasUserAgent \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getUserAgent \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasRenderingMode \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     * @return {prototemplate.RenderingMode}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getRenderingMode \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasCss3Prefix \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getCss3Prefix \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasEnableDeferredInlineImages \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getEnableDeferredInlineImages \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasEnableAboveFoldTimeOnloadHandlers \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getEnableAboveFoldTimeOnloadHandlers \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasPintoModulesetId \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getPintoModulesetId \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasRunningUnderGwsDiff \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getRunningUnderGwsDiff \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasAutomaticallyLogComponents \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getAutomaticallyLogComponents \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasCspNonce \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     * @return {string}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getCspNonce \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled::\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasExternalResourceTrackingEnabled \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getExternalResourceTrackingEnabled \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasDebugOptions \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     * @return {!prototemplate.RuntimeProto.DebugOptions.Const}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getDebugOptions \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @return {boolean}\n     */\n    prototemplate.ConstRuntimeProto.prototype.hasCss3PrefixRules \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @return {!prototemplate.Css3PrefixRules.Const}\n     */\n    prototemplate.ConstRuntimeProto.prototype.getCss3PrefixRules \x3d goog.abstractMethod;\n////////////////////////////////////////\n// Constructor\n////////////////////////////////////////\n/**\n * @see prototemplate.RuntimeProto\n * \n * @param {?Object\x3d} opt_data\n * @extends {jsproto.MessageBaseJson\x3c!prototemplate.RuntimeProto, !prototemplate.ConstRuntimeProto\x3e}\n * @constructor\n * @struct\n * @implements prototemplate.ConstRuntimeProto\n */\nprototemplate.RuntimeProto \x3d function(opt_data) {\n  prototemplate.RuntimeProto.base(this, \x27constructor\x27, opt_data);\n};\ngoog.inherits(prototemplate.RuntimeProto, jsproto.MessageBaseJson);\n/** @typedef {!prototemplate.ConstRuntimeProto} */\nprototemplate.RuntimeProto.Const;\n  ////////////////////////////////////////\n  // Const proto interface. This allows the jscompiler to enforce this type\n  // isn\x27t used to change the object. But the object can be changed via\n  // reference to the underlying class either by other code with a reference\n  // or a downcast to the concrete class with mutable methods.\n  // @see prototemplate.RuntimeProto.DebugOptions\n  ////////////////////////////////////////\n  /** @interface */\n  prototemplate.RuntimeProto.ConstDebugOptions \x3d function() {};\n  /**\n   * @param {?prototemplate.RuntimeProto.ConstDebugOptions} other\n   * @return {boolean}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.equals \x3d goog.abstractMethod;\n  /**\n   * Returns a deep copy of the message.\n   * @return {!prototemplate.RuntimeProto.DebugOptions}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.clone \x3d goog.abstractMethod;\n  /**\n   * Exports a JSON object with the same data as the (JSPB) proto message\n   * object. This is a convenience wrapper for the static version below.\n   * This method is only provided in debug builds, and should not be\n   * relied upon for production.\n   * @return {!Object}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.debugObject \x3d goog.abstractMethod;\n  /**\n   * Return the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.toObject \x3d goog.abstractMethod;\n  /**\n   * Return a copy of the backing data object for this message.\n   *\n   * @return {!Object}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.copyToObject \x3d goog.abstractMethod;\n  /**\n   * Returns the guts of this proto, which could be either an array or an\n   * object.\n   * @return {!Array\x3c?\x3e|!Object}\n   */\n  prototemplate.RuntimeProto.ConstDebugOptions.prototype.getMessageContents \x3d\n      goog.abstractMethod;\n  ////////////////////////////////////////\n  // Class Field Accessors\n  ////////////////////////////////////////\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasDhtmlAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getDhtmlAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasShowDefaultMessage \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getShowDefaultMessage \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasCaptureReplay \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getCaptureReplay \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputErrorsInline \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputErrorsInline \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasShowTemplatePlaceholder \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getShowTemplatePlaceholder \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputJslogAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputJslogAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputJslogComments \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputJslogComments \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasAbortOnError \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getAbortOnError \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputGwsToolsAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputGwsToolsAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasCssAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getCssAnnotations \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info::\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.hasOutputCmlDebugVeInfo \x3d goog.abstractMethod;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     * @return {boolean}\n     */\n    prototemplate.RuntimeProto.ConstDebugOptions.prototype.getOutputCmlDebugVeInfo \x3d goog.abstractMethod;\n////////////////////////////////////////\n// Constructor\n////////////////////////////////////////\n/**\n * @see prototemplate.RuntimeProto.DebugOptions\n * \n * @param {?Object\x3d} opt_data\n * @extends {jsproto.MessageBaseJson\x3c!prototemplate.RuntimeProto.DebugOptions, !prototemplate.RuntimeProto.ConstDebugOptions\x3e}\n * @constructor\n * @struct\n * @implements prototemplate.RuntimeProto.ConstDebugOptions\n */\nprototemplate.RuntimeProto.DebugOptions \x3d function(opt_data) {\n  prototemplate.RuntimeProto.DebugOptions.base(this, \x27constructor\x27, opt_data);\n};\ngoog.inherits(prototemplate.RuntimeProto.DebugOptions, jsproto.MessageBaseJson);\n/** @typedef {!prototemplate.RuntimeProto.ConstDebugOptions} */\nprototemplate.RuntimeProto.DebugOptions.Const;\n////////////////////////////////////////\n// Enums\n////////////////////////////////////////\n////////////////////////////////////////\n// Class Descriptors\n////////////////////////////////////////\n/** @return {!jsproto.CompactMessageDescriptor} */\nprototemplate.RuntimeProto.getCompactMessageDescriptor \x3d function() {\n  if (!prototemplate.RuntimeProto.compactMessageDescriptor_) {\n    \n    prototemplate.RuntimeProto.compactMessageDescriptor_ \x3d {\n        descriptor: \x27sbmses10sb14bsbm20bsb\x27\n    };\n    prototemplate.RuntimeProto.compactMessageDescriptor_.subDescriptors \x3d [\n        prototemplate.RuntimeProto.DebugOptions.getCompactMessageDescriptor(),prototemplate.Css3PrefixRules.getCompactMessageDescriptor()];\n  }\n  return /** @type {!jsproto.CompactMessageDescriptor} */ (\n      prototemplate.RuntimeProto.compactMessageDescriptor_);\n};\n/**\n * @return {!jsproto.MessageDescriptor}\n */\nprototemplate.RuntimeProto.getMessageDescriptor \x3d function() {\n  if (!prototemplate.RuntimeProto.messageDescriptor_) {\n    prototemplate.RuntimeProto.createMessageDescriptor_();\n  }\n  return prototemplate.RuntimeProto.messageDescriptor_;\n};\n/**\n * Same as the static method above, but available directly as a method on the\n * object itself.\n */\nprototemplate.RuntimeProto.prototype.getMessageDescriptor \x3d\n  prototemplate.RuntimeProto.getMessageDescriptor;\n/**\n * Helper method for creating the descriptor for this message class.\n * @private\n */\nprototemplate.RuntimeProto.createMessageDescriptor_ \x3d function() {\n  /** @type {!Object\x3cstring, !jsproto.FieldDescriptor\x3e} */\n  var fieldDescriptors \x3d {};\n  // Set the message descriptor immediately, to prevent protos with self-\n  // referential fields from causing infinite loops.\n  /** @const {!jsproto.MessageDescriptor} */\n  prototemplate.RuntimeProto.messageDescriptor_ \x3d jsproto.makeJsonMessageDescriptor(\n     fieldDescriptors);\n  \n      fieldDescriptors[\x27language\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27is_rtl\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27encoding_name\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27debug_options\x27] \x3d jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.RuntimeProto.DebugOptions(), prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor());\n      fieldDescriptors[\x27user_agent\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27rendering_mode\x27] \x3d jsproto.makeFieldDescriptorOptionalEnum(prototemplate.RuntimeProto.DEFAULT_RENDERING_MODE);\n      fieldDescriptors[\x27css3_prefix\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27css3_prefix_rules\x27] \x3d jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.Css3PrefixRules(), prototemplate.Css3PrefixRules.getMessageDescriptor());\n      fieldDescriptors[\x27enable_deferred_inline_images\x27] \x3d jsproto.makeFieldDescriptorOptionalBool(prototemplate.RuntimeProto.DEFAULT_ENABLE_DEFERRED_INLINE_IMAGES);\n      fieldDescriptors[\x27enable_above_fold_time_onload_handlers\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27pinto_moduleset_id\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27running_under_gws_diff\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27automatically_log_components\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27csp_nonce\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;\n      fieldDescriptors[\x27external_resource_tracking_enabled\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n};\n/**\n * NOTE: Jscompiler is smart enough to inline this function and dead-code\n * eliminate unused branches, so we will rarely pay the cost of the seemingly\n * verbose and duplicate appearance of this function.\n * @param {!jsproto.Label} label\n * @return {!jsproto.ExtendedFieldDescriptor}\n */\nprototemplate.RuntimeProto.internalExtendedFieldDescriptor \x3d function(label) {\n    if (label \x3d\x3d jsproto.Label.REPEATED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* REPEATED label is encoded in the compact descriptor. */\n          descriptor: prototemplate.RuntimeProto.getMessageDescriptor()\n      });\n    } else if (label \x3d\x3d jsproto.Label.REQUIRED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          defaultVal: new prototemplate.RuntimeProto(),\n          descriptor: prototemplate.RuntimeProto.getMessageDescriptor(),\n          label: label\n      });\n    } else {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* OPTIONAL label is encoded in the compact descriptor. */\n          defaultVal: new prototemplate.RuntimeProto(),\n          descriptor: prototemplate.RuntimeProto.getMessageDescriptor()\n      });\n    }\n};\nif (goog.DEBUG) {\n  /**\n   * Builds a proto from a JSON object.  For compatibility with JSPB.\n   * @param {!Object} obj\n   * @return {!prototemplate.RuntimeProto}\n   */\n  prototemplate.RuntimeProto.fromObject \x3d function(obj) {\n    return new prototemplate.RuntimeProto(obj);\n  };\n  /**\n   * Returns the backing JSON object.  For compatibility with JSPB.\n   * @return {!Object}\n   * @override\n   */\n  prototemplate.RuntimeProto.prototype.debugObject \x3d function() {\n    return this.data;\n  };\n}\n////////////////////////////////////////\n// Class Field Accessors\n////////////////////////////////////////\n    /**\n     * @see prototemplate.RuntimeProto.language\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_LANGUAGE \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.language\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasLanguage \x3d function() {\n      return this.internalHas(\x27language\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.language\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getLanguage \x3d function() {\n      return this.internalGetScalarString(\x27language\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.language\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setLanguage \x3d function(x) {\n      this.data[\x27language\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.language\n     */\n    prototemplate.RuntimeProto.prototype.clearLanguage \x3d function() {\n      this.internalClear(\x27language\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_IS_RTL \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasIsRtl \x3d function() {\n      return this.internalHas(\x27is_rtl\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getIsRtl \x3d function() {\n      return this.internalGetScalarBoolean(\x27is_rtl\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setIsRtl \x3d function(x) {\n      this.data[\x27is_rtl\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.is_rtl\n     */\n    prototemplate.RuntimeProto.prototype.clearIsRtl \x3d function() {\n      this.internalClear(\x27is_rtl\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_ENCODING_NAME \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasEncodingName \x3d function() {\n      return this.internalHas(\x27encoding_name\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getEncodingName \x3d function() {\n      return this.internalGetScalarString(\x27encoding_name\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setEncodingName \x3d function(x) {\n      this.data[\x27encoding_name\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.encoding_name\n     */\n    prototemplate.RuntimeProto.prototype.clearEncodingName \x3d function() {\n      this.internalClear(\x27encoding_name\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_USER_AGENT \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasUserAgent \x3d function() {\n      return this.internalHas(\x27user_agent\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getUserAgent \x3d function() {\n      return this.internalGetScalarString(\x27user_agent\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setUserAgent \x3d function(x) {\n      this.data[\x27user_agent\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.user_agent\n     */\n    prototemplate.RuntimeProto.prototype.clearUserAgent \x3d function() {\n      this.internalClear(\x27user_agent\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     * @type {!prototemplate.RenderingMode}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_RENDERING_MODE \x3d prototemplate.RenderingMode.TRADITIONAL;\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasRenderingMode \x3d function() {\n      return this.internalHas(\x27rendering_mode\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     * @return {prototemplate.RenderingMode}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getRenderingMode \x3d function() {\n      return this.internalGetScalarEnum(\x27rendering_mode\x27\n        , prototemplate.RuntimeProto.DEFAULT_RENDERING_MODE\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     * @param {prototemplate.RenderingMode} x\n     */\n    prototemplate.RuntimeProto.prototype.setRenderingMode \x3d function(x) {\n      this.data[\x27rendering_mode\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.rendering_mode\n     */\n    prototemplate.RuntimeProto.prototype.clearRenderingMode \x3d function() {\n      this.internalClear(\x27rendering_mode\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_CSS3_PREFIX \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasCss3Prefix \x3d function() {\n      return this.internalHas(\x27css3_prefix\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getCss3Prefix \x3d function() {\n      return this.internalGetScalarString(\x27css3_prefix\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setCss3Prefix \x3d function(x) {\n      this.data[\x27css3_prefix\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix\n     */\n    prototemplate.RuntimeProto.prototype.clearCss3Prefix \x3d function() {\n      this.internalClear(\x27css3_prefix\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_ENABLE_DEFERRED_INLINE_IMAGES \x3d true;\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasEnableDeferredInlineImages \x3d function() {\n      return this.internalHas(\x27enable_deferred_inline_images\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getEnableDeferredInlineImages \x3d function() {\n      return this.internalGetScalarBoolean(\x27enable_deferred_inline_images\x27\n        , prototemplate.RuntimeProto.DEFAULT_ENABLE_DEFERRED_INLINE_IMAGES\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setEnableDeferredInlineImages \x3d function(x) {\n      this.data[\x27enable_deferred_inline_images\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_deferred_inline_images\n     */\n    prototemplate.RuntimeProto.prototype.clearEnableDeferredInlineImages \x3d function() {\n      this.internalClear(\x27enable_deferred_inline_images\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_ENABLE_ABOVE_FOLD_TIME_ONLOAD_HANDLERS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasEnableAboveFoldTimeOnloadHandlers \x3d function() {\n      return this.internalHas(\x27enable_above_fold_time_onload_handlers\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getEnableAboveFoldTimeOnloadHandlers \x3d function() {\n      return this.internalGetScalarBoolean(\x27enable_above_fold_time_onload_handlers\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setEnableAboveFoldTimeOnloadHandlers \x3d function(x) {\n      this.data[\x27enable_above_fold_time_onload_handlers\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.enable_above_fold_time_onload_handlers\n     */\n    prototemplate.RuntimeProto.prototype.clearEnableAboveFoldTimeOnloadHandlers \x3d function() {\n      this.internalClear(\x27enable_above_fold_time_onload_handlers\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_PINTO_MODULESET_ID \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasPintoModulesetId \x3d function() {\n      return this.internalHas(\x27pinto_moduleset_id\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getPintoModulesetId \x3d function() {\n      return this.internalGetScalarString(\x27pinto_moduleset_id\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setPintoModulesetId \x3d function(x) {\n      this.data[\x27pinto_moduleset_id\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.pinto_moduleset_id\n     */\n    prototemplate.RuntimeProto.prototype.clearPintoModulesetId \x3d function() {\n      this.internalClear(\x27pinto_moduleset_id\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_RUNNING_UNDER_GWS_DIFF \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasRunningUnderGwsDiff \x3d function() {\n      return this.internalHas(\x27running_under_gws_diff\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getRunningUnderGwsDiff \x3d function() {\n      return this.internalGetScalarBoolean(\x27running_under_gws_diff\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setRunningUnderGwsDiff \x3d function(x) {\n      this.data[\x27running_under_gws_diff\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.running_under_gws_diff\n     */\n    prototemplate.RuntimeProto.prototype.clearRunningUnderGwsDiff \x3d function() {\n      this.internalClear(\x27running_under_gws_diff\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_AUTOMATICALLY_LOG_COMPONENTS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasAutomaticallyLogComponents \x3d function() {\n      return this.internalHas(\x27automatically_log_components\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getAutomaticallyLogComponents \x3d function() {\n      return this.internalGetScalarBoolean(\x27automatically_log_components\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setAutomaticallyLogComponents \x3d function(x) {\n      this.data[\x27automatically_log_components\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.automatically_log_components\n     */\n    prototemplate.RuntimeProto.prototype.clearAutomaticallyLogComponents \x3d function() {\n      this.internalClear(\x27automatically_log_components\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     * @type {!string}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_CSP_NONCE \x3d \x27\x27;\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasCspNonce \x3d function() {\n      return this.internalHas(\x27csp_nonce\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     * @return {string}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getCspNonce \x3d function() {\n      return this.internalGetScalarString(\x27csp_nonce\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     * @param {string} x\n     */\n    prototemplate.RuntimeProto.prototype.setCspNonce \x3d function(x) {\n      this.data[\x27csp_nonce\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.csp_nonce\n     */\n    prototemplate.RuntimeProto.prototype.clearCspNonce \x3d function() {\n      this.internalClear(\x27csp_nonce\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DEFAULT_EXTERNAL_RESOURCE_TRACKING_ENABLED \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasExternalResourceTrackingEnabled \x3d function() {\n      return this.internalHas(\x27external_resource_tracking_enabled\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getExternalResourceTrackingEnabled \x3d function() {\n      return this.internalGetScalarBoolean(\x27external_resource_tracking_enabled\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.prototype.setExternalResourceTrackingEnabled \x3d function(x) {\n      this.data[\x27external_resource_tracking_enabled\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.external_resource_tracking_enabled\n     */\n    prototemplate.RuntimeProto.prototype.clearExternalResourceTrackingEnabled \x3d function() {\n      this.internalClear(\x27external_resource_tracking_enabled\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasDebugOptions \x3d function() {\n      return this.internalHas(\x27debug_options\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     * @return {!prototemplate.RuntimeProto.DebugOptions.Const}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getDebugOptions \x3d function() {\n      \n      return new prototemplate.RuntimeProto.DebugOptions(this.data[\x27debug_options\x27]);\n    };\n    /**\n     * Sets a message field directly from a user-generated jspb-compatible\n     * array.\n     * @see prototemplate.RuntimeProto.debug_options\n     * @param {!Array\x3c?\x3e} x\n     */\n    prototemplate.RuntimeProto.prototype.setDebugOptionsFromArray \x3d function(x) {\n      this.data[\x27debug_options\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     * @return {!prototemplate.RuntimeProto.DebugOptions}\n     */\n    prototemplate.RuntimeProto.prototype.mutableDebugOptions \x3d function() {\n      return new prototemplate.RuntimeProto.DebugOptions(this.internalMutableMessage(\x27debug_options\x27));\n    };\n    /**\n     * @see prototemplate.RuntimeProto.debug_options\n     */\n    prototemplate.RuntimeProto.prototype.clearDebugOptions \x3d function() {\n      this.internalClear(\x27debug_options\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.hasCss3PrefixRules \x3d function() {\n      return this.internalHas(\x27css3_prefix_rules\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @return {!prototemplate.Css3PrefixRules.Const}\n     * @override\n     */\n    prototemplate.RuntimeProto.prototype.getCss3PrefixRules \x3d function() {\n      \n      return new prototemplate.Css3PrefixRules(this.data[\x27css3_prefix_rules\x27]);\n    };\n    /**\n     * Sets a message field directly from a user-generated jspb-compatible\n     * array.\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @param {!Array\x3c?\x3e} x\n     */\n    prototemplate.RuntimeProto.prototype.setCss3PrefixRulesFromArray \x3d function(x) {\n      this.data[\x27css3_prefix_rules\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     * @return {!prototemplate.Css3PrefixRules}\n     */\n    prototemplate.RuntimeProto.prototype.mutableCss3PrefixRules \x3d function() {\n      return new prototemplate.Css3PrefixRules(this.internalMutableMessage(\x27css3_prefix_rules\x27));\n    };\n    /**\n     * @see prototemplate.RuntimeProto.css3_prefix_rules\n     */\n    prototemplate.RuntimeProto.prototype.clearCss3PrefixRules \x3d function() {\n      this.internalClear(\x27css3_prefix_rules\x27);\n    };\n////////////////////////////////////////\n// Class Descriptors\n////////////////////////////////////////\n/** @return {!jsproto.CompactMessageDescriptor} */\nprototemplate.RuntimeProto.DebugOptions.getCompactMessageDescriptor \x3d function() {\n    return \x273b6bbbbbbbbbbb\x27;\n};\n/**\n * @return {!jsproto.MessageDescriptor}\n */\nprototemplate.RuntimeProto.DebugOptions.getMessageDescriptor \x3d function() {\n  if (!prototemplate.RuntimeProto.DebugOptions.messageDescriptor_) {\n    prototemplate.RuntimeProto.DebugOptions.createMessageDescriptor_();\n  }\n  return prototemplate.RuntimeProto.DebugOptions.messageDescriptor_;\n};\n/**\n * Same as the static method above, but available directly as a method on the\n * object itself.\n */\nprototemplate.RuntimeProto.DebugOptions.prototype.getMessageDescriptor \x3d\n  prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor;\n/**\n * Helper method for creating the descriptor for this message class.\n * @private\n */\nprototemplate.RuntimeProto.DebugOptions.createMessageDescriptor_ \x3d function() {\n  /** @type {!Object\x3cstring, !jsproto.FieldDescriptor\x3e} */\n  var fieldDescriptors \x3d {};\n  // Set the message descriptor immediately, to prevent protos with self-\n  // referential fields from causing infinite loops.\n  /** @const {!jsproto.MessageDescriptor} */\n  prototemplate.RuntimeProto.DebugOptions.messageDescriptor_ \x3d jsproto.makeJsonMessageDescriptor(\n     fieldDescriptors);\n  \n      fieldDescriptors[\x27output_annotations\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27dhtml_annotations\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27show_default_message\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27capture_replay\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27output_errors_inline\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27show_template_placeholder\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27output_jslog_annotations\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27output_jslog_comments\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27abort_on_error\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27output_gws_tools_annotations\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27css_annotations\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n      fieldDescriptors[\x27output_cml_debug_ve_info\x27] \x3d jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;\n};\n/**\n * NOTE: Jscompiler is smart enough to inline this function and dead-code\n * eliminate unused branches, so we will rarely pay the cost of the seemingly\n * verbose and duplicate appearance of this function.\n * @param {!jsproto.Label} label\n * @return {!jsproto.ExtendedFieldDescriptor}\n */\nprototemplate.RuntimeProto.DebugOptions.internalExtendedFieldDescriptor \x3d function(label) {\n    if (label \x3d\x3d jsproto.Label.REPEATED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* REPEATED label is encoded in the compact descriptor. */\n          descriptor: prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor()\n      });\n    } else if (label \x3d\x3d jsproto.Label.REQUIRED) {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          defaultVal: new prototemplate.RuntimeProto.DebugOptions(),\n          descriptor: prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor(),\n          label: label\n      });\n    } else {\n      return /** @type {!jsproto.ExtendedFieldDescriptor} */ ({\n          /* OPTIONAL label is encoded in the compact descriptor. */\n          defaultVal: new prototemplate.RuntimeProto.DebugOptions(),\n          descriptor: prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor()\n      });\n    }\n};\nif (goog.DEBUG) {\n  /**\n   * Builds a proto from a JSON object.  For compatibility with JSPB.\n   * @param {!Object} obj\n   * @return {!prototemplate.RuntimeProto.DebugOptions}\n   */\n  prototemplate.RuntimeProto.DebugOptions.fromObject \x3d function(obj) {\n    return new prototemplate.RuntimeProto.DebugOptions(obj);\n  };\n  /**\n   * Returns the backing JSON object.  For compatibility with JSPB.\n   * @return {!Object}\n   * @override\n   */\n  prototemplate.RuntimeProto.DebugOptions.prototype.debugObject \x3d function() {\n    return this.data;\n  };\n}\n////////////////////////////////////////\n// Class Field Accessors\n////////////////////////////////////////\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_ANNOTATIONS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputAnnotations \x3d function() {\n      return this.internalHas(\x27output_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputAnnotations \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_annotations\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputAnnotations \x3d function(x) {\n      this.data[\x27output_annotations\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_annotations\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputAnnotations \x3d function() {\n      this.internalClear(\x27output_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_DHTML_ANNOTATIONS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasDhtmlAnnotations \x3d function() {\n      return this.internalHas(\x27dhtml_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getDhtmlAnnotations \x3d function() {\n      return this.internalGetScalarBoolean(\x27dhtml_annotations\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setDhtmlAnnotations \x3d function(x) {\n      this.data[\x27dhtml_annotations\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.dhtml_annotations\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearDhtmlAnnotations \x3d function() {\n      this.internalClear(\x27dhtml_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_SHOW_DEFAULT_MESSAGE \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasShowDefaultMessage \x3d function() {\n      return this.internalHas(\x27show_default_message\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getShowDefaultMessage \x3d function() {\n      return this.internalGetScalarBoolean(\x27show_default_message\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setShowDefaultMessage \x3d function(x) {\n      this.data[\x27show_default_message\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_default_message\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearShowDefaultMessage \x3d function() {\n      this.internalClear(\x27show_default_message\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_CAPTURE_REPLAY \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasCaptureReplay \x3d function() {\n      return this.internalHas(\x27capture_replay\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getCaptureReplay \x3d function() {\n      return this.internalGetScalarBoolean(\x27capture_replay\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setCaptureReplay \x3d function(x) {\n      this.data[\x27capture_replay\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.capture_replay\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearCaptureReplay \x3d function() {\n      this.internalClear(\x27capture_replay\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_ERRORS_INLINE \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputErrorsInline \x3d function() {\n      return this.internalHas(\x27output_errors_inline\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputErrorsInline \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_errors_inline\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputErrorsInline \x3d function(x) {\n      this.data[\x27output_errors_inline\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_errors_inline\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputErrorsInline \x3d function() {\n      this.internalClear(\x27output_errors_inline\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_SHOW_TEMPLATE_PLACEHOLDER \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasShowTemplatePlaceholder \x3d function() {\n      return this.internalHas(\x27show_template_placeholder\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getShowTemplatePlaceholder \x3d function() {\n      return this.internalGetScalarBoolean(\x27show_template_placeholder\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setShowTemplatePlaceholder \x3d function(x) {\n      this.data[\x27show_template_placeholder\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.show_template_placeholder\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearShowTemplatePlaceholder \x3d function() {\n      this.internalClear(\x27show_template_placeholder\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_JSLOG_ANNOTATIONS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputJslogAnnotations \x3d function() {\n      return this.internalHas(\x27output_jslog_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputJslogAnnotations \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_jslog_annotations\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputJslogAnnotations \x3d function(x) {\n      this.data[\x27output_jslog_annotations\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_annotations\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputJslogAnnotations \x3d function() {\n      this.internalClear(\x27output_jslog_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_JSLOG_COMMENTS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputJslogComments \x3d function() {\n      return this.internalHas(\x27output_jslog_comments\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputJslogComments \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_jslog_comments\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputJslogComments \x3d function(x) {\n      this.data[\x27output_jslog_comments\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_jslog_comments\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputJslogComments \x3d function() {\n      this.internalClear(\x27output_jslog_comments\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_ABORT_ON_ERROR \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasAbortOnError \x3d function() {\n      return this.internalHas(\x27abort_on_error\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getAbortOnError \x3d function() {\n      return this.internalGetScalarBoolean(\x27abort_on_error\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setAbortOnError \x3d function(x) {\n      this.data[\x27abort_on_error\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.abort_on_error\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearAbortOnError \x3d function() {\n      this.internalClear(\x27abort_on_error\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_GWS_TOOLS_ANNOTATIONS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputGwsToolsAnnotations \x3d function() {\n      return this.internalHas(\x27output_gws_tools_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputGwsToolsAnnotations \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_gws_tools_annotations\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputGwsToolsAnnotations \x3d function(x) {\n      this.data[\x27output_gws_tools_annotations\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_gws_tools_annotations\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputGwsToolsAnnotations \x3d function() {\n      this.internalClear(\x27output_gws_tools_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_CSS_ANNOTATIONS \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasCssAnnotations \x3d function() {\n      return this.internalHas(\x27css_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getCssAnnotations \x3d function() {\n      return this.internalGetScalarBoolean(\x27css_annotations\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setCssAnnotations \x3d function(x) {\n      this.data[\x27css_annotations\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.css_annotations\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearCssAnnotations \x3d function() {\n      this.internalClear(\x27css_annotations\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     * @type {!boolean}\n     * @const\n     */\n    prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_CML_DEBUG_VE_INFO \x3d false;\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.hasOutputCmlDebugVeInfo \x3d function() {\n      return this.internalHas(\x27output_cml_debug_ve_info\x27);\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     * @return {boolean}\n     * @override\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.getOutputCmlDebugVeInfo \x3d function() {\n      return this.internalGetScalarBoolean(\x27output_cml_debug_ve_info\x27\n        );\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     * @param {boolean} x\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.setOutputCmlDebugVeInfo \x3d function(x) {\n      this.data[\x27output_cml_debug_ve_info\x27] \x3d x;\n    };\n    /**\n     * @see prototemplate.RuntimeProto.DebugOptions.output_cml_debug_ve_info\n     */\n    prototemplate.RuntimeProto.DebugOptions.prototype.clearOutputCmlDebugVeInfo \x3d function() {\n      this.internalClear(\x27output_cml_debug_ve_info\x27);\n    };\n\n//# sourceURL\x3dhttps://qs/template/prototemplate/proto/runtime_proto_js.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/template/jslayout/evalcontext.js";
eval("// Copyright 2006 Google Inc. All rights reserved.\n\n/**\n * @author mesch@google.com (Steffen Meschkat)\n *\n * @fileoverview This class is used to evaluate expressions in a local\n * context. Used by jslayout.Processor.\n *\n * Designdoc: \x3chttp://www/eng/designdocs/maps/jstemplate.html\x3e.\n *\n * @visibility {//visibility:public}\n */\n\ngoog.provide(\x27jslayout.EvalContext\x27);\n\ngoog.forwardDeclare(\x27jslayout.GlobalVariablePool\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.i18n.bidi\x27);\ngoog.require(\x27goog.labs.userAgent.browser\x27);\ngoog.require(\x27goog.labs.userAgent.engine\x27);\ngoog.require(\x27jslayout.globals\x27);\ngoog.require(\x27prototemplate.RuntimeProto\x27);\n\ngoog.scope(function() {\n\n/**\n * Context for processing a jstemplate. The context contains a context\n * object, whose properties can be referred to in jstemplate\n * expressions, and it holds the locally defined variables.\n *\n * @constructor\n * @struct\n */\njslayout.EvalContext \x3d function() {\n\n  /**\n   * The context for variable definitions in which the jstemplate\n   * expressions are evaluated. Variable definitions of the parent are\n   * inherited and extended or overridden by execution of jsvars\n   * processing instructions.\n   *\n   * @type {!Object}\n   * @private\n   */\n  this.vars_ \x3d {};\n\n  /**\n   * The registry to bind parameters specified in the jsglobals\n   * attribute in jslayout. These parameters are registered globally\n   * by their types (and possibly a secondary key, which is also a\n   * type), and bound to local names in each template that uses\n   * them. This plays the same role as the GlobalVariablePool in the\n   * C++ implementation.\n   * @type {jslayout.GlobalVariablePool}\n   * @private\n   */\n  this.globalVariablePool_ \x3d null;\n\n  /**\n   * Instance ID of this instance, to keep track of where a context\n   * applies in the DOM for debugging, as well as to track child\n   * contexts by ID.\n   * @type {number}\n   * @private\n   */\n  this.instance_ \x3d ++jslayout.EvalContext.instance_;\n\n  /**\n   * Used only when (jslayout.STATS \x26 jslayout.StatsOptions.COUNT).\n   * @type {number|undefined}\n   */\n  this.__touch;\n};\n\n\n/**\n * A function used to evaluate an expression in an EvalContext. The\n * second argument to the function is the global scope, which is only\n * needed by ValueFunction instances produced by expressionparser.js;\n * extern expression functions generated by jslayout_js() don\x27t take\n * this argument.\n * @typedef {function(this:Element,!Object,!Object\x3d):*}\n */\njslayout.EvalContext.ValueFunction;\n\n\n/**\n * A function used to set a value in an EvalContext.\n * @typedef {function(!Object,*)}\n */\njslayout.EvalContext.SetterFunction;\n\n\n/**\n * Global counter for processing rounds. See instance member\n * Processor.prototype.epoch_ for how it\x27s used.\n * @type {number}\n * @private\n */\njslayout.EvalContext.epoch_ \x3d 0;\n\n\n/**\n * Gives a new value from the epoch_ counter. The first valid epoch\n * number is 1.\n * @return {number} .\n */\njslayout.EvalContext.epoch \x3d function() {\n  return ++jslayout.EvalContext.epoch_;\n};\n\n\n/**\n * Counter for instances of EvalContext. Only used when any\n * StatsOption is set in jslayout.STATS.\n * @type {number}\n * @private\n */\njslayout.EvalContext.instance_ \x3d 0;\n\n\n/**\n * Allows to set the global variable pool. This way, a global variable\n * pool can be shared between EvalContexts for different templates or\n * template processing invocations, which is the intended use. The\n * instance is inherited by all child contexts.\n * @param {jslayout.GlobalVariablePool} pool .\n */\njslayout.EvalContext.prototype.setGlobalVariablePool \x3d function(pool) {\n  this.globalVariablePool_ \x3d pool;\n};\n\n\n/**\n * @return {jslayout.GlobalVariablePool} .\n */\njslayout.EvalContext.prototype.getGlobalVariablePool \x3d function() {\n  return this.globalVariablePool_;\n};\n\n\n/**\n * Called by the jslayout.Processor when processing the jsglobals\n * attribute. Retrieves a value from the global variable pool by its\n * key (which is the type and possibly an instance key) and binds it\n * in the current eval context by the setter function provided.\n * @param {jslayout.EvalContext.SetterFunction} setter\n * @param {string} key\n */\njslayout.EvalContext.prototype.inject \x3d function(setter, key) {\n  // Silently ignore if we don\x27t have a global variable pool. That\x27s\n  // what the C++ interpreter does. If the global is really missing,\n  // we will notice during evaluation.\n  this.jsexecSetter(setter, this.globalVariablePool_ ?\n                    this.globalVariablePool_.getGlobal(key) :\n                    null);\n};\n\n\n/**\n * Helper method that copies properties of one object over to another\n * object.\n *\n * @param {!Object} to Target object.\n *\n * @param {!Object} from Source object.\n *\n * @param {Array.\x3cstring\x3e} args The names of the properties to\n *     copy. If null, copy all properties.\n *\n * @private\n */\njslayout.EvalContext.copyProperties_ \x3d function(to, from, args) {\n  if (args) {\n    to.__rtl \x3d from.__rtl;\n    to.__markup_allowed \x3d from.__markup_allowed;\n    for (var i \x3d 0; i \x3c args.length; ++i) {\n      to[args[i]] \x3d from[args[i]];\n    }\n  } else {\n    for (var i in from) {\n      // We can afford to copy all properties, because both to and\n      // from are direct Object instances. So if from has an inherited\n      // property, to will have it too, and adding it doesn\x27t hurt.\n      to[i] \x3d from[i];\n    }\n  }\n};\n\n\n/**\n * Gives access to the special bidi variable __rtl.\n * @return {boolean}\n */\njslayout.EvalContext.prototype.getBidiDirIsRtl \x3d function() {\n  return Boolean(this.vars_.__rtl);\n};\n\n\n/**\n * Gives set access to the special bidi variable __rtl.\n * @param {boolean} value\n */\njslayout.EvalContext.prototype.setBidiDirIsRtl \x3d function(value) {\n  this.vars_.__rtl \x3d value;\n};\n\n\n/**\n * Gives access to the special variable __markup_allowed.\n * @return {?boolean}\n */\njslayout.EvalContext.prototype.getMarkupAllowed \x3d function() {\n  return this.vars_.__markup_allowed;\n};\n\n\n/**\n * Gives set access to the special variable __markup_allowed.\n * @param {boolean} value\n */\njslayout.EvalContext.prototype.setMarkupAllowed \x3d function(value) {\n  this.vars_.__markup_allowed \x3d value;\n};\n\n\n/**\n * @typedef {{\n *   reactiveData__: {\n *     constructionDelayed: boolean\n *   }\n * }}\n */\nlet ControllerLike;\n\n\n/**\n * Gives access to the controller instance in this scope.\n * @return {?Object}\n */\njslayout.EvalContext.prototype.getController \x3d function() {\n  return this.vars_.__controller;\n};\n\n\n/**\n * @return {?Object|?ControllerLike} Returns the controller instance in this scope if it has\n *     been properly initialized.\n */\njslayout.EvalContext.prototype.getReadyController \x3d function() {\n  const maybeController \x3d this.getController();\n  if (maybeController) {\n    const controller \x3d /** @type {!ControllerLike} */ (maybeController);\n    const reactiveData \x3d controller.reactiveData__;\n    goog.asserts.assert(\n        reactiveData,\n        \x27Controller does not appear to be a reactive controller.\x27);\n    if (!reactiveData.constructionDelayed) {\n      return controller;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Gives set access to the controller instance in this scope.\n * @param {?Object} controller\n */\njslayout.EvalContext.prototype.setController \x3d function(controller) {\n  this.vars_.__controller \x3d controller;\n};\n\n/**\n * Clears the global runtime proto. Used directly in tests and implicitly\n * if no runtime proto was provided by the application.\n */\njslayout.EvalContext.reset \x3d function() {\n  jslayout.EvalContext.runtime_ \x3d new prototemplate.RuntimeProto;\n  // Keep in sync with css3_prefix in\n  // google3/googledata/gws/experiments/mendel/gws/features/jslayout.gcl\n  if (goog.labs.userAgent.engine.isWebKit()) {\n    jslayout.EvalContext.runtime_.setCss3Prefix(\x27-webkit-\x27);\n  } else if (goog.labs.userAgent.browser.isFirefox()) {\n    jslayout.EvalContext.runtime_.setCss3Prefix(\x27-moz-\x27);\n  } else if (goog.labs.userAgent.browser.isIE()) {\n    jslayout.EvalContext.runtime_.setCss3Prefix(\x27-ms-\x27);\n  } else if (goog.labs.userAgent.browser.isOpera()) {\n    // Keep this after the major vendors because Opera\x27s often includes\n    // \x22MSIE\x22 or even \x22AppleWebKit/\x22.\n    jslayout.EvalContext.runtime_.setCss3Prefix(\x27-o-\x27);\n  }\n  jslayout.EvalContext.runtime_.setIsRtl(goog.i18n.bidi.IS_RTL);\n};\n\n\n/**\n * Accesses the global instance of RuntimeProto. Used for setup at\n * load time.\n *\n * @return {prototemplate.RuntimeProto} The global RuntimeProto\n *     instance.\n */\njslayout.EvalContext.runtime \x3d function() {\n  if (!jslayout.EvalContext.runtime_) {\n    jslayout.EvalContext.reset();\n  }\n  return jslayout.EvalContext.runtime_;\n};\n\n\n/**\n * The global instance of RuntimeProto. It\x27s configured once at\n * startup, and shared between all jstemplate processing\n * instances.\n *\n * This JsProto wraps JSON, not JSPB, so the wrapped data can be\n * exposed directly to jstemplate, which happens in\n * jslayout.EvalContext.runtimeData(), below.\n *\n * @type {prototemplate.RuntimeProto}\n * @private\n */\njslayout.EvalContext.runtime_ \x3d null;\n\n\n/**\n * The implementation of the runtime() service: A function that gives\n * access to the JSON data wrapped by the RuntimeProto instance. This\n * function is inserted under the identifier \x27runtime\x27 into the global\n * jslayout.EvalContext scope.\n * @return {Object} The JSON data wrapped by te RuntimeProto instance.\n */\njslayout.EvalContext.runtimeData \x3d function() {\n  return jslayout.EvalContext.runtime().toObject();\n};\n\n\n/**\n * Executes a value function (such as created using\n * ExpressionParser::evalToFunction()) in the context of vars and\n * template.\n *\n * @param {jslayout.EvalContext.ValueFunction} exprFunction A\n *     javascript function such as one created from a jstemplate\n *     control attribute value.\n * @param {?Element\x3d} opt_template DOM node of the template.\n * @return {*} The value of the expression from which\n *     exprFunction was created in the current js expression context and\n *     the context of template.\n */\njslayout.EvalContext.prototype.jsexec \x3d function(exprFunction, opt_template) {\n  return exprFunction.call(\n      opt_template, this.vars_, jslayout.globals.getGlobals());\n};\n\n\n/**\n * Executes a setter function (such as created using\n * ExpressionParser::evalToSetter()) in the context of vars.\n *\n * @param {jslayout.EvalContext.SetterFunction} setter A javascript\n *     setter function created from a jstemplate attribute value.\n * @param {*} value The value to pass to the setter.\n */\njslayout.EvalContext.prototype.jsexecSetter \x3d function(setter, value) {\n  setter(this.vars_, value);\n};\n\n\n/**\n * Copies variables from the given context to this context. Also\n * copies the reference to the global variable pool if present\n * in the source context.\n *\n * @param {!jslayout.EvalContext} from The context to copy from.\n *\n * @param {Array.\x3cstring\x3e\x3d} opt_args The list of names of variables\n *     to copy from the source context. If not given, all variables\n *     are copied.\n */\njslayout.EvalContext.prototype.copyFrom \x3d function(from, opt_args) {\n  // TODO(haustein): This is ugly. Make a globalVariablePool_ a required\n  // constructor argument instead? The concern here is that a EvalContext\n  // handed in for inner transclusion rendering may not have the globals\n  // set properly and overwrite the ones already present.\n  if (from.globalVariablePool_ !\x3d null) {\n    this.globalVariablePool_ \x3d from.globalVariablePool_;\n  }\n\n  jslayout.EvalContext.copyProperties_(\n      this.vars_, from.vars_, opt_args || null);\n};\n\n\n/**\n * Binds an external parameter to the given value.\n *\n * @param {string} name Name.\n * @param {*} value Value.\n */\njslayout.EvalContext.prototype.setVariable \x3d function(name, value) {\n  this.vars_[name] \x3d value;\n};\n\n\n/**\n * Returns the value bound to the local variable of the given name, or\n * undefined if it wasn\x27t set. There is no way to distinguish a\n * variable that wasn\x27t set from a variable that was set to\n * undefined. Used only for testing.\n *\n * @param {string} name Name.\n * @return {*} value Value.\n */\njslayout.EvalContext.prototype.getVariable \x3d function(name) {\n  return this.vars_[name];\n};\n\n\n/**\n * Provides access to private this.vars_. The returned object must not\n * be changed.\n *\n * @return {!Object} value Value.\n */\njslayout.EvalContext.prototype.vars \x3d function() {\n  return this.vars_;\n};\n\n\n/**\n * Updates just vars_ in this environment from other and returns\n * true if any change to a variable present in opt_params is detected\n * (additional variables in other are fine).\n *\n * @param {!jslayout.EvalContext} other\n *\n * @param {?Object\x3d} opt_params list or map of transclusion parameters.\n *\n * @return {boolean} true if any change was detected\n */\njslayout.EvalContext.prototype.shallowUpdate \x3d function(other, opt_params) {\n  var changed \x3d false;\n  // Note that this is not just shallow, but also not symmetric.\n  // Additional vars in other are not checked.\n  for (var name in this.vars_) {\n    var newValue \x3d other.vars_[name];\n    if (this.vars_[name] !\x3d newValue) {\n      this.vars_[name] \x3d newValue;\n      if (opt_params \x26\x26 goog.isArray(opt_params) ?\n          opt_params.indexOf(name) !\x3d -1 : opt_params[name] !\x3d null) {\n        changed \x3d true;\n      }\n    }\n  }\n  return changed;\n};\n\n\n/**\n * Returns a diagnostic string representation of this EvalContext,\n * consisting of the variable names and their value types.\n *\n * @return {string}\n */\njslayout.EvalContext.prototype.debugString \x3d function() {\n  var result \x3d \x27EvalContext{\x27;\n  for (var key in this.vars_) {\n    result +\x3d key + \x27: \x27 + (typeof this.vars_[key]) + \x27, \x27;\n  }\n  return result + \x27}\x27;\n};\n});  // end of goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/evalcontext.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3f');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3f');

}catch(e){_DumpException(e)}
/* _Module_:r */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('r');
var $googDebugFname="javascript/template/jslayout/reactive/dispatcher.js";
eval("/**\n * @fileoverview A reactive dispatcher to be used in JsAction\n * dispatcher.\n *\n * To use this, set up a jsaction dispatcher and registers\n * the reactive dispatcher:\n * \x3cpre\x3e\n *   jslayout.reactive.Dispatcher.register(jsactionDispatcher);\n * \x3c/pre\x3e\n */\n\ngoog.provide(\x27jslayout.reactive.Dispatcher\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27jsaction.ActionLogger\x27);\ngoog.require(\x27jslayout.EvalContext\x27);\ngoog.require(\x27jslayout.Property\x27);\ngoog.require(\x27jslayout.reactive.framework\x27);\n\n\n\n/**\n * Creates a new reactive dispatcher.\n *\n * Usually, you should use jslayout.reactive.Dispatcher.register\n * instead of calling the constructor directly. However, you may\n * do so for unit tests so that you do not need to instantiate\n * a jslayout.Dispatcher.\n *\n * @param {!jsaction.ActionLogger\x3d} opt_actionLogger an instance of ActionLogger\n *     to log dispatch information.\n * @constructor\n */\njslayout.reactive.Dispatcher \x3d function(opt_actionLogger) {\n  /** @private {!jsaction.ActionLogger} */\n  this.actionLogger_ \x3d opt_actionLogger\n      || jslayout.reactive.Dispatcher.doNothingLogger_;\n\n};\n\n/** @private {!jsaction.ActionLogger} a do-nothing ActionLogger. */\njslayout.reactive.Dispatcher.doNothingLogger_ \x3d new jsaction.ActionLogger();\n\n/**\n * Creates and registers a reactive dispatcher on the given jsaction\n * dispatcher. The reactive dispatcher will handle the \x27r\x27 namespace.\n * @param {!jsaction.Dispatcher} dispatcher The jsaction dispatcher.\n * @param {!jsaction.ActionLogger\x3d} opt_actionLogger The jsaction ActionLogger\n *     to log the actions.\n * @return {!jslayout.reactive.Dispatcher} The newly\n *     created reactive dispatcher.\n */\njslayout.reactive.Dispatcher.register \x3d function(dispatcher, opt_actionLogger) {\n  var d \x3d new jslayout.reactive.Dispatcher(opt_actionLogger);\n  dispatcher.registerNamespaceHandler(\n      \x27r\x27, goog.bind(d.dispatch, d), goog.bind(d.accept, d));\n  jslayout.reactive.framework.getOptions().setJsactionDispatcher(dispatcher);\n\n  // HACK: For reasons, it\x27s possible for code to ask for reactive controllers\n  // before the metadata associated with those controllers has been added to the\n  // reactive framework. As such, we\x27d like to delay resolving any Promises\n  // associated with those requests before we know that we have metadata. We\n  // decided to pick the dispatcher registration as the moment when we know\n  // for certain that some metadata has been downloaded. Here, we tell the\n  // framework to resolve all of those queued promises.\n  jslayout.reactive.framework.ready();\n\n  return d;\n};\n\n\n/**\n * A dummy EvalContext passed to reactive jsaction handler.\n *\n * TODO(chrishenry): For jscontroller/reactive jsaction managed by\n * jslayout_js, this dummy EvalContext will be replaced with a real\n * EvalContext associated with the element containing jsaction,\n * allowing passing parameters to reactive jsaction.\n *\n * @const\n * @private\n */\njslayout.reactive.Dispatcher.dummyEvalContext_ \x3d new jslayout.EvalContext;\n\n\n/**\n * Whether this dispatcher can accept the given EventInfo immediately.\n * The dispatcher may return false if, for example, the Pinto module\n * containing the controller has not bee loaded. Returning false will\n * cause the events to be queued by jsaction for later processing.\n * @param {jsaction.EventInfo} eventInfo The event info.\n * @return {boolean} Whether the dispatcher can immediately accept the\n *     given event.\n */\njslayout.reactive.Dispatcher.prototype.accept \x3d function(eventInfo) {\n  var node \x3d eventInfo[\x27actionElement\x27];\n  var actionName \x3d eventInfo[\x27action\x27].split(\x27.\x27)[1];\n\n  var controller \x3d this.getController_(node, actionName);\n  if (!controller) {\n    goog.log.fine(\n        jslayout.reactive.Dispatcher.logger_,\n        \x27Controller is not found. It may not have been loaded.\x27);\n  }\n  return !!controller;\n};\n\n\n/**\n * Dispatches the given action.\n * @param {jsaction.ActionFlow} actionFlow The action flow\n *     corresponding to the action.\n */\njslayout.reactive.Dispatcher.prototype.dispatch \x3d function(actionFlow) {\n  var node \x3d actionFlow.node();\n  var actionName \x3d actionFlow.flowType().split(\x27.\x27)[1];\n\n  var controller \x3d this.getController_(node, actionName);\n  if (!controller) {\n    goog.log.error(\n        jslayout.reactive.Dispatcher.logger_,\n        \x27Can not find controller instance.\x27);\n    return;\n  }\n  var controllerPool \x3d controller.reactiveData__.controllerPool;\n  var action \x3d controllerPool.getAction(actionName);\n  if (!action) {\n    goog.log.warning(\n        jslayout.reactive.Dispatcher.logger_,\n        \x27Can not find action. Do you include the generated jsaction bindings \x27 +\n        \x27in your Pinto module? Action name: \x27 + actionName);\n    return;\n  }\n\n  let templateKey \x3d null;\n  if (controller.reactiveData__ \x26\x26 controller.reactiveData__.metadata) {\n    templateKey \x3d controller.reactiveData__.metadata.getTemplateId();\n  }\n  this.actionLogger_.logDispatch(actionFlow, templateKey);\n\n  action(controller, actionFlow,\n      node[jslayout.Property.CONTEXT] ||\n      jslayout.reactive.Dispatcher.dummyEvalContext_);\n};\n\n\n/**\n * Data attribute for storing reactive template instantiation id. This\n * id is used to identify which controller should be invoked when an\n * event occurs on elements contained in the template. The id is\n * unique per template instantiation.\n *\n * TODO(chrishenry): We should shorten this name before launching.\n *\n * @const\n * @private\n */\njslayout.reactive.Dispatcher.TEMPLATE_INSTANTIATION_ID_ \x3d \x27data-rtid\x27;\n\n\n/**\n * Attribute used to cache controller instance in the DOM Element.\n * @const\n * @private\n */\njslayout.reactive.Dispatcher.CACHED_CONTROLLER_ATTR_ \x3d \x27__r_ctrl\x27;\n\n\n/**\n * @private {goog.debug.Logger}\n */\njslayout.reactive.Dispatcher.logger_ \x3d goog.log.getLogger(\n    \x27jslayout.reactive.Dispatcher\x27);\n\n\n/**\n * Gets the controller instance given an element with suitable annotation, and\n * an action name.\n *\n * This attempts to retrieve controller instance from 3 locations:\n *  (1) If the element has an EvalContext, it is retrieved from it.\n *  (2) If the element has an instantiation id, controller is retrieved from its\n *      respective jslayout.reactive.Context instance.\n *  (3) If the action name maps to a child controller (via jsname), retrieves\n *      the child controller from the parent controller, as retrieved by (2).\n *\n * @param {Element} element The element.\n * @param {string} actionName The action name (not including \x27r.\x27).\n * @return {?} The controller instance or null if one does not exist.\n * @private\n */\njslayout.reactive.Dispatcher.prototype.getController_ \x3d function(\n    element, actionName) {\n  // A reactive jsaction and its controller is managed by jslayout_js\n  // if we found an EvalContext bound to the element. In this case, we\n  // use the EvalContext to retrieve the controller instance.\n  var evalContext \x3d element[jslayout.Property.REACTIVE_JSACTION_CONTEXT];\n  if (evalContext) {\n    return evalContext.getController();\n  }\n\n  // Otherwise, the controller is instantiated via template metadata\n  // from server-side rendering of the template. In that case, we use\n  // template instantiation id (found in data-rtid attribute) to\n  // retrieve the controller.\n  var controller \x3d\n      element[jslayout.reactive.Dispatcher.CACHED_CONTROLLER_ATTR_];\n  if (controller \x26\x26 !controller.reactiveData__) {\n    // Found a disposed controller. This should not happen, but if it\n    // does, we try to retrieve the controller again.\n    controller \x3d null;\n  }\n\n  if (!controller) {\n    var instantiationId \x3d element.getAttribute(\n        jslayout.reactive.Dispatcher.TEMPLATE_INSTANTIATION_ID_);\n\n    // Retrieves the controller. If the controller isn\x27t found, it may\n    // be a lazy jscontroller, so we attempt to load the pinto module.\n    controller \x3d jslayout.reactive.framework.getControllerInstance(\n        instantiationId, true /* opt_loadPintoModule */);\n\n    if (controller) {\n      element[jslayout.reactive.Dispatcher.CACHED_CONTROLLER_ATTR_] \x3d\n          controller;\n    }\n  }\n\n  if (controller) {\n    // For declarations like jsaction\x3d\x22foo.handleClick()\x22, look up the child\n    // controller instance that we need to dispatch to, instead of using the\n    // parent controller.\n    var controllerPool \x3d controller.reactiveData__.controllerPool;\n    var jsnameKey \x3d controllerPool.getJsnameKey(actionName);\n    if (jsnameKey) {\n      var dom \x3d controller.reactiveData__.dom;\n      goog.asserts.assert(dom,\n          \x27Cannot find parent controller\\\x27s DOM instance for member dispatch.\x27);\n\n      controller \x3d dom.queryForMemberControllerOrNull(jsnameKey);\n    }\n  }\n\n  return controller;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/reactive/dispatcher.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/reactive/module.js";
eval("/**\n * @fileoverview Reactive jslayout module code for GWS.\n * See the design document at: http://goto/reactive-binding.\n */\n\ngoog.provide(\x27gws.reactive.module\x27);\n\ngoog.require(\x27gws.debug.telemetry\x27);\ngoog.require(\x27gws.debug.telemetry.Beacon\x27);\ngoog.require(\x27gws.error\x27);\ngoog.require(\x27gws.jsaction\x27);\ngoog.require(\x27gws.moduleInterface\x27);\ngoog.require(\x27gws.moduleManager\x27);\ngoog.require(\x27jslayout.reactive.Dispatcher\x27);\ngoog.require(\x27jslayout.reactive.framework\x27);\ngoog.require(\x27search.log.jsaction\x27);\n\n\n/**\n * Set to true after first ModuleInterface init call.\n * @private {boolean}\n */\ngws.reactive.module.isInitialized_ \x3d false;\n\n\n/**\n * Configures reactive framework.\n */\ngws.reactive.module.init \x3d function() {\n  if (gws.reactive.module.isInitialized_) {\n    return;\n  }\n  gws.reactive.module.isInitialized_ \x3d true;\n\n  const {getActionLogger} \x3d goog.module.get(\x27search.log.jsaction\x27);\n\n  // This registration call needs to be here because in addition to giving\n  // reactive a pointer to the jsaction dispatcher (which never changes), it\n  // also registers the reactive handlers which get cleaned up in dispose().\n  jslayout.reactive.Dispatcher.register(\n      gws.jsaction.getDispatcher(), getActionLogger());\n\n  jslayout.reactive.framework.setErrorHandler(gws.error.log);\n  jslayout.reactive.framework.setPintoModuleLoader(gws.moduleManager.loadAll);\n  if (gws.debug.telemetry.ENABLED) {\n    var lifecycleCallback \x3d function(type, subtype) {\n      var beacon \x3d new gws.debug.telemetry.Beacon(type, subtype);\n      var telemetryFunction \x3d gws.debug.telemetry.isInteractionRunning(beacon) ?\n          gws.debug.telemetry.endInteraction :\n          gws.debug.telemetry.beginInteraction;\n      telemetryFunction(beacon);\n    };\n    jslayout.reactive.framework.setControllerLifecycleCallback(\n        lifecycleCallback);\n  }\n};\n\n\ngws.moduleInterface.registerAlwaysActivatedScript(\n    \x27r\x27, {[gws.moduleInterface.EventType.INIT]: gws.reactive.module.init});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/reactive/module.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('r');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('r');

}catch(e){_DumpException(e)}
/* _Module_:sy1g */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1g');
var $googDebugFname="javascript/apps/fava/services/serviceid.js";
eval("goog.provide(\x27fava.services.ServiceId\x27);\n\ngoog.require(\x27goog.asserts\x27);\n\n\n/**\n * A templated class that is used to register Fava services. Typical usage:\n * \x3ccode\x3e\n *   /** @type {!fava.services.ServiceId\x3c!sloth.MyService\x3e}\n *   var myServiceId \x3d new fava.services.ServiceId(xid(\x27myService\x27));\n *\n *   // Compiler enforces that these types are correct.\n *   appContext.registerService(myServiceId, new sloth.MyService());\n *   // No need to cast here since the compiler knows the correct type.\n *   var myService \x3d appContext.get(myServiceId);\n * \x3c/code\x3e\n *\n * @param {string} serviceId\n * @param {?string\x3d} opt_moduleId The module that provides the implementation\n *     for this service. If the service is configured via a fava.extension\n *     (deprecated), this will be picked up automatically. If it is not\n *     provided, it is the responsibility of the application to goog.require\n *     the service before first use.\n *     If you provide a module id there is NO need to register the service via\n *     an extension.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @template T\n * @constructor\n * @final\n * @struct\n */\nfava.services.ServiceId \x3d function(\n    serviceId, opt_moduleId, opt_dependencies) {\n  goog.asserts.assert(serviceId, \x27Invalid service id + \x27 + serviceId);\n  if (opt_dependencies \x26\x26 goog.DEBUG) {\n    for (var i \x3d 0; i \x3c opt_dependencies.length; i++) {\n      goog.asserts.assert(opt_dependencies[i],\n          \x27Invalid dependency \x27 + opt_dependencies[i] +\n          \x27 (index in dependency array: \x27 + i + \x27) for service \x27 + serviceId);\n    }\n  }\n  /**\n   * @const\n   * @private\n   */\n  this.serviceId_ \x3d serviceId;\n\n  /**\n   * @private {?string}\n   */\n  this.moduleId_ \x3d opt_moduleId || null;\n\n  /**\n   * Used to make sure the moduleId is never read before it is changed.\n   * @private {boolean}\n   */\n  this.moduleIdWasRead_ \x3d false;\n\n  /**\n   * @private {!Array\x3c!fava.services.ServiceId\x3e}\n   */\n  this.dependencies_ \x3d opt_dependencies || [];\n\n  /**\n   * Used to make sure the dependencies have never been read before it is\n   * changed.\n   * @private {boolean}\n   */\n  this.dependenciesWereRead_ \x3d false;\n};\n\n\n/** @override */\nfava.services.ServiceId.prototype.toString \x3d function() {\n  return this.serviceId_;\n};\n\n\n/**\n * @return {?string}\n */\nfava.services.ServiceId.prototype.getModuleId \x3d function() {\n  if (goog.DEBUG) {\n    this.moduleIdWasRead_ \x3d true;\n  }\n  return this.moduleId_;\n};\n\n\n/**\n * @return {boolean}\n */\nfava.services.ServiceId.prototype.hasModuleId \x3d function() {\n  return !!this.moduleId_;\n};\n\n\n/**\n * @return {!Array\x3c!fava.services.ServiceId\x3e}\n */\nfava.services.ServiceId.prototype.getDependencies \x3d function() {\n  if (goog.DEBUG) {\n    this.dependenciesWereRead_ \x3d true;\n  }\n  return this.dependencies_;\n};\n\n\n/**\n * Allows setting the module id. Use this to configure services  inherited from\n * a dependency. It should only be called from the base module.\n * @param {string} moduleId\n */\nfava.services.ServiceId.prototype.setModuleId \x3d function(moduleId) {\n  goog.asserts.assert(!this.moduleIdWasRead_ || moduleId \x3d\x3d this.moduleId_,\n      \x27The module id cannot be changed after it was read.\x27);\n  this.moduleId_ \x3d moduleId;\n};\n\n\n/**\n * Allows setting the the module dependencies. Use this to configure services\n * inherited from a dependency. It should only be called from the base module.\n * @param {!Array\x3cfava.services.ServiceId\x3e} deps\n */\nfava.services.ServiceId.prototype.setDependencies \x3d function(deps) {\n  goog.asserts.assert(!this.dependenciesWereRead_,\n      \x27The dependencies cannot be changed after they were read.\x27);\n  this.dependencies_ \x3d deps;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/services/serviceid.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/registry/factories.js";
eval("/**\n * @fileoverview Factory functions for creating wiz object type specific\n * {@see fava.services.ServiceId}s. Use these instead of directly\n * instantiating ServiceIds for extra robustness and more readable code.\n */\ngoog.provide(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.provide(\x27wiz.controllerId\x27);\ngoog.provide(\x27wiz.getAllAtInterfaceImplementations\x27);\ngoog.provide(\x27wiz.getAllRegisteredControllerIds\x27);\ngoog.provide(\x27wiz.getLoggingIdForWizService\x27);\ngoog.provide(\x27wiz.interfaceId\x27);\ngoog.provide(\x27wiz.lookupWizService\x27);\ngoog.provide(\x27wiz.lookupWizServiceInternal\x27);\ngoog.provide(\x27wiz.modelId\x27);\ngoog.provide(\x27wiz.objectId\x27);\ngoog.provide(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.provide(\x27wiz.objectIdWithRegistration\x27);\ngoog.provide(\x27wiz.rendererId\x27);\ngoog.provide(\x27wiz.serviceId\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27xid\x27);\ngoog.require(\x27xid.hash\x27);\ngoog.require(\x27xid.integer\x27);\n\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a controller.\n * @param {!xid.String} name\n * @param {string} moduleId The module id from which the controller should be\n *     loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.controllerId \x3d function(name, moduleId, opt_dependencies) {\n  // Extra assert because this would often be forgotten in uncompiled mode.\n  goog.asserts.assert(moduleId, \x27Controllers must specify a moduleId\x27);\n  return wiz.objectIdWithRegistration(name, moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a model.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the model should be\n *     loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.modelId \x3d function(name, opt_moduleId, opt_dependencies) {\n  return wiz.objectIdWithRegistration(name, opt_moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a renderer.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the renderer should\n *     be loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.rendererId \x3d function(name, opt_moduleId, opt_dependencies) {\n  return wiz.objectId(name, opt_moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a service.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the service should\n *     be loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.serviceId \x3d function(name, opt_moduleId, opt_dependencies) {\n  return wiz.objectId(name, opt_moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a Wiz interface.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the service should\n *     be loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     services that need to be loaded, before this service should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.interfaceId \x3d function(name, opt_moduleId, opt_dependencies) {\n  return wiz.objectId(name, opt_moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a service, controller, model,\n * service or renderer.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the object should\n *     be loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     objects that need to be loaded, before this object should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.objectId \x3d function(name, opt_moduleId, opt_dependencies) {\n  xid.assertXidLikeString(name);\n  return new fava.services.ServiceId(name, opt_moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a service, controller, model,\n * service or renderer. The ServiceId is registered so that it can be looked up\n * by name. This assumes that the name is equivalent to the module id in\n * production.\n * {@see wiz.objectId}.\n * @param {!xid.String} name\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     objects that need to be loaded, before this object should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.objectIdWithAutoRegistration \x3d function(name, opt_dependencies) {\n  var moduleId \x3d xid.isObfuscating() ? name : xid.hash.toHashIfNecessary(name);\n  return wiz.objectIdWithRegistration(name, moduleId, opt_dependencies);\n};\n\n\n/**\n * Creates a {@see fava.services.ServiceId} for a service, controller, model,\n * service or renderer. The ServiceId is registered so that it can be looked up\n * by name. Note: exposing objects causes additional payload in the initial page\n * download. This method should generally be used to get ServiceIds for\n * controllers and models. For registering services and renderers,\n * {@see wiz.objectId}.\n * @param {!xid.String} name\n * @param {?string\x3d} opt_moduleId The module id from which the object should\n *     be loaded.\n * @param {!Array\x3c!fava.services.ServiceId\x3e\x3d} opt_dependencies An array of\n *     objects that need to be loaded, before this object should be made\n *     available.\n * @return {!fava.services.ServiceId}\n */\nwiz.objectIdWithRegistration \x3d function(name, opt_moduleId, opt_dependencies) {\n  var id \x3d wiz.objectId(name, opt_moduleId, opt_dependencies);\n  wiz.exposeWizService_(name, id);\n  return id;\n};\n\n\n/**\n * Registers a ServiceId as implementing an atInterface.\n * @param {!fava.services.ServiceId} serviceId for the implementing class.\n * @param {!xid.String} interfaceName The xid()ed fully-qualified typename of an\n *     interface which may or may not be an atInterface.\n */\nwiz.addPossibleAtInterfaceImplementation \x3d function(serviceId, interfaceName) {\n  wiz.getAllAtInterfaceImplementations(interfaceName).push(serviceId);\n};\n\n\n/**\n * @param {!fava.services.ServiceId|!xid.String} interfaceId A serviceId, or xid\n *     name, for an atInterface.\n * @return {!Array\x3c!fava.services.ServiceId\x3e} All services in the moduleset that\n *     implement the atInterface.  Mutate with caution.\n * @package\n */\nwiz.getAllAtInterfaceImplementations \x3d function(interfaceId) {\n  var id \x3d interfaceId.toString();\n  return wiz.interfaceMap_[id] \x3d wiz.interfaceMap_[id] || [];\n};\n\n\n/**\n * A map from xided names of potential atInterfaces to ServiceId which implement\n * them.  This is populated via ManifestGenerator, which cannot know which names\n * are actually atInterfaces.  Entries for non-atInterfaces are ignored.\n * objects.\n * @private @const {!Object\x3cstring, !Array\x3c!fava.services.ServiceId\x3c?\x3e\x3e\x3e}\n */\nwiz.interfaceMap_ \x3d {};\n\n\n/**\n * A map from service id string identifiers to the ServiceId\n * objects.\n * @private {!Object\x3cstring,!fava.services.ServiceId\x3c?\x3e\x3e}\n * @const\n */\nwiz.serviceMap_ \x3d {};\n\n\n/**\n * Looks up wiz service ids by id string. All controllers and models can be\n * looked up using the an id string. Since services and rendererers are\n * infrequently looked up by id, they require a @wizSupportsSymbolicLookup\n * annotation in the file where the renderer or service is declared in order to\n * support lookup. This adds a small amount of initial payload to map from the\n * id string to the service id.\n * @param {string} idString\n * @return {!fava.services.ServiceId\x3c?\x3e}\n */\nwiz.lookupWizService \x3d function(idString) {\n  let error \x3d \x27Error: Cannot find a service, renderer, model or controller \x27 +\n      \x27corresponding to \x27 + idString + \x27. Make sure that module is included \x27 +\n      \x27in the appropriate module set.\\n\\n\x27 +\n      \x27If this is a unit test, this means the defining wizids.js is not \x27 +\n      `included in the test. You should add goog.require(\x27your.ns.testdeps\x27).` +\n      \x27\\nSee go/wiz-testdeps\x27;\n  return goog.asserts.assert(wiz.lookupWizServiceInternal(idString), error);\n};\n\n\n/**\n * This function should only be called from the wiz dispatcher.\n * @param {string} idString\n * @return {!fava.services.ServiceId\x3c?\x3e|undefined}\n * @see {wiz.lookupWizService}\n */\nwiz.lookupWizServiceInternal \x3d function(idString) {\n  return wiz.serviceMap_[idString];\n};\n\n\n/**\n * A map from service id string identifiers to the logging ID for the controller\n * if it was registered with a logging ID.\n * @private {!Object\x3cstring,number|string\x3e}\n * @const\n */\nwiz.wizServiceLoggingMap_ \x3d {};\n\n\n/**\n * Looks up the logging ID for a service by ID string.\n * This function should only be called from the wiz dispatcher.\n * @param {string} idString\n * @return {number|undefined}\n */\nwiz.getLoggingIdForWizService \x3d function(idString) {\n  var id \x3d wiz.wizServiceLoggingMap_[idString];\n  if (typeof id \x3d\x3d \x27string\x27) {\n    return xid.integer.toInteger(id);\n  }\n  return id;\n};\n\n\n/**\n * @return {!Array\x3c!fava.services.ServiceId\x3c?\x3e\x3e}\n */\nwiz.getAllRegisteredControllerIds \x3d function() {\n  return goog.object.getValues(wiz.serviceMap_);\n};\n\n\n/**\n * Make the Wiz service be retrievable using an id representation of the string.\n * @param {string} idString\n * @param {!fava.services.ServiceId} serviceId\n * @private\n */\nwiz.exposeWizService_ \x3d function(idString, serviceId) {\n  // Register with global map.\n  goog.asserts.assert(!wiz.serviceMap_[idString],\n      \x27Another wiz service is already exposed under the same name: \x3c\x27 +\n      idString + \x27\x3e\x27);\n  wiz.serviceMap_[idString] \x3d serviceId;\n  wiz.wizServiceLoggingMap_[idString] \x3d\n      xid.hash.toHashIfNecessary(String(serviceId));\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/registry/factories.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1g');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1g');

}catch(e){_DumpException(e)}
/* _Module_:sy1i */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1i');
var $googDebugFname="javascript/apps/fava/services/services.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview\n * This file contains the constant names of services provided in fava.\n * Developers wanting to use a fava service can goog.require this file and ask\n * for it by name instead of goog.requiring the relevant service and calling the\n * static get method.\n *\n * New fava services should put their names in this file as a convenience.\n * Services that are not defined in fava should not be in this file.\n *\n * This is *not* an exhaustive list of services that are provided on the\n * AppContext.\n *\n * @author mpd@google.com (Michael Davidson)\n */\n\ngoog.provide(\x27fava.services\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27xid\x27);\ngoog.require(\x27xid.hash\x27);\n\ngoog.forwardDeclare(\x27fava.app.AppLifetimeService\x27);\ngoog.forwardDeclare(\x27fava.app.DragDropService\x27);\ngoog.forwardDeclare(\x27fava.app.NavBarService\x27);\ngoog.forwardDeclare(\x27fava.app.NotificationService\x27);\ngoog.forwardDeclare(\x27fava.app.TitleBar\x27);\ngoog.forwardDeclare(\x27fava.app.UserActionService\x27);\ngoog.forwardDeclare(\x27fava.app.WindowWidget\x27);\ngoog.forwardDeclare(\x27fava.base.AsyncOperationServices\x27);\ngoog.forwardDeclare(\x27fava.base.Scheduler\x27);\ngoog.forwardDeclare(\x27fava.browser.ExportService\x27);\ngoog.forwardDeclare(\x27fava.browser.IeCutCopyHandler\x27);\ngoog.forwardDeclare(\x27fava.browser.KeyboardShortcutHandler\x27);\ngoog.forwardDeclare(\x27fava.browser.KeyboardShortcutRegistry\x27);\ngoog.forwardDeclare(\x27fava.browser.ViewportServices\x27);\ngoog.forwardDeclare(\x27fava.browser.WindowOpenerUtil\x27);\ngoog.forwardDeclare(\x27fava.browser.WindowService\x27);\ngoog.forwardDeclare(\x27fava.canvas.CanvasConfiguration\x27);\ngoog.forwardDeclare(\x27fava.canvas.CanvasService\x27);\ngoog.forwardDeclare(\x27fava.component.DomServices\x27);\ngoog.forwardDeclare(\x27fava.controls.RelativeDateControl\x27);\ngoog.forwardDeclare(\x27fava.controls.Toast\x27);\ngoog.forwardDeclare(\x27fava.controls.help.HelpOverlayService\x27);\ngoog.forwardDeclare(\x27fava.controls.mole.MoleManager\x27);\ngoog.forwardDeclare(\x27fava.data.DataServices\x27);\ngoog.forwardDeclare(\x27fava.data.DataStoreUpdaterService\x27);\ngoog.forwardDeclare(\x27fava.debug.DeobfuscationService\x27);\ngoog.forwardDeclare(\x27fava.diagnostics.CsiService\x27);\ngoog.forwardDeclare(\x27fava.diagnostics.Diagnostics\x27);\ngoog.forwardDeclare(\x27fava.diagnostics.Impressions\x27);\ngoog.forwardDeclare(\x27fava.diagnostics.ViewDiagnostics\x27);\ngoog.forwardDeclare(\x27fava.dom.SoyRenderer\x27);\ngoog.forwardDeclare(\x27fava.dom.SoyRendererConfig\x27);\ngoog.forwardDeclare(\x27fava.gbar.GbarService\x27);\ngoog.forwardDeclare(\x27fava.gloader.GoogleLoaderService\x27);\ngoog.forwardDeclare(\x27fava.identity.IdentityService\x27);\ngoog.forwardDeclare(\x27fava.layout.FixedLayoutHelper\x27);\ngoog.forwardDeclare(\x27fava.locale.DateTimeFormatService\x27);\ngoog.forwardDeclare(\x27fava.modules.PrefetchService\x27);\ngoog.forwardDeclare(\x27fava.net.BrowserChannelServices\x27);\ngoog.forwardDeclare(\x27fava.net.NetworkDiagnosticsService\x27);\ngoog.forwardDeclare(\x27fava.net.OfflineServices\x27);\ngoog.forwardDeclare(\x27fava.net.ServerErrorService\x27);\ngoog.forwardDeclare(\x27fava.request.OauthService\x27);\ngoog.forwardDeclare(\x27fava.request.RequestService\x27);\ngoog.forwardDeclare(\x27fava.request.XsrfService\x27);\ngoog.forwardDeclare(\x27fava.view.HistoryInterface\x27);\ngoog.forwardDeclare(\x27fava.view.HistoryManager\x27);\ngoog.forwardDeclare(\x27fava.view.HistoryRegistry\x27);\ngoog.forwardDeclare(\x27fava.view.NavigationServices\x27);\ngoog.forwardDeclare(\x27fava.view.ViewManagerInterface\x27);\ngoog.forwardDeclare(\x27fava.view.ViewRegistry\x27);\ngoog.forwardDeclare(\x27goog.ui.ActivityMonitor\x27);\n\n/**\n * Counter to create unique service names.\n * @type {number}\n * @private\n */\nfava.services.uniqueIdCounter_ \x3d 0;\n\n\n/**\n * This function creates a unique name every time it\x27s called. It\x27s meant to be\n * replaced with a JSCompiler pass that will shorten the names.\n *\n * NOTE: This method name is referenced in PintoOptionsGenerator.java and in\n * fava/builddefs/BUILD. If you rename this method, please change those\n * references as well.\n *\n * @param {string} name The name of the service.\n * @return {string} A unique identifier.\n * @idGenerator {unique}\n */\nfava.services.getUniqueId \x3d function(name) {\n  return name + fava.services.uniqueIdCounter_++;\n};\n\n\n/**\n * Service that provides access to an ActivityMonitor.\n * @type {!fava.services.ServiceId\x3c!goog.ui.ActivityMonitor\x3e}\n */\nfava.services.ACTIVITY_MONITOR \x3d new fava.services.ServiceId(\n    xid(\x27goog.ui.ActivityMonitor\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.app.AppLifetimeService\x3e}\n */\nfava.services.APP_LIFETIME \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.AppLifetimeService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.base.AsyncOperationServices\x3e}\n */\nfava.services.ASYNC_OPERATIONS \x3d new fava.services.ServiceId(\n    xid(\x27fava.base.AsyncOperationServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.net.BrowserChannelServices\x3e}\n */\nfava.services.BROWSER_CHANNEL \x3d new fava.services.ServiceId(\n    xid(\x27fava.net.BrowserChannelServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.canvas.CanvasService\x3e}\n */\nfava.services.CANVAS \x3d new fava.services.ServiceId(\n    xid(\x27fava.canvas.CanvasService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.canvas.CanvasConfiguration\x3e}\n */\nfava.services.CANVAS_CONFIGURATION \x3d new fava.services.ServiceId(\n    xid(\x27fava.canvas.CanvasConfiguration\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.diagnostics.CsiService\x3e}\n */\nfava.services.CSI \x3d new fava.services.ServiceId(\n    xid(\x27fava.diagnostics.CsiService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.data.DataServices\x3e}\n */\nfava.services.DATA \x3d new fava.services.ServiceId(\n    xid(\x27fava.data.DataServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.data.DataStoreUpdaterService\x3e}\n */\nfava.services.DATASTORE_UPDATER \x3d new fava.services.ServiceId(\n    xid(\x27fava.data.DataStoreUpdaterService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.locale.DateTimeFormatService\x3e}\n */\nfava.services.DATE_TIME_FORMATTER \x3d new fava.services.ServiceId(\n    xid(\x27fava.locale.DateTimeFormatService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.debug.DeobfuscationService\x3e}\n */\nfava.services.DEOBFUSCATION \x3d new fava.services.ServiceId(\n    xid(\x27fava.debug.DeobfuscationService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.diagnostics.Diagnostics\x3e}\n */\nfava.services.DIAGNOSTICS \x3d new fava.services.ServiceId(\n    xid(\x27fava.diagnostics.Diagnostics\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.component.DomServices\x3e}\n */\nfava.services.DOM \x3d new fava.services.ServiceId(\n    xid(\x27fava.component.DomServices\x27));\n\n/**\n * Provides access to the DragDropService.\n * @type {!fava.services.ServiceId\x3c!fava.app.DragDropService\x3e}\n */\nfava.services.DRAG_DROP \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.DragDropService\x27));\n\n// TODO(mknichel): Move this out of Fava.\n/**\n * @see features.ConditionalFeatures\n * @type {string}\n */\nfava.services.CONDITIONAL_FEATURES \x3d xid(\x27features.ConditionalFeatures\x27);\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.ExportService\x3e}\n */\nfava.services.EXPORT_SERVICE \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.ExportService\x27));\n\n/**\n * Service for helping the browser do a fixed layout.\n * @type {!fava.services.ServiceId\x3c!fava.layout.FixedLayoutHelper\x3e}\n */\nfava.services.FIXED_LAYOUT_HELPER \x3d new fava.services.ServiceId(\n    xid(\x27fava.layout.FixedLayoutHelper\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.gbar.GbarService\x3e}\n */\nfava.services.GBAR \x3d new fava.services.ServiceId(\n    xid(\x27fava.gbar.GbarService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.gloader.GoogleLoaderService\x3e}\n */\nfava.services.GLOADER \x3d new fava.services.ServiceId(\n    xid(\x27fava.gloader.GoogleLoaderService\x27),\n    xid.hash.toHashIfNecessary(xid(\x27fava.gloader.GoogleLoaderService\x27)));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.controls.help.HelpOverlayService\x3e}\n */\nfava.services.HELP_OVERLAY \x3d new fava.services.ServiceId(\n    xid(\x27fava.controls.help.HelpOverlayService\x27));\n\n/**\n * An instance of goog.History. This service is needed for\n * @type {!fava.services.ServiceId\x3c!fava.view.HistoryInterface\x3e}\n */\nfava.services.HISTORY \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.HistoryInterface\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.view.HistoryManager\x3e}\n */\nfava.services.HISTORY_MANAGER \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.HistoryManager\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.view.HistoryRegistry\x3e}\n */\nfava.services.HISTORY_REGISTRY \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.HistoryRegistry\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.identity.IdentityService\x3e}\n */\nfava.services.IDENTITY \x3d new fava.services.ServiceId(\n    xid(\x27fava.identity.IdentityService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.IeCutCopyHandler\x3e}\n */\nfava.services.IE_CUT_COPY \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.IeCutCopyHandle\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.diagnostics.Impressions\x3e}\n */\nfava.services.IMPRESSIONS \x3d new fava.services.ServiceId(\n    xid(\x27fava.diagnostics.Impressions\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.KeyboardShortcutHandler\x3e}\n */\nfava.services.KEYBOARD_SHORTCUT_HANDLER \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.KeyboardShortcutHandler\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.KeyboardShortcutRegistry\x3e}\n */\nfava.services.KEYBOARD_SHORTCUT_REGISTRY \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.KeyboardShortcutRegistry\x27));\n\n/**\n * Service for widgets that live in a mole (chat, Tasks, search, etc.).\n * This service is useful to clients only to provide access to the mole manager\n * on the main appContext.\n * @see fava.controls.mole.MoleService, pinto.mole.MoleService\n * @type {string}\n */\nfava.services.MOLE \x3d xid(\x27fava.controls.mole.MoleService\x27);\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.controls.mole.MoleManager\x3e}\n */\nfava.services.MOLE_MANAGER \x3d new fava.services.ServiceId(\n    xid(\x27fava.controls.mole.MoleManager\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.app.NavBarService\x3e}\n */\nfava.services.NAVBAR \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.NavBarService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.view.NavigationServices\x3e}\n */\nfava.services.NAVIGATION \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.NavigationServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.net.NetworkDiagnosticsService\x3e}\n */\nfava.services.NETWORK_DIAGNOSTICS \x3d new fava.services.ServiceId(\n    xid(\x27fava.net.NetworkDiagnosticsService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.app.NotificationService\x3e}\n */\nfava.services.NOTIFICATION \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.NotificationService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.request.OauthService\x3e}\n */\nfava.services.OAUTH \x3d new fava.services.ServiceId(\n    xid(\x27fava.request.OauthService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.net.OfflineServices\x3e}\n */\nfava.services.OFFLINE \x3d new fava.services.ServiceId(\n    xid(\x27fava.net.OfflineServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.modules.PrefetchService\x3e}\n */\nfava.services.PREFETCH \x3d new fava.services.ServiceId(\n    xid(\x27fava.modules.PrefetchService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.controls.RelativeDateControl\x3e}\n */\nfava.services.RELATIVE_DATE_CONTROLLER \x3d new fava.services.ServiceId(\n    xid(\x27fava.controls.RelativeDateControl\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.request.RequestService\x3e}\n */\nfava.services.REQUEST \x3d new fava.services.ServiceId(\n    xid(\x27fava.request.RequestService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.base.Scheduler\x3e}\n */\nfava.services.SCHEDULER \x3d new fava.services.ServiceId(\n    xid(\x27fava.base.Scheduler\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.net.ServerErrorService\x3e}\n */\nfava.services.SERVER_ERRORS \x3d new fava.services.ServiceId(\n    xid(\x27fava.net.ServerErrorService\x27));\n\n/**\n * Provides access to the SoyRenderer.\n * @type {!fava.services.ServiceId\x3c!fava.dom.SoyRenderer\x3e}\n */\nfava.services.SOY_RENDERER \x3d new fava.services.ServiceId(\n    xid(\x27fava.dom.SoyRenderer\x27));\n\n/**\n * Provides access to the SoyRendererConfig.\n * @type {!fava.services.ServiceId\x3c!fava.dom.SoyRendererConfig\x3e}\n */\nfava.services.SOY_RENDERER_CONFIG \x3d new fava.services.ServiceId(\n    xid(\x27fava.dom.SoyRendererConfig\x27));\n\n/**\n * Provides access to TitleBar as a service.\n * @type {!fava.services.ServiceId\x3c!fava.app.TitleBar\x3e}\n */\nfava.services.TITLE_BAR \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.TitleBar\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.controls.Toast\x3e}\n */\nfava.services.TOAST_NOTIFIER \x3d new fava.services.ServiceId(\n    xid(\x27fava.controls.Toast\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.app.UserActionService\x3e}\n */\nfava.services.USER_ACTION \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.UserActionService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.ViewportServices\x3e}\n */\nfava.services.VIEWPORT \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.ViewportServices\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.diagnostics.ViewDiagnostics\x3e}\n */\nfava.services.VIEW_DIAGNOSTICS \x3d new fava.services.ServiceId(\n    xid(\x27fava.diagnostics.ViewDiagnostics\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.view.ViewManagerInterface\x3e}\n */\nfava.services.VIEW_MANAGER \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.ViewManagerInterface\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.view.ViewRegistry\x3e}\n */\nfava.services.VIEW_REGISTRY \x3d new fava.services.ServiceId(\n    xid(\x27fava.view.ViewRegistry\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.WindowService\x3e}\n */\nfava.services.WINDOW \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.WindowService\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.browser.WindowOpenerUtil\x3e}\n */\nfava.services.WINDOW_OPENER_UTIL \x3d new fava.services.ServiceId(\n    xid(\x27fava.browser.WindowOpenerUtil\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.app.WindowWidget\x3e}\n */\nfava.services.WINDOW_WIDGET \x3d new fava.services.ServiceId(\n    xid(\x27fava.app.WindowWidget\x27));\n\n/**\n * @type {!fava.services.ServiceId\x3c!fava.request.XsrfService\x3e}\n */\nfava.services.XSRF \x3d new fava.services.ServiceId(\n    xid(\x27fava.request.XsrfService\x27));\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/services/services.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1i');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1i');

}catch(e){_DumpException(e)}
/* _Module_:sy2d */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2d');
var $googDebugFname="javascript/closure/dom/classlist.js";
eval("// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for detecting, adding and removing classes.  Prefer\n * this over goog.dom.classes for new code since it attempts to use classList\n * (DOMTokenList: http://dom.spec.whatwg.org/#domtokenlist) which is faster\n * and requires less code.\n *\n * Note: these utilities are meant to operate on HTMLElements\n * and may have unexpected behavior on elements with differing interfaces\n * (such as SVGElements).\n */\n\n\ngoog.provide(\x27goog.dom.classlist\x27);\n\ngoog.require(\x27goog.array\x27);\n\n\n/**\n * Override this define at build-time if you know your target supports it.\n * @define {boolean} Whether to use the classList property (DOMTokenList).\n */\ngoog.define(\x27goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST\x27, false);\n\n\n/**\n * Gets an array-like object of class names on an element.\n * @param {Element} element DOM node to get the classes of.\n * @return {!IArrayLike\x3c?\x3e} Class names on `element`.\n */\ngoog.dom.classlist.get \x3d function(element) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    return element.classList;\n  }\n\n  var className \x3d element.className;\n  // Some types of elements don\x27t have a className in IE (e.g. iframes).\n  // Furthermore, in Firefox, className is not a string when the element is\n  // an SVG element.\n  return goog.isString(className) \x26\x26 className.match(/\\S+/g) || [];\n};\n\n\n/**\n * Sets the entire class name of an element.\n * @param {Element} element DOM node to set class of.\n * @param {string} className Class name(s) to apply to element.\n */\ngoog.dom.classlist.set \x3d function(element, className) {\n  element.className \x3d className;\n};\n\n\n/**\n * Returns true if an element has a class.  This method may throw a DOM\n * exception for an invalid or empty class name if DOMTokenList is used.\n * @param {Element} element DOM node to test.\n * @param {string} className Class name to test for.\n * @return {boolean} Whether element has the class.\n */\ngoog.dom.classlist.contains \x3d function(element, className) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    return element.classList.contains(className);\n  }\n  return goog.array.contains(goog.dom.classlist.get(element), className);\n};\n\n\n/**\n * Adds a class to an element.  Does not add multiples of class names.  This\n * method may throw a DOM exception for an invalid or empty class name if\n * DOMTokenList is used.\n * @param {Element} element DOM node to add class to.\n * @param {string} className Class name to add.\n */\ngoog.dom.classlist.add \x3d function(element, className) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    element.classList.add(className);\n    return;\n  }\n\n  if (!goog.dom.classlist.contains(element, className)) {\n    // Ensure we add a space if this is not the first class name added.\n    element.className +\x3d\n        element.className.length \x3e 0 ? (\x27 \x27 + className) : className;\n  }\n};\n\n\n/**\n * Convenience method to add a number of class names at once.\n * @param {Element} element The element to which to add classes.\n * @param {IArrayLike\x3cstring\x3e} classesToAdd An array-like object\n * containing a collection of class names to add to the element.\n * This method may throw a DOM exception if classesToAdd contains invalid\n * or empty class names.\n */\ngoog.dom.classlist.addAll \x3d function(element, classesToAdd) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    goog.array.forEach(classesToAdd, function(className) {\n      goog.dom.classlist.add(element, className);\n    });\n    return;\n  }\n\n  var classMap \x3d {};\n\n  // Get all current class names into a map.\n  goog.array.forEach(goog.dom.classlist.get(element), function(className) {\n    classMap[className] \x3d true;\n  });\n\n  // Add new class names to the map.\n  goog.array.forEach(\n      classesToAdd, function(className) { classMap[className] \x3d true; });\n\n  // Flatten the keys of the map into the className.\n  element.className \x3d \x27\x27;\n  for (var className in classMap) {\n    element.className +\x3d\n        element.className.length \x3e 0 ? (\x27 \x27 + className) : className;\n  }\n};\n\n\n/**\n * Removes a class from an element.  This method may throw a DOM exception\n * for an invalid or empty class name if DOMTokenList is used.\n * @param {Element} element DOM node to remove class from.\n * @param {string} className Class name to remove.\n */\ngoog.dom.classlist.remove \x3d function(element, className) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    element.classList.remove(className);\n    return;\n  }\n\n  if (goog.dom.classlist.contains(element, className)) {\n    // Filter out the class name.\n    element.className \x3d goog.array\n                            .filter(\n                                goog.dom.classlist.get(element),\n                                function(c) { return c !\x3d className; })\n                            .join(\x27 \x27);\n  }\n};\n\n\n/**\n * Removes a set of classes from an element.  Prefer this call to\n * repeatedly calling `goog.dom.classlist.remove` if you want to remove\n * a large set of class names at once.\n * @param {Element} element The element from which to remove classes.\n * @param {IArrayLike\x3cstring\x3e} classesToRemove An array-like object\n * containing a collection of class names to remove from the element.\n * This method may throw a DOM exception if classesToRemove contains invalid\n * or empty class names.\n */\ngoog.dom.classlist.removeAll \x3d function(element, classesToRemove) {\n  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {\n    goog.array.forEach(classesToRemove, function(className) {\n      goog.dom.classlist.remove(element, className);\n    });\n    return;\n  }\n  // Filter out those classes in classesToRemove.\n  element.className \x3d\n      goog.array\n          .filter(\n              goog.dom.classlist.get(element),\n              function(className) {\n                // If this class is not one we are trying to remove,\n                // add it to the array of new class names.\n                return !goog.array.contains(classesToRemove, className);\n              })\n          .join(\x27 \x27);\n};\n\n\n/**\n * Adds or removes a class depending on the enabled argument.  This method\n * may throw a DOM exception for an invalid or empty class name if DOMTokenList\n * is used.\n * @param {Element} element DOM node to add or remove the class on.\n * @param {string} className Class name to add or remove.\n * @param {boolean} enabled Whether to add or remove the class (true adds,\n *     false removes).\n */\ngoog.dom.classlist.enable \x3d function(element, className, enabled) {\n  if (enabled) {\n    goog.dom.classlist.add(element, className);\n  } else {\n    goog.dom.classlist.remove(element, className);\n  }\n};\n\n\n/**\n * Adds or removes a set of classes depending on the enabled argument.  This\n * method may throw a DOM exception for an invalid or empty class name if\n * DOMTokenList is used.\n * @param {!Element} element DOM node to add or remove the class on.\n * @param {?IArrayLike\x3cstring\x3e} classesToEnable An array-like object\n *     containing a collection of class names to add or remove from the element.\n * @param {boolean} enabled Whether to add or remove the classes (true adds,\n *     false removes).\n */\ngoog.dom.classlist.enableAll \x3d function(element, classesToEnable, enabled) {\n  var f \x3d enabled ? goog.dom.classlist.addAll : goog.dom.classlist.removeAll;\n  f(element, classesToEnable);\n};\n\n\n/**\n * Switches a class on an element from one to another without disturbing other\n * classes. If the fromClass isn\x27t removed, the toClass won\x27t be added.  This\n * method may throw a DOM exception if the class names are empty or invalid.\n * @param {Element} element DOM node to swap classes on.\n * @param {string} fromClass Class to remove.\n * @param {string} toClass Class to add.\n * @return {boolean} Whether classes were switched.\n */\ngoog.dom.classlist.swap \x3d function(element, fromClass, toClass) {\n  if (goog.dom.classlist.contains(element, fromClass)) {\n    goog.dom.classlist.remove(element, fromClass);\n    goog.dom.classlist.add(element, toClass);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes a class if an element has it, and adds it the element doesn\x27t have\n * it.  Won\x27t affect other classes on the node.  This method may throw a DOM\n * exception if the class name is empty or invalid.\n * @param {Element} element DOM node to toggle class on.\n * @param {string} className Class to toggle.\n * @return {boolean} True if class was added, false if it was removed\n *     (in other words, whether element has the class after this function has\n *     been called).\n */\ngoog.dom.classlist.toggle \x3d function(element, className) {\n  var add \x3d !goog.dom.classlist.contains(element, className);\n  goog.dom.classlist.enable(element, className, add);\n  return add;\n};\n\n\n/**\n * Adds and removes a class of an element.  Unlike\n * {@link goog.dom.classlist.swap}, this method adds the classToAdd regardless\n * of whether the classToRemove was present and had been removed.  This method\n * may throw a DOM exception if the class names are empty or invalid.\n *\n * @param {Element} element DOM node to swap classes on.\n * @param {string} classToRemove Class to remove.\n * @param {string} classToAdd Class to add.\n */\ngoog.dom.classlist.addRemove \x3d function(element, classToRemove, classToAdd) {\n  goog.dom.classlist.remove(element, classToRemove);\n  goog.dom.classlist.add(element, classToAdd);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/dom/classlist.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2d');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2d');

}catch(e){_DumpException(e)}
/* _Module_:sy2u */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2u');
var $googDebugFname="javascript/apps/fava/services/resolvedependencies.js";
eval("goog.provide(\x27fava.services.resolveDependencies\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\n\n\n\n/**\n * Resolves the service dependencies of a list of services and returns the\n * services and modules in dependency order. If any of the recursive deps\n * have not been converted to service ids, the returned list of modules\n * may be incomplete.\n * @param {!Array\x3c!fava.services.ServiceId|string\x3e} services\n * @return {{\n *     services: !Array\x3c!fava.services.ServiceId|string\x3e,\n *     modules: !Array\x3cstring\x3e\n * }}\n */\nfava.services.resolveDependencies \x3d function(services) {\n  var isDepOf \x3d {};\n  var requires \x3d {};\n  var leafServices \x3d [];\n  var servicesInDependencyOrder \x3d [];\n\n  // Find all the services we care about and build a dependency graph.\n  /** @param {!fava.services.ServiceId|string} service */\n  var recurse \x3d function(service) {\n    if (requires[service]) {\n      return;\n    }\n    // A recursive dependency might be a string service. Those cannot\n    // have service dependencies.\n    var deps \x3d service instanceof fava.services.ServiceId ?\n        service.getDependencies() : [];\n    requires[service] \x3d goog.array.clone(deps);\n    goog.array.forEach(deps, function(dep) {\n      isDepOf[dep] \x3d isDepOf[dep] || [];\n      isDepOf[dep].push(service);\n    });\n    if (!deps.length) {\n      leafServices.push(service);\n    }\n    goog.array.forEach(deps, recurse);\n  };\n  goog.array.forEach(services, recurse);\n\n  // Do a topological sort.\n  while (leafServices.length) {\n    var leaf \x3d leafServices.shift();\n    servicesInDependencyOrder.push(leaf);\n    var requiresLeaf \x3d isDepOf[leaf];\n    if (!requiresLeaf) {\n      continue;\n    }\n    goog.array.forEach(isDepOf[leaf], function(service) {\n      goog.array.remove(requires[service], leaf);\n      if (!requires[service].length) {\n        leafServices.push(service);\n      }\n    });\n  }\n\n  // NOTE: At this point all dependencies of each service should be removed from\n  // requires[service] and put into servicesInDependencyOrder. Every value in\n  // requires should be an empty list. Anything left in requires would indicate\n  // that some dependencies were not resolved properly, e.g. due to a dependency\n  // cycle.\n  goog.asserts.assert(!goog.object.some(requires, function(require) {\n    return require.length \x3e 0;\n  }), \x27Some dependencies were not resolved properly.\x27 +\n      \x27This can be caused by a dependency cycle.\x27);\n\n  // Extract unique non-null modules from services.\n  var seen \x3d {};\n  var modules \x3d [];\n  goog.array.forEach(servicesInDependencyOrder, function(service) {\n    if (!(service instanceof fava.services.ServiceId)) {\n      return;\n    }\n    var module \x3d service.getModuleId();\n    if (module !\x3d null) {\n      if (seen[module]) {\n        return;\n      }\n      seen[module] \x3d true;\n      modules.push(module);\n    }\n  });\n  return {\n    services: servicesInDependencyOrder,\n    modules: modules\n  };\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/services/resolvedependencies.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/inject/observer.js";
eval("goog.provide(\x27wiz.inject.Observer\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\n\n\n/**\n * Observer that is called on interesting transitions within the wiz injector.\n * @interface\n */\nwiz.inject.Observer \x3d function() {};\n\n\n/**\n * Called when a service that was cached in the injector was requested and\n * served.\n * @param {!fava.services.ServiceId} key\n */\nwiz.inject.Observer.prototype.onInjectCached \x3d function(key) {};\n\n\n/**\n * Called when a service was requested from the server.\n * @param {!fava.services.ServiceId} key\n */\nwiz.inject.Observer.prototype.onInjectFetchStart \x3d function(key) {};\n\n\n/**\n * Called when the wiz injector finished downloading the service from the\n * server.\n * @param {!fava.services.ServiceId} key\n */\nwiz.inject.Observer.prototype.onInjectFetchEnd \x3d function(key) {};\n\n\n/**\n * Called when the wiz injector failed to find the service implementation.\n * @param {!fava.services.ServiceId} key\n */\nwiz.inject.Observer.prototype.onInjectFetchError \x3d function(key) {};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/inject/observer.js\n");

$googDebugFname=undefined;
var $googDebugFname="third_party/javascript/closure/mochikit/async/deferredlist.js";
eval("// Copyright 2005 Bob Ippolito. All Rights Reserved.\n// Modifications Copyright 2009 The Closure Library Authors.\n// All Rights Reserved.\n\n/**\n * Portions of this code are from MochiKit, received by The Closure\n * Library Authors under the MIT license. All other code is Copyright\n * 2005-2009 The Closure Library Authors. All Rights Reserved.\n */\n\n/**\n * @fileoverview Class for tracking multiple asynchronous operations and\n * handling the results. The DeferredList object here is patterned after the\n * DeferredList object in the Twisted python networking framework.\n *\n * Based on the MochiKit code.\n *\n * See: http://twistedmatrix.com/projects/core/documentation/howto/defer.html\n *\n * @author brenneman@google.com (Shawn Brenneman)\n */\n\ngoog.provide(\x27goog.async.DeferredList\x27);\n\ngoog.require(\x27goog.async.Deferred\x27);\n\n\n\n/**\n * Constructs an object that waits on the results of multiple asynchronous\n * operations and marshals the results. It is itself a \x3ccode\x3eDeferred\x3c/code\x3e,\n * and may have an execution sequence of callback functions added to it. Each\n * \x3ccode\x3eDeferredList\x3c/code\x3e instance is single use and may be fired only once.\n *\n * The default behavior of a \x3ccode\x3eDeferredList\x3c/code\x3e is to wait for a success\n * or error result from every \x3ccode\x3eDeferred\x3c/code\x3e in its input list. Once\n * every result is available, the \x3ccode\x3eDeferredList\x3c/code\x3e\x27s execution sequence\n * is fired with a list of \x3ccode\x3e[success, result]\x3c/code\x3e array pairs, where\n * \x3ccode\x3esuccess\x3c/code\x3e is a boolean indicating whether \x3ccode\x3eresult\x3c/code\x3e was\n * the product of a callback or errback. The list\x27s completion criteria and\n * result list may be modified by setting one or more of the boolean options\n * documented below.\n *\n * \x3ccode\x3eDeferred\x3c/code\x3e instances passed into a \x3ccode\x3eDeferredList\x3c/code\x3e are\n * independent, and may have additional callbacks and errbacks added to their\n * execution sequences after they are passed as inputs to the list.\n *\n * @param {!Array\x3c!goog.async.Deferred\x3e} list An array of deferred results to\n *     wait for.\n * @param {boolean\x3d} opt_fireOnOneCallback Whether to stop waiting as soon as\n *     one input completes successfully. In this case, the\n *     \x3ccode\x3eDeferredList\x3c/code\x3e\x27s callback chain will be called with a two\n *     element array, \x3ccode\x3e[index, result]\x3c/code\x3e, where \x3ccode\x3eindex\x3c/code\x3e\n *     identifies which input \x3ccode\x3eDeferred\x3c/code\x3e produced the successful\n *     \x3ccode\x3eresult\x3c/code\x3e.\n * @param {boolean\x3d} opt_fireOnOneErrback Whether to stop waiting as soon as one\n *     input reports an error. The failing result is passed to the\n *     \x3ccode\x3eDeferredList\x3c/code\x3e\x27s errback sequence.\n * @param {boolean\x3d} opt_consumeErrors When true, any errors fired by a\n *     \x3ccode\x3eDeferred\x3c/code\x3e in the input list will be captured and replaced\n *     with a succeeding null result. Any callbacks added to the\n *     \x3ccode\x3eDeferred\x3c/code\x3e after its use in the \x3ccode\x3eDeferredList\x3c/code\x3e will\n *     receive null instead of the error.\n * @param {Function\x3d} opt_canceler A function that will be called if the\n *     \x3ccode\x3eDeferredList\x3c/code\x3e is canceled. @see goog.async.Deferred#cancel\n * @param {Object\x3d} opt_defaultScope The default scope to invoke callbacks or\n *     errbacks in.\n * @constructor\n * @extends {goog.async.Deferred}\n */\ngoog.async.DeferredList \x3d function(\n    list, opt_fireOnOneCallback, opt_fireOnOneErrback, opt_consumeErrors,\n    opt_canceler, opt_defaultScope) {\n\n  goog.async.DeferredList.base(this, \x27constructor\x27,\n      opt_canceler, opt_defaultScope);\n\n  /**\n   * The list of Deferred objects to wait for.\n   * @const {!Array\x3c!goog.async.Deferred\x3e}\n   * @private\n   */\n  this.list_ \x3d list;\n\n  /**\n   * The stored return values of the Deferred objects.\n   * @const {!Array}\n   * @private\n   */\n  this.deferredResults_ \x3d [];\n\n  /**\n   * Whether to fire on the first successful callback instead of waiting for\n   * every Deferred to complete.\n   * @const {boolean}\n   * @private\n   */\n  this.fireOnOneCallback_ \x3d !!opt_fireOnOneCallback;\n\n  /**\n   * Whether to fire on the first error result received instead of waiting for\n   * every Deferred to complete.\n   * @const {boolean}\n   * @private\n   */\n  this.fireOnOneErrback_ \x3d !!opt_fireOnOneErrback;\n\n  /**\n   * Whether to stop error propagation on the input Deferred objects. If the\n   * DeferredList sees an error from one of the Deferred inputs, the error will\n   * be captured, and the Deferred will be returned to success state with a null\n   * return value.\n   * @const {boolean}\n   * @private\n   */\n  this.consumeErrors_ \x3d !!opt_consumeErrors;\n\n  /**\n   * The number of input deferred objects that have fired.\n   * @private {number}\n   */\n  this.numFinished_ \x3d 0;\n\n  for (var i \x3d 0; i \x3c list.length; i++) {\n    var d \x3d list[i];\n    d.addCallbacks(goog.bind(this.handleCallback_, this, i, true),\n                   goog.bind(this.handleCallback_, this, i, false));\n  }\n\n  if (list.length \x3d\x3d 0 \x26\x26 !this.fireOnOneCallback_) {\n    this.callback(this.deferredResults_);\n  }\n};\ngoog.inherits(goog.async.DeferredList, goog.async.Deferred);\n\n\n/**\n * Registers the result from an input deferred callback or errback. The result\n * is returned and may be passed to additional handlers in the callback chain.\n *\n * @param {number} index The index of the firing deferred object in the input\n *     list.\n * @param {boolean} success Whether the result is from a callback or errback.\n * @param {*} result The result of the callback or errback.\n * @return {*} The result, to be handled by the next handler in the deferred\x27s\n *     callback chain (if any). If consumeErrors is set, an error result is\n *     replaced with null.\n * @private\n */\ngoog.async.DeferredList.prototype.handleCallback_ \x3d function(\n    index, success, result) {\n\n  this.numFinished_++;\n  this.deferredResults_[index] \x3d [success, result];\n\n  if (!this.hasFired()) {\n    if (this.fireOnOneCallback_ \x26\x26 success) {\n      this.callback([index, result]);\n    } else if (this.fireOnOneErrback_ \x26\x26 !success) {\n      this.errback(result);\n    } else if (this.numFinished_ \x3d\x3d this.list_.length) {\n      this.callback(this.deferredResults_);\n    }\n  }\n\n  if (this.consumeErrors_ \x26\x26 !success) {\n    result \x3d null;\n  }\n\n  return result;\n};\n\n\n/** @override */\ngoog.async.DeferredList.prototype.errback \x3d function(res) {\n  goog.async.DeferredList.base(this, \x27errback\x27, res);\n\n  // On error, cancel any pending requests.\n  for (var i \x3d 0; i \x3c this.list_.length; i++) {\n    this.list_[i].cancel();\n  }\n};\n\n\n/**\n * Creates a \x3ccode\x3eDeferredList\x3c/code\x3e that gathers results from multiple\n * \x3ccode\x3eDeferred\x3c/code\x3e inputs. If all inputs succeed, the callback is fired\n * with the list of results as a flat array. If any input fails, the list\x27s\n * errback is fired immediately with the offending error, and all other pending\n * inputs are canceled.\n *\n * @param {!Array\x3c!goog.async.Deferred\x3e} list The list of \x3ccode\x3eDeferred\x3c/code\x3e\n *     inputs to wait for.\n * @return {!goog.async.Deferred} The deferred list of results from the inputs\n *     if they all succeed, or the error result of the first input to fail.\n */\ngoog.async.DeferredList.gatherResults \x3d function(list) {\n  return new goog.async.DeferredList(list, false, true).\n      addCallback(function(results) {\n        var output \x3d [];\n        for (var i \x3d 0; i \x3c results.length; i++) {\n          output[i] \x3d results[i][1];\n        }\n        return output;\n      });\n};\n\n//# sourceURL\x3dhttps://qs/third_party/javascript/closure/mochikit/async/deferredlist.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/inject/injector.js";
eval("goog.provide(\x27wiz.inject.Injector\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27fava.services.resolveDependencies\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.DeferredList\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.module.ModuleManager\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27wiz.inject.Observer\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27fava.AppContext\x27);\ngoog.forwardDeclare(\x27goog.loader.AbstractModuleManager\x27);\ngoog.forwardDeclare(\x27wiz.Interface\x27);\n\n\n/**\n * @define {boolean} Whether late loading is enabled.\n */\ngoog.define(\x27wiz.inject.LATE_LOADING_ENABLED\x27, true);\n\ngoog.scope(function() {\n\n\n\n/**\n * Shared singleton that loads and registers Wiz derived constructors\n * such as controllers, models, services, and renderers. User code does not\n * need to directly interface with the injector because object instantiation\n * (and loading) is done through per object type specific mechanisms.\n * @constructor\n * @final\n * @struct\n */\nwiz.inject.Injector \x3d function() {\n  /**\n   * An internal service registry. Provides support for services which are not\n   * yet converted and allows instantiating controllers in tests without a\n   * module manager / appcontext setup.\n   * @private {!Object\x3c!fava.services.ServiceId,!Function\x3e}\n   */\n  this.registry_ \x3d {};\n\n  /** @private {?fava.AppContext} */\n  this.appContext_ \x3d null;\n\n  /** @private {?wiz.inject.Observer} */\n  this.observer_ \x3d null;\n\n  /** @private {?goog.log.Logger} */\n  this.logger_ \x3d goog.log.getLogger(\x27wiz.inject.Injector\x27);\n\n  if (wiz.inject.LATE_LOADING_ENABLED) {\n    /** @private {?goog.loader.AbstractModuleManager} */\n    this.moduleManager_ \x3d null;\n\n    /**\n     * Function to use to load modules.  A default implementation is provided,\n     * but a hook is also provided to allow base pages to provide custom module\n     * loading behavior.\n     * @private {!wiz.inject.Injector.LoadModulesFunction}\n     */\n    this.loadModulesFunction_ \x3d wiz.inject.Injector.defaultLoadModulesFunction;\n  }\n};\ngoog.addSingletonGetter(wiz.inject.Injector);\n\n\n/**\n * Function to use to load modules.  Returns a mapping from id (String)\n * to deferred objects that will callback or errback when the load for that\n * id is finished.\n * @typedef {function(!wiz.inject.Injector, !Array\x3cstring\x3e):\n *    !Object\x3cstring, !IThenable\x3e}\n */\nwiz.inject.Injector.LoadModulesFunction;\n\n\n/**\n * @param {!fava.AppContext} appContext\n * @return {!wiz.inject.Injector} This object, for chaining.\n */\nwiz.inject.Injector.prototype.setAppContext \x3d function(appContext) {\n  this.appContext_ \x3d appContext;\n  return this;\n};\n\n\n/**\n * @return {?fava.AppContext} appContext\n */\nwiz.inject.Injector.prototype.getAppContext \x3d function() {\n  return this.appContext_;\n};\n\n\n/**\n * @param {!wiz.inject.Observer} observer\n * @return {!wiz.inject.Injector} This object, for chaining.\n */\nwiz.inject.Injector.prototype.setObserver \x3d function(observer) {\n  this.observer_ \x3d observer;\n  return this;\n};\n\n\n/**\n * Called by wiz constructor generators when they are called \u2013 this signals\n * that a potentially asynchronous load of a wiz service has finished.\n * @param {!fava.services.ServiceId} key\n * @param {!Function} ctor\n */\nwiz.inject.Injector.prototype.register \x3d function(key, ctor) {\n  goog.asserts.assert(key, \x27The injector key is empty. Is there a typo\x27 +\n      \x27 in the call to wiz.controller/service/model, etc.?\x27);\n  goog.asserts.assert(!this.registry_[key], \x27\x3c\x27 +\n      key + \x27\x3e is already registered.\x27);\n  this.registry_[key] \x3d ctor;\n};\n\n\n/**\n * If the key points to an interface, resolve the underlying default\n * implementation service id.\n * @param {!fava.services.ServiceId|function(new: Object)} keyOrInterface\n * @return {!fava.services.ServiceId}\n */\nwiz.inject.Injector.resolveInterface \x3d function(keyOrInterface) {\n  var maybeIface \x3d /** @type {?} */ (keyOrInterface);\n  if (maybeIface \x26\x26 !!maybeIface.$wizInterface) {\n    var iface \x3d /** @type {!wiz.Interface} */ (maybeIface.$wizInterface);\n    var serviceId \x3d iface.getDefaultImplementationId();\n    if (!serviceId) {\n      throw new Error(\x27No default implementation bound for \x3c\x27 + keyOrInterface +\n          \x27\x3e\x27);\n    }\n    return serviceId;\n  }\n  return /** @type {!fava.services.ServiceId} */ (keyOrInterface);\n};\n\n\n/**\n * Get a deferred for a wiz constructor.\n * @param {!fava.services.ServiceId|function(new: Object)} keyOrInterface\n * @return {!goog.async.Deferred\x3cfunction(new: Object)\x3e}\n */\nwiz.inject.Injector.prototype.getCtor \x3d function(keyOrInterface) {\n  var key \x3d wiz.inject.Injector.resolveInterface(keyOrInterface);\n\n  if (typeof key \x3d\x3d\x3d \x27function\x27) {\n    throw new Error(`\nYou cannot inject a function as a Wiz dependency.  If you are trying to inject a\nWiz interface, make sure to call registerInterface(). If you\x27re trying to inject\na model or service directly, you must pass the ServiceId (e.g. ns.services.FOO),\nnot the class itself.  See the stack trace of this error for the source that has\nthe mistake.\n\nClass being injected: ${key.displayName || key}`);\n  }\n\n  var ctor \x3d this.registry_[key];\n  if (ctor) {\n    if (this.observer_) {\n      this.observer_.onInjectCached(key);\n    }\n    return goog.async.Deferred.succeed(ctor);\n  }\n  if (key instanceof fava.services.ServiceId) {\n    if (this.observer_) {\n      this.observer_.onInjectFetchStart(key);\n    }\n    var d \x3d this.getAsync([key]);\n    d.addCallback(function() {\n      if (this.registry_[key]) {\n        if (this.observer_) {\n          this.observer_.onInjectFetchEnd(key);\n        }\n        return this.registry_[key];\n      } else {\n        throw this.reportLoadFailure_(key);\n      }\n    }, this);\n    return d;\n  }\n  return goog.async.Deferred.fail(this.reportLoadFailure_(key));\n};\n\n\nif (wiz.inject.LATE_LOADING_ENABLED) {\n  /**\n   * @param {!goog.loader.AbstractModuleManager} moduleManager\n   * @return {!wiz.inject.Injector} This object, for chaining.\n   */\n  wiz.inject.Injector.prototype.setModuleManager \x3d function(moduleManager) {\n    this.moduleManager_ \x3d moduleManager;\n    return this;\n  };\n\n\n  /**\n   * @return {!goog.loader.AbstractModuleManager} A custom module manager or the\n   *     default module manager if no custom one has been specified.\n   */\n  wiz.inject.Injector.prototype.getModuleManager \x3d function() {\n    if (this.moduleManager_) {\n      return this.moduleManager_;\n    }\n    return goog.module.ModuleManager.getInstance();\n  };\n\n\n  /**\n   * The default implementation of the module loading function.\n   * This just directly invokes loadMultiple on the injector\x27s module manager.\n   * This is public to allow delegating to this in custom implementations.\n   * @param {!wiz.inject.Injector} injector The invoking injector instance.\n   * @param {!Array\x3cstring\x3e} modules The ids of the modules to load.\n   * @return {!Object\x3cstring, !IThenable\x3e} A mapping from id (String) to\n   *     deferred objects that will callback or errback when the load for\n   *     that id is finished.\n   */\n  wiz.inject.Injector.defaultLoadModulesFunction \x3d function(injector, modules) {\n    return injector.getModuleManager().loadMultiple(modules);\n  };\n\n\n  /**\n   * Hook that allows setting a custom implementation for the module loading\n   * function.  This is useful if users want to be able to bundle Wiz requests\n   * with existing requests, or otherwise control scheduling of the request.\n   * @param {!wiz.inject.Injector.LoadModulesFunction} loadModulesFunction\n   *     The custom implementation.\n   */\n  wiz.inject.Injector.prototype.setLoadModulesFunction \x3d function(\n      loadModulesFunction) {\n    this.loadModulesFunction_ \x3d loadModulesFunction;\n  };\n}\n\n\n/**\n * Retrieves all modules in the transitive dependency graph of the specified\n * list of keys.\n * @param {!Array\x3c!fava.services.ServiceId\x3e} keys\n * @return {!goog.async.Deferred}\n */\nwiz.inject.Injector.prototype.getAsync \x3d function(keys) {\n  keys \x3d goog.array.map(keys, wiz.inject.Injector.resolveInterface);\n  // Filter if we need to load anything for the requested keys.\n  keys \x3d goog.array.filter(keys, function(key) {\n    return !this.isLoaded_(key);\n  }, this);\n  // If any of the top level requested keys are not yet loaded, find all the\n  // deps and then filter those again for not yet loaded keys.\n  var notLoadedDeps \x3d goog.array.filter(\n      fava.services.resolveDependencies(keys).services,\n      function(key) {\n        return key instanceof fava.services.ServiceId \x26\x26 !this.isLoaded_(key);\n      },\n      this);\n  // Find modules for services.\n  var modules \x3d [];\n  var seen \x3d {};\n  goog.array.forEach(notLoadedDeps, function(service) {\n    var module \x3d service.getModuleId();\n    if (module !\x3d null) {\n      if (seen[module]) {\n        return;\n      }\n      seen[module] \x3d true;\n      modules.push(module);\n    }\n  });\n  // Nothing to load, return immediate success.\n  if (modules.length \x3d\x3d 0) {\n    return goog.async.Deferred.succeed();\n  }\n  if (!wiz.inject.LATE_LOADING_ENABLED) {\n    return goog.async.Deferred.fail(\n        \x27Late loading disabled, but found unloaded modules: \x27 + modules);\n  }\n  try {\n    var extraStackFrameForDebugging \x3d function(injector) {\n      return injector.loadModulesFunction_(injector, modules);\n    };\n    if (goog.DEBUG) {\n      extraStackFrameForDebugging.displayName \x3d \x27# Loading services \x27 + keys;\n    }\n    var thenables \x3d extraStackFrameForDebugging(this);\n    return goog.async.DeferredList.gatherResults(goog.array.map(\n        goog.object.getValues(thenables), goog.async.Deferred.fromPromise));\n  } catch (e) {\n    var cause \x3d e;\n    if (goog.DEBUG \x26\x26 e \x26\x26 e.message \x26\x26\n        e.message.indexOf(\x27Unknown module: \x27) !\x3d -1) {\n      var extraInfo \x3d `\\n\\nCheck that the classname doesn\x27t have a typo.`;\n\n      var moduleId \x3d e.message.match(/Unknown module: (\\w+)/)[1];\n      var services \x3d fava.services.resolveDependencies(keys).services;\n      var forModule \x3d goog.array.filter(services, function(service) {\n        if (!service || !service.getModuleId) {\n          goog.log.error(this.logger_, \x27Encountered broken service \x27 +\n              service + \x27 while resolving errors for services \x27 + services);\n          return false;\n        }\n        if (!xid.isObfuscating() \x26\x26 !/_$/.test(service)) {\n          extraInfo +\x3d `\\n\\nChange your Soy to {xid(\x27${service}\x27)}.`;\n        }\n        return service.getModuleId() \x3d\x3d moduleId;\n      }, this);\n\n      if (!this.isLoaderAvailable()) {\n        extraInfo +\x3d \x27\\n\\nIf this is a unit test you may need to add the \x27 +\n            \x27following goog.require to your test file (and set up \x27 +\n            \x27go/wiz-testdeps):\x27;\n        goog.array.forEach(forModule, function(id) {\n          extraInfo +\x3d `\\ngoog.require(\x27${testdepsNs(id)}\\\x27);`;\n        });\n        extraInfo +\x3d \x27\\nIn most cases, you only need testdeps for your own \x27;\n        extraInfo +\x3d \x27package; the system should infer your dependencies.\x27;\n        extraInfo +\x3d \x27\\n\\nIf your test uses Typescript, simply add\x27;\n        extraInfo +\x3d `\\n  import \x27./testdeps\x27;`;\n      } else {\n        extraInfo +\x3d `\\n\\nIf the class exists, ensure that it\x27s part of your ` +\n            `moduleset.  In Boq Web projects, add a node dep to your node on ` +\n            `the node which owns the class.  In other applications, you need ` +\n            `to add its pinto_auto_modules() target to your moduleset.  This ` +\n            `typically happens in a list somewhere in a BUILD or .bzl file.`;\n      }\n      cause \x3d new Error(e.message + \x27 while loading services: \x27 + services +\n          \x27.\\n The module \x27 + moduleId + \x27 is assigned to service: \x27 +\n          forModule + extraInfo +\n          \x27.\\n\\n More info: http://go/wiz-errors#unknown-module-id\\n\\n\x27);\n    }\n    return goog.async.Deferred.fail(cause);\n  }\n};\n\n\n/**\n * @param {!fava.services.ServiceId|string} key\n * @return {string} Generated namespace for go/wiz-testdeps\n */\nfunction testdepsNs(key) {\n  return key.toString().replace(/\\.[a-zA-Z0-9_]+$/, \x27.testdeps\x27);\n}\n\n\n/**\n * Creates a nice error in case a constructor can\x27t be found.\n * @param {!fava.services.ServiceId} key\n * @return {!TypeError}\n * @private\n */\nwiz.inject.Injector.prototype.reportLoadFailure_ \x3d function(key) {\n  goog.asserts.assert(\n      !this.appContext_ || this.appContext_.getOrNull(key) \x3d\x3d null,\n      \x27Requested Wiz service \x3c\x27 + key + \x27\x3e. It was not found after \x27 +\n      \x27downloading the associated module. There is, however, a Fava service\x27 +\n      \x27 registered under that name. Are you trying to inject a fava service?\x27 +\n      \x27 In that case use \x22appContext\x22 instead of \x22service\x22 injection.\x27);\n  goog.log.info(this.logger_, \x27The following Wiz objects are currently \x27 +\n      \x27registered: \x27 + goog.object.getKeys(this.registry_).join(\x27, \x27));\n  if (this.observer_) {\n    this.observer_.onInjectFetchError(key);\n  }\n\n  var extraInfo \x3d \x27\x27;\n  if (goog.DEBUG \x26\x26 !this.isLoaderAvailable()) {\n    extraInfo \x3d \x27\\n\\nIf this is a unit test you may need to add the \x27 +\n        \x27following goog.require to your test file (go/wiz-testdeps):\\n\x27 +\n        `    goog.require(\x27${testdepsNs(key)}\x27);\\n`;\n  }\n  return new TypeError(\x27Downloaded module for Wiz service \x3c\x27 + key + \x27\x3e but \x27 +\n      \x27the service was not registered in that module.\x27 + extraInfo);\n};\n\n\n/**\n * Returns true if a module loader is available. If it isn\x27t this can be used\n * to make error messages more suitable for such a context.\n * @return {boolean}\n */\nwiz.inject.Injector.prototype.isLoaderAvailable \x3d function() {\n  if (wiz.inject.LATE_LOADING_ENABLED) {\n    return !!(this.moduleManager_ \x26\x26 this.moduleManager_.getLoader());\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Returns whether a given service has loaded already.\n * @param {!fava.services.ServiceId} key\n * @return {boolean}\n * @private\n */\nwiz.inject.Injector.prototype.isLoaded_ \x3d function(key) {\n  return !!this.registry_[key];\n};\n\n\n/**\n * Unregisters all injection keys.\n */\nwiz.inject.Injector.prototype.resetForTesting \x3d function() {\n  goog.asserts.assert(!this.isLoaderAvailable(),\n      \x27Should not be called in environments that have a module loader.\x27);\n  this.registry_ \x3d {};\n};\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/inject/injector.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2u');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2u');

}catch(e){_DumpException(e)}
/* _Module_:sy2s */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2s');
var $googDebugFname="javascript/apps/wiz/events/event.js";
eval("/**\n * @fileoverview Provides 2 functions: wiz.event to get an event type for a\n * given name and wiz.event.declare to make an event type under a given name\n * available for use.\n *\n * Usage:\n * File a.js\n * \u2026publish(wiz.event(\x27foo.bar.submitted\x27), data);\n *\n * File b.js\n * wiz.event.declare(\x27foo.bar.submitted\x27);\n * \u2026subscribe(wiz.event(\x27foo.bar.submitted\x27), function(data) { \u2026 });\n *\n * Naming event types: Event types should be named, so they can be\n * safely assumed to be unique across Google. Use namespaces similar to\n * JS namespaces.\n * Bad: wiz.event(\x27clicked\x27)\n * Good: wiz.event(\x27oz.stream.plusone.clicked\x27)\n *\n * An event type must only be declared once but it can be used without\n * having been declared in a dependency (the requirement is that it is\n * declared anywhere in the wider compilation unit / moduleset).\n *\n * @visibility {//visibility:public}\n */\n\n\ngoog.provide(\x27wiz.event\x27);\ngoog.provide(\x27wiz.event.EventType\x27);\ngoog.provide(\x27wiz.event.declare\x27);\n\ngoog.require(\x27xid\x27);\n\n// Both wiz.event and wiz.event.declare are meant to be compiled away with\n// wiz.event calls being replaced with obfuscated strings and the guarantees\n// outlined above being implemented as compiler checks.\n\n/**\n * Retrieve an object representing an event type. Use it to publish or\n * subscribe to events.\n * The event type must have been declared with wiz.event.declare somewhere in\n * the same moduleset as the wiz.event, but there is no need to depend on the\n * source file where the declaration happens.\n * @param {string} name The unobfuscated name of the event.\n * @return {!wiz.event.EventType} The event.\n * // TODO(malteubl) Switch to new xid based generator when available.\n */\nwiz.event \x3d function(name) {\n  wiz.event.checkEventName_(name);\n  // Append _ similiar to goog.getCssName, to make sure people call this.\n  // Casting a string, because that is what it really is. We do this, so that\n  // APIs can be typed to receive an event name when it really is just a\n  // string.\n  if (!COMPILED) {\n    name +\x3d \x27_\x27;\n  }\n  return wiz.event.EventType.make_(name);\n};\n\n\n/**\n * Declares an event type under a given name. A given event type can only be\n * declared once.\n * @param {string} name The unobfuscated name of the event type.\n * @return {!wiz.event.EventType}\n */\nwiz.event.declare \x3d function(name) {\n  if (COMPILED) {\n    // Check performed by compiler.\n    return wiz.event.EventType.make_(name);\n  }\n  wiz.event.checkEventName_(name);\n  if (wiz.event.registry_.hasOwnProperty(name)) {\n    throw new Error(\x27Event \x3c\x27 + name + \x27\x3e has already been declared.\x27);\n  }\n  wiz.event.registry_[name] \x3d true;\n  return wiz.event.EventType.make_(name + \x27_\x27);\n};\n\n\n\n/**\n * Class for wiz.event types. It should not be instantiated directly. Use\n * {@see wiz.event.declare} to create instances instead.\n * Instances can be typed like this\n * \x3ccode\x3e\n *   /** @const {!wiz.event.EventType\x3cstring\x3e} /\n *   some.Event \x3d\n *       wiz.event.declare(\x27some.Event\x27);\n * \x3c/code\x3e\n * Functions that consume and produce the event will then be automatically\n * type checked and provide the correct type (In the example above the payload\n * will be guaranteed to be a string).\n * @param {string} xidStr The string name identifying the event. Should be the\n *     same as the JS identifier. This automatically gets passed through xid\n *     when user code calls wiz.event or wiz.event.declare.\n * @constructor\n * @const\n * @struct\n * @template TYPE,OPT_SOURCE\n */\nwiz.event.EventType \x3d function(xidStr) {\n  xid.assertXidLikeString(xidStr);\n  /**\n   * @const\n   * @private\n   */\n  this.xid_ \x3d xidStr;\n};\n\n\n/** @override */\nwiz.event.EventType.prototype.toString \x3d function() {\n  return this.xid_;\n};\n\n\n/**\n * Global registry of event names used to make sure they have been declared\n * and declared only once.\n * @type {!Object\x3cstring,boolean\x3e}\n * @private\n */\nwiz.event.registry_ \x3d {};\n\n\n/**\n * Cache for instances of wiz.event.EventType.\n * @type {!Object\x3cstring,!wiz.event.EventType\x3e}\n * @private\n */\nwiz.event.instances_ \x3d {};\n\n\n/**\n * @param {string} xidStr\n * @return {!wiz.event.EventType}\n * @private\n */\nwiz.event.EventType.make_ \x3d function(xidStr) {\n  var instance \x3d wiz.event.instances_[xidStr];\n  if (instance) {\n    return instance;\n  }\n  return wiz.event.instances_[xidStr] \x3d new wiz.event.EventType(xidStr);\n};\n\n\n/**\n * DO NOT USE.\n * Used by the wizPass compiler pass to cast a str to\n * {@see wiz.event.EventType}.\n * @param {string} str\n * @return {!wiz.event.EventType}\n */\nwiz.event.cast \x3d function(str) {\n  return new wiz.event.EventType(str);\n};\n\n\n/**\n * Cast a str to a {@link wiz.event.EventType}.\n * @param {string} str\n * @return {!wiz.event.EventType}\n */\nwiz.event.fromString \x3d function(str) {\n  if (!COMPILED \x26\x26 !/_$/.test(str)) {\n    throw new Error(\x27Event name missing obfuscation.\x27);\n  }\n  return new wiz.event.EventType(str);\n};\n\n\n/**\n * Checks whether the given event name has been declared. This method will\n * throw when used in compiled code.\n * @param {string} name\n * @return {boolean}\n */\nwiz.event.isRegistered \x3d function(name) {\n  if (COMPILED) {\n    throw new Error(\x27This method must only be called in uncompiled code\x27);\n  }\n  return !!wiz.event.registry_[name];\n};\n\n\n/**\n * Checks that an event name is valid.\n * @param {string} name The unobfuscated name of the event type.\n * @private\n */\nwiz.event.checkEventName_ \x3d function(name) {\n  if (/_$/.test(name)) {\n    throw new Error(\x27Event names must not have trailing underscores.\x27);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/event.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2s');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2s');

}catch(e){_DumpException(e)}
/* _Module_:sy2t */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2t');
var $googDebugFname="javascript/apps/wiz/events/object.js";
eval("/**\n * @fileoverview Provides a class for events in the wiz system.\n */\ngoog.provide(\x27wiz.Event\x27);\n\ngoog.require(\x27wiz.event.EventType\x27);\n\ngoog.forwardDeclare(\x27wiz.Query.One\x27);\n\n/**\n * A class for events in the wiz system. It may wrap browser events or custom\n * events.\n * The data member variable supports being specialized through generics:\n * wiz.Event\x3cFooBar\x3e will make the corresponding object event have a data\n * member variable of type FooBar.\n * @param {!Event} event The wrapped browser(like) event object.\n * @param {!wiz.Query.One} targetElement The event target (the element that\n *     dispatched the event).\n * @param {!wiz.Query.One} actionElement The action target (the element where\n *     jsaction handled the event).\n * @param {SOURCE\x3d} opt_source Source of the event.\n * @constructor\n * @struct\n * @const\n * @template DATA,SOURCE\n */\nwiz.Event \x3d function(event, targetElement, actionElement, opt_source) {\n  /** @const {string|!wiz.event.EventType\x3cDATA\x3e} */\n  this.type \x3d event.type;\n  /** @const {!Event} */\n  this.event \x3d event;\n  /** @const {!wiz.Query.One} */\n  this.targetElement \x3d targetElement;\n  /** @const {!wiz.Query.One} */\n  this.actionElement \x3d actionElement;\n  /** @const {DATA} */\n  this.data \x3d event.data;\n  /** @const {SOURCE} */\n  this.source \x3d opt_source;\n};\n\n\n/**\n * @param {!wiz.event.EventType\x3cCAST,OPT_SOURCE\x3e} type\n * @return {!wiz.Event\x3cCAST,OPT_SOURCE\x3e}\n * @template CAST,OPT_SOURCE\n */\nwiz.Event.prototype.cast \x3d function(type) {\n  return /** @type {!wiz.Event\x3c?,?\x3e} */ (this);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/object.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2t');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2t');

}catch(e){_DumpException(e)}
/* _Module_:sy2r */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2r');
var $googDebugFname="apps/fava/proto/favalogging.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.fava.logging.FavaLogging\x27);\ngoog.provide(\x27proto.fava.logging.FavaLogging.Action\x27);\n\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.fava.logging.FavaLogging \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.fava.logging.FavaLogging, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.fava.logging.FavaLogging.displayName \x3d \x27proto.fava.logging.FavaLogging\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.fava.logging.FavaLogging.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.fava.logging.FavaLogging.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.fava.logging.FavaLogging} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fava.logging.FavaLogging.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.fava.logging.FavaLogging}\n */\nproto.fava.logging.FavaLogging.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.fava.logging.FavaLogging;\n  return proto.fava.logging.FavaLogging.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.fava.logging.FavaLogging} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.fava.logging.FavaLogging}\n */\nproto.fava.logging.FavaLogging.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.fava.logging.FavaLogging.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.fava.logging.FavaLogging.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.fava.logging.FavaLogging} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fava.logging.FavaLogging.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n};\n\n\n/**\n * @enum {number}\n */\nproto.fava.logging.FavaLogging.Action \x3d {\n  LOAD_SERVICE: 1\n};\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.fava.logging.FavaLogging}\n */\nproto.fava.logging.FavaLogging.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.fava.logging.FavaLogging, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/apps/fava/proto/favalogging.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/xid/reference.js";
eval("goog.provide(\x27xid.Reference\x27);\n\ngoog.require(\x27xid\x27);\n\n\n\n/**\n * A templated class that is used to reference constructors by their name:\n * \x3ccode\x3e\n *   /** @type {xid.Reference.\x3cproto.RenderContext\x3e}\n *   Keys.renderContext \x3d xid.Reference(xid(\x27rendercontext\x27));\n *\n *   wiz.context.get(Keys.renderContext).done(function(context) {\n *      // Compiler knows that context is a proto.RenderContext.\n *   });\n * \x3c/code\x3e\n *\n * @param {string} id\n * @template T\n * @constructor\n * @const\n * @struct\n */\nxid.Reference \x3d function(id) {\n  xid.assertXidLikeString(id);\n  /**\n   * @const\n   * @private\n   */\n  this.id_ \x3d id;\n};\n\n\n/** @override */\nxid.Reference.prototype.toString \x3d function() {\n  return this.id_;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/xid/reference.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/async/async.js";
eval("/**\n * @fileoverview Provides functions to do common async operations.\n * `wiz.async.get` helps getting i.e. fava services and context and\n * returns a deferred that will resolve when all those things are available.\n * `wiz.async.method` is a helper to create methods for controllers\n * that may run some code right away, then get some stuff (through the\n * mechanism explained above) and then run the real implementation.\n *\n * For an overview of available bindings see\n * http://go/wiz-async-bindings\n */\ngoog.provide(\x27wiz.async\x27);\ngoog.provide(\x27wiz.async.BatchRetrieverFunction\x27);\ngoog.provide(\x27wiz.async.BeforeMethod\x27);\ngoog.provide(\x27wiz.async.CallbackMethod\x27);\ngoog.provide(\x27wiz.async.ErrbackMethod\x27);\ngoog.provide(\x27wiz.async.Request\x27);\ngoog.provide(\x27wiz.async.Response\x27);\ngoog.provide(\x27wiz.async.RetrievableKey\x27);\ngoog.provide(\x27wiz.async.RetrievableMap\x27);\ngoog.provide(\x27wiz.async.RetrieverFunction\x27);\ngoog.provide(\x27wiz.async.State\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.DeferredList\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27wiz.Event\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27xid.Reference\x27);\n\ngoog.forwardDeclare(\x27wiz.Controller\x27);\ngoog.forwardDeclare(\x27wiz.Processor\x27);\n\n\n/**\n * @define {boolean} Turn on support for async fetching of services\n *     and contexts.\n */\nwiz.async.ENABLE_DEFAULT_BINDINGS \x3d true;\n\n\n/**\n * Type for the param of the get method.\n * @typedef {!Object\x3c!wiz.async.RetrievableMap\x3e}\n */\nwiz.async.Request;\n\n\n\n/**\n * Response containing the values returned by the async request.\n * @constructor\n */\nwiz.async.Response \x3d function() {};\n\n\n/**\n * Contains a shared object that can be used to hold state between the\n * `before` and `callback` on an async request.\n * @type {!wiz.async.State}\n */\nwiz.async.Response.prototype.state;\n\n\n\n/**\n * Holds state transfered between callbacks in `wiz.async.method`.\n * The object is meant to be fully mutable like a standard {}. Add properties\n * at runtime as you wish. The distinction from {} is only made to allow\n * better checking for property name typos.\n * @constructor\n */\nwiz.async.State \x3d function() {};\n\n\n/**\n * A map from a type to an object containing the set of async requests\n * to retrieve.\n * @typedef {?Object\x3cstring,!wiz.async.RetrievableKey\x3e}\n */\nwiz.async.RetrievableMap;\n\n\n/**\n * A key that specifies the async value to fetch.\n * @typedef {!Object|string}\n */\nwiz.async.RetrievableKey;\n\n\n/**\n * Function used to retrieve an `goog.async.Deferred` representing\n * an async fetch of a retrievable value. The final argument is the full\n * object mapping passed in by the users. This may be used to process all\n * requested items at once.\n * @typedef {function(!wiz.async.Source,!wiz.async.RetrievableKey,!Object):\n *     (!goog.async.Deferred|!goog.Promise)}\n */\nwiz.async.RetrieverFunction;\n\n\n/**\n * Function used to retrieve an {@code Object\x3cstring, goog.async.Deferred\x3e}\n * representing an async fetch of retrievable values. The final argument is\n * the full object mapping passed in by the users.\n * @typedef {function(!wiz.async.Source,!wiz.async.RetrievableMap):\n *     (!Object\x3cstring,!goog.async.Deferred|!goog.Promise\x3e)}\n */\nwiz.async.BatchRetrieverFunction;\n\n\n/**\n * @private\n *     {Object\x3c!wiz.async.RetrieverFunction|!wiz.async.BatchRetrieverFunction\x3e}\n */\nwiz.async.retrievers_ \x3d {};\n\n\n/**\n * @private {!Object\x3cboolean\x3e}\n */\nwiz.async.batchRetrievers_ \x3d {};\n\n\n/**\n * When set to true wiz.async.get fails if not all values can be provided\n * synchronously.\n * @private {boolean}\n */\nwiz.async.trackInjections_ \x3d false;\n\n\n/**\n * Map from injection index to info about the injection. Entries should be\n * deleted when the injection completed.\n * @private {!Object\x3cnumber, string\x3e}\n */\nwiz.async.scheduledInjections_ \x3d {};\n\n\n/** @private {number} Unique index of an injection. */\nwiz.async.scheduledInjectionsIndex_ \x3d 0;\n\n\n/**\n * If called, wiz.async will track all injections. Use\n * {@link wiz.async.assertInjectionsCompleted} in a test tearDown function\n * to assert that injections have been completed.\n */\nwiz.async.trackInjectionsForTesting \x3d function() {\n  wiz.async.trackInjections_ \x3d true;\n};\n\n\n/**\n * Throws if an injection was not completed. Activate tracking of injections\n * via {@link wiz.async.trackInjectionsForTesting};\n */\nwiz.async.assertInjectionsCompleted \x3d function() {\n  if (!goog.asserts.ENABLE_ASSERTS) {\n    return;\n  }\n  var injections \x3d goog.object.getValues(wiz.async.scheduledInjections_);\n  if (injections.length \x3d\x3d 0) {\n    return;\n  }\n  wiz.async.scheduledInjections_ \x3d {};\n  goog.asserts.fail(\x27The following Wiz injections failed:\\n  \x27 +\n      injections.join(\x27\\n  \x27));\n};\n\n\n/**\n * @param {!wiz.async.Source} source\n * @param {!wiz.async.RetrievableMap} aliasToKey Map from alias in spec to key.\n *     e.g. service name.\n * @param {string} type\n * @return {!Object\x3cstring,!goog.async.Deferred\x3e}\n */\nwiz.async.valueStubber \x3d goog.functions.constant({});\n\n\n/**\n * Bind a retriever to a specified type. The retriever is called for every\n * single requested key of the special type. This allows Wiz clients to\n * implement their own retrievable types for wiz.async.get and wiz.async.method\n * to fetch.\n *\n * Binding new retrievers should be done early in application lifecycle.\n *\n * Please register new bindings with\n * http://go/wiz-async-bindings\n *\n * USAGE: Refer to bottom of this file for example usage.\n *\n * @param {!Object\x3cstring,!wiz.async.RetrieverFunction\x3e} retrieversMap\n */\nwiz.async.bind \x3d function(retrieversMap) {\n  goog.object.forEach(retrieversMap, function(retriever, type) {\n    goog.asserts.assert(type !\x3d \x27state\x27 \x26\x26 type !\x3d \x27callback\x27 \x26\x26\n        type !\x3d \x27errback\x27 \x26\x26 type !\x3d \x27before\x27,\n        \x27Cannot bind a retriever for \x27 + type + \x27. Type is reserved.\x27);\n    goog.asserts.assert(!wiz.async.retrievers_[type],\n        \x27Retriever already bound for type \x27 + type + \x27.\x27);\n    if (goog.DEBUG \x26\x26 retriever /* Null in some tests in Oz. Whatever. */) {\n      retriever.displayName \x3d \x27# wiz.async.get: \x27 + type;\n    }\n    wiz.async.retrievers_[type] \x3d retriever;\n  });\n};\n\n\n/**\n * Bind a batch retriever to a specified type. A batch retriever performs\n * work for all the requested keys of the special type in a single operation.\n * This allows Wiz clients to implement their own retrievable types for\n * wiz.async.get and wiz.async.method to fetch.\n *\n * Binding new retrievers should be done early in application lifecycle.\n *\n * Please register new bindings with\n * http://go/wiz-async-bindings\n *\n * USAGE: Refer to bottom of this file for example usage.\n *\n * @param {!Object\x3cstring,!wiz.async.BatchRetrieverFunction\x3e} retrieversMap\n */\nwiz.async.bindBatch \x3d function(retrieversMap) {\n  goog.object.forEach(retrieversMap, function(retriever, type) {\n    goog.asserts.assert(type !\x3d \x27state\x27 \x26\x26 type !\x3d \x27callback\x27 \x26\x26\n        type !\x3d \x27errback\x27 \x26\x26 type !\x3d \x27before\x27,\n        \x27Cannot bind a retriever for \x27 + type + \x27. Type is reserved.\x27);\n    goog.asserts.assert(!wiz.async.retrievers_[type],\n        \x27Retriever already bound for type \x27 + type + \x27.\x27);\n     if (goog.DEBUG \x26\x26 retriever /* Null in some tests in Oz. Whatever. */) {\n      retriever.displayName \x3d \x27# wiz.async.get: \x27 + type + \x27 (in batch)\x27;\n    }\n    wiz.async.retrievers_[type] \x3d retriever;\n    wiz.async.batchRetrievers_[type] \x3d true;\n  });\n};\n\n\n/**\n * Get a set of async objects. Returns a deferred that resolves\n * when all those things are there.\n *\n * USAGE:\n * {@code MyController.prototype.click \x3d function(event) {\n *  event.actionElement.addClass(\u2018working\u2019);\n *  wiz.async.get(this, {\n *    service: {\n *      photo: oz.photos.api.services.Services.PHOTOS,\n *      other: oz.photos.api.services.Services.OTHER\n *    },\n *    context: {\n *      render: wiz.id(\x27renderContext\x27),\n *      foo: wiz.id(\x27foo\x27)\n *    },\n *    // Returns only the first matched controller\n *    controller: {\n *      // jsname of the controller element\n *      bar: wiz.id(\x27bar\x27),\n *      baz: wiz.id(\x27baz\x27)\n *    },\n *    // Returns an array of controllers\n *    controllers: {\n *      // jsname of the controller element\n *      bar: wiz.id(\x27bar\x27),\n *      baz: wiz.id(\x27baz\x27)\n *    }\n *  }).addCallback(function(get) {\n *    return get.service.photo.doSomething(\n *       get.service.other.getStuff(), get.context.render.getBar(),\n *       get.context.foo.getUser());\n *  }).addCallback(function(\n *    event.actionElement.removeClass(\u2018working\u2019);\n *    event.actionElement.text(\u2018done\u2019);\n *  ));\n * };}\n *\n * For an overview of available bindings see\n * http://go/wiz-async-bindings\n *\n * @param {!wiz.async.Source} source The source through which to get\n *     the stuff.\n * @param {!wiz.async.Request} spec\n * @param {!wiz.async.State\x3d} opt_state\n * @return {!goog.async.Deferred\x3c?\x3e}\n */\nwiz.async.get \x3d function(source, spec, opt_state) {\n  goog.log.fine(goog.log.getLogger(\x27wiz.async\x27), \x27Getting \x27 +\n      goog.object.getKeys(spec) + \x27 from \x27 + source);\n  var deferredList \x3d [];\n  var intermediateMap \x3d goog.object.map(spec, function(unused, type) {\n    return wiz.async.getRetrievable_(source,\n        /** @type {!wiz.async.RetrievableMap} */ (spec[type]),\n        deferredList, wiz.async.retrievers_[type], type);\n  });\n  var d \x3d goog.async.DeferredList.gatherResults(deferredList);\n  d.addCallback(function(results) {\n    var ret \x3d goog.object.map(intermediateMap, function(aliasToDeferredMap) {\n      var response \x3d new wiz.async.Response();\n      goog.object.forEach(aliasToDeferredMap, function(index, alias) {\n        response[alias] \x3d results[index];\n      });\n      return response;\n    });\n    if (opt_state) {\n      ret.state \x3d opt_state;\n    }\n    return ret;\n  });\n  // Due to the weirdness of goog.async.Deferred.STRICT_ERRORS being off by\n  // default and goog.async.DeferredList having a default error handler, we\n  // need this to ensure exceptions are properly reported to the console.\n  // You are still free to append your own errback to the chain.\n  d.addErrback(function(error) {\n    throw error;\n  });\n  return d;\n};\n\n\n/**\n * @typedef {function(!wiz.Event,!wiz.async.State):\n *       (boolean|undefined)}\n */\nwiz.async.BeforeMethod;\n\n\n/**\n * @typedef {function(this:?, !wiz.Event,!wiz.async.Response)}\n */\nwiz.async.CallbackMethod;\n\n\n/**\n * @typedef {function(!wiz.Event)}\n */\nwiz.async.ErrbackMethod;\n\n\n/**\n * Helper method that returns a controller method. Pass in the implementation\n * through the param.\n *\n * The `before` value must be a function and it will be immediate\n * executed when the method is called. The first param is the current event and\n * the second param is a special state object.\n *\n * If `before` returns true, the event handled by the method is bubbled.\n *\n * Properties set on the `state` argument are made available to\n * `callback` via `get.state.foo`. Then the values specified via the\n * method spec are resolved via the .get method of the controller.\n *\n * After this is finished the `callback` or `errbacks` are called.\n * They receive the event as the first param and the result of the get or error\n * object as the second param.\n *\n * USAGE:\n * {@code wiz.async.method({\n *   before: function(event, state) {\n *     state.foo \x3d event.actionElement.getData(\x27bar\x27);\n *     this.getElement(\x27foo\x27).addClass(event.data);\n *   },\n *   context: {\n *     currentView: \x27currentView\x27\n *   },\n *   callback: function(event, get) {\n *     event.targetElement.addClass(get.state.foo);\n *     this.privateMethod_(event, get.context.currentView.before);\n *   }\n * });}\n *\n * @param {{\n *   before: wiz.async.BeforeMethod,\n *   callback: wiz.async.CallbackMethod\n * }|{\n *   before: wiz.async.BeforeMethod,\n *   callback: wiz.async.CallbackMethod,\n *   errback: wiz.async.ErrbackMethod\n * }|{\n *   callback: wiz.async.CallbackMethod,\n *   errback: wiz.async.ErrbackMethod\n * }|{\n *   callback: wiz.async.CallbackMethod\n * }} spec\n * @return {function(!wiz.Event,!wiz.async.Response\x3d)} A method for\n *     a controller. The second param is only exposed for calling this method\n *     in a test. It allows providing the result of the `get` call\n *     directly without going through the deferred.\n */\nwiz.async.method \x3d function(spec) {\n  /** @type {!Object} */\n  var request \x3d spec;\n  var before \x3d request.before;\n  var callback \x3d request.callback;\n  var errback \x3d request.errback;\n  delete request.before;\n  delete request.callback;\n  delete request.errback;\n  var annotations \x3d [];\n  if (request.annotation) {\n    for (var key in request.annotation) {\n      annotations.push(request.annotation[key]);\n    }\n  }\n  delete request.annotation;\n\n  /**\n   * @this {wiz.Controller}\n   * @param {!wiz.Event} event\n   * @param {!wiz.async.Response\x3d} opt_testOnlySyncGetResult\n   * @return {boolean|undefined} Returns true if the event should bubble.\n   */\n  var fn \x3d function asyncMethod(event, opt_testOnlySyncGetResult) {\n    return wiz.async.invokeMethod_(spec, before, callback, errback, this, event,\n        null, opt_testOnlySyncGetResult);\n  };\n  fn.annotations \x3d annotations;\n  return fn;\n};\n\n\n/**\n * Invokes a method declared through {@see wiz.async.method}\n * @param {!Object} spec\n * @param {wiz.async.BeforeMethod} before\n * @param {wiz.async.CallbackMethod} callback\n * @param {wiz.async.ErrbackMethod} errback\n * @param {!wiz.Controller} controller\n * @param {!wiz.Event} event\n * @param {?Array\x3c!wiz.Processor\x3e} annotations\n * @param {!wiz.async.Response\x3d} opt_testOnlySyncGetResult\n * @return {boolean|undefined} Returns true if the event should bubble.\n * @private\n */\nwiz.async.invokeMethod_ \x3d function(\n    spec, before, callback, errback, controller, event, annotations,\n    opt_testOnlySyncGetResult) {\n  var state \x3d new wiz.async.State();\n  var retVal;\n  if (before) {\n    retVal \x3d before.call(controller, event, state);\n  }\n  var cb \x3d goog.bind(callback, controller, event);\n  if (opt_testOnlySyncGetResult) {\n    // TODO(malteubl): Make this mixin values stubbed via\n    // wiz.testing.async.stub.\n    if (!opt_testOnlySyncGetResult.state) {\n      opt_testOnlySyncGetResult.state \x3d state;\n    }\n    cb(opt_testOnlySyncGetResult);\n  } else {\n    var d \x3d wiz.async.get(controller, spec, state);\n    d.addCallback(cb);\n  }\n  if (errback \x26\x26 !opt_testOnlySyncGetResult) {\n    d.addErrback(goog.bind(errback, controller, event));\n  }\n  return retVal;\n};\n\n\n/**\n * Get things of a certain type using the strategy supplied by the retriever.\n * @param {!wiz.async.Source} source\n * @param {!wiz.async.RetrievableMap} aliasToKey Map from alias in spec to key.\n *     e.g. service name.\n * @param {!Array\x3c!goog.async.Deferred\x3e} deferredList Array list of deferreds.\n * @param {!wiz.async.RetrieverFunction|!wiz.async.BatchRetrieverFunction}\n *     retriever Function to retrieve things by name.\n * @param {string} type Type of the retrievable.\n * @return {!Object\x3cnumber\x3e} Map from alias to index in deferred list.\n * @private\n */\nwiz.async.getRetrievable_ \x3d function(source, aliasToKey, deferredList,\n    retriever, type) {\n  goog.asserts.assert(typeof aliasToKey \x3d\x3d \x27object\x27 \x26\x26\n      !(aliasToKey instanceof fava.services.ServiceId),\n      \x27Was expecting an object literal as \x27 + type + \x27 inject specification\x27 +\n      \x27. instead got: \x27 + aliasToKey + \x27 while injecting for \x3c\x27 + source + \x27\x3e\x27);\n  var aliasToDeferredIndex \x3d {};\n  var originalAliasToKey \x3d aliasToKey;\n  if (goog.DEBUG) {\n    var stubbedAliases \x3d wiz.async.valueStubber(source, aliasToKey, type);\n\n    goog.object.forEach(stubbedAliases, function(deferred, alias) {\n      var i \x3d deferredList.length;\n      deferredList.push(deferred);\n      aliasToDeferredIndex[alias] \x3d i;\n    });\n\n    aliasToKey \x3d goog.object.filter(aliasToKey, function(key, alias) {\n      return !(alias in stubbedAliases);\n    });\n\n    goog.object.forEach(aliasToKey, function(key, alias) {\n      goog.asserts.assert(key !\x3d undefined,\n          \x27Key for \x3c\x27 + type + \x27.\x27 + alias + \x27\x3e is null.  \x27 +\n          \x27Injecting from \x27 + source);\n    });\n    if (goog.object.getCount(aliasToKey) \x3e 0) {\n      goog.asserts.assert(type in wiz.async.retrievers_,\n          \x27No wiz.async.bind-ing registered for \x3c\x27 + type + \x27\x3e.\x27);\n    }\n  }\n\n  var dMap;\n  if (wiz.async.batchRetrievers_[type]) {\n    dMap \x3d retriever(source, aliasToKey);\n  } else {\n    dMap \x3d goog.object.map(aliasToKey, function(key, alias) {\n      return retriever(source,\n          /** @type {!wiz.async.RetrievableKey} */ (key), aliasToKey);\n    });\n  }\n  goog.object.forEach(dMap, function(d, alias) {\n    // TODO (jtzwu): figure out a better way to determine if this\n    // is a promise than checking if it is not a Deferred.\n    goog.asserts.assert(d !\x3d null, \x27Retriever for \x3c\x27 + alias + \x27:\x27 +\n        originalAliasToKey[alias] + \x27\x3e returned null.\x27);\n    // TODO(malteubl): Make the promise/thenable case the default.\n    if (d instanceof goog.Promise) {\n      d \x3d goog.async.Deferred.fromPromise(d);\n    }\n    if (wiz.async.trackInjections_) {\n      var injectionIndex \x3d wiz.async.scheduledInjectionsIndex_++;\n      wiz.async.scheduledInjections_[injectionIndex] \x3d\n          source + \x27.\x27 + type + \x27.\x27 + alias + \x27: \x27 + aliasToKey[alias];\n      // Needs to use Deferred callbacks because tests fail when checking if\n      // all injections are complete in wiz.async.assertInjectionsCompleted.\n      // If using promises with Deferred.succeed, this method is never called.\n      // This issue happens only in tests.\n      d.addBoth(() \x3d\x3e {\n        delete wiz.async.scheduledInjections_[injectionIndex];\n      });\n    }\n\n    var i \x3d deferredList.length;\n    deferredList.push(d);\n    aliasToDeferredIndex[alias] \x3d i;\n  });\n  return aliasToDeferredIndex;\n};\n\n\nif (wiz.async.ENABLE_DEFAULT_BINDINGS) {\n  wiz.async.bindBatch({\n    /**\n     * Retrieves a Fava service.\n     * @param {!wiz.async.Source} source\n     * @param {!wiz.async.RetrievableMap} aliasToServiceKey The complete\n     *     map of services\n     * @return {!Object\x3cstring,!goog.async.Deferred|!goog.Promise\x3e}\n     */\n    appContext: function(source, aliasToServiceKey) {\n      if (goog.DEBUG) {\n        goog.object.forEach(aliasToServiceKey, function(serviceKey) {\n          goog.asserts.assert(\n              goog.isString(serviceKey) ||\n              serviceKey instanceof fava.services.ServiceId,\n              \x27Fava service ID must be a string or fava.service.ServiceId\x27);\n        });\n      }\n\n      var serviceKeys \x3d goog.object.getValues(aliasToServiceKey);\n      // Some unit tests make this function get called with an empty\n      // aliasToServiceKey object. Returning early removes the need to mock\n      // appContext.getAyncServices([]) -\x3e [], which makes writing test easier.\n      if (serviceKeys.length \x3d\x3d 0) {\n        return {};\n      }\n      var appContext_ \x3d source.getAppContext();\n      try {\n        var serviceMap \x3d appContext_.getAsyncServices(serviceKeys);\n      } catch (e) {\n        if (goog.DEBUG \x26\x26\n            !wiz.inject.Injector.getInstance().isLoaderAvailable()) {\n          e.message +\x3d \x27\\n\\n\x27 +\n              \x27Did you forget to provide a reference to the missing service \x27 +\n              \x27synchronously in a test?\x27 +\n              \x27\\n(See: wiz.testing.Environment.stub/ \x27 +\n              \x27wiz.testing.async.stub )\\n\\n\x27;\n        }\n        throw e;\n      }\n      return goog.object.map(aliasToServiceKey, function(serviceKey) {\n        return serviceMap[serviceKey];\n      });\n    },\n    /**\n     * Preloads modules for the specified service keys.\n     * @param {!wiz.async.Source} source\n     * @param {!wiz.async.RetrievableMap} aliasToServiceKey The complete\n     *     map of services\n     * @return {!Object\x3cstring,!goog.async.Deferred|!goog.Promise\x3e}\n     */\n    preload: function(source, aliasToServiceKey) {\n      var keys \x3d goog.object.getValues(aliasToServiceKey);\n      var d \x3d wiz.inject.Injector.getInstance().getAsync(keys);\n      return goog.object.map(aliasToServiceKey, function(unused1, unused2) {\n        return d;\n      });\n    }\n  });\n\n  wiz.async.bind({\n    /**\n     * Retrieves the wiz context.\n     * @param {!wiz.async.Source} source\n     * @param {string|!xid.Reference} key Key of the context.\n     * @return {!goog.async.Deferred\x3c!jspb.Message|string\x3e}\n     */\n    context: function(source, key) {\n      goog.asserts.assert(goog.isString(key) || key instanceof xid.Reference,\n          \x27Wiz context key must be a string\x27);\n      return source.getContext(key);\n    },\n    /**\n     * Allows code to specify a deferred or an array of deferreds that have to\n     * fire. This allows integrating wiz.async with programmatically generated\n     * deferreds. Use this to i.e. make a method wait on deferreds triggered\n     * in the constructor.\n     * @param {!wiz.async.Source} source\n     * @param {function():(!goog.async.Deferred|!Array\x3c!goog.async.Deferred\x3e)} fn\n     *     A function that must return a deferred or array of deferreds. Called\n     *     with the source as this.\n     * @return {!goog.async.Deferred}\n     */\n    deferred: function(source, fn) {\n      var d \x3d fn.call(source);\n      if (goog.isArray(d)) {\n        return goog.async.DeferredList.gatherResults(d);\n      }\n      return d;\n    }\n  });\n\n  /** @type {!Object\x3c!Object\x3e} */\n  wiz.async.Response.prototype.appContext;\n  /** @type {!Object\x3c!jspb.Message|string\x3e} */\n  wiz.async.Response.prototype.context;\n  /** @type {!Object} */\n  wiz.async.Response.prototype.deferred;\n  /** @type {!Object} */\n  wiz.async.Response.prototype.annotation;\n  /** @type {!Object\x3c!wiz.Object\x3e} */\n  wiz.async.Response.prototype.service;\n}\n\n\n// This forward declares the retriever names. Without this, if a retriever is\n// never used, its declaration breaks registration.\n/** @private */\nwiz.async.forwardDeclareBindings_ \x3d function() {\n  wiz.async.get(/** @type {!wiz.async.Source} */ (null), {\n    // Add new bindings here.\n    annotation: {},\n    appContext: {},\n    context: {},\n    controller: {},\n    controllers: {},\n    data: {},\n    deferred: {},\n    embeddedProto: {},\n    jsdata: {},\n    model: {},\n    renderer: {},\n    service: {}\n  }).then();\n};\nif (!goog.global) {  // Prevent dead code elimination, but never run the code.\n  wiz.async.forwardDeclareBindings_();\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/async/async.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/async/source.js";
eval("goog.provide(\x27wiz.async.Source\x27);\n\ngoog.forwardDeclare(\x27wiz.Query.Data\x27);\n\n\n\n/**\n * An interface for objects through which {@see wiz.async.get} can retrieve\n * stuff.\n * Note that wiz.async bindings may have more fine grained assumptions about\n * the object they are operating on (See i.e. the getController default)\n * binding. These should enforce this assumption with an assert.\n * @interface\n */\nwiz.async.Source \x3d function() {};\n\n\n/**\n * @return {!fava.AppContext} The Fava AppContext.\n */\nwiz.async.Source.prototype.getAppContext \x3d function() {};\n\n\n/**\n * @return {!fava.AppContext|undefined} The Fava AppContext.\n */\nwiz.async.Source.prototype.getOptionalAppContext \x3d function() {};\n\n\n/**\n * Return context data for a given key.\n * @param {string|!xid.Reference\x3cT\x3e} key\n * @return {!goog.async.Deferred\x3cT\x3e} Deferred of the context value.\n * @template T\n */\nwiz.async.Source.prototype.getContext \x3d function(key) {};\n\n\n/**\n * Return a {@see wiz.Query.Data} object for the given key.\n * @param {string} key Key for the data value.\n * @return {!wiz.Query.Data} Value of the data.\n */\nwiz.async.Source.prototype.getData \x3d function(key) {};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/async/source.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/appcontext/appcontexteventtype.js";
eval("// Copyright 2011 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Event types for events from fava.AppContext.\n *\n * @author mknichel@google.com (Mark Knichel)\n */\n\ngoog.provide(\x27fava.AppContextEventType\x27);\n\ngoog.require(\x27goog.events\x27);\n\n\n\n/**\n * Type for the events that can be dispatched from the AppContext.\n * @enum {string}\n */\nfava.AppContextEventType \x3d {\n  /**\n   * Type of event dispatched when an async service is started to load from the\n   * AppContext.  This will only be fired when the service has not been loaded\n   * yet.\n   */\n  ASYNC_SERVICE_CODE_LOADING: goog.events.getUniqueId(\n      \x27async-service-code-loading\x27),\n\n  /**\n   * Type of event dispatched when async service code has been loaded.  This\n   * will only fire the first time the service has been loaded.  When this event\n   * is fired, only the code for the service is loaded - the service has not\n   * necessarily been registered yet.\n   */\n  ASYNC_SERVICE_CODE_LOADED: goog.events.getUniqueId(\n      \x27async-service-code-loaded\x27)\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/appcontext/appcontexteventtype.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/extension/namespacedtype.js";
eval("// Copyright 2009 Google Inc.\n// All Rights Reserved.\n\n/**\n * @fileoverview Definition of the NamespacedType class.\n *\n * @author Jonathan Nowitz (nowitz@google.com)\n */\n\ngoog.provide(\x27fava.extension.NamespacedType\x27);\n\ngoog.require(\x27goog.asserts\x27);\n\n\n\n/**\n * A NamespacedType object encapsulates the namespace of the extension\n * and the extension-specific type, which must be unique within that\n * namespace but not across other namespaces.  The type string must\n * not contain \x27:\x27, as this would conflict with the namespace\n * separator.  Specific subtypes might wish to restict the space of legal type\n * names even further.\n * @param {!fava.extension.Namespace} namespace The namespace of the registering\n *     extension.\n * @param {string|number} type A unique string or number within the namespace.\n * @constructor\n * @struct\n */\nfava.extension.NamespacedType \x3d function(namespace, type) {\n  if (goog.isString(type)) {\n    goog.asserts.assert(type,\n        \x27NamespacedType does not allow empty type string\x27);\n    goog.asserts.assert(\n        !/[:]/.test(type),\n        \x27NamespacedType does not allow \x22:\x22 in type string: \x27 + type);\n  } else {\n    goog.asserts.assert(type \x3e\x3d 0,\n        \x27NamespacedType does not allow negative type number\x27);\n  }\n  goog.asserts.assert(\n      namespace, \x27NamespacedType does not accept undefined or null namespace\x27);\n\n  /**\n   * The registering namespace.\n   * @type {!fava.extension.Namespace}\n   * @private\n   */\n  this.namespace_ \x3d namespace;\n\n  /**\n   * The extension-specific type of view.\n   * @type {string|number}\n   * @private\n   */\n  this.type_ \x3d type;\n\n  if (!this.constructor.allInstances) {\n    this.constructor.allInstances \x3d {};\n  }\n  var key \x3d this.toString();\n  goog.asserts.assert(\n      !this.constructor.allInstances[key],\n      \x27Registering duplicate namespaced type \x27 + key);\n  this.constructor.allInstances[key] \x3d this;\n};\n\n\n/**\n * The map that verifies that each (namespace,type) pair occurs at most once.\n * We use longName:type as a key, which should work because\n * + longName needs to be unique across Namespaces, which is enforced by the\n *   Namespace class.\n * + neither longName nor type is allowed to contain a \x27:\x27.\n * This will be lazily initialized in the verification code in the constructor\n * so that it will be a different map for each subclass of NamespacedType.\n * @type {Object}\n * @protected\n */\nfava.extension.NamespacedType.allInstances;\n\n\n/**\n * The cached wire string for this NamespacedType\n * @type {string}\n * @private\n */\nfava.extension.NamespacedType.prototype.wireString_;\n\n\n/**\n * The cached value of toString() for this NamespacedType\n * @type {string}\n * @private\n */\nfava.extension.NamespacedType.prototype.toString_;\n\n\n/**\n * Returns the deserialized version of the string as an instance of class c.\n * Fails in debug mode if there is no such instance.  The client can safely\n * cast the result to type c.  This is intended to be used to implement\n * a subclass-specific deserialize method in each subclass that requires\n * serialization/deserialization.\n * @param {string} s The string to deserialize.\n * @param {Function} c The class of the deserialized type.\n * @return {fava.extension.NamespacedType} The deserialized object,\n *     which is of class c.\n */\nfava.extension.NamespacedType.deserialize \x3d function(s, c) {\n  goog.asserts.assert(c.allInstances[s]);\n  return /** @type {fava.extension.NamespacedType} */ (c.allInstances[s]);\n};\n\n\n/**\n * Returns the serialized version of this object.\n * @return {string} The serialized version of this.\n */\nfava.extension.NamespacedType.prototype.serialize \x3d function() {\n  return this.toString();\n};\n\n/**\n * Returns the wire string for this NamespacedType.\n * @return {string} The wire string for this view type, including the\n *     wire-appropriate name of the namespace.\n */\nfava.extension.NamespacedType.prototype.getWireString \x3d function() {\n  // We lazily initialize this value because the application could\n  // reasonably register the short name for the Namespace after\n  // creating the Namespace and the NamespacedType.\n  // If we eagerly fetch the wire name at NamespacedType creation time, it\n  // constrains the application to register short names before extension code\n  // gets loaded, which seems overly restrictive.\n  if (!this.wireString_) {\n    this.wireString_ \x3d this.namespace_.getWireString(this.type_);\n  }\n\n  return this.wireString_;\n};\n\n\n/**\n * Returns the wire string representation of its argument; if the input is\n * null, return null, and if the input is undefined, return undefined.  This\n * method can therefore be used in a backwards-compatible way when a string\n * type is replaced by a NamespacedType.\n * @param {fava.extension.NamespacedType|undefined} type The NamespacedType to\n *     convert to its wire string.\n * @return {string?|undefined} The wire string representation of the type.\n */\nfava.extension.NamespacedType.asWireString \x3d function(type) {\n  if (!type) {\n    return type;\n  }\n\n  return type.getWireString();\n};\n\n\n/**\n * Returns a string representation of this NamespacedType.  It is guaranteed\n * to be unique among all instances of a given subclass, but not between\n * instances of two different subclasses.\n * @override\n */\nfava.extension.NamespacedType.prototype.toString \x3d function() {\n  // We cannot use the wire string, as that is not safe to call until the\n  // short name map has been initialized, but toString may be called by a\n  // debugger before that initialization.  The long namespace name is\n  // safe to use any time.\n  if (!this.toString_) {\n    this.toString_ \x3d this.namespace_.getLongName() + \x27:\x27 + this.type_;\n  }\n\n  return this.toString_;\n};\n\n\n/**\n * Gets the namespace.\n * @return {!fava.extension.Namespace} The namespace.\n */\nfava.extension.NamespacedType.prototype.getNamespace \x3d function() {\n  return this.namespace_;\n};\n\n\n/**\n * Gets the type.\n * @return {string|number} The type.\n */\nfava.extension.NamespacedType.prototype.getType \x3d function() {\n  return this.type_;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/extension/namespacedtype.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/diagnostics/useractiontype.js";
eval("// Copyright 2009 Google Inc.\n// All Rights Reserved.\n\n/**\n * @fileoverview Definition of the UserActionType class.\n *\n * @author Jonathan Nowitz (nowitz@google.com)\n */\n\ngoog.provide(\x27fava.diagnostics.UserActionType\x27);\n\ngoog.require(\x27fava.extension.NamespacedType\x27);\n\n\n\n/**\n * A UserActionType object is a namespaced type that represents an action in the\n * UI provided within the specified namespace.\n * @extends {fava.extension.NamespacedType}\n * @param {!fava.extension.Namespace} namespace The namespace of the registering\n *     extension.\n * @param {string|number} type A unique string or number within the namespace.\n * @constructor\n * @struct\n */\nfava.diagnostics.UserActionType \x3d function(namespace, type) {\n  fava.extension.NamespacedType.call(this, namespace, type);\n};\ngoog.inherits(fava.diagnostics.UserActionType, fava.extension.NamespacedType);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/diagnostics/useractiontype.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/extension/namespace.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Provides a Namespace class with a static registry of\n *     Namespaces.\n *\n * @author nowitz@google.com (Jonathan Nowitz)\n */\n\ngoog.provide(\x27fava.extension.NAMESPACE\x27);\ngoog.provide(\x27fava.extension.Namespace\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\n\n\n\n/**\n * Represents the namespace for an application or extension.  The name\n * must be globally unique; the constructor will throw if a second namespace\n * with the same name is created.\n *\n * The legal characters in a Namespace are [a-zA-Z._].  This restriction applies\n * to short names as well.\n *\n * @param {string} name The human readable extension namespace.\n * @constructor\n * @final\n * @struct\n */\nfava.extension.Namespace \x3d function(name) {\n  goog.asserts.assert(\n      !fava.extension.Namespace.namespacesByLongName_.hasOwnProperty(name),\n      \x27Attempt to create a second Namespace with name: \x27 + name);\n\n  goog.asserts.assert(\n      !/[^0-9a-zA-Z._]/.test(name),\n      \x27Attempt to create a Namespace with invalid characters: \x27 + name);\n\n  /**\n   * The long, human readable name of the namespace.\n   * @type {string}\n   * @private\n   */\n  this.name_ \x3d name;\n\n  fava.extension.Namespace.namespacesByLongName_[name] \x3d this;\n};\n\n\n/**\n * A map from long name (a string) to Namespace.  Used to make sure that\n * namespaces are unique.\n *\n * @type {Object}\n * @private\n */\nfava.extension.Namespace.namespacesByLongName_;\n\n\n/**\n * A map from long name (a string) to short name (also a string).  The\n * map must be invertible on the server side, so short names must be\n * unique.\n * @type {Object}\n * @private\n */\nfava.extension.Namespace.wireNameMap_;\n\n\n/**\n * Initialize static datastructures.  Should only be called here, and by\n * unit tests.\n * @private\n */\nfava.extension.Namespace.reset_ \x3d function() {\n  fava.extension.Namespace.namespacesByLongName_ \x3d {};\n  fava.extension.Namespace.wireNameMap_ \x3d null;\n};\nfava.extension.Namespace.reset_();\n\n\n/**\n * Returns the wire name for the given namespace.  The namespace must\n * be registered.  If the application is going to register a short\n * name map, it must do so before this method is first called.  If\n * there is no short name, this method returns the long name.  The\n * short name can be empty if it has been explicitly set that way.\n * The empty short name is special cased, and its wire format does not\n * contain a colon, for backwards compatibility with pre-namespaced\n * client and server code.  See getWireString().\n * @param {string} name The name of the namespace.\n * @return {string} The wire name for the given namespace.\n */\nfava.extension.Namespace.getWireName \x3d function(name) {\n  if (!fava.extension.Namespace.wireNameMap_) {\n    // No short name map has been registered; long names will be used for\n    // all namespaces.\n    fava.extension.Namespace.wireNameMap_ \x3d {};\n  }\n\n  var wireName \x3d fava.extension.Namespace.wireNameMap_[name];\n  if (goog.isDef(wireName)) {\n    return wireName;\n  }\n\n  // Make sure the namespace has already been registered.\n  goog.asserts.assert(\n      fava.extension.Namespace.namespacesByLongName_.hasOwnProperty(name),\n      \x27Attempt to get wire name for unregistered namespace with name: \x27 +\n      name);\n\n  // Cache the long name as the wire name.\n  fava.extension.Namespace.wireNameMap_[name] \x3d name;\n\n  return name;\n};\n\n\n/**\n * Sets the map from long name to short name.  It is an error to set\n * the map after it has already been used (it will have been\n * initialized to an empty map if it didn\x27t already exist at the time\n * of its first use).\n * @param {!Object} map The maplike Object.\n */\nfava.extension.Namespace.setShortNameMap \x3d function(map) {\n  goog.asserts.assert(\n      !fava.extension.Namespace.wireNameMap_,\n      \x27Attempt to register a short name map after it has already \x27 +\n      \x27 been registered or used\x27);\n\n  if (goog.DEBUG) {\n    // Verify that all values in the short name map are valid.\n    // The keys will be validated on retrieval, since the creation of a\n    // Namespace will fail with an invalid name, and fetching a short name\n    // fails if the Namespace object does not exist.\n    goog.object.forEach(\n        map,\n        function(shortName, x, y) { goog.asserts.assert(\n            !/[^0-9a-zA-Z._]/.test(shortName),\n            \x27Attempt to register a short name with invalid characters: \x27 +\n                shortName); });\n  }\n\n  fava.extension.Namespace.wireNameMap_ \x3d map;\n};\n\n\n/**\n * Returns the name of the namespace.\n * @return {string} The name of the namespace.\n */\nfava.extension.Namespace.prototype.getLongName \x3d function() {\n  return this.name_;\n};\n\n\n/**\n * Returns the namespaced string for the input datum.\n * @param {string|number} datum The string to namespace.\n * @return {string} The namespaced string for the input datum.\n */\nfava.extension.Namespace.prototype.getWireString \x3d function(datum) {\n  var wireName \x3d fava.extension.Namespace.getWireName(this.name_);\n  if (!wireName) {\n    // The empty namespace is represented by just sending the datum; this\n    // provides backwards compatibility for pre-namespaced applications, but\n    // new applications can use this to keep their most common wire strings\n    // short.\n    return String(datum);\n  }\n\n  return wireName + \x27:\x27 + datum;\n};\n\n\n/**\n * Namespace for core fava components.\n * @type {!fava.extension.Namespace}\n */\nfava.extension.NAMESPACE \x3d new fava.extension.Namespace(\x27lib\x27);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/extension/namespace.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/appcontext/appcontext.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Defines the fava.AppContext class.\n *\n *\n * @author jonp@google.com (Jon Perlow)\n * @author pupius@google.com (Daniel Pupius)\n */\n\ngoog.provide(\x27fava.AppContext\x27);\ngoog.provide(\x27fava.AppContext.AsyncLoadReport\x27);\ngoog.provide(\x27fava.AppContext.Event\x27);\ngoog.provide(\x27fava.AppContext.InvalidServiceError\x27);\ngoog.provide(\x27fava.AppContext.ModuleConfigurationError\x27);\ngoog.provide(\x27fava.AppContext.ModuleLoadError\x27);\n\ngoog.require(\x27fava.AppContextEventType\x27);\ngoog.require(\x27fava.diagnostics.UserActionType\x27);\ngoog.require(\x27fava.extension.Namespace\x27);\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27fava.services.resolveDependencies\x27);\ngoog.require(\x27goog.Disposable\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.debug\x27);\ngoog.require(\x27goog.debug.Error\x27);\ngoog.require(\x27goog.dispose\x27);\ngoog.require(\x27goog.events.Event\x27);\ngoog.require(\x27goog.events.EventTarget\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27proto.fava.logging.FavaLogging\x27);\n\ngoog.forwardDeclare(\x27goog.loader.AbstractModuleManager\x27);\n\n\n\n/**\n * The AppContext holds shared services that registered and retrieved by name.\n * It\x27s generally passed into components to let them get the services they need.\n * If JS had an dependency injection engine like Guice, this object would not\n * exist and we\x27d used bindings instead.\n * @param {fava.AppContext\x3d} opt_parentAppContext Optional parent AppContext.\n * @constructor\n * @extends goog.Disposable\n */\nfava.AppContext \x3d function(opt_parentAppContext) {\n  fava.AppContext.base(this, \x27constructor\x27);\n\n  if (goog.DEBUG) {\n    /**\n     * The ID for this AppContext\n     * @type {number}\n     */\n    this.id \x3d fava.AppContext.nextId_++;\n\n    /**\n     * The list of registered services, in the order of which they are\n     * registered.\n     * @type {Array\x3cstring|!fava.services.ServiceId\x3e}\n     */\n    this.serviceRegistrationOrder \x3d [];\n  }\n\n  /**\n   * The registered services.\n   * @type {Object}\n   * @private\n   */\n  this.services_ \x3d {};\n\n  /**\n   * Map of late services to the module which loads them. This map is shared\n   * among all AppContexts in a tree.\n   * @type {Object\x3c(string|!fava.services.ServiceId),string\x3e}\n   * @private\n   */\n  this.lateServiceModuleIdMap_ \x3d {};\n\n  /**\n   * Map of services to the factory function which will create the service.\n   * The functions should accept the appContext as their only argument and\n   * return a non-null object. This map is shared among all AppContexts in a\n   * tree.\n   * @type {Object\x3c(string|!fava.services.ServiceId),\n                    function(!fava.AppContext):!Object\x3e}\n   * @private\n   */\n  this.serviceFactoryMap_ \x3d {};\n\n  /**\n   * Deferred objects to signal when a service is registered in the scope\n   * of an AppContext. This map is shared among all AppContexts in a tree.\n   * @type {Object\x3c(string|!fava.services.ServiceId),\n   *                Array\x3c{appContext: fava.AppContext,\n   *                        d: goog.async.Deferred}\x3e\x3e}\n   * @private\n   */\n  this.serviceCallbacks_ \x3d {};\n\n  /**\n   * Deferred objects that delay looking for async services after a module load.\n   * This map is shared among all AppContexts in a tree.\n   * @type {Object\x3c(string|!fava.services.ServiceId),goog.async.Deferred\x3e}\n   * @private\n   */\n  this.asyncDeferrals_ \x3d {};\n\n  /**\n   * Map containing service IDs which should not be inherited from the parent\n   * context.\n   * @type {Object\x3c(string|!fava.services.ServiceId),boolean\x3e}\n   * @private\n   */\n  this.noInheritMap_ \x3d {};\n\n  /**\n   * Event target used for event propagation.\n   * @type {goog.events.EventTarget}\n   * @private\n   */\n  this.eventTarget_ \x3d opt_parentAppContext ?\n      opt_parentAppContext.getEventTarget() : new goog.events.EventTarget();\n\n  /**\n   * Whether we created the EventTarget and should dispose it.\n   * @type {boolean}\n   * @private\n   */\n  this.shouldDisposeEventTarget_ \x3d !opt_parentAppContext;\n\n  /**\n   * The parent AppContext this AppContext can delegate to.\n   * @type {fava.AppContext}\n   * @private\n   */\n  this.parentAppContext_ \x3d null;\n\n  if (opt_parentAppContext) {\n    this.parentAppContext_ \x3d opt_parentAppContext;\n\n    // Change this context to refer to stuff from the parent, so we\n    // don\x27t have to recurse up the chain so many places. We could put\n    // these objects in the prototype instead, if we were comfortable with\n    // a single hierarchy of AppContext objects... not comfortable yet.\n    this.serviceFactoryMap_ \x3d opt_parentAppContext.serviceFactoryMap_;\n    this.serviceCallbacks_ \x3d opt_parentAppContext.serviceCallbacks_;\n    this.lateServiceModuleIdMap_ \x3d opt_parentAppContext.lateServiceModuleIdMap_;\n    this.asyncDeferrals_ \x3d opt_parentAppContext.asyncDeferrals_;\n  } else {\n    fava.AppContext.timeInitialized_ \x3d goog.now();\n  }\n\n  var rootAppContext \x3d this.getRootAppContext();\n  if (this !\x3d rootAppContext) {\n    // Add this to the root AppContext\x27s list of non-disposed child\n    // AppContexts.\n    if (!rootAppContext.childAppContexts_) {\n      rootAppContext.childAppContexts_ \x3d [this];\n    } else {\n      rootAppContext.childAppContexts_.push(this);\n    }\n  }\n};\ngoog.inherits(fava.AppContext, goog.Disposable);\n\nif (goog.DEBUG) {\n  /**\n   * An incrementing counter used to identify AppContexts for debugging.\n   * @type {number}\n   * @private\n   */\n  fava.AppContext.nextId_ \x3d 1;\n\n  /**\n   * A getter for child app contexts to be used only by AppContextSpy.\n   * @return {!Array\x3c!fava.AppContext\x3e} Child appContexts.\n   */\n  fava.AppContext.prototype.getChildAppContexts \x3d function() {\n    return this.childAppContexts_ || [];\n  };\n}\n\n/**\n * The AppContext for UI components that should overlay (and not scroll with)\n * this AppContext\x27s canvas, or undefined if one has not been set\n * @type {fava.AppContext|undefined}\n * @private\n */\nfava.AppContext.prototype.overlayAppContext_;\n\n/**\n * The module manager to use when loading code.\n * @type {goog.loader.AbstractModuleManager}\n * @private\n */\nfava.AppContext.prototype.moduleManager_;\n\n/**\n * Whether registration check is disabled for unit tests.\n * @type {boolean}\n * @private\n */\nfava.AppContext.prototype.disableRegistrationException_;\n\n/**\n * Array of all non-disposed contexts which are child AppContexts of\n * this AppContext.  That is all child AppContexts whose {#rootAppContext_}\n * field points to this AppContext instance.  Lazily created\n * the first time a child is created. Will always be null for child AppContexts.\n * @type {Array\x3c!fava.AppContext\x3e|undefined}\n * @private\n */\nfava.AppContext.prototype.childAppContexts_;\n\n/**\n * Array of all the reports of services being async loaded.  Used to debug\n * loading of services for instance before the initial load of the application\n * is finished.\n * @type {!Array\x3c!fava.AppContext.AsyncLoadReport\x3e|undefined}\n */\nfava.AppContext.prototype.asyncLoadReports_;\n\n/**\n * Time at which the first AppContext was constructed. Used for measuring\n * changes in when initial events happen.\n * @type {number}\n * @private\n */\nfava.AppContext.timeInitialized_;\n\n\n/**\n * Whether to log a new user action for loading a fava service, if\n * Fava Diagnostics is also configured to log fava service loads.\n * This is computed once per session so that the log records can be\n * sampled by session so it does not generate too many log records.\n * @private {boolean}\n */\nfava.AppContext.logFavaServiceLoadUserAction_ \x3d Math.random() \x3c 0.05;\n\n\n/**\n * Turns on or off the tracking of loading of modules for async services.\n * If tracking is stopped, clears the array of records logged since the tracking\n * was enabled.\n * @param {boolean} enable Whether to turn the tracking on or off.  Turning the\n *     tracking off, clears tracking records.\n */\nfava.AppContext.prototype.trackAsyncServiceLoading \x3d function(enable) {\n  this.asyncLoadReports_ \x3d enable ? (this.asyncLoadReports_ || []) : undefined;\n};\n\n\n/**\n * Returns an array of records which describe loading of JS modules to get async\n * services.  The array contains all records since loading tracking was enabled.\n * Each record is a string which contains the requested service id, the loaded\n * module id and a simple stack trace which allows identification of the code\n * that loaded the service module.\n * @return {!Array\x3c!fava.AppContext.AsyncLoadReport\x3e|undefined} The array with\n *     records which contain the information about asynchronously loaded\n *     services or undefined if the tracking is not enabled.\n */\nfava.AppContext.prototype.getAsyncServiceLoadingRecords \x3d function() {\n  return this.asyncLoadReports_;\n};\n\n\n/**\n * Returns all instances of the service in the entire AppContext tree containing\n * this AppContext.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} id The ID of the service.\n * @return {!Array\x3cT\x3e} The array of service instances, or an\n *   empty array if there are none.\n * @template T\n */\nfava.AppContext.prototype.getAllServiceInstances \x3d function(id) {\n  var services \x3d [];\n  var rootAppContext \x3d this.getRootAppContext();\n  var service;\n  // We reach in instead of using getOrNull() because the latter can cause a\n  // service to be instantiated via a factory.\n  if (rootAppContext.services_[id]) {\n    service \x3d rootAppContext.services_[id][0];\n  }\n  if (service) {\n    services.push(service);\n  }\n\n  var childAppContexts \x3d rootAppContext.childAppContexts_ || [];\n  for (var i \x3d 0; i \x3c childAppContexts.length; i++) {\n    if (childAppContexts[i].services_[id]) {\n      service \x3d childAppContexts[i].services_[id][0];\n    }\n    if (service \x26\x26 !goog.array.contains(services, service)) {\n      services.push(service);\n    }\n  }\n\n  return services;\n};\n\n\n/**\n * Returns the time elapsed since creation of the root appcontext.\n * @return {number} Time since the root appcontext was constructed.\n */\nfava.AppContext.prototype.getTimeSinceInitialized \x3d function() {\n  return goog.now() - fava.AppContext.timeInitialized_;\n};\n\n\n/**\n * Returns the root of the AppContext tree.\n * @return {!fava.AppContext} The root AppContext.\n */\nfava.AppContext.prototype.getRootAppContext \x3d function() {\n  var context \x3d this;\n  while (context.parentAppContext_) {\n    context \x3d context.parentAppContext_;\n  }\n  return context;\n};\n\n\n/**\n * Returns the parent of this AppContext.\n * @return {fava.AppContext} The parent AppContext.\n */\nfava.AppContext.prototype.getParentAppContext \x3d function() {\n  return this.parentAppContext_;\n};\n\n\n/**\n * Helper that determines if this AppContext is a descendent of a given\n * AppContext, i.e. if the given AppContext is in the parent chain of this\n * AppContext or is this AppContext.\n * @param {fava.AppContext} appContext The AppContext to check.\n * @return {boolean} Whether this AppContext descends from the given AppContext.\n * @private\n */\nfava.AppContext.prototype.descendsFrom_ \x3d function(appContext) {\n  var candidate \x3d this;\n  while (candidate) {\n    if (candidate \x3d\x3d appContext) {\n      return true;\n    }\n    candidate \x3d candidate.parentAppContext_;\n  }\n  return false;\n};\n\n\n/**\n * Sets the AppContext for UI components that should overlay (and not scroll\n * with) this AppContext\x27s canvas.  Ownership of the overlay AppContext is\n * transferred to this instance, which will dispose of it when it is\n * itself disposed.\n * @param {!fava.AppContext} appContext The AppContext.\n */\nfava.AppContext.prototype.setOverlayAppContext \x3d function(appContext) {\n  // TODO(adeboor): why is this not a service object or available through\n  // some other means? this is very specific to how G* is set up\n  // Note that each AppContext can have its own overlay AppContext.\n  this.overlayAppContext_ \x3d appContext;\n};\n\n\n/**\n * Gets the AppContext for UI components that should overlay (and not scroll\n * with) this AppContext\x27s canvas.\n * @return {fava.AppContext} An AppContext, or null if no overlay\n *     AppContext has been set for this AppContext.\n */\nfava.AppContext.prototype.getOverlayAppContext \x3d function() {\n  // Note that each AppContext can have its own overlay AppContext.\n  return this.overlayAppContext_ || null;\n};\n\n\n/**\n * Gets a service by its id. Will throw if the service isn\x27t registered. Use\n * getOrNull if your code is designed to handle running with and without the\n * service.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} id The id of the service to get.\n * @return {T} The service object.\n * @template T\n */\nfava.AppContext.prototype.get \x3d function(id) {\n  var service \x3d this.getOrNull(id);\n  if (goog.DEBUG \x26\x26 !goog.isDefAndNotNull(service) \x26\x26\n      this.disableRegistrationException_) {\n    // Give some indication of the problem, if the developer inspects a\n    // service object on which some method doesn\x27t exist.\n    service \x3d {\x27BOGUS\x27: \x27Service \x27 + id + \x27 was not registered\x27};\n  }\n  if (!goog.isDefAndNotNull(service)) {\n    throw new fava.AppContext.InvalidServiceError(id);\n  }\n  return service;\n};\n\n\n/**\n * Determines if a service can be obtained from this AppContext. This differs\n * from calling getOrNull in that if the service is registered as a factory,\n * the service object is *not* created by this call.\n * NOTE: When multiple app contexts are used in an application, this behavior\n * will differ than {@link getOrNull} since this method does not check if the\n * service is defined on any parent\x27s AppContext.\n *\n * @param {string|!fava.services.ServiceId} id The id of the service to check.\n * @return {boolean} True if calling getOrNull would return non-null.\n */\nfava.AppContext.prototype.isRegistered \x3d function(id) {\n  return !!(this.services_[id] || this.getServiceFactory(id));\n};\n\n\n/**\n * Determines if a service can be obtained from this AppContext via getAsync.\n * @param {string|!fava.services.ServiceId} id The id of the service to check.\n * @return {boolean} True if calling getAsync would call back non-null,\n *     possibly after loading a module.\n */\nfava.AppContext.prototype.isLateRegistered \x3d function(id) {\n  return !!(this.services_[id] || this.getServiceFactory(id) ||\n            ((id instanceof fava.services.ServiceId) ? id.hasModuleId() :\n                this.lateServiceModuleIdMap_[id]));\n};\n\n\n/**\n * Gets a service by its id.  Will return null if the service isn\x27t registered.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} id The id of the service to get.\n * @return {T|null} The service object or null.\n * @template T\n */\nfava.AppContext.prototype.getOrNull \x3d function(id) {\n  // Look for the thing already existing.\n  for (var context \x3d this; context; context \x3d context.parentAppContext_) {\n    // Instrumentation for b/11119285\n    if (context.isDisposed()) {\n      throw Error(\x27AppContext is disposed.\x27);\n    }\n    if (context.services_[id]) {\n      return context.services_[id][0];\n    }\n    if (context.noInheritMap_[id]) {\n      break;\n    }\n  }\n\n  // If there\x27s a service factory available, use it to create the service.\n  var factory \x3d this.getServiceFactory(id);\n  if (factory) {\n    var service \x3d factory(this);\n    if (!goog.isDefAndNotNull(service)) {\n      throw Error(\x27Factory method for service \x27 + id +\n          \x27 returned null or undefined.\x27);\n    }\n    this.registerService(id, service);\n    return service;\n  }\n\n  return null;\n};\n\n\n/**\n * Gets an async service, if necessary loading the required module first.\n * It is an error if the ID is not registered -- the errback of the returned\n * Deferred will be called.\n * @see #registerLateService\n * @param {string|!fava.services.ServiceId\x3cT\x3e} id The id of the service to get.\n * @param {boolean\x3d} opt_noLoad True to not load the service code yet. If the\n *     service isn\x27t registered, the deferred object will fire when the module\n *     loads for some other reason.\n * @return {!goog.async.Deferred\x3cT\x3e} A deferred object whose callback will\n *     receive the service as its argument.  If you decide you don\x27t need the\n *     service, and it has not yet loaded, you should call cancel() on the\n *     Deferred.\n * @template T\n */\nfava.AppContext.prototype.getAsync \x3d function(id, opt_noLoad) {\n  return this.getAsyncServices([id], opt_noLoad)[id];\n};\n\n\n/**\n * Gets multiple async services, if necessary loading the required modules\n * in batch first.\n * @see #registerLateService\n * @param {Array\x3cstring|!fava.services.ServiceId\x3e} ids The ids of the services\n *     to get.\n * @param {boolean\x3d} opt_noLoad True to not load the service code yet. If the\n *     services aren\x27t registered, the respective deferred objects will fire\n *     when its respective service registers for some other reason.\n * @return {!Object\x3c!goog.async.Deferred\x3e} A map of ids to deferred objects\n *     whose callbacks will each receive the respective service as its argument.\n *     For services that are not yet loaded and no longer needed, the respective\n *     Deferred objects should be cancel()\x27ed.\n */\nfava.AppContext.prototype.getAsyncServices \x3d function(ids, opt_noLoad) {\n  var moduleManager \x3d this.getModuleManager();\n  var doLoad \x3d !opt_noLoad;\n\n  var deferredMap \x3d {};\n  var moduleIds \x3d [];\n  var unloadedIds \x3d\n      /** @type {!Array\x3c(string|!fava.services.ServiceId)\x3e} */ ([]);\n  var loadingServiceToModuleIdMap \x3d {};\n  var serviceIdToUserActionMap \x3d {};\n\n  var diagnostics \x3d this.getOrNull(fava.services.DIAGNOSTICS);\n  // Create the map of deferreds\n  for (var i \x3d 0; i \x3c ids.length; i++) {\n    var id \x3d ids[i];\n    var service \x3d this.getOrNull(id);\n    if (service) {\n      // Already registered\n      var d \x3d new goog.async.Deferred();\n      deferredMap[id] \x3d d;\n      if (service.asyncInitialize) {\n        d.awaitDeferred(service.asyncInitialize());\n        d.addCallback(goog.partial(function(s) {\n          return s;\n        }, service));\n      }\n      d.callback(service);\n    } else if (this.asyncDeferrals_[id]) {\n      // Module is loaded, but service is not yet registered.\n      var d \x3d this.asyncDeferrals_[id].branch();\n      d.addCallback(goog.bind(this.getServiceAfterLoadCleanup_, this, id));\n      deferredMap[id] \x3d d;\n    } else {\n      goog.asserts.assert(\n          !doLoad || moduleManager,\n          \x27A module manager is required for async loading. (\x27 + id + \x27)\x27);\n      var toLoad;\n      if (id instanceof fava.services.ServiceId) {\n        toLoad \x3d fava.services.resolveDependencies([id]).modules;\n      } else {\n        var moduleId \x3d this.lateServiceModuleIdMap_[id];\n        if (moduleId) {\n          toLoad \x3d [moduleId];\n        }\n      }\n\n      if (doLoad \x26\x26 (!toLoad || !toLoad.length)) {\n        var d \x3d new goog.async.Deferred();\n        deferredMap[id] \x3d d;\n        d.errback(new fava.AppContext.InvalidServiceError(id));\n      } else {\n        if (toLoad) {\n          if (diagnostics \x26\x26 id instanceof fava.services.ServiceId \x26\x26\n              diagnostics.shouldLogFavaServiceLoads()) {\n            if (fava.AppContext.logFavaServiceLoadUserAction_) {\n              var userAction \x3d diagnostics.startUserAction(\n                  fava.AppContext.ActionType_.LOAD_SERVICE);\n              serviceIdToUserActionMap[id] \x3d userAction;\n            }\n            diagnostics.logFavaServiceLoad(id);\n          }\n          moduleIds.push.apply(moduleIds, toLoad);\n          // The last module we download for this particular service blocks\n          // calling the callback for the service.\n          loadingServiceToModuleIdMap[id] \x3d goog.array.peek(toLoad);\n        }\n        unloadedIds.push(id);\n        // Don\x27t add a deferred yet as we will add them later\n      }\n    }\n  }\n\n  // Either load or wait to be loaded\n  if (doLoad) {\n    if (moduleIds.length) {\n      if (this.asyncLoadReports_) {\n        this.asyncLoadReports_.push(new fava.AppContext.AsyncLoadReport(\n            unloadedIds, moduleIds, goog.debug.getStacktraceSimple()));\n      }\n\n      for (var i \x3d 0; i \x3c unloadedIds.length; i++) {\n        this.getEventTarget().dispatchEvent(new fava.AppContext.Event(\n            fava.AppContextEventType.ASYNC_SERVICE_CODE_LOADING,\n            unloadedIds[i]));\n      }\n\n      // Don\x27t worry about undefined moduleIds since we already checked that\n      // if doLoad was true, moduleIds would not be undefined.\n      var loadPromises \x3d this.getModuleManager().loadMultiple(moduleIds);\n\n      for (var i \x3d 0; i \x3c unloadedIds.length; i++) {\n        var id \x3d unloadedIds[i];\n        var moduleId \x3d loadingServiceToModuleIdMap[id];\n        var promise \x3d loadPromises[moduleId];\n        // Maintain synchronous resolution if the promise is a Deferred.\n        var d \x3d promise instanceof goog.async.Deferred ?\n            promise.branch() :\n            goog.async.Deferred.fromPromise(promise);\n\n        deferredMap[id] \x3d d;\n        if (serviceIdToUserActionMap[id]) {\n          d.addCallback(function() {\n            diagnostics.finishUserAction(serviceIdToUserActionMap[id]);\n          });\n        }\n        this.addPostLoadCallbackForId_(d, id, moduleId);\n      }\n    }\n  } else {\n    // If we aren\x27t loading, then register each deferred for callback when the\n    // service is registered.\n    for (var i \x3d 0; i \x3c unloadedIds.length; i++) {\n      var id \x3d unloadedIds[i];\n      var moduleId \x3d moduleIds[i];\n      var d \x3d new goog.async.Deferred(\n          goog.bind(this.clearServiceCallback_, this, id));\n      deferredMap[id] \x3d d;\n\n      // Add this to the map of things watching for the service to register.\n      var cbArray \x3d this.serviceCallbacks_[id];\n      if (!cbArray) {\n        this.serviceCallbacks_[id] \x3d cbArray \x3d [];\n      }\n\n      if (moduleId) {\n        // NOTE: The following is to preserve previous behavior.\n        // It is possible that a service that is bound to a particular module\n        // actually winds up in another module, moved there by the\n        // PmfFileEnhancer. The code that calls getAsync may still be expecting,\n        // when it gets the service object, that the bound module is loaded.\n        // To ensure this, we still include the module load call in\n        // the callback chain for the Deferred for the service, which\n        // guarantees that the bound module is actually loaded before\n        // subsequent callbacks (including the one that receives the service\n        // object) are called.\n        this.addBackupLoadCallback_(d, id, moduleId);\n\n        // We don\x27t add post load callbacks because we aren\x27t going to treat\n        // this as a real load.\n      }\n\n      // Regardless of whether we\x27re loading or not, we want to fetch the\n      // service and pass it on when the service is (supposedly) registered.\n      d.addCallback(goog.bind(\n          this.getServiceMaybeAfterLoad_, this, id, moduleId));\n\n      cbArray.push({appContext: this, d: d});\n    }\n  }\n\n  return deferredMap;\n};\n\n\n/**\n * Defers the return of a service object to the caller of getAsync. Use this\n * if there are more steps in preparing an async service for use than just\n * loading a module: during initialization of the module that contains the\n * service code, call this method with a goog.async.Deferred object. When\n * you fire the Deferred, the service object will be fetched from the\n * AppContext and returned to the waiting caller(s) of getAsync.\n *\n * It is not legal to call this more than once per service.  If you need\n * multiple async service registrations, make the Deferred you register here\n * block on them using its awaitDeferred method.\n *\n * @param {!fava.services.ServiceId|string} serviceId The service to defer.\n * @param {!goog.async.Deferred} d The object on which to wait.\n */\nfava.AppContext.prototype.deferAsyncRegistration \x3d function(serviceId, d) {\n  goog.asserts.assert(\n      !this.asyncDeferrals_[serviceId],\n      \x27Cannot defer \x27 + serviceId + \x27 more than once.\x27);\n  goog.asserts.assert(\n      !this.getServiceFactory(serviceId) \x26\x26 !this.getOrNull(serviceId),\n      \x27Cannot defer registration of \x27 + serviceId + \x27: it\\\x27s already there.\x27);\n  this.asyncDeferrals_[serviceId] \x3d d;\n};\n\n\n/**\n * Adds a callback to the deferred to load the module id for the given service\n * id.\n * @param {!goog.async.Deferred} d The deferred to add callbacks to.\n * @param {string|!fava.services.ServiceId} serviceId The service that is in\n *     the module.\n * @param {string} moduleId The module that is being loaded.\n * @private\n */\nfava.AppContext.prototype.addBackupLoadCallback_ \x3d function(\n    d, serviceId, moduleId) {\n  // We don\x27t use goog.bind so we don\x27t pass a spurious argument to\n  // load (also makes it so people that want to mock the module\n  // manager for testing have an easier time doing so).\n  d.addCallback(function(ignored) {\n    var moduleManager \x3d this.getModuleManager();\n    // This Deferred will settle on moduleManager.getModuleContext().\n    if (moduleManager.getModuleInfo(moduleId).isLoaded()) {\n      // Module was already loaded, so we don\x27t need to record any async loading\n      // record.\n      return moduleManager.getModuleContext();\n    } else {\n      if (this.asyncLoadReports_) {\n        this.asyncLoadReports_.push(new fava.AppContext.AsyncLoadReport(\n            [serviceId], [moduleId], goog.debug.getStacktraceSimple()));\n      }\n      // moduleManager.load() also resolves to moduleManager.getModuleContext().\n      return moduleManager.load(moduleId);\n    }\n  }, this);\n\n  // Add an errback handling a module load error.\n  d.addErrback(\n      goog.bind(this.getModuleLoadError_, this, serviceId, moduleId));\n};\n\n\n/**\n * Adds callbacks for post load events. Currently dispatches event\n * notifications, handles errors, and tries to get the service after load.\n * @param {!goog.async.Deferred} d The deferred to add callbacks to.\n * @param {string|!fava.services.ServiceId} serviceId The service that is in\n *     the module.\n * @param {string} moduleId The module that is being loaded.\n * @private\n */\nfava.AppContext.prototype.addPostLoadCallbackForId_ \x3d function(\n    d, serviceId, moduleId) {\n  // After the module containing the service loads, dispatch an event\n  // notifying listeners that the service has been loaded.\n  d.addCallback(function(ignored) {\n      this.getEventTarget().dispatchEvent(new fava.AppContext.Event(\n          fava.AppContextEventType.ASYNC_SERVICE_CODE_LOADED,\n          serviceId));\n  }, this);\n\n  // Add an errback handling a module load error.\n  d.addErrback(\n      goog.bind(this.getModuleLoadError_, this, serviceId, moduleId));\n\n  // We want to fetch the service and pass it on when the service is\n  // registered.\n  d.addCallback(goog.bind(\n      this.getServiceMaybeAfterLoad_, this, serviceId, moduleId));\n};\n\n\n/**\n * Handles the deferred callback when the module has loaded, or the service\n * has registered (in the no-load case).\n * @param {string|!fava.services.ServiceId} serviceId The service that is in\n *     the module.\n * @param {string} moduleId The module id.\n * @return {!Object|!goog.async.Deferred} The service object or a Deferred that\n *     will cause the Deferred returned from getAsync to pause until the\n *     service is registered.\n * @private\n */\nfava.AppContext.prototype.getServiceMaybeAfterLoad_ \x3d function(\n    serviceId, moduleId) {\n  var service \x3d this.getOrNull(serviceId);\n  if (!goog.isDefAndNotNull(service)) {\n    if (this.asyncDeferrals_[serviceId]) {\n      // Service code requested a delay. Arrange for us to be called again\n      // when that Deferred fires, and pause the getAsync-returned Deferred\n      // until that happens. When we\x27re called as part of this new Deferred\n      // firing, and we return the service object, the service object will\n      // propagate to the getAsync-returned Deferred and be passed to the\n      // getAsync-caller\x27s callback as usual.\n      var d \x3d this.asyncDeferrals_[serviceId].branch();\n      d.addCallback(\n          goog.bind(this.getServiceMaybeAfterLoad_, this, serviceId, moduleId));\n      return d;\n    }\n    throw new fava.AppContext.ModuleConfigurationError(\n        serviceId, moduleId, \x27Module loaded but service or factory not \x27 +\n        \x27registered with app contexts.\x27);\n  }\n  if (service.asyncInitialize) {\n    var d \x3d new goog.async.Deferred();\n    d.awaitDeferred(service.asyncInitialize());\n    d.callback(service);\n    d.addCallback(\n        goog.bind(this.getServiceAfterLoadCleanup_, this, serviceId));\n    return d;\n  }\n  return this.getServiceAfterLoadCleanup_(serviceId);\n};\n\n\n/**\n * To be used after getServiceMaybeAfterLoad(). This function cleans up\n * any deferred that were holding put the registration and returns the instance\n * of the service.\n * @param {string|!fava.services.ServiceId} serviceId The service id.\n * @return {!Object} The service object.\n * @private\n */\nfava.AppContext.prototype.getServiceAfterLoadCleanup_ \x3d function(serviceId) {\n  if (this.asyncDeferrals_[serviceId]) {\n    // Clean up the extra object that will never be used again.\n    delete this.asyncDeferrals_[serviceId];\n  }\n  return this.get(serviceId);\n};\n\n\n/**\n * Gets an Error object for a failed module load.  If the deferred was canceled\n * then that error is propagated.\n * @param {string|!fava.services.ServiceId} serviceId The service id that was\n *     requested.\n * @param {string} moduleId The id of the module that failed to load.\n * @param {Error} cause The reason for the failure.\n * @return {!Error} An error object.\n * @private\n */\nfava.AppContext.prototype.getModuleLoadError_ \x3d function(\n    serviceId, moduleId, cause) {\n  if (cause instanceof goog.async.Deferred.CanceledError) {\n    return cause;\n  } else {\n    return new fava.AppContext.ModuleLoadError(serviceId, moduleId, cause);\n  }\n};\n\n\n/**\n * Registers the service with its id.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} id The id to register.\n * @param {T} service The service object.\n * @param {boolean\x3d} opt_dontDispose Specify true not to dispose the service\n *     when the AppContext is disposed.\n * @return {T} The registered service object.\n * @template T\n */\nfava.AppContext.prototype.registerService \x3d function(\n    id, service, opt_dontDispose) {\n  // This can happen if a child appcontext is disposed while a module load is\n  // in flight.\n  if (this.isDisposed()) {\n    // Dispose the service\n    if (!opt_dontDispose) {\n      goog.dispose(service);\n    }\n\n    return;\n  }\n\n  goog.asserts.assert(!this.services_[id],\n      \x27Service for \x22%s\x22 is already registered\x27, id);\n\n  if (goog.DEBUG) {\n    this.serviceRegistrationOrder.push(id);\n  }\n\n  this.services_[id] \x3d [service, !opt_dontDispose];\n  var callbacks \x3d this.findServiceCallbacks_(this, id);\n  for (var i \x3d 0; i \x3c callbacks.length; i++) {\n    callbacks[i].callback(null);\n  }\n  delete this.lateServiceModuleIdMap_[id];\n  return service;\n};\n\n\n/**\n * Unregisters the service with its id (and disposes if appropriate).\n * If a factory was registered for the service, the factory is\n * not unregistered.\n * @param {string|!fava.services.ServiceId} id The id to unregister.\n */\nfava.AppContext.prototype.unregisterService \x3d function(id) {\n  if (!this.services_[id]) {\n    throw Error(\x27Service for \x22\x27 + id + \x27\x22 is not registered\x27);\n  }\n  var serviceHolder \x3d this.services_[id];\n  delete this.services_[id];\n  if (serviceHolder[1]) {\n    goog.dispose(serviceHolder[0]);\n  }\n};\n\n\n/**\n * Registers a service to be late loaded.  When the specified module is loaded,\n * the module should call either registerServiceFactory or registerService\n * during its initialization.\n *\n * For more information see\n * http://go/fava/appcontexts-and-services#for-late-loaded-services\n *\n * @param {string|!fava.services.ServiceId} serviceId The service id to\n *     register.\n * @param {string} moduleId The id for a module that provides the service.\n */\nfava.AppContext.prototype.registerLateService \x3d function(\n    serviceId, moduleId) {\n  goog.asserts.assert(!this.services_[serviceId],\n      \x27Service for \x22%s\x22 is already registered\x27, serviceId);\n  goog.asserts.assert(!this.lateServiceModuleIdMap_[serviceId] ||\n      this.lateServiceModuleIdMap_[serviceId] \x3d\x3d moduleId,\n      \x27Late service for \x22%s\x22 is already registered for module \x22%s\x22, it \x27 +\n      \x27cannot also be registered for module \x22%s\x22\x27,\n      serviceId, this.lateServiceModuleIdMap_[serviceId], moduleId);\n\n  if (serviceId instanceof fava.services.ServiceId) {\n    serviceId.setModuleId(moduleId);\n  }\n  this.lateServiceModuleIdMap_[serviceId] \x3d moduleId;\n};\n\n\n/**\n * Returns the module to which a late service is bound.\n *\n * @param {string|!fava.services.ServiceId} serviceId The service id to\n *     register.\n * @return {(string|undefined|null)} The module in which the service resides,\n *     or undefined if the service is either not registered late, or has already\n *     been loaded.\n */\nfava.AppContext.prototype.getLateServiceModuleId \x3d function(serviceId) {\n  return (serviceId instanceof fava.services.ServiceId) ?\n      serviceId.getModuleId() : this.lateServiceModuleIdMap_[serviceId];\n};\n\n\n/**\n * Sets the factory for a service. Service factories enable service objects\n * to be created for the AppContext from which they\x27re requested, if one isn\x27t\n * registered with the AppContext or an ancestor already.\n *\n * The typical usage is for this to be called from a module\x27s initialization\n * function.  The service isn\x27t registered directly so that the service can be\n * used in more than one appcontext.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} serviceId The service id to set\n *     the constructor for.\n * @param {function(!fava.AppContext) : T} factory The factory method.\n * @template T\n */\nfava.AppContext.prototype.registerServiceFactory \x3d function(\n    serviceId, factory) {\n\n  goog.asserts.assert(!this.serviceFactoryMap_[serviceId],\n      \x27A factory for \x22%s\x22 is already registered\x27, serviceId);\n  goog.asserts.assert(!this.getOrNull(serviceId),\n      \x27Service for \x22%s\x22 is already registered\x27, serviceId);\n\n  this.serviceFactoryMap_[serviceId] \x3d factory;\n\n  // A service factory being registered means that that service is available\n  // for *all* AppContexts, so we fire every callback ignoring the AppContext\n  // it was registered on. We have to do them in the order from closest\n  // to the root to farthest, to ensure the object gets created at\n  // the expected level(s). Note that firing the callback on one context\n  // will cause the callback to be fired from this array for any context\n  // descended from it, because the getServiceMaybeAfterLoad_ call will call\n  // getOrNull, which will use the factory to construct the service and then\n  // call registerService, which will fire the callbacks. So we have to\n  // be careful and (1) remove the thing we\x27re firing, so it doesn\x27t\n  // fire twice, and (2) iterate until the array is empty.\n  var cbArray \x3d this.serviceCallbacks_[serviceId];\n  if (cbArray) {\n    fava.AppContext.sortServiceCallbacks_(cbArray);\n    // The first callback in the deferred will get the service object\n    while (cbArray.length) {\n      cbArray.shift().d.callback(null);\n    }\n    delete this.serviceCallbacks_[serviceId];\n  }\n};\n\n/**\n * Gets the factory for a service, if one is registered.\n * @param {string|!fava.services.ServiceId\x3cT\x3e} serviceId The id of the service\n *     to get the factory for.\n * @return {function(!fava.AppContext):T|undefined} The factory or\n *     undefined if there isn\x27t one.\n * @template T\n */\nfava.AppContext.prototype.getServiceFactory \x3d function(serviceId) {\n  return this.serviceFactoryMap_[serviceId];\n};\n\n\n/**\n * Marks a service as not inherited from the parent context. Use this with\n * service factories to ensure that the context receives its own instance of\n * the service, instead of sharing an instance with the parent context.\n * @param {string|!fava.services.ServiceId} serviceId The service id.\n */\nfava.AppContext.prototype.setNoInherit \x3d function(serviceId) {\n  this.noInheritMap_[serviceId] \x3d true;\n};\n\n/**\n * @typedef {{appContext: fava.AppContext, d:goog.async.Deferred,\n *     index: number}}\n * @private\n */\nfava.AppContext.IndexedCallbacks_;\n\n/**\n * Applies a topological sort to the array of callbacks for a service,\n * so when we call get() on the AppContext to get the service object,\n * it gets created and registered at the expected level.\n *\n * Sets an additional \x27index\x27 parameter in each object in the array.\n *\n * @param {Array\x3c{appContext: fava.AppContext, d: goog.async.Deferred}\x3e}\n *     cbArray The array to sort.\n * @private\n */\nfava.AppContext.sortServiceCallbacks_ \x3d function(cbArray) {\n  if (cbArray.length \x3e 1) {\n    // Add some discriminator we can use in ordering things that are\n    // unrelated, to ensure a stable sort: their initial registration order.\n    for (var i \x3d 0; i \x3c cbArray.length; ++i) {\n      cbArray[i].index \x3d i;\n    }\n    /** @type {Array\x3cfava.AppContext.IndexedCallbacks_\x3e} */ (\n        cbArray).sort(fava.AppContext.topoSortServiceCallbacksCallback_);\n  }\n};\n\n\n/**\n * Orders two entries in the serviceCallbacks_ array based on their\n * relationship to each other in the tree, or their position in the array,\n * if they are in different branches of the tree.\n *\n * @param {fava.AppContext.IndexedCallbacks_} a\n * @param {fava.AppContext.IndexedCallbacks_} b\n * @return {number} -1 \x3d\x3e a \x3c b, 0 \x3d\x3e a \x3d\x3d b, 1 \x3d\x3e a \x3e b.\n * @private\n */\nfava.AppContext.topoSortServiceCallbacksCallback_ \x3d function(a, b) {\n  // In the case where the contexts are equal, descendsFrom_ will\n  // return true regardless of which is the argument and which the\n  // object. When the contexts are equal, we need to rely on the\n  // original array indices to get a stable comparator.\n  if (a.appContext !\x3d b.appContext) {\n    if (a.appContext.descendsFrom_(b.appContext)) {\n      return 1;\n    }\n    if (b.appContext.descendsFrom_(a.appContext)) {\n      return -1;\n    }\n  }\n  return a.index \x3c b.index ? -1 : (a.index \x3d\x3d b.index ? 0 : 1);\n};\n\n\n/**\n * Gets the callbacks that should be fired for a service registration.\n *\n * @param {fava.AppContext} appContext The AppContext on which the service was\n *      registered.\n * @param {string|!fava.services.ServiceId} serviceId ID of the service that was\n *     registered.\n * @return {!Array\x3cgoog.async.Deferred\x3e} The callbacks to fire.\n * @private\n */\nfava.AppContext.prototype.findServiceCallbacks_ \x3d function(\n    appContext, serviceId) {\n  var retArray \x3d [];\n\n  var cbArray \x3d this.serviceCallbacks_[serviceId];\n  if (cbArray) {\n    goog.array.forEachRight(cbArray, function(candidate) {\n      // Since the service is available in appContext, any context that descends\n      // from it can see the service.\n      if (candidate.appContext.descendsFrom_(appContext)) {\n        retArray.push(candidate.d);\n        goog.array.remove(cbArray, candidate);\n      }\n    });\n    if (cbArray.length \x3d\x3d 0) {\n      delete this.serviceCallbacks_[serviceId];\n    }\n  }\n\n  return retArray;\n};\n\n\n/**\n * Helper for @see #disposeInternal\n * @param {fava.AppContext} appContext The AppContext whose callbacks should be\n *      cleared.\n * @private\n */\nfava.AppContext.prototype.clearServiceCallbacks_ \x3d function(appContext) {\n  if (!this.serviceCallbacks_) {\n    return;\n  }\n\n  goog.object.forEach(this.serviceCallbacks_, function(val, id, col) {\n    goog.array.forEachRight(val, function(candidate) {\n      if (candidate.appContext \x3d\x3d appContext) {\n        goog.array.remove(val, candidate);\n      }\n    });\n    if (val.length \x3d\x3d 0) {\n      delete col[id];\n    }\n  });\n};\n\n\n/**\n * Removes a callback that has been cancelled.\n * @param {string} id The id of the service we no longer care about.\n * @param {!goog.async.Deferred} deferred A Deferred object that was listening.\n * @private\n */\nfava.AppContext.prototype.clearServiceCallback_ \x3d\n    function(id, deferred) {\n  var cbArray \x3d this.serviceCallbacks_ \x26\x26 this.serviceCallbacks_[id];\n  if (!cbArray) {\n    return;\n  }\n\n  for (var i \x3d 0; i \x3c cbArray.length; ++i) {\n    if (cbArray[i].appContext \x3d\x3d this \x26\x26 cbArray[i].d \x3d\x3d deferred) {\n      goog.array.removeAt(cbArray, i);\n      break;\n    }\n  }\n  if (cbArray.length \x3d\x3d 0) {\n    delete this.serviceCallbacks_[id];\n  }\n};\n\n\n/**\n * @override\n */\nfava.AppContext.prototype.disposeInternal \x3d function() {\n  if (this.getRootAppContext() \x3d\x3d this) {\n    // Dispose all non-disposed child AppContexts.\n    var childAppContexts \x3d this.childAppContexts_;\n    if (childAppContexts) {\n      while (childAppContexts.length) {\n        // NOTE: The child will remove itself from the list of app contexts in\n        // the \x22else\x22 block below.\n        childAppContexts[0].dispose();\n      }\n    }\n  } else {\n    // Remove this child AppContext from its main AppContext\x27s\n    // list of non-diposed child AppContexts.\n    var childAppContexts \x3d this.getRootAppContext().childAppContexts_;\n    for (var i \x3d 0; i \x3c childAppContexts.length; i++) {\n      if (childAppContexts[i] \x3d\x3d this) {\n        childAppContexts.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  for (var id in this.services_) {\n    var serviceHolder \x3d this.services_[id];\n    if (serviceHolder[1] \x26\x26 serviceHolder[0].dispose) {\n      serviceHolder[0].dispose();\n    }\n  }\n  this.services_ \x3d null;\n  if (this.shouldDisposeEventTarget_) {\n    this.eventTarget_.dispose();\n  }\n  this.clearServiceCallbacks_(this);\n  this.serviceCallbacks_ \x3d null;\n  goog.dispose(this.overlayAppContext_);\n  this.overlayAppContext_ \x3d null;\n  this.noInheritMap_ \x3d null;\n\n  fava.AppContext.base(this, \x27disposeInternal\x27);\n};\n\n\n/**\n * Returns the event target used by this context to send events.  This class\n * and subclasses should always call getEventTarget() as opposed to accessing\n * the member field so that subclasses can safely override getEventTarget().\n * @return {goog.events.EventTarget} The event target.\n */\nfava.AppContext.prototype.getEventTarget \x3d function() {\n  return this.eventTarget_;\n};\n\n\n/**\n * Returns the module manager used by this context.\n * @return {goog.loader.AbstractModuleManager} The module manager.\n */\nfava.AppContext.prototype.getModuleManager \x3d function() {\n  if (this.moduleManager_) {\n    return this.moduleManager_;\n  } else if (this.parentAppContext_) {\n    return this.parentAppContext_.getModuleManager();\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Sets the module manager to use when loading async services..\n * @param {goog.loader.AbstractModuleManager} mm The module manager.\n */\nfava.AppContext.prototype.setModuleManager \x3d function(mm) {\n  this.moduleManager_ \x3d mm;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Sets whether the code throws an exception for an unregistered exception.\n   * @param {boolean} disable Whether to disable the exception.\n   */\n  fava.AppContext.prototype.setDisableRegistrationExceptionsForUnitTests \x3d\n      function(disable) {\n    this.disableRegistrationException_ \x3d disable;\n  };\n}\n\n\n\n/**\n * An error sub class that is used when a getAsync is called with an invalid\n * service.\n *\n * @param {string|!fava.services.ServiceId} id The id of the module that failed\n *     to load.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\nfava.AppContext.InvalidServiceError \x3d function(id) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The id of the module that is invalid.\n   * @const\n   */\n  this.id \x3d id;\n\n  /**\n   * Message text.\n   * @type {string}\n   * @override\n   */\n  this.message \x3d \x27Service for \x22\x27 + id + \x27\x22 is not registered\x27;\n};\ngoog.inherits(fava.AppContext.InvalidServiceError, goog.debug.Error);\n\n\n/**\n * An error sub class that is used when a module fail to load.\n *\n * @param {string|!fava.services.ServiceId} serviceId The service id that was\n *     requested.\n * @param {string} moduleId The id of the module that failed to load.\n * @param {Error} cause The original error that caused the problem.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\nfava.AppContext.ModuleLoadError \x3d function(serviceId, moduleId, cause) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The id of the service that was requested.\n   * @const\n   */\n  this.serviceId \x3d serviceId;\n\n  /**\n   * The id of the module that failed.\n   * @type {string}\n   */\n  this.moduleId \x3d moduleId;\n\n  /**\n   * The original error that caused the failure.\n   * @type {Error}\n   */\n  this.cause \x3d cause;\n\n  /**\n   * Message text.\n   * @type {string}\n   * @override\n   */\n  this.message \x3d \x27Module \x22\x27 + moduleId + \x27\x22 failed to load when requesting \x27 +\n      \x27the service \x22\x27 + serviceId + \x27\x22 [cause: \x27 + cause + \x27]\x27;\n\n  this.stack \x3d cause.stack + \x27\\nWRAPPED BY:\\n\x27 + this.stack;\n};\ngoog.inherits(fava.AppContext.ModuleLoadError, goog.debug.Error);\n\n\n/**\n * An error sub class that is used when a module isn\x27t configured properly.\n *\n * @param {string|!fava.services.ServiceId} serviceId The service id that was\n *     requested.\n * @param {string} moduleId The id of the module that failed to load.\n * @param {string} msg Description of the failure.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\nfava.AppContext.ModuleConfigurationError \x3d function(serviceId, moduleId, msg) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The id of the service that was requested.\n   * @const\n   */\n  this.serviceId \x3d serviceId;\n\n  /**\n   * The id of the module that failed.\n   * @type {string}\n   */\n  this.moduleId \x3d moduleId;\n\n  /**\n   * Message text.\n   * @type {string}\n   * @override\n   */\n  this.message \x3d \x27Configuration error when loading the module \x22\x27 + moduleId +\n      \x27\x22 for the service \x22\x27 + serviceId + \x27\x22: \x27 + msg;\n};\ngoog.inherits(fava.AppContext.ModuleConfigurationError, goog.debug.Error);\n\n\n/**\n * Container for metadata about async loads that have happened while\n * `trackAsyncServiceLoading` is enabled.\n *\n * See `AppContext.trackAsyncServiceLoading`.\n *\n * @param {!Array\x3cstring|!fava.services.ServiceId\x3e} serviceIds\n * @param {!Array\x3cstring\x3e} moduleIds\n * @param {string} stackTrace\n * @constructor\n * @struct\n * @final\n */\nfava.AppContext.AsyncLoadReport \x3d function(serviceIds, moduleIds, stackTrace) {\n  /** @const {!Array\x3cstring|!fava.services.ServiceId\x3e} */\n  this.serviceIds \x3d serviceIds;\n  /** @const {!Array\x3cstring\x3e} */\n  this.moduleIds \x3d moduleIds;\n  /** @const {string} */\n  this.stackTrace \x3d stackTrace;\n};\n\n\n/**\n * Event object encapsulating information from fava.AppContext.\n * @param {fava.AppContextEventType} type The type of event.\n * @param {string|!fava.services.ServiceId} serviceId The service ID associated\n *     with the event from the AppContext.\n * @extends {goog.events.Event}\n * @constructor\n * @final\n */\nfava.AppContext.Event \x3d function(type, serviceId) {\n  fava.AppContext.Event.base(this, \x27constructor\x27, type);\n\n  /**\n   * The service ID associated with this event from the AppContext.\n   * @const\n   */\n  this.serviceId \x3d serviceId;\n};\ngoog.inherits(fava.AppContext.Event, goog.events.Event);\n\n\n/** @private {!fava.extension.Namespace} */\nfava.AppContext.NAMESPACE_ \x3d new fava.extension.Namespace(\x27fva\x27);\n\n\n/**\n * @enum {!fava.diagnostics.UserActionType}\n * @private\n */\nfava.AppContext.ActionType_ \x3d {\n  LOAD_SERVICE: new fava.diagnostics.UserActionType(\n      fava.AppContext.NAMESPACE_,\n      proto.fava.logging.FavaLogging.Action.LOAD_SERVICE)\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/appcontext/appcontext.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/common/baseresponse.js";
goog.loadModule("/**\n * @fileoverview Type for response object of Wiz class\n */\ngoog.module(\x27wiz.ObjectBaseResponse\x27);\ngoog.module.declareLegacyNamespace();\n\n/** @record @struct */\nexports \x3d class {\n  constructor() {\n    /** @type {!Deferred} */ this.deferred;\n  }\n};\n\n\n/** @record */\nclass Deferred {\n  constructor() {\n    /** @type {!fava.services.ServiceId} */ this.key;\n    /** @type {?fava.AppContext} */ this.appContext;\n  }\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/baseresponse.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/common/frameworkrestricted.js";
eval("/**\n * @visibility {//javascript/apps/wiz:framework}\n */\ngoog.provide(\x27wiz.common.FrameworkRestricted\x27);\n\n\n\n/**\n * Functions in the framework should require an argument of this type if\n * they want to disallow being called by non-framework users.\n * @enum {number}\n */\nwiz.common.FrameworkRestricted \x3d {\n  I_AM_THE_FRAMEWORK: 0\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/frameworkrestricted.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/registry/configure.js";
eval("/**\n * @fileoverview Mechanism to \x22configure\x22 Wiz objects just before they are\n * fully instantiated. The primary use case if you have a generic service and\n * you want to configure it for your environment without a more heavyweight\n * mechanism like overriding the service.\n */\ngoog.provide(\x27wiz.configure\x27);\n\n\n/**\n * Holds configuration callbacks per service id.\n * @private @const {!Object\x3c\n *     !fava.services.ServiceId,!Array\x3cfunction(!wiz.Object)\x3e\x3e}\n */\nwiz.configure.configuration_ \x3d {};\n\n\n\n/**\n * Register a callback that gets called whenever a Wiz object\n * (service, controller, model, renderer) associated with the serviceId gets\n * instantiated. The callback receives the new instance right after\n * instantiation and gets to configure it before it is returned to the caller.\n *\n * This function MUST be called in a file that @enhance\x27s the implementation\n * file. Respectively the implementation must be @enhanceable.\n *\n * @param {!fava.services.ServiceId\x3cT\x3e} serviceId\n * @param {function(T)} callback\n * @template T\n */\nwiz.configure.instance \x3d function(serviceId, callback) {\n  var cbs \x3d wiz.configure.configuration_[serviceId];\n  if (!cbs) {\n    cbs \x3d wiz.configure.configuration_[serviceId] \x3d [];\n  }\n  cbs.push(callback);\n};\n\n\n/**\n * Apply configuration to instances. Called by the framework.\n *\n * @param {!wiz.common.FrameworkRestricted} restricted\n * @param {!fava.services.ServiceId\x3cT\x3e} serviceId\n * @param {T} object\n * @template T\n */\nwiz.configure.applyConfiguration \x3d function(restricted, serviceId, object) {\n  var cbs \x3d wiz.configure.configuration_[serviceId];\n  if (!cbs) {\n    return;\n  }\n  for (var i \x3d 0; i \x3c cbs.length; i++) {\n    cbs[i](object);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/registry/configure.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/common/object.js";
eval("goog.provide(\x27wiz.Object\x27);\ngoog.provide(\x27wiz.Service\x27);\n\ngoog.require(\x27fava.AppContext\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.Disposable\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27wiz.ObjectBaseResponse\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.async.Request\x27);\ngoog.require(\x27wiz.async.Source\x27);\ngoog.require(\x27wiz.common.FrameworkRestricted\x27);\ngoog.require(\x27wiz.configure\x27);\n\n\n/**\n * Base implementation of asynchronously constructed objects used by Wiz.\n * TODO(b/36371805) Currently this constructor accepts two different calling\n *    conventions, as some tests will initialize Wiz services this way.\n * @param {!fava.services.ServiceId|!wiz.ObjectBaseResponse} keyOrDeps\n * @param {!fava.AppContext\x3d} opt_appContext\n * @constructor @struct\n * @extends {goog.Disposable}\n * @implements {wiz.async.Source}\n */\nwiz.Object \x3d function(keyOrDeps, opt_appContext) {\n  goog.asserts.assert(\n      keyOrDeps,\n      \x27Invalid instantiation of \x3c\x27 + this.constructor.displayName +\n          \x27\x3e. Wiz Objects should never be instantiated directly. \x27 +\n          \x27Use a helper like wiz.service.getInstance or the equivalent. \x27 +\n          \x27In unit tests use .getService (or equivalent) method of the \x27 +\n          \x27wiz.testing.Environment or mock the dependency if appropriate. If\x27 +\n          \x27 using ES6 Wiz classes, this is most likely caused by not calling\x27 +\n          \x27 super(response.superResponse);\x27);\n  /** @private @const {!fava.services.ServiceId} */\n  this.objectKey_ \x3d keyOrDeps.deferred ?\n      keyOrDeps.deferred.key :\n      /** @type {!fava.services.ServiceId} */ (keyOrDeps);\n\n  /**\n   * @private {?fava.AppContext}\n   * @const\n   */\n  this.appContext_ \x3d\n      (keyOrDeps.deferred ? keyOrDeps.deferred.appContext : opt_appContext) ||\n      null;\n\n  /** @private {?goog.async.Deferred} */\n  this.delayedInit_ \x3d null;\n};\ngoog.inherits(wiz.Object, goog.Disposable);\n\n/** @const */\nwiz.Service \x3d wiz.Object;\n\n\n/**\n * @return {!fava.services.ServiceId} The key for this object.\n * @public\n */\nwiz.Object.prototype.getObjectKey \x3d function() {\n  return this.objectKey_;\n};\n\n\n/**\n * @return {string} Object name.\n * @override\n */\nwiz.Object.prototype.toString \x3d function() {\n  return this.objectKey_ + \x27[\x27 + goog.getUid(this) + \x27]\x27;\n};\n\n\n/**\n * Register a deferred or promise that should be settled before\n * \x22getInstance\x22 returns the object to requesters, the fulfilled value of\n * the thenable is ignored.\n *\n * @param {!goog.Thenable\x3c?\x3e} thenable\n * @public\n */\nwiz.Object.prototype.delayConstructionBy \x3d function(thenable) {\n  if (!this.delayedInit_) {\n    this.delayedInit_ \x3d goog.async.Deferred.succeed();\n  }\n  this.delayedInit_.awaitDeferred(thenable);\n};\n\n\n/**\n * Subclasses should override this function to perform actions after all\n * the delayedConstructionBy thenables have been fulfillled.\n *\n * @return {void}\n * @protected\n */\nwiz.Object.prototype.afterConstruction \x3d function() {};\n\n\n/**\n * The method should only be called by the wiz framework.\n *\n * All wiz.Object subclass constructors have static \x22deps\x22 methods, for\n * framework users these are create by the various factories (wiz.model, etc).\n * These methods provide the necessary async dependencenies that the initializer\n * needs.  Typically these dependencies are provided by wiz.async.get.\n *\n * As each subclass calls the superclass \x22deps\x22 method and the chain ends here.\n *\n * @param {!fava.services.ServiceId} key\n * @return {!wiz.async.Request} response\n * @nocollapse\n */\nwiz.Object.deps \x3d function(key) {\n  return {\n    deferred: {\n      /**\n       * @this {!wiz.Object.Context}\n       * @return {!goog.async.Deferred\x3c!fava.services.ServiceId\x3e}\n       */\n      key: function() {\n        return goog.async.Deferred.succeed(key);\n      },\n      /**\n       * @this {!wiz.Object.Context}\n       * @return {!goog.async.Deferred\x3c?fava.AppContext\x3e}\n       */\n      appContext: function() {\n        return goog.async.Deferred.succeed(this.getOptionalAppContext());\n      }\n    }\n  };\n};\n\n\n/**\n * @param {!Function} ctor\n */\nwiz.Object.addCommonCtorProps \x3d function(ctor) {\n  // For unit testing with sealed constructor objects.\n  if (goog.DEBUG) {\n    ctor.wizTestingStubValueMap \x3d undefined;\n    ctor.persistedWizTestingStubValueMap \x3d undefined;\n  }\n};\n\n\n/**\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {function(new:T, ...)} ctor\n * @param {!wiz.async.Source} context\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n */\nwiz.Object.create \x3d function(key, ctor, context) {\n  var deps \x3d wiz.Object.fetchDeps(ctor, context, key);\n  var result \x3d deps.addCallback(params \x3d\x3e new ctor(params));\n  // Handle delayConstructionBy.\n  result.addCallback(instance \x3d\x3e {\n    goog.asserts.assert(instance instanceof wiz.Object);\n    if (instance.delayedInit_) {\n      return instance.delayedInit_.branch().addCallback(() \x3d\x3e instance);\n    }\n  });\n  result.addCallback(instance \x3d\x3e {\n    goog.asserts.assert(instance instanceof wiz.Object);\n    // Allow any final configuration prior to returning the service\n    // must be synchronous.\n    instance.afterConstruction();\n  });\n  // Some tests pass in strings instead of service ids.\n  if (key instanceof fava.services.ServiceId) {\n    result.addCallback(instance \x3d\x3e\n        // Configures any service configured through {wiz.configure.instance}\n        wiz.configure.applyConfiguration(\n            wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK,\n            key, instance));\n  }\n  wiz.Object.addTimeoutToConstruction_(result, key);\n  return result;\n};\n\n\n/**\n * Adds a timeout to each Wiz object to give some indication in case\n * construction never finishes.\n * @param {?goog.async.Deferred} d\n * @param {!fava.services.ServiceId} key\n * @private\n */\nwiz.Object.addTimeoutToConstruction_ \x3d function(d, key) {\n  if (!goog.DEBUG || !goog.global.Window ||\n      !window.console || !window.console.error) {\n    return;\n  }\n  var secs \x3d 20;\n  var t \x3d setTimeout(function() {\n    // NOTE: If you often see this error in your project, please\n    // a: Make it faster. Nothing should ever take 20 seconds.\n    // b: Contact us, so we can increase the timeout to something more\n    //    reasonable that is still short enough to be useful.\n    console.error(\x27Instantiation of \x3c\x27 + key + \x27\x3e timed out after \x27 + secs +\n        \x27 seconds.\\nThis could be because things are slow (in which case, \x27 +\n        \x27please ignore this message) or because one of the things that are \x27 +\n        \x27being injected never resolves (The associated promise or deferred is\x27 +\n        \x27 never rejected nor resolved).\\n\x27 +\n        \x27If you were in a breakpoint and waited a while, please ignore\x27 +\n        \x27 this message.\x27);\n  }, secs * 1000);\n  d.addBoth(function() {\n    clearTimeout(t);\n  });\n};\n\n/**\n * Recursively fetches all dependencies necessary to instantiate a Wiz class.\n * This is used internally by Wiz code and should not be manually called by\n * the user.\n * @param {function(new: wiz.Object, ...)} constructor\n * @param {!wiz.async.Source} source\n * @param {!fava.services.ServiceId} key\n *     Service key for the Wiz instance that is being initialized.\n * @return {!goog.async.Deferred\x3c!wiz.async.Response\x3e} This is the sole parameter meant\n *    to be passed to the constructor of the Wiz object. A given response\n *    will be composed of a map of these responses.\n */\nwiz.Object.fetchDeps \x3d function(constructor, source, key) {\n  // Disposable is the parent of all Wiz objects and has no further deps.\n  if (constructor \x3d\x3d goog.Disposable) {\n    return goog.async.Deferred.succeed({});\n  }\n  // This is dependent on @nocollapse annotation being present on deps methods.\n  var deps \x3d constructor.deps(key);\n  var results \x3d wiz.async.get(source, deps);\n  // In most browsers we can use Object.getPrototype of and this will work.\n  // For browsers that don\x27t support it, the transpiler will append the\n  // superClass_ field.\n  var superClass \x3d Object.getPrototypeOf ?\n      Object.getPrototypeOf(constructor.prototype) :\n      constructor.superClass_;\n  var superResults \x3d wiz.Object.fetchDeps(superClass.constructor, source, key);\n  return results.addCallback(function(response) {\n    return superResults.addCallback(function(super_response) {\n      response.super_response \x3d super_response;\n      response.superResponse \x3d super_response;\n      return response;\n    });\n  });\n};\n\n\n/**\n * @return {!fava.AppContext}\n * @override\n */\nwiz.Object.prototype.getAppContext \x3d function() {\n  // The appContext is optional in construction, but in a given app it is\n  // either always or never present. There should be no need to check.\n  goog.asserts.assert(this.appContext_ !\x3d null, \x27The AppContext must either\x27 +\n      \x27 be not null or never requested.\x27);\n  return this.appContext_;\n};\n\n\n/**\n * @override\n */\nwiz.Object.prototype.getOptionalAppContext \x3d function() {\n  return this.appContext_ || undefined;\n};\n\n\n/**\n * Override {@link disposeObject} for custom disposal instead.\n * @override @final\n */\nwiz.Object.prototype.disposeInternal \x3d function() {\n  this.disposeObject();\n  this.disposeObjectFrameworkInternal();\n  wiz.Object.base(this, \x27disposeInternal\x27);\n};\n\n\n/**\n * Called while disposing the object. This is meant to be used only by the\n * framework code. External users should override `disposeObject`. This\n * method exists so that external users don\x27t have to worry about calling\n * the super class dispose method correctly.\n */\nwiz.Object.prototype.disposeObjectFrameworkInternal \x3d goog.nullFunction;\n\n\n/**\n * Called while disposing the object. Override this in a sub class\n * in the rare cases where custom disposal for a controller is needed. Direct\n * sub classes do not need to call this base method when overriding.\n */\nwiz.Object.prototype.disposeObject \x3d goog.nullFunction;\n\n\n/** @override */\nwiz.Object.prototype.getContext \x3d goog.abstractMethod;\n\n\n/** @override */\nwiz.Object.prototype.getData \x3d goog.abstractMethod;\n\n\n/**\n * @constructor @struct\n * @implements {wiz.async.Source}\n * @public\n */\nwiz.Object.Context \x3d goog.defineClass(null, {\n  /**\n   * @param {!fava.services.ServiceId} key\n   * @param {!fava.AppContext|undefined} appContext\n   * @param {?Function\x3d} opt_injectingConstructor\n   */\n  constructor: function(key, appContext, opt_injectingConstructor) {\n    /** @const @protected {!fava.services.ServiceId} */\n    this.key \x3d key;\n\n    /** @const @private {!fava.AppContext|undefined} */\n    this.appContext_ \x3d appContext;\n\n    if (goog.DEBUG) {\n       this.injectingConstructor \x3d opt_injectingConstructor;\n    }\n  },\n\n  /** @override */\n  getAppContext: function() {\n    // The appContext is optional in construction, but in a given app it is\n    // either always or never present. There should be no need to check.\n    goog.asserts.assert(this.appContext_ !\x3d null, \x27The AppContext must either\x27 +\n        \x27 be not null or never requested.\x27);\n    return this.appContext_;\n  },\n\n  /** @override */\n  getOptionalAppContext: function() {\n    return this.appContext_;\n  },\n\n  /** @override */\n  getContext: goog.abstractMethod,\n\n  /** @override */\n  getData: goog.abstractMethod,\n\n  /** @override */\n  toString: function() {\n    return \x27context:\x27 + String(this.key);\n  }\n});\n\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/object.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2r');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2r');

}catch(e){_DumpException(e)}
/* _Module_:sy2v */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2v');
var $googDebugFname="javascript/apps/wiz/common/attribute.js";
eval("/**\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.Attribute\x27);\n\n\n/**\n * DOM attributes used by Wiz.\n * @enum {string}\n */\nwiz.Attribute \x3d {\n  /**\n   * Attribute defining the controller used to handle actions.\n   */\n  CONTROLLER: \x27jscontroller\x27,\n\n  /**\n   * Attribute defining the data that was used to render the DOM.\n   */\n  DATA: \x27jsdata\x27,\n\n  /**\n   * Attribute defining a model. Should be the name of the model as provided\n   * by the `wiz.model` declaration.\n   */\n  MODEL: \x27jsmodel\x27,\n\n  /**\n   * The jsname attribute provides a simple handle for getting uniquely\n   * identified DOM elements that are descendents of the controller.\n   */\n  NAME: \x27jsname\x27,\n\n  /**\n   * Never preload this controller until user interaction.\n   */\n  LAZY: \x27jslazy\x27,\n\n  /**\n   * Signals the start of \x22shadow DOM\x22. jsactions below this annotations won\x27t\n   * be dispatched to controllers above it \u2013 unless they are inside a \x3ccontent\x3e\n   * tag (insertion point).\n   */\n  SHADOW: \x27jsshadow\x27,\n\n  /**\n   * Whether this element is the owner of another element\n   */\n  IS_OWNER: \x27__IS_OWNER\x27,\n\n  /**\n   * DEBUG ONLY: Attribute signifying a DOM element has a virtual parent.\n   * Contains the ID of the parent element.\n   */\n  OWNER: \x27jsowner\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/attribute.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2v');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2v');

}catch(e){_DumpException(e)}
/* _Module_:sy2w */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2w');
var $googDebugFname="javascript/apps/wiz/common/property.js";
eval("/**\n */\ngoog.provide(\x27wiz.Property\x27);\n\ngoog.require(\x27jsaction.Property\x27);\n\n/**\n * Properties on the DOM elements used by Wiz.\n * @enum {string}\n */\nwiz.Property \x3d {\n\n  /**\n   * Dispatcher stored on the document.\n   */\n  DISPATCHER: \x27__wizdispatcher\x27,\n\n  /*\n   * Manager stored on the document.\n   */\n  MANAGER: \x27__wizmanager\x27,\n\n  /**\n   * Cache key for storing the controller results on the DOM element.\n   */\n  CONTROLLER: \x27__jscontroller\x27,\n\n  /**\n   * Cache key for storing the model results on the DOM element.\n   */\n  MODEL: \x27__jsmodel\x27,\n\n  /**\n   * Used to store the owner node of the controler. Similar to a parentNode\n   * but application specific.\n   */\n  OWNER: jsaction.Property.OWNER,\n\n  /**\n   * Used to store the owned nodes of the controller. Similar childNodes\n   * but application specific.\n   */\n  OWNED: \x27__owned\x27,\n\n  /**\n   * Used to store the sender of an event in the event object.\n   */\n  EVENT_SOURCE: \x27__source\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/property.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/common/dom.js";
eval("/**\n * Variants of goog.dom that are aware of Node ownership.\n * An element having an owner means that it logically belongs to a different\n * controller. {@see wiz.Controller.prototype.setAsOwner}\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.dom\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.userAgent\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Property\x27);\n\n\n/**\n * {@see goog.dom.getParentElement} but respects owner and Wiz\x27s shadow DOM\n * emulation.\n * @param {?Element} el\n * @param {boolean\x3d} opt_ignoreShadow Ignore shadow DOM emulation (will continue\n *     to respect insertion points).\n * @return {?Element}\n */\nwiz.dom.getParentElement \x3d function(el, opt_ignoreShadow) {\n  goog.asserts.assert(el, \x27Element should not be null\x27);\n  // The shadow root does not have a parent element.\n  if (!opt_ignoreShadow \x26\x26 el.hasAttribute(wiz.Attribute.SHADOW)) {\n    return null;\n  }\n\n  wiz.dom.validateIE8CustomTags_(el);\n  var parent \x3d el;\n  var shadowDepth \x3d 0;\n  while (parent \x3d wiz.dom.getEventOrderParentElement(parent)) {\n    if (parent.tagName.toUpperCase() \x3d\x3d \x27CONTENT\x27) {\n      shadowDepth +\x3d 1;\n    } else if (parent.hasAttribute(wiz.Attribute.SHADOW) \x26\x26 shadowDepth \x3e 0) {\n      shadowDepth -\x3d 1;\n      continue;\n    }\n    if (shadowDepth \x3c\x3d 0) {\n      return parent;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Checks that the user added document.createElement(\x27content\x27) to their\n * initial page if they use the content custom tag with IE8.\n * @param {!Element} el\n * @private\n */\nwiz.dom.validateIE8CustomTags_ \x3d function(el) {\n  if (!goog.DEBUG || !goog.userAgent.IE ||\n      goog.userAgent.isVersionOrHigher(9)) {\n    return;\n  }\n  // Skip looking outside of body. Mostly to avoid false positives from\n  // the \x3cCONTENT string occuring in inline JS.\n  if (!el.ownerDocument.body ||\n      goog.dom.contains(el, el.ownerDocument.body)) {\n    return;\n  }\n  // This is really slow, but it is for IE8 only and guarded by goog.DEBUG,\n  // so who cares?\n  if (!/\\\x3cCONTENT/.test(el.outerHTML)) {\n    return;\n  }\n  if (!el.ownerDocument.querySelector(\x27content\x27)) {\n    throw new Error(\x27In order to use the \x3ccontent\x3e custom tag with IE8, \x27 +\n        \x27please add document.createElement(\x22content\x22) to your initial page.\x27);\n  }\n};\n\n\n/**\n * Gets the next element that may be considered a parent. This is either just\n * the regular parentElement, or the owner of the node if it exists, or the\n * parent\x27s shadow host if the parent is a shadow root.\n * Should behave the same as the traversal done by jsaction to find matching\n * actions.\n * @param {?Element} el\n * @return {?Element}\n */\nwiz.dom.getEventOrderParentElement \x3d function(el) {\n  if (!el) {\n    return null;\n  }\n  if (el[wiz.Property.OWNER]) {\n    return el[wiz.Property.OWNER];\n  }\n  if (el.parentNode \x26\x26\n      el.parentNode.nodeType \x3d\x3d\x3d goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    return el.parentNode.host;\n  }\n  return goog.dom.getParentElement(el);\n};\n\n\n/**\n * {@see goog.dom.getAncestor} but respects owner and Wiz\x27s shadow DOM\n * semantics.\n * @param {?Element} el The DOM node to start with.\n * @param {function(!Element) : boolean} matcher A function that returns true if\n *     the passed node matches the desired criteria.\n * @param {boolean\x3d} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {boolean\x3d} opt_ignoreShadow Ignore shadow DOM emulation (will continue\n *     to respect insertion points).\n * @return {?Element}\n */\nwiz.dom.getAncestor \x3d function(el, matcher, opt_includeNode, opt_ignoreShadow) {\n  /** @type {?Element} */\n  var element \x3d el;\n  if (!opt_includeNode) {\n    element \x3d wiz.dom.getParentElement(element, opt_ignoreShadow);\n  }\n  while (element) {\n    if (matcher(element)) {\n      return element;\n    }\n    element \x3d wiz.dom.getParentElement(element, opt_ignoreShadow);\n  }\n  return null;\n};\n\n\n/**\n * Like {@see goog.dom.getAncestor} but traverses the DOM in the same manner\n * as jsaction events do. In contrast to {@see wiz.dom.getAncestor} this does\n * not respect shadow DOM or insertion points, but instead visits every element\n * in the ancestor hierarchy.\n * @param {!Element} el The DOM node to start with.\n * @param {function(!Element) : boolean} matcher A function that returns true if\n *     the passed node matches the desired criteria.\n * @param {boolean\x3d} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @return {?Element}\n */\nwiz.dom.getEventOrderAncestor \x3d function(el, matcher, opt_includeNode) {\n  /** @type {?Element} */\n  var element \x3d el;\n  if (!opt_includeNode) {\n    element \x3d wiz.dom.getEventOrderParentElement(element);\n  }\n  while (element) {\n    if (matcher(element)) {\n      return element;\n    }\n    element \x3d wiz.dom.getEventOrderParentElement(element);\n  }\n  return null;\n};\n\n\n/**\n * If the given element is a child of an element that is owned by another node,\n * returns that element. Otherwise it just returns the element itself.\n * @param {!Element} element\n * @return {!Element}\n */\nwiz.dom.getOwner \x3d function(element) {\n  var owner;\n  wiz.dom.getAncestor(element, function(element) {\n    if (element[wiz.Property.OWNER]) {\n      owner \x3d element[wiz.Property.OWNER];\n      return true;\n    }\n    return false;\n  }, true);\n  return owner || element;\n};\n\n\n/**\n * If the given element is a child of an element that is owned by another node,\n * returns that element. Otherwise it just returns the element itself.\n * @param {!Element} element\n * @param {!Element} owner\n */\nwiz.dom.setOwner \x3d function(element, owner) {\n  goog.asserts.assert(element[wiz.Property.OWNER] \x3d\x3d null,\n      \x27Cannot reset owner of a node\x27);\n  goog.asserts.assert(\n      !goog.dom.contains(element, owner),\n      \x27The owned node must not contain the owner\x27);\n  if (!owner.id) {\n    owner.id \x3d \x27ow\x27 + goog.getUid(owner);\n  }\n  element.setAttribute(wiz.Attribute.OWNER, owner.id);\n  element[wiz.Property.OWNER] \x3d owner;\n\n  if (!owner[wiz.Property.OWNED]) {\n    owner[wiz.Property.OWNED] \x3d [];\n  }\n  goog.array.insert(owner[wiz.Property.OWNED], element);\n  owner.setAttribute(wiz.Attribute.IS_OWNER, true);\n};\n\n\n/**\n * Clean up from owner\x27s owned elements all elements that do not exist.\n * @param {!Element} owner\n */\nwiz.dom.cleanUpOwned \x3d function(owner) {\n  if (!owner[wiz.Property.OWNED]) {\n    return;\n  }\n  var doc \x3d goog.dom.getOwnerDocument(owner);\n  goog.array.removeAllIf(owner[wiz.Property.OWNED], function(el) {\n    return !goog.dom.contains(doc.body, el);\n  });\n  owner.setAttribute(\n      wiz.Attribute.IS_OWNER, owner[wiz.Property.OWNED].length \x3e 0);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/dom.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/action.js";
eval("/**\n * @fileoverview Provides the logic to store information about actions in the\n * Wiz system. Wiz Actions are an expanded form of handlers for jsaction that\n * provide additional functions like multiple handlers, jsname delegation, and\n * named controllers.\n */\ngoog.provide(\x27wiz.Action\x27);\ngoog.provide(\x27wiz.ActionSet\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.string\x27);\n\n\n\n/**\n * A class for an action in the Wiz system.\n * @param {string} action The action name.\n * @param {?string\x3d} opt_target The jsname delegate.\n * @param {?Object\x3d} opt_args Optional configuration for the action\n * @constructor\n * @struct\n * @const\n */\nwiz.Action \x3d function(action, opt_target, opt_args) {\n  /** @const */\n  this.action \x3d action;\n  /** @const {?string} */\n  this.target \x3d opt_target || null;\n  /** @const {?Object} */\n  this.args \x3d opt_args || null;\n};\n\n\n/**\n * Supported args for actions.\n * The mapped function accepts an actionFlow and the string value of the\n * argument specification in the HTML.\n * @enum {string}\n */\nwiz.Action.ARGS \x3d {\n  // Example: {@code jsaction\x3d\x22click:{xid handle}(preventDefault\x3dtrue)\x22}\n  PREVENT_DEFAULT: \x27preventDefault\x27,\n\n  // Adds an instruction for event handler to automatically prevent subsequent\n  // mouse events. Applicable only to \x22touchend\x22 events.\n  // Example: {@code jsaction\x3d\x22click:{xid handle}(preventMouseEvents\x3dtrue)\x22}\n  PREVENT_MOUSE_EVENTS: \x27preventMouseEvents\x27,\n\n  // Adds or removes a class to the current actionElement, event target and\n  // controller root node during loading if this is requested by the jsaction.\n  // The class \x22wizLoadingJsAction\x22 is added to the actionElement,\n  // \x22wizLoadingTarget\x22 is added to the event target, and the class\n  // \x22wizLoadingJsController\x22 is added to the related controller node.\n  // Example: {@code jsaction\x3d\x22click:{xid handle}(cssFeedback\x3dtrue)\x22}\n  CSS_FEEDBACK_DURING_LOADING: \x27cssFeedback\x27\n};\n\n\n/**\n * Returns whether there exists an implementation for the\n * given action argument.\n * @param {string} argumentName\n * @return {boolean}\n */\nwiz.Action.isValidArg \x3d function(argumentName) {\n  return argumentName \x3d\x3d wiz.Action.ARGS.PREVENT_DEFAULT ||\n      argumentName \x3d\x3d wiz.Action.ARGS.PREVENT_MOUSE_EVENTS ||\n      argumentName \x3d\x3d wiz.Action.ARGS.CSS_FEEDBACK_DURING_LOADING;\n};\n\n\n\n/**\n * An immutable (after construction) set of actions that provides utilities for\n * easily retrieving actions and information about those actions.\n * @param {!Array\x3c!wiz.Action\x3e\x3d} opt_actions The initial set of actions to add.\n * @constructor @struct @final\n * @package\n */\nwiz.ActionSet \x3d function(opt_actions) {\n  /** @private @const {!Array\x3c!wiz.Action\x3e} */\n  this.actionStore_ \x3d [];\n  var actions \x3d opt_actions;\n  if (actions) {\n    for (var i \x3d 0; i \x3c actions.length; i++) {\n      this.add_(actions[i]);\n    }\n  }\n};\n\n\n/**\n * Parser to extract the target and action from the full action.\n * @const {!RegExp}\n * @private\n */\nwiz.ActionSet.ACTION_PARSER_ \x3d /^\\.?(\\w+)(?:\\(([\\w|\x3d]+)\\))?$/;\n\n\n/**\n * Separator between multiple actions.\n * @const {string}\n * @private\n */\nwiz.ActionSet.ACTION_SEPARATOR_ \x3d \x27,\x27;\n\n\n/**\n * Separator between name\x3dvalue pairs in the () of an action.\n * @const {string}\n * @private\n */\nwiz.ActionSet.ACTION_ARGS_SEPARATOR_ \x3d \x27|\x27;\n\n\n/**\n * Connects name\x3dvalue pairs in the () of an action.\n * @const {string}\n * @private\n */\nwiz.ActionSet.ACTION_ARGS_PAIR_SEPARATOR_ \x3d \x27\x3d\x27;\n\n\n/**\n * Caches parsed instances of wiz.ActionSet.\n * @private @const {!Object\x3cstring, !wiz.ActionSet\x3e}\n */\nwiz.ActionSet.cache_ \x3d {};\n\n\n/**\n * Parses an action string into an ActionSet.\n *\n * \x27foo\x27 -\x3e [Action(foo)]\n * \x27foo,bar\x27 -\x3e [Action(foo),Action(bar)]\n * \x27foo(one),bar(two)\x27 -\x3e [Action(foo,one),Action(bar,two)]\n * \x27foo(one),bar(two,preventDefault\x3dtrue)\x27 -\x3e [Action(foo,one),\n *     Action(bar,two, {\x27preventDefault\x27: \x27true\x27})]\n *\n * @param {string} actions String representing the action handlers for an event.\n * @return {!wiz.ActionSet} Action set containing all the actions.\n */\nwiz.ActionSet.create \x3d function(actions) {\n  var cached \x3d wiz.ActionSet.cache_[actions];\n  if (cached) {\n    return cached;\n  }\n  var actionsData \x3d actions.split(wiz.ActionSet.ACTION_SEPARATOR_);\n  var actionSet \x3d new wiz.ActionSet();\n  for (var i \x3d 0; i \x3c actionsData.length; i++) {\n    var action \x3d goog.string.trim(actionsData[i]);\n    var match \x3d action.match(wiz.ActionSet.ACTION_PARSER_);\n    if (!match) {\n      throw new Error(\x27Invalid syntax for action \x3c\x27 + action + \x27\x3e\x27);\n    }\n    var args \x3d null;\n    var jsname \x3d null;\n    if (match[2]) {\n      var pairs \x3d match[2].split(wiz.ActionSet.ACTION_ARGS_SEPARATOR_);\n      for (var p \x3d 0; p \x3c pairs.length; p++) {\n        var pair \x3d pairs[p].split(wiz.ActionSet.ACTION_ARGS_PAIR_SEPARATOR_);\n        if (pair[1]) {\n          if (!args) {\n            args \x3d {};\n          }\n          goog.asserts.assert(\n              wiz.Action.isValidArg(pair[0]),\n              \x27Unknown action arg \x3c\x27 + pair[0] + \x27\x3e\x27);\n          args[pair[0]] \x3d pair[1];\n        } else {\n          if (jsname) {\n            goog.asserts.fail(\x27Duplicate jsname in \x3c\x27 + action + \x27\x3e\x27);\n            continue;\n          }\n          jsname \x3d pair[0];\n        }\n      }\n    }\n    actionSet.add_(new wiz.Action(match[1], jsname, args));\n  }\n  return wiz.ActionSet.cache_[actions] \x3d actionSet;\n};\n\n\n/**\n * Gets the actions that have been defined.\n * @return {!Array\x3c!wiz.Action\x3e} A set of actions.\n */\nwiz.ActionSet.prototype.get \x3d function() {\n  return this.actionStore_;\n};\n\n\n/**\n * Adds an action to the ActionSet.\n * @param {!wiz.Action} action Action to add to the set.\n * @private\n */\nwiz.ActionSet.prototype.add_ \x3d function(action) {\n  this.actionStore_.push(action);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/action.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/actionhandler.js";
goog.loadModule("goog.module(\x27wiz.jsaction.ActionHandler\x27);\n\n\n\n/**\n * Implemented by wiz.Controller to fix a cyclic dependency in the type system.\n * You should not need to use this type.\n *\n * A class that can handle xid()ed jsaction\x3d\x22\x22 handlers in compiled builds.\n * @interface\n */\nexports \x3d function ActionHandler() {};\n\n\n/**\n * Compiler-generated map from xid(methodname) to method provider callback.  For\n * internal use.\n * @package\n */\nexports.prototype.wizaction;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/actionhandler.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/jsactionutil.js";
goog.loadModule("/** @fileoverview Validation methods for the jsaction\x3d\x22\x22 attribute. */\ngoog.module(\x27wiz.jsaction.util\x27);\ngoog.module.declareLegacyNamespace();\n\nvar Action \x3d goog.require(\x27wiz.Action\x27);\nvar ActionHandler \x3d goog.require(\x27wiz.jsaction.ActionHandler\x27);\nvar ActionSet \x3d goog.require(\x27wiz.ActionSet\x27);\nvar Attribute \x3d goog.require(\x27jsaction.Attribute\x27);\nvar EventType \x3d goog.require(\x27wiz.event.EventType\x27);\nvar WizAttribute \x3d goog.require(\x27wiz.Attribute\x27);\nvar array \x3d goog.require(\x27goog.array\x27);\nvar asserts \x3d goog.require(\x27goog.asserts\x27);\nvar dom \x3d goog.require(\x27goog.dom\x27);\nvar event \x3d goog.require(\x27wiz.event\x27);\nvar wizDom \x3d goog.require(\x27wiz.dom\x27);\nvar xid \x3d goog.require(\x27xid\x27);\n\n\n/**\n * Property name for callback storage on elements.\n * @package @const {string}\n */\nexports.HANDLER_PROPERTY \x3d \x27__wiz\x27;\n\n\n/**\n * Finds all programmatically-registered listeners for a given event type on an\n * element. Does not include any handlers declared in the jsaction\x3d\x22\x22 attribute.\n * @param {!Element} element\n * @param {!EventType|string} eventType\n * @return {!Array\x3cfunction(!wiz.Event)\x3e|undefined}\n * @package\n */\nexports.getHandlers \x3d function(element, eventType) {\n  var storage \x3d element[exports.HANDLER_PROPERTY];\n  if (!storage) {\n    storage \x3d element[exports.HANDLER_PROPERTY] \x3d {};\n  }\n  return storage[eventType];\n};\n\n\n/**\n * Gets the closest controller root for the specified element.\n * @param {!Element} element Element in a controller DOM tree.\n * @param {boolean} includeElement Whether to include the element in the\n *     search.\n * @return {?Element} Controller root element.\n */\nexports.getControllerRoot \x3d function(element, includeElement) {\n  var root \x3d wizDom.getAncestor(element, function(el) {\n    return dom.isElement(el) \x26\x26 el.hasAttribute(WizAttribute.CONTROLLER);\n  }, /* opt_includeNode */ includeElement, /* opt_ignoreShadow */ true);\n  return /** @type {?Element} */ (root);\n};\n\n\n/**\n * @param {!ActionHandler} controller\n * @param {!Action} action\n * @return {!Function}\n * @package\n */\nexports.getMethod \x3d function(controller, action) {\n  // For COMPILED code the event handler methods are retrieved from the\n  // wizaction property of the controller. This is automatically filled\n  // with the obfuscated handler name when the method is annotated with\n  // the @wizaction annotation.\n  var methodName \x3d action.action;\n  if (!COMPILED) {\n    xid.assertXidLikeString(methodName, \x27Controller-jsaction \x27 +\n        \x27mappings must end in _ in UNCOMPILED mode. Did you forget to \x27 +\n        \x27 use xid(\u2026) and @wizaction with \x3c\x27 + methodName + \x27\x3e for\x27 +\n        \x27 controller \x3c\x27 + controller + \x27\x3e\x27);\n    methodName \x3d methodName.replace(/_$/, \x27\x27);\n  }\n  var method \x3d null;\n  if (COMPILED) {\n    // Manually walk through the prototype chain via the wizaction property to\n    // find the wiz action. the WizPass compiler pass generates this pattern\n    // for @wizaction annotations on methods.\n    var curController \x3d controller;\n    var methodProvider \x3d null;\n    while (!methodProvider \x26\x26 curController) {\n      methodProvider \x3d curController.wizaction[methodName];\n      // .superClass_ refers to the prototype of the super class.\n      curController \x3d curController.constructor.superClass_;\n      if (!curController || !curController.wizaction) {\n        break;\n      }\n    }\n    // methodProvider is a function that returns the actual method that\n    // implements the wiz action.\n    if (methodProvider) {\n      method \x3d methodProvider.call(controller);\n    }\n  } else {\n    // Cast away struct-ness. No real issue since this code path only runs\n    // in uncompiled mode.\n    method \x3d /** @type {!Object} */ (controller)[methodName];\n  }\n  if (!method) {\n    throw new Error(\x27Action \x3c\x27 + action.action + \x27\x3e not \x27 +\n        \x27implemented in controller \x3c\x27 + controller + \x27\x3e. \x27 +\n        \x27More info http://go/wiz-errors#unknown-method\x27);\n  }\n  return method;\n};\n\n\n/** @const Splits up jsaction string into pairs of (event) and (action). */\nvar VALIDATE_CONTROLLER_SANITY_JSACTION_REGEXP \x3d\n    /(?:\\s*([^\\s:;]+)\\s*:)?\\s*([^\\s;]+);*\\s*/g;\n\n\n/**\n * Validates that all jsactions bound with the controller are actually\n * implemented by the controller. Throws an assertion error if it is not the\n * case.\n * This only does anything in debug builds.\n * @param {!Element} element Root element of the controller.\n * @param {!ActionHandler} controller\n */\nexports.validateControllerSanity \x3d function(element, controller) {\n  if (!goog.DEBUG) {\n    return;\n  }\n\n  /** @type {!Array\x3c!Action\x3e} */\n  var actions \x3d [];\n  // Parse event names actions from jsaction attribute strings.\n  function parseJsAction(element) {\n    var value \x3d element.getAttribute(Attribute.JSACTION);\n    var jsnamespace \x3d element.getAttribute(Attribute.JSNAMESPACE);\n\n    var events \x3d {};\n    value.replace(VALIDATE_CONTROLLER_SANITY_JSACTION_REGEXP,\n        function(ignore, eventName, action) {\n      if (!eventName) {\n        eventName \x3d \x27click\x27;\n      }\n      // JSAction doesn\x27t support binding the same event twice (The 2nd\n      // silently override the 1st).\n      if (events[eventName]) {\n        console.warn(\x27Culprit element:\x27, element);\n        throw new Error(\x27Event \x3c\x27 + eventName + \x27\x3e bound more than once.\x27);\n      }\n\n      // If the action name contains dots (from a custom event) or a colon (from\n      // the next handler), the user probably forgot a semicolon. Complain about\n      // that.  Note that actions may have a single dot for legacy jsnamespace.\n      // For example: jsaction\x3d\x22{xid(ns.events.foo)}:{xid(a)}click:{xid(b)}\x22\n      // b/71804117\n      if (/\\..*\\.|:/.test(action)) {\n        console.warn(\x27Culprit element:\x27, element);\n        throw new Error(`Event \x3c${eventName}\x3e is bound to \x3c${action}\x3e, which ` +\n                        `looks wrong.  Are you missing a semicolon?`);\n      }\n\n      exports.validateEventName(eventName);\n      events[eventName] \x3d true;\n      // Skip jsnamespaced action names.\n      if (/.+\\./.test(action) ||  // Whether the namespace is specified inline.\n           // Or in an attribute (unless it\x27s overridden).\n          (jsnamespace \x26\x26 !/^\\./.test(action))) {\n        return;\n      }\n      var eventActions \x3d ActionSet.create(action).get();\n      array.forEach(eventActions, function(action) {\n        if (action.args \x26\x26\n            action.args[Action.ARGS.PREVENT_MOUSE_EVENTS] \x3d\x3d \x27true\x27) {\n          asserts.assert(eventName \x3d\x3d \x27touchend\x27,\n              \x27Only touchend events can have argument %s, not %s.\x27,\n              Action.ARGS.PREVENT_MOUSE_EVENTS, eventName);\n        }\n      });\n      actions.push.apply(actions, eventActions);\n    });\n  }\n\n  if (element.getAttribute(Attribute.JSACTION)) {\n    parseJsAction(element);\n  }\n  var elements \x3d element.querySelectorAll(\x27[\x27 + Attribute.JSACTION + \x27]\x27);\n\n  // Check to make sure the element is not a descendent of a subcontroller.\n  for (var i \x3d 0; i \x3c elements.length; i++) {\n    var controllerRoot \x3d exports.getControllerRoot(elements[i],\n        /* includeElement */ true);\n    if (controllerRoot \x3d\x3d element) {\n      parseJsAction(elements[i]);\n    }\n  }\n\n  for (i \x3d 0; i \x3c actions.length; i++) {\n    if (actions[i].action \x3d\x3d\x3d wiz.jsaction.CLIENT_SIDE_LISTEN_MARKER) {\n      continue;\n    }\n    // Throws assert if the controller does not implement the action.\n    exports.getMethod(controller, actions[i]);\n  }\n};\n\n\n/**\n * Checks whether the given event name is properly obfuscated using xid.\n * @param {string} name\n */\nexports.validateEventName \x3d function(name) {\n  if (!goog.DEBUG) {\n    return;\n  }\n\n  var hasTrailingUnderscore \x3d /_$/.test(name);\n  // If the name has dots in it, it must be obfuscated with xid.\n  if (/\\./.test(name)) {\n    if (!hasTrailingUnderscore) {\n      throw new Error(\x27Missing {xid \u2026} for jsaction \x3c\x27 + name + \x27\x3e\x27);\n    }\n    return;\n  }\n  if (!hasTrailingUnderscore) {\n    // Must be browser event.\n    return;\n  }\n  if (COMPILED) {\n    // Following check is only supported for uncompiled code.\n    return;\n  }\n  // If the event has no dots, it must be registered or we throw an error.\n  if (!event.isRegistered(name.replace(/_$/, \x27\x27))) {\n    throw new Error(\x27Browser event \x3c\x27 + name +\n        \x27\x3e should not be wrapped in xid.\x27);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/jsactionutil.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/jsaction.js";
eval("/**\n * @fileoverview Provides functions for programmatic access to jsaction\n * attributes.\n * Method signatures should be largely compatible with goog.events. There\n * is no support for listening to events in the capture phase.\n */\ngoog.provide(\x27wiz.jsaction\x27);\ngoog.provide(\x27wiz.jsaction.UnlistenKey\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27jsaction.Attribute\x27);\ngoog.require(\x27jsaction.Cache\x27);\ngoog.require(\x27wiz.Attribute\x27);\n\ngoog.forwardDeclare(\x27wiz.Dispatcher\x27);\n\n/**\n * @suppress {extraRequire} Needed for proper type checking of\n * wiz.Event\x3cFoo\x3e.\n */\ngoog.require(\x27wiz.Event\x27);\ngoog.require(\x27wiz.Property\x27);\n/**\n * @suppress {extraRequire} Pull into compilation unit.\n */\ngoog.require(\x27wiz.event\x27);\ngoog.require(\x27wiz.jsaction.util\x27);\n\n\n/**\n * Action name that has to be declared in the DOM for programmatic adding\n * of callbacks to work.\n * @const {string}\n */\nwiz.jsaction.CLIENT_SIDE_LISTEN_MARKER \x3d \x27CLIENT\x27;\n\n\n/**\n * @typedef {{\n *   et:(!wiz.event.EventType|string),\n *   cb:function(!wiz.Event),\n *   el:!Element\n * }}\n */\nwiz.jsaction.UnlistenKey;\n\n\n/**\n * Caches the regular expressions for checking whether a particular jsaction\n * string matches a given event name.\n * @private @const {!Object\x3c(!wiz.event.EventType|string), !RegExp\x3e}\n */\nwiz.jsaction.bindsJsActionRegExpCache_ \x3d {};\n\n\n/**\n * Allows adding listeners for jsactions programmatically. This mostly works\n * like `goog.events.listen`. An important distinction is that you do\n * not need to unlisten events to avoid memory leaks, so feel free to\n * ignore the return value.\n * @param {?Element} element\n * @param {!wiz.event.EventType\x3cDATA,OPT_SOURCE\x3e|string} eventType wiz.event\n *     or browser event name.\n * @param {\n *     function(this:THIS,!wiz.Event\x3cDATA,OPT_SOURCE\x3e): (boolean|undefined)}\n *     callback Callback function that can return true to allow the event to\n *     bubble.\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback. IMPORTANT: There is no need to unlisten\n *     in the dispose phase. Only memorize the return value if your app\n *     needs to unlisten before the DOM node that the listener is attached\n *     to is removed from the DOM.\n * @template DATA,OPT_SOURCE,THIS\n */\nwiz.jsaction.listen \x3d function(element, eventType, callback, opt_context) {\n  goog.asserts.assert(element !\x3d null, \x27The element must not be null.\x27);\n  var /** string */ jsactionAttr \x3d goog.string.trim(\n      element.getAttribute(jsaction.Attribute.JSACTION) || \x27\x27);\n\n  // Serialize the fact that we are interested in this eventType into the\n  // DOM.\n  if (!wiz.jsaction.bindsJsAction_(jsactionAttr, eventType)) {\n    if (jsactionAttr \x26\x26 !/;$/.test(jsactionAttr)) {\n      jsactionAttr +\x3d \x27;\x27;\n    }\n    // The client handler is prefixed with a \x27.\x27 so events properly propagate,\n    // even from legacy (non-Wiz) components that have jsnamespace\x3d\x22\x22\n    // in ancestor elements.\n    jsactionAttr +\x3d eventType + \x27:.\x27 + wiz.jsaction.CLIENT_SIDE_LISTEN_MARKER;\n    // TODO(malteubl) Get rid of manipulating these jsaction attributes and\n    // properties. Implement and use an API in the jsaction.EventContract\n    // instead. This API should not involve deleting the jsaction cache and\n    // should thus provide major performance improvements.\n    element.setAttribute(jsaction.Attribute.JSACTION, jsactionAttr);\n    // Nuke cache after adding new event type.\n    jsaction.Cache.clear(element);\n  }\n\n  callback \x3d goog.bind(callback, opt_context || null);\n  var handlers \x3d wiz.jsaction.util.getHandlers(element, eventType);\n  if (handlers) {\n    handlers.push(callback);\n  } else {\n    element[wiz.jsaction.util.HANDLER_PROPERTY][eventType] \x3d [callback];\n  }\n  return {\n    et: eventType,\n    cb: callback,\n    el: element\n  };\n};\n\n\n/**\n * Adds a jsaction event listener for a specific event. After the event has\n * fired the event listener is removed from the target element.\n *\n * @param {?Element} element\n * @param {!wiz.event.EventType\x3cDATA,OPT_SOURCE\x3e|string} eventType wiz.event\n *     or browser event name.\n * @param {function(this:THIS,!wiz.Event\x3cDATA,OPT_SOURCE\x3e)} callback\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback. IMPORTANT: There is no need to unlisten\n *     in the dispose phase. Only memorize the return value if your app\n *     needs to unlisten before the DOM node that the listener is attached\n *     to is removed to the DOM.\n * @template DATA,OPT_SOURCE,THIS\n */\nwiz.jsaction.listenOnce \x3d function(element, eventType, callback, opt_context) {\n  var key;\n  var wrapper \x3d function(ev) {\n    // Unlisten before calling the callback.\n    wiz.jsaction.unlistenByKey(key);\n    return callback.call(opt_context, ev);\n  };\n  key \x3d wiz.jsaction.listen(element, eventType, wrapper, null);\n  return key;\n};\n\n\n/**\n * Adds a global listener for arbitrary jsaction events. The related element\n * that defines the global scope must be passed in.\n * ({@see wiz.jsaction.listen}).\n * @param {!HTMLBodyElement} element The element that the global queue is\n *     attached to.\n * @param {!wiz.event.EventType\x3cDATA,OPT_SOURCE\x3e|string} eventType\n * @param {function(this:THIS,!wiz.Event\x3cDATA,OPT_SOURCE\x3e)} callback\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback.\n * @template DATA,OPT_SOURCE,THIS\n */\nwiz.jsaction.listenGlobal \x3d function(element, eventType, callback,\n    opt_context) {\n  // For now we only support document.body as the global scope.\n  goog.asserts.assert(element \x3d\x3d element.ownerDocument.body);\n  return wiz.jsaction.listen(element, eventType, callback, opt_context);\n};\n\n\n/**\n * Removes an event listener callback that was added with\n * `wiz.jsaction.listen`.\n * @param {!wiz.jsaction.UnlistenKey} key\n * @return {boolean} Whether the callback was found and removed.\n */\nwiz.jsaction.unlistenByKey \x3d function(key) {\n  var handlers \x3d wiz.jsaction.util.getHandlers(key.el, key.et);\n  if (!handlers) {\n    return false;\n  }\n  return goog.array.remove(handlers, key.cb);\n  // TODO(malteubl): Remove CLIENT_SIDE_LISTEN_MARKER entries from the element\x27s\n  // jsaction attribute if the array is now empty.  See b/24940789\n};\n\n\n/**\n * Remove all programatically-registered listeners on the element that came from\n * `wiz.jsaction.listen`.\n * @param {?Element} element\n */\nwiz.jsaction.removeAll \x3d function(element) {\n  // TODO(malteubl): Remove CLIENT_SIDE_LISTEN_MARKER entries from the element\x27s\n  // jsaction attribute.  Without that, broadcast() might break; see b/24940789.\n  element[wiz.jsaction.util.HANDLER_PROPERTY] \x3d undefined;\n};\n\n\n/**\n * Triggers a custom event on an element (bubbling up to ancestor elements).\n * @param {!Element} element The event target.\n * @param {!wiz.event.EventType\x3cDATA\x3e} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {boolean\x3d} opt_bubbles Whether the event bubbles. Defaults to true.\n * @param {?Object\x3d} opt_ext Object that will be mixed into the created custom\n *     event object.\n * @template DATA\n */\nwiz.jsaction.trigger \x3d function(\n    element, eventType, opt_data, opt_bubbles, opt_ext) {\n  wiz.jsaction.triggerInternal_(\n      element, eventType, opt_data, opt_bubbles, opt_ext);\n};\n\n\n/**\n * Triggers a custom event on an element (bubbling up to ancestor elements) for\n * testing purposes. This method accepts a string event type for compatibility\n * to Reactive.\n * @param {!Element} element The event target.\n * @param {!wiz.event.EventType\x3cDATA\x3e|string} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {boolean\x3d} opt_bubbles Whether the event bubbles. Defaults to true.\n * @param {?Object\x3d} opt_ext Object that will be mixed into the created custom\n *     event object.\n * @template DATA\n */\nwiz.jsaction.triggerUnsafe \x3d function(\n    element, eventType, opt_data, opt_bubbles, opt_ext) {\n  wiz.jsaction.triggerInternal_(\n      element, eventType, opt_data, opt_bubbles, opt_ext);\n};\n\n\n/**\n * Triggers a custom event on an element (bubbling up to ancestor elements).\n * @param {!Element} element The event target.\n * @param {!wiz.event.EventType\x3cDATA\x3e|string} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {boolean\x3d} opt_bubbles Whether the event bubbles. Defaults to true.\n * @param {?Object\x3d} opt_ext Object that will be mixed into the created custom\n *     event object.\n * @template DATA\n * @private\n */\nwiz.jsaction.triggerInternal_ \x3d function(element, eventType, opt_data, opt_bubbles,\n    opt_ext) {\n  var dispatcher \x3d wiz.jsaction.getDispatcherForDocument(\n      goog.dom.getOwnerDocument(element));\n  var customEvent \x3d {\n    \x27type\x27: eventType,\n    \x27target\x27: element,\n    \x27bubbles\x27: opt_bubbles !\x3d undefined ? opt_bubbles : true\n  };\n  if (goog.isDef(opt_data)) {\n    customEvent[\x27data\x27] \x3d opt_data;\n  }\n  if (opt_ext) {\n    goog.object.extend(customEvent, opt_ext);\n  }\n  dispatcher.trigger(customEvent);\n};\n\n\n/**\n * Triggers a custom event on all elements (that handle the event) nested within\n * an element (using a DFS to search _downwards_, not upwards, and including all\n * owned elements that aren\x27t physically inside the parent).\n *\n * The event will not bubble upwards at all, modulo b/24940789 from remove calls\n *\n * TODO(malteubl) Add support for filtering event on the subscriber side\n * similar to jsname filtering.\n *\n * @param {!Document|!Element} parent Element or document from which to execute\n *     the broadcast.\n * @param {!wiz.event.EventType\x3cDATA, SOURCE\x3e} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {SOURCE\x3d} opt_source The source of the broadcast event.\n * @param {?Object\x3d} opt_ext Object that will be mixed into the created custom\n *     event object.\n * @template DATA, SOURCE\n */\nwiz.jsaction.broadcast \x3d function(parent, eventType, opt_data,\n    opt_source, opt_ext) {\n  var targets \x3d wiz.jsaction.findBroadcastTargets(parent, eventType);\n  goog.array.forEach(targets, function(/** !Element */ target) {\n    var eventInfo \x3d opt_ext;\n    if (opt_source) {\n      eventInfo \x3d eventInfo || {};\n      eventInfo[wiz.Property.EVENT_SOURCE] \x3d opt_source;\n    }\n    wiz.jsaction.trigger(target, eventType, opt_data,\n        /* opt_bubbles */ false, eventInfo);\n  });\n};\n\n\n/**\n * Returns target elements that listen for the broadcasted events.\n * TODO(slaks): Move to util.\n *\n * @param {!Document|!Element} parent Element or document from which to execute\n *     the broadcast.\n * @param {!wiz.event.EventType} eventType\n * @return {!Array\x3c!Element\x3e}\n */\nwiz.jsaction.findBroadcastTargets \x3d function(parent, eventType) {\n  var targets \x3d [];\n  /** @param {!Document|!Element} root */\n  var searchForTargets \x3d function(root) {\n    /** @param {!Element} element */\n    var processElement \x3d function(element) {\n      if (element[wiz.Property.OWNED]) {\n        goog.array.forEach(element[wiz.Property.OWNED], function(owned) {\n          if (!goog.dom.contains(parent, owned)) {\n            searchForTargets(owned);\n          }\n        });\n      }\n      if (wiz.jsaction.bindsJsAction(element, eventType)) {\n        targets.push(element);\n      }\n    };\n\n    goog.array.forEach(root.querySelectorAll(\n        \x27[\x27 + jsaction.Attribute.JSACTION + \x27*\x3d\x22\x27 + eventType + \x27\x22],\x27 +\n        // If a controller is the owner of other controller we need to recurse\n        // into those nodes to check if they match the real query.\n        \x27[\x27 + wiz.Attribute.CONTROLLER + \x27][\x27 + wiz.Attribute.IS_OWNER + \x27]\x27),\n        processElement);\n    // The root doesn\x27t have to have a controller since one could have\n    // registered wiz.jsaction.listen() on it.\n    if (goog.dom.isElement(root)) {\n      processElement(/** @type {!Element} */ (root));\n    }\n  };\n  searchForTargets(parent);\n  return targets;\n};\n\n\n/**\n * Checks whether a given element binds a jsaction event of the given name.\n * TODO(slaks): Move to util.\n * @param {!Element} element\n * @param {!wiz.event.EventType|string} name The name of an event type.\n * @return {boolean} Whether the event is registered.\n */\nwiz.jsaction.bindsJsAction \x3d function(element, name) {\n  // Check the per-element cache.\n  var cache \x3d jsaction.Cache.get(element);\n  if (cache) {\n    return !!cache[/** @type {string} */ (name)];\n  }\n  // Fallback to inspecting the jsaction attribute value.\n  return wiz.jsaction.bindsJsAction_(\n      element.getAttribute(jsaction.Attribute.JSACTION), name);\n};\n\n\n/**\n * Returns whether the subtree contains receivers for an event of the specified\n * type, that would be triggered by wiz.jsaction.broadcast.\n * TODO(slaks): Move to util.  Or delete entirely?\n *\n * @param {!Document|!Element} parent Element or document from which to execute\n *     the broadcast.\n * @param {!wiz.event.EventType} eventType\n * @return {boolean}\n */\nwiz.jsaction.bindsJsactionDeeply \x3d function(parent, eventType) {\n  return wiz.jsaction.findBroadcastTargets(parent, eventType).length \x3e 0;\n};\n\n\n/**\n * Checks whether a given jsaction string binds an event of the given name.\n * @param {?string} jsactionStr A jsaction string.\n * @param {!wiz.event.EventType|string} name The name of an event type.\n * @return {boolean} Whether the event is registered.\n * @private\n */\nwiz.jsaction.bindsJsAction_ \x3d function(jsactionStr, name) {\n  if (!jsactionStr) {\n    return false;\n  }\n  // Check if the same jsaction string has been parsed by jsaction before.\n  var cache \x3d jsaction.Cache.getParsed(jsactionStr);\n  if (cache) {\n    return !!cache[/** @type {string} */ (name)];\n  }\n  // No cache hit, run a regex.\n  // TODO(malteubl): Expose parsing from JSAction, so we can actually contribute\n  // in filling the cache here.\n  var re \x3d wiz.jsaction.bindsJsActionRegExpCache_[name];\n  if (!re) {\n    re \x3d new RegExp(\x27(^\\\\s*\x27 + name + \x27\\\\s*:|[\\\\s;]\x27 + name + \x27\\\\s*:)\x27);\n    wiz.jsaction.bindsJsActionRegExpCache_[name] \x3d re;\n  }\n  return re.test(jsactionStr);\n};\n\n\n/**\n * Gets the dispatcher responsible for the given document.\n * @param {!Document} doc\n * @return {!wiz.Dispatcher}\n */\nwiz.jsaction.getDispatcherForDocument \x3d function(doc) {\n  var dispatcher \x3d doc[wiz.Property.DISPATCHER];\n  goog.asserts.assert(dispatcher !\x3d null, \x27No dispatcher was set up for the \x27 +\n      \x27current document.\x27);\n  return dispatcher;\n};\n\n\n/**\n * Checks if the dispatcher for the given document is set.\n *\n * NOTE: If you are calling this method, it is a sign that something else is\n * wrong in your application. During Wiz migration, we\x27ve found scenarios where\n * some components are not waiting for the App to be properly initialized and\n * cause issues if wiz.jsaction is called before Wiz is added to the app\n * context. We\x27re providing this API as a workaround for such cases, but it\n * should never be used as a long term solution. As such, we recommend that EACH\n * USE OF THIS API HAS TO REFERENCE AN ASSOCIATED BUG # for the underlying issue\n * that needs to be fixed and is causing the need for the workaround.\n *\n * @param {!Document} doc\n * @return {boolean} whether the dispatcher is set\n */\nwiz.jsaction.isDispatcherForDocumentReady_TEMPORARY_USE_ONLY \x3d function(doc) {\n  return !!doc[wiz.Property.DISPATCHER];\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/jsaction.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2w');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2w');

}catch(e){_DumpException(e)}
/* _Module_:sy2z */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2z');
var $googDebugFname="javascript/apps/wiz/data/events.js";
eval("goog.provide(\x27wiz.data.events\x27);\n\ngoog.require(\x27wiz.event\x27);\n\ngoog.forwardDeclare(\x27jspb.Message\x27);\n\n\n/**\n * @typedef {{\n *   message: (!jspb.Message|function(new:jspb.Message,!Array\x3d)),\n *   updateFn: ?(function(!jspb.Message):?jspb.Message),\n *   payload: (!Object|undefined),\n *   customEvent: (!wiz.event.EventType|undefined)\n * }}\n * - message: is either the data that changed or an identifier (a message with a\n *     subset of the fields populated such that applications can find the\n *     message that changed). This can also be a proto type to signal that all\n *     messages of a type are affected.\n * - updateFn: a function that will update the message with the data changes.\n * TODO(wqardaji): make updateFn non-optional.\n * TODO(tomnguyen) Rename message to messageOrCtor\n */\nwiz.data.events.DataChange;\n\n\n/**\n * The default event that is emitted upon every invocation of\n * {@see wiz.labs.data.notify} even if the caller specifies a default event.\n * @const {!wiz.event.EventType\x3c!jspb.Message|function (!Array\x3d)\x3e}\n */\nwiz.data.events.change \x3d wiz.event.declare(\x27data\x27);\n\n\n/**\n * Event emitted when a piece of data from the data source is removed.\n * This event bubbles, so it can be e.g. used for \x22if I receive this on the\n * view level, I can assume I should throw away the view\x22 type of logic.\n * @const {!wiz.event.EventType\x3c!wiz.data.events.DataChange\x3e}\n */\nwiz.data.events.invalidated \x3d\n    wiz.event.declare(\x27wiz.data.events.invalidated\x27);\n\n\n/**\n * Event emitted when a piece of data in the data source is updated.\n * This event bubbles, so it can be e.g. used for \x22if I receive this on the\n * view level, I can assume I should throw away the view\x22 type of logic.\n * @const {!wiz.event.EventType\x3c!wiz.data.events.DataChange\x3e}\n */\nwiz.data.events.updated \x3d\n    wiz.event.declare(\x27wiz.data.events.updated\x27);\n\n\n/**\n * Event emitted when a piece of data in the data source should be updated. The\n * event payload does not include the actual updated message, but an update\n * function that can be applied to the message.\n * This event bubbles, so it can be e.g. used for \x22if I receive this on the\n * view level, I can assume I should throw away the view\x22 type of logic.\n * @const {!wiz.event.EventType\x3c!wiz.data.events.DataChange\x3e}\n */\nwiz.data.events.updateWith \x3d\n    wiz.event.declare(\x27wiz.data.events.updateWith\x27);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/events.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/events.js";
eval("/**\n * @fileoverview Provides built in event types. Use these when applicable\n * instead of declaring new events and rely on DOM order for disambiguation.\n *\n * All application specific events should use namespaces like\n * {@code wiz.event.declare(\x27your.application.changed\x27) }.\n *\n * @visibility {//visibility:public}\n */\ngoog.provide(\x27wiz.event.events\x27);\ngoog.provide(\x27wiz.event.events.AttributeChange\x27);\ngoog.provide(\x27wiz.event.events.ViewportConfig\x27);\n\n/** @suppress {extraRequire} Bringing this into all wiz compilation units. */\ngoog.require(\x27wiz.data.events\x27);\ngoog.require(\x27wiz.event\x27);\n\ngoog.forwardDeclare(\x27wiz.Query\x27);\n\n/**\n * Dispatched when a controller or element becomes visible.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.show \x3d wiz.event.declare(\x27show\x27);\n\n/**\n * Dispatched when a controller or element becomes hidden.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.hide \x3d wiz.event.declare(\x27hide\x27);\n\n/**\n * Dispatched when a controller or element becomes disabled.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.disable \x3d wiz.event.declare(\x27disable\x27);\n\n/**\n * Dispatched when a controller or element becomes enabled.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.enable \x3d wiz.event.declare(\x27enable\x27);\n\n/**\n * Dispatched when a controller or element becomes highlighted.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.highlight \x3d wiz.event.declare(\x27highlight\x27);\n\n/**\n * Dispatched when a controller or element becomes un-highlighted.\n * @const {!wiz.event.EventType}\n */\nwiz.event.events.unhighlight \x3d wiz.event.declare(\x27unhighlight\x27);\n\n/** Dispatched when a controller or element becomes activated. */\nwiz.event.declare(\x27activate\x27);\n\n/** Dispatched when a controller or element becomes deactivated. */\nwiz.event.declare(\x27deactivate\x27);\n\n/** Dispatched when a controller or element becomes selected. */\nwiz.event.events.select \x3d wiz.event.declare(\x27select\x27);\n\n/** Dispatched when a controller or element becomes un-selected. */\nwiz.event.events.unselect \x3d wiz.event.declare(\x27unselect\x27);\n\n/**\n * Dispatched when a controller or element becomes checked.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.check \x3d wiz.event.declare(\x27check\x27);\n\n/**\n * Dispatched when a controller or element becomes un-checked.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.uncheck \x3d wiz.event.declare(\x27uncheck\x27);\n\n/** Dispatched when a controller or element is opened (expanded). */\nwiz.event.declare(\x27open\x27);\n\n/** Dispatched when a controller or element is closed (collapsed). */\nwiz.event.declare(\x27close\x27);\n\n/**\n * Dispatched when a controller or element gets focus.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.focus \x3d wiz.event.declare(\x27focus\x27);\n\n/**\n * Dispatched when a controller or element loses focus.\n * @const {!wiz.event.EventType\x3cundefined\x3e}\n */\nwiz.event.events.blur \x3d wiz.event.declare(\x27blur\x27);\n\n/**\n * Dispatched when the user invokes an action of controller or element.\n * @const {!wiz.event.EventType\x3c*\x3e}\n */\nwiz.event.events.action \x3d wiz.event.declare(\x27action\x27);\n\n/**\n * Dispatched when a controller has completed any animations triggered by going\n * into an \x27active\x27 state. An example would be a button which displays an\n * animation when pressed - this event is dispatched when the button press\n * animation is complete.\n * @const {!wiz.event.EventType}\n */\nwiz.event.events.endaction \x3d wiz.event.declare(\x27endaction\x27);\n\n/**\n * Dispatched when the external-facing state of a controller or\n * element is changed.\n * @const {!wiz.event.EventType\x3c*\x3e}\n */\nwiz.event.events.statechange \x3d wiz.event.declare(\x27statechange\x27);\n\n/**\n * Describes the viewport.\n * - viewportElement - the root element of the viewport. Could be either BODY\n *   element or an element assigned by the application.\n * - size - The physical viewport size.\n * - visibleSize - The visible viewport size. This is part of the physical\n *   viewport unobscured by keyboard.\n * - isLandscape - Whether the physical viewport is in the landscape\n *   aspect ratio.\n *\n * @typedef {{\n *   viewportElement: !wiz.Query,\n *   size: !goog.math.Size,\n *   visibleSize: !goog.math.Size,\n *   isLandscape: boolean\n * }}\n */\nwiz.event.events.ViewportConfig;\n\n/**\n * Dispatched when the browser window\x27s size or orientation changes.\n * @const {!wiz.event.EventType\x3c!wiz.event.events.ViewportConfig\x3e}\n */\nwiz.event.events.viewportChanged \x3d wiz.event.declare(\x27viewportChanged\x27);\n\n/**\n * Dispatched when the manager.dirty() function is called, after a\n * controller (that is subscribed to \x27render\x27) is added to the page. Use this if\n * your controller needs to do things immediately when it is first rendered.\n *\n * App developers can choose when to call manager.dirty(), but for server-side\n * renders, it is typically called after the document.onload event, and for\n * client-side renders, it typically dispatches after the Soy render event.\n *\n * @const {!wiz.event.EventType}\n */\nwiz.event.events.render \x3d wiz.event.declare(\x27render\x27);\n\n/**\n * @typedef {{\n *   name: string,\n *   newVal: ?string,\n *   prevVal: ?string\n * }}\n */\nwiz.event.events.AttributeChange;\n\n/**\n * Dispatched when an attribute on a controller\x27s root changes.\n * @const {!wiz.event.EventType\x3c!wiz.event.events.AttributeChange\x3e}\n */\nwiz.event.events.attributeChanged \x3d wiz.event.declare(\x27attributeChanged\x27);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/events.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2z');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2z');

}catch(e){_DumpException(e)}
/* _Module_:sy30 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy30');
var $googDebugFname="javascript/apps/wiz/controller/manager.js";
eval("goog.provide(\x27wiz.Manager\x27);\n\ngoog.require(\x27goog.Disposable\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.nextTick\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.events.EventHandler\x27);\ngoog.require(\x27goog.events.EventId\x27);\ngoog.require(\x27goog.events.EventTarget\x27);\ngoog.require(\x27goog.events.EventType\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.userAgent\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Property\x27);\ngoog.require(\x27wiz.common.FrameworkRestricted\x27);\ngoog.require(\x27wiz.event.events\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.jsaction\x27);\ngoog.require(\x27wiz.lookupWizServiceInternal\x27);\n\ngoog.forwardDeclare(\x27fava.AppContext\x27);\ngoog.forwardDeclare(\x27wiz.Controller\x27);\ngoog.forwardDeclare(\x27wiz.Model\x27);\ngoog.forwardDeclare(\x27wiz.Object\x27);\n\n\ngoog.scope(function() {\n\n\n/**\n * A manager for controllers and models that has a global view of all instances\n * in a document and disposes them when the associated DOM nodes get removed\n * from the DOM. This object should be a per-document singleton.\n * @param {!Document} doc The doc in which the objects managed by this\n *     instance live.\n * @param {?fava.AppContext\x3d} opt_appContext The Fava AppContext.\n * @constructor\n * @struct\n *  For goog.Disposable.\n * @const\n * @extends {goog.Disposable}\n */\nwiz.Manager \x3d function(doc, opt_appContext) {\n  /**\n   * @private\n   * @const\n   */\n  this.doc_ \x3d doc;\n\n  /**\n   * @private {?fava.AppContext}\n   * @const\n   */\n  this.appContext_ \x3d opt_appContext || null;\n\n  /**\n   * @private {boolean}\n   */\n  this.dirty_ \x3d false;\n\n  /**\n   * @private\n   * @const {!goog.events.EventTarget}\n   */\n  this.eventTarget_ \x3d new goog.events.EventTarget();\n\n  /**\n   * @private {!Object\x3c!Element\x3e}\n   */\n  this.domRootedObjects_ \x3d {};\n\n  /**\n   * @private {!Object\x3cstring,boolean\x3e}\n   * @const\n   */\n  this.preloaded_ \x3d {};\n\n  /**\n   * @private {?number}\n   */\n  this.preloadTimeout_ \x3d null;\n\n  /**\n   * @const {?goog.log.Logger}\n   * @private\n   */\n  this.logger_ \x3d goog.log.getLogger(\x27wiz.Manager\x27);\n\n  /**\n   * Whether the window is currently scrolling.\n   * @private {boolean}\n   */\n  this.isWindowScrolling_ \x3d false;\n\n  /**\n   * @private {boolean}\n   */\n  this.shouldCollectAfterScrolling_ \x3d false;\n\n  /**\n   * @private {?number}\n   */\n  this.scrollTimeout_ \x3d null;\n\n  // Store the manager on the DOM. It\x27s a virtual singleton.\n  doc[wiz.Property.MANAGER] \x3d this;\n\n  /** @private {function()} @const */\n  this.scrollEnd_ \x3d goog.bind(function() {\n    this.isWindowScrolling_ \x3d false;\n    if (this.shouldCollectAfterScrolling_) {\n      this.triggerRender(wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK);\n    }\n  }, this);\n\n  /**\n   * Closure event handler.\n   * @private @const {!goog.events.EventHandler}\n   */\n  this.eventHandler_ \x3d new goog.events.EventHandler(this);\n  this.eventHandler_.listen(goog.dom.getWindow(doc),\n      goog.events.EventType.UNLOAD, this.cleanup_);\n  this.eventHandler_.listen(goog.dom.getWindow(doc),\n      goog.events.EventType.SCROLL, this.scroll_);\n};\ngoog.inherits(wiz.Manager, goog.Disposable);\n\n\n/**\n * @define {number} Time after a controller is discovered until it is\n *     automatically downloaded if it wasn\x27t already.\n */\ngoog.define(\x27wiz.Manager.PRELOAD_DELAY_MILLIS\x27, 0);\n\n\n/**\n * Number of milli seconds that is assumed to be an upper bound between scroll\n * events fired by the browser while the user is scrolling. It is assumed that\n * when less than this amount of time passed since the last scroll event, that\n * the user may still be scrolling.\n * @private @const\n */\nwiz.Manager.MAX_TIME_BETWEEN_SCROLL_EVENT_MILLIS_ \x3d 200;\n\n\n/**\n * Mark the manager associated with the Document associated with the\n * \x22domThing\x22 as dirty. Accepts nodes, elements, documents and windows.\n * Use this static version in non wiz code that does not have easy\n * access to a `Controller.prototype.dirty`.\n * @param {?Node|?Window|?Document} node\n */\nwiz.Manager.dirty \x3d function(node) {\n  wiz.Manager.getManager(node).dirty();\n};\n\n\n/**\n * Gets the manager for document. Accepts nodes, elements, documents, and\n * and windows that reference the document.\n * @param {?Node|?Window} node\n * @return {!wiz.Manager}\n */\nwiz.Manager.getManager \x3d function(node) {\n  var doc \x3d goog.dom.getOwnerDocument(node);\n  var manager \x3d doc[wiz.Property.MANAGER];\n  goog.asserts.assert(manager,\n      \x27No manager has been initialized for this document.\x27);\n  return manager;\n};\n\n\n/**\n * @const {!Object\x3cstring, !goog.events.EventId\x3e}\n */\nwiz.Manager.EventType \x3d {\n  /**\n   * Dispatched when the document become dirty.\n   * @type {!goog.events.EventId}\n   */\n  DIRTY: new goog.events.EventId(xid(\x27wiz.Manager.EventType.DIRTY\x27)),\n};\n\n\n/**\n * @param {wiz.common.FrameworkRestricted} restricted\n * @return {!goog.events.EventTarget}\n */\nwiz.Manager.prototype.getEventTarget \x3d function(restricted) {\n  return this.eventTarget_;\n};\n\n\n/**\n * Mark the current document as dirty, and invokes triggerRender in a nextTick.\n * Either this method or #synchronousDirty must be called after every\n * operation that added or removed (or might have) controllers.\n */\nwiz.Manager.prototype.dirty \x3d function() {\n  if (!this.markDirty_()) return;\n\n  // Trigger \x22render\x22 event for controllers.\n  goog.async.nextTick(goog.bind(\n      this.triggerRender, this,\n      wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK));\n\n  // Trigger custom \x22dirty\x22 event on event target listeners (framework-only).\n  goog.async.nextTick(goog.bind(\n      this.eventTarget_.dispatchEvent, this.eventTarget_,\n      wiz.Manager.EventType.DIRTY));\n};\n\n\n/**\n * Mark the current document as dirty, and directly invokes triggerRender.\n * Either this method or #dirty must be called after every\n * operation that added or removed (or might have) controllers.\n */\nwiz.Manager.prototype.synchronousDirty \x3d function() {\n  if (!this.markDirty_()) return;\n\n  // Trigger \x22render\x22 event for controllers.\n  this.triggerRender(wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK);\n\n  // Trigger custom \x22dirty\x22 event on event target listeners (framework-only).\n  this.eventTarget_.dispatchEvent(wiz.Manager.EventType.DIRTY);\n};\n\n\n/**\n * Marks the document as dirty, without calling triggerRender.\n * @return {boolean} Whether or not this call changed the dirty state.  In other\n *     words, returns false if the document was already marked dirty.\n * @private\n */\nwiz.Manager.prototype.markDirty_ \x3d function() {\n  if (this.dirty_) {\n    return false;\n  }\n  this.dirty_ \x3d true;\n  goog.log.fine(this.logger_, \x27Marking document as dirty.\x27);\n  return true;\n};\n\n\n/**\n * Gets the document this manager was bound to.\n * @return {!Document}\n */\nwiz.Manager.prototype.getDocument \x3d function() {\n  return this.doc_;\n};\n\n\n/**\n * Returns true if it is likely that the user is currently scrolling the\n * window.\n * @return {boolean}\n */\nwiz.Manager.prototype.isWindowCurrentlyScrolling \x3d function() {\n  return this.isWindowScrolling_;\n};\n\n\n/**\n * Event handler for window scroll event. Records the time of the last scroll\n * event.\n * @private\n */\nwiz.Manager.prototype.scroll_ \x3d function() {\n  // See b/11531143 Rarely the event handler calls this function with the wrong\n  // this value.\n  if (!this.scrollEnd_) {\n    return;\n  }\n  if (!this.isWindowScrolling_) {\n    this.isWindowScrolling_ \x3d true;\n  }\n  if (this.scrollTimeout_) {\n    window.clearTimeout(this.scrollTimeout_);\n  }\n  this.scrollTimeout_ \x3d window.setTimeout(this.scrollEnd_,\n      wiz.Manager.MAX_TIME_BETWEEN_SCROLL_EVENT_MILLIS_);\n};\n\n\n/**\n * Requests preloading of controllers.\n * Currently only downloads JS modules, does not actually instantiate\n * controllers.\n * Preloads all controllers on the current page, but will get smarter about\n * that in the future.\n * @param {!Object\x3c!Element\x3e} domElementMap Map of DOM nodes with\n *     controllers to preload. Defaults to all known controllers.\n * @private\n */\nwiz.Manager.prototype.preload_ \x3d function(domElementMap) {\n  // By this time the appContext might have been disposed. Don\x27t do anything if\n  // it is.\n  if (goog.Disposable.isDisposed(this.appContext_)) {\n    return;\n  }\n  var keys \x3d [];\n  goog.object.forEach(domElementMap, function(element, id) {\n    if (!this.preloaded_[id]) {\n      this.preloaded_[id] \x3d true;\n      var name \x3d element.getAttribute(wiz.Attribute.CONTROLLER);\n      if (!name) {\n        return;\n      }\n      if (element.getAttribute(wiz.Attribute.LAZY)) {\n        // LAZY \x3d\x3d don\x27t preload.\n        return;\n      }\n      var key \x3d wiz.lookupWizServiceInternal(name);\n      if (key) {\n        keys.push(key);\n      }\n    }\n  }, this);\n  if (keys.length \x3e 0) {\n    wiz.inject.Injector.getInstance().getAsync(keys);\n  }\n};\n\n\n/**\n * Sets the element of a controller/model with the given id or null. This is to\n * be called by the dispatcher when it knows it has a controller/model to avoid\n * race conditions because of the asynchronicity of the `dirty`\n * mechanism.\n * @param {!Element} element\n */\nwiz.Manager.prototype.notifyElement \x3d function(element) {\n  var id \x3d goog.getUid(element);\n  if (!this.domRootedObjects_[id]) {\n    this.domRootedObjects_[id] \x3d element;\n    if (this.bindsAttributeChanged_(element)) {\n      this.setupAttributeChangedListener_(element);\n    }\n    if (this.bindsRender_(element)) {\n      wiz.jsaction.trigger(element, wiz.event.events.render, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Find all controllers and models in the current document. See which are new\n * (previously unknown) and which are no longer there that were previously\n * known.\n * Sends a \x22render\x22 event to newly discovered controllers in the DOM if\n * requested by the controllers.\n * This should rarely be called by client code.  Instead, call dirty to schedule\n * a collection at the end of the current message loop cycle. Use this method if\n * you need a controller to be created synchronously, to avoid a loading flicker\n * if data is already available. Remember that the controller\x27s dependencies may\n * not be ready synchronously.\n * @param {wiz.common.FrameworkRestricted} restricted\n */\nwiz.Manager.prototype.triggerRender \x3d function(restricted) {\n  if (this.isWindowCurrentlyScrolling()) {\n    this.shouldCollectAfterScrolling_ \x3d true;\n    return;\n  }\n  this.shouldCollectAfterScrolling_ \x3d false;\n  this.dirty_ \x3d false;\n  // The code in this method must be fast.\n  // The current implementation only reaches into the DOM once and touches no\n  // other attributes or nodes when there is no work to do.\n  var candidates \x3d\n      this.doc_.querySelectorAll(\x27[jscontroller],[jsmodel],[jsowner]\x27);\n  var newObjects \x3d {};\n  var oldObjects \x3d {};\n  for (var i \x3d 0; i \x3c candidates.length; i++) {\n    var c \x3d candidates[i];\n    var id \x3d goog.getUid(c);\n    if (this.domRootedObjects_[id]) {\n      oldObjects[id] \x3d c;\n      this.domRootedObjects_[id] \x3d c;\n    } else {\n      newObjects[id] \x3d c;\n    }\n  }\n  goog.object.forEach(this.domRootedObjects_, function(o, id) {\n    if (!newObjects[id] \x26\x26 !oldObjects[id]) {\n      this.maybeDispose_(o);\n      delete this.domRootedObjects_[id];\n    }\n  }, this);\n\n  // Register new objects and find the ones that want to be woken up for\n  // render.\n  var preloadForRender \x3d {};\n  goog.object.forEach(newObjects, function(o, id) {\n    this.domRootedObjects_[id] \x3d o;\n    if (this.bindsAttributeChanged_(o)) {\n      this.setupAttributeChangedListener_(o);\n    }\n    if (this.bindsRender_(o)) {\n      preloadForRender[id] \x3d o;\n    }\n  }, this);\n  this.preload_(preloadForRender);\n  goog.object.forEach(preloadForRender, function(o, id) {\n    try {\n      wiz.jsaction.trigger(o, wiz.event.events.render, undefined, false);\n    } catch (e) {\n      // Make sure exceptions during render (which could happen if the\n      // controller was loaded already) do not block further render event.\n      // This is just a defensive mechanism to limit production impact of\n      // errors.\n      window.setTimeout(goog.functions.fail(e), 0);\n    }\n  });\n\n  if (this.preloadTimeout_) {\n    window.clearTimeout(this.preloadTimeout_);\n  }\n  this.preloadTimeout_ \x3d window.setTimeout(goog.bind(this.preload_, this,\n      this.domRootedObjects_), wiz.Manager.PRELOAD_DELAY_MILLIS);\n};\n\n\n/**\n * Return whether the \x22attributeChanged\x22 event is requested by controller.\n * @param {!Element} el The controller element.\n * @return {boolean}\n * @private\n */\nwiz.Manager.prototype.bindsAttributeChanged_ \x3d function(el) {\n  return wiz.jsaction.bindsJsAction(el, wiz.event.events.attributeChanged);\n};\n\n\n/**\n * Return whether the \x22render\x22 event is requested by controller.\n * @param {!Element} el The controller element.\n * @return {boolean}\n * @private\n */\nwiz.Manager.prototype.bindsRender_ \x3d function(el) {\n  return wiz.jsaction.bindsJsAction(el, wiz.event.events.render);\n};\n\n\n/**\n * Cleans up the global event listeners for each object and then\n * disposes of the objects.\n * @private\n */\nwiz.Manager.prototype.cleanup_ \x3d function() {\n  this.eventHandler_.dispose();\n  this.eventTarget_.dispose();\n  goog.object.forEach(this.domRootedObjects_, function(o, id) {\n    this.maybeDispose_(o);\n    delete this.domRootedObjects_[id];\n  }, this);\n};\n\n\n/**\n * Dispose the associated objects with a DOM element if necessary.\n * @param {!Element} element\n * @private\n */\nwiz.Manager.prototype.maybeDispose_ \x3d function(element) {\n  this.disposeController_(element);\n  this.disposeModel_(element);\n  this.disposeOwned_(element);\n};\n\n\n/**\n * Disposes a controller, canceling all pending requests if any exist.\n * @param {!Element} element Element that may have a controller.\n * @private\n */\nwiz.Manager.prototype.disposeController_ \x3d function(element) {\n  var d \x3d  /** @type {!goog.async.Deferred\x3c?wiz.Controller\x3e} */ (\n      element[wiz.Property.CONTROLLER]);\n  this.disposeDeferredWizObject_(d);\n  element[wiz.Property.CONTROLLER] \x3d undefined;\n};\n\n\n/**\n * Dispose model associated with a given DOM element.\n * @param {!Element} element\n * @private\n */\nwiz.Manager.prototype.disposeModel_ \x3d function(element) {\n  var deferreds \x3d\n      /** @type {?Object\x3cstring,!goog.async.Deferred\x3c?wiz.Model\x3e\x3e} */ (\n      element[wiz.Property.MODEL]);\n  if (!deferreds) {\n    return;\n  }\n  for (var name in deferreds) {\n    this.disposeDeferredWizObject_(deferreds[name]);\n  }\n  element[wiz.Property.MODEL] \x3d undefined;\n};\n\n\n/**\n * Removes an owned element from its owner\x27s set of virtual children.\n * @param {!Element} element Element that may be owned.\n * @private\n */\nwiz.Manager.prototype.disposeOwned_ \x3d function(element) {\n  var owner \x3d /** @type {!Element|undefined} */ (element[wiz.Property.OWNER]);\n  if (owner \x26\x26 owner[wiz.Property.OWNED]) {\n    goog.array.remove(owner[wiz.Property.OWNED], element);\n  }\n};\n\n\n/**\n * Disposes a wiz.Object or cancels the load operation if it is still pending.\n * @param {?goog.async.Deferred} d\n * @private\n */\nwiz.Manager.prototype.disposeDeferredWizObject_ \x3d function(d) {\n  if (!d) {\n    return;\n  }\n  if (d.hasFired()) {\n    /** @type {?wiz.Object} */\n    var object \x3d null;\n    try {\n      d.addCallback(function(c) {\n        object \x3d c;\n      });\n    } catch (e) {\n      // d.addCallback can fail if the deferred is \x22blocking\x22. Insanity.\n    }\n    if (object) {\n      // TODO(23123578): remove this cast when the bug is fixed.\n      (/** @type {!wiz.Object} */(object)).dispose();\n    }\n  } else {\n    d.cancel();\n  }\n};\n\n\n/** @override */\nwiz.Manager.prototype.disposeInternal \x3d function() {\n  this.cleanup_();\n  wiz.Manager.base(this, \x27disposeInternal\x27);\n};\n\n\n/**\n * @param {string} name The name of the attribute\n * @this {Element}\n */\nfunction setAttributeHook(name) {\n  var prevVal \x3d this.getAttribute(name);\n  Element.prototype.setAttribute.apply(this, arguments);\n  var newVal \x3d this.getAttribute(name);\n  wiz.jsaction.trigger(this, wiz.event.events.attributeChanged, {\n    name: name,\n    newVal: newVal,\n    prevVal: prevVal\n  }, false);\n}\n\n\n/**\n * @param {string} name The name of the attribute\n * @this {Element}\n */\nfunction removeAttributeHook(name) {\n  var prevVal \x3d this.getAttribute(name);\n  Element.prototype.removeAttribute.apply(this, arguments);\n  wiz.jsaction.trigger(this, wiz.event.events.attributeChanged, {\n    name: name,\n    newVal: null,\n    prevVal: prevVal\n  }, false);\n}\n\n\n/**\n * Since it is extremely rare to use these functions to set attributes, just\n * throw an error in debug mode if they are used.\n */\nfunction warnAboutUsingAlternateAttributeSetters() {\n  throw new Error(\x27Using setAttributeNode, setAttributeNodeNS or \x27 +\n      \x27setAttributeNS is not supported on controller roots with attribute \x27 +\n      \x27change events. Use Element.setAttribute instead.\x27);\n}\n\n\n/**\n * Sets up attribute change event logic for an Element.\n *\n * Limitations:\n * - If you change attributes via dev tools, this will not trigger. In order\n *   to support that flow, this would need to use either a MutationObserver\n *   (which is expensive) or use the attributeChangedCallback from Custom\n *   Elements.\n * - Since it is unlikely that someone will want to do Element.prototype.call(\n *   el, name, val), that flow is not handled.\n * - setAttributeNS is not handled as it is not likely that someone will want\n *   to make an svg element as their controller root and then listen on\n *   namespaced attributes.\n * - setAttributeNode and attributes.setNamedItem an their NS variants are\n *   not supported.\n *\n * @param {!Element} el\n * @private\n */\nwiz.Manager.prototype.setupAttributeChangedListener_ \x3d function(el) {\n  el.setAttribute \x3d setAttributeHook;\n  el.removeAttribute \x3d removeAttributeHook;\n\n  if (goog.DEBUG \x26\x26 !goog.userAgent.IE) {\n    var warningFn \x3d warnAboutUsingAlternateAttributeSetters;\n    el.setAttributeNode \x3d warningFn;\n    el.setAttributeNodeNS \x3d warningFn;\n    el.setAttributeNS \x3d warningFn;\n    el.removeAttributeNode \x3d warningFn;\n    el.removeAttributeNS \x3d warningFn;\n  }\n};\n\n}); // goog.scope\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/manager.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy30');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy30');

}catch(e){_DumpException(e)}
/* _Module_:sy31 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy31');
var $googDebugFname="javascript/apps/wiz/registry/interface.js";
eval("/**\n * @fileoverview wiz.atInterface is a way to create constructor functions for\n * JSCompiler @interface based interfaces that are tagged, so that they\n * can be inspected at runtime. Besides adding a standard way to check\n * whether a constructor implementes a particular interface, it allows to\n * associate a default service id with the interface. That way, when the user\n * injects the interface, that service is instantiated instead.\n * Applications can reset the implementation id, thus configuring a system\n * to their needs.\n * Wiz Interfaces have service ids and are annotated to be a pintomodule.\n * By associating the implementations with the interface\x27s service id cascaded\n * downloads of injected implementations are avoided.\n *\n * USAGE:\n * /** at-pintomodule Replace at-with @ in real code.\n * /** @interface\n * var MyInterface \x3d wiz.atInterface(foo.interface.MY, foo.services.FOO_ID);\n * if (goog.DEBUG) {\n *   /** @const\n *   MyInterface.displayName \x3d \x27MyInterface\x27;\n * }\n *\n * other file in base module:\n *\n * wiz.atInterface.get(MyInterface).setDefaultImplementationId(\n *     bar.services.BAR_ID);\n *\n * other file:\n *\n * wiz.controller(..., {\n *   service: {\n *     my: foo.interface.MY // Injects service bound to MyInterface\n *   }\n * });\n */\ngoog.provide(\x27wiz.Interface\x27);\n// Called atInterface after @interface to avoid conflicts with the\n// reserved word interface.\ngoog.provide(\x27wiz.atInterface\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27wiz.getAllAtInterfaceImplementations\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\n\n\n\n/**\n * Returns a function that is tagged to be an interface. The interface object\n * can then be extracted from the returned function using\n * {@see wiz.atInterface.get}.\n * @param {!fava.services.ServiceId} serviceId\n * @param {!fava.services.ServiceId\x3d} opt_defaultImplementationId\n * @return {!Function}\n */\nwiz.atInterface \x3d function(serviceId, opt_defaultImplementationId) {\n  var decl \x3d function() {};\n  wiz.atInterface.init(decl, serviceId, opt_defaultImplementationId);\n  return decl;\n};\n\n\n/**\n * Do not call this function directly, instead use \x22wiz.atInterface\x22.  This\n * is public only to for JSCompiler support.\n * @param {?} decl\n * @param {!fava.services.ServiceId} serviceId\n * @param {!fava.services.ServiceId\x3d} opt_defaultImplementationId\n * @public\n */\nwiz.atInterface.init \x3d function(decl, serviceId, opt_defaultImplementationId) {\n  goog.asserts.assertFunction(decl);\n  decl.$wizInterface \x3d\n      new wiz.Interface(serviceId, opt_defaultImplementationId);\n  if (goog.DEBUG) {\n    decl.displayName \x3d serviceId;\n    decl.toString \x3d function() {\n      return decl.$wizInterface.toString();\n    };\n  }\n  wiz.inject.Injector.getInstance().register(serviceId, decl);\n};\n\n\n/**\n * Returns the underlying {@see wiz.Interface} object for the given\n * interface constructor.\n * @param {*} interfaceCtor\n * @return {!wiz.Interface}\n */\nwiz.atInterface.get \x3d function(interfaceCtor) {\n  goog.asserts.assertFunction(interfaceCtor);\n  var iface \x3d interfaceCtor.$wizInterface;\n  goog.asserts.assert(\n      iface,\n      \x27Interface \x27 + (interfaceCtor.displayName || interfaceCtor.name) +\n          \x27 does not appear to be a wiz.atInterface.\x27);\n  return iface;\n};\n\n/**\n * Returns whether the underlying the passed in function is a Wiz interface.\n * @param {*} interfaceCtor\n * @return {boolean}\n */\nwiz.atInterface.isInterface \x3d function(interfaceCtor) {\n  var iface \x3d interfaceCtor \x26\x26 interfaceCtor.$wizInterface;\n  return !!iface;\n};\n\n\n\n/**\n * Object that encapsulates information about an interface.\n * @param {!fava.services.ServiceId} serviceId The inherent fava service ID for\n *     this service.\n * @param {!fava.services.ServiceId\x3d} opt_defaultImplementationId\n * @constructor @final @struct\n */\nwiz.Interface \x3d function(serviceId, opt_defaultImplementationId) {\n  /** @private @const {!fava.services.ServiceId} */\n  this.serviceId_ \x3d serviceId;\n\n  /** @private {?fava.services.ServiceId} */\n  this.defaultImplementationId_ \x3d opt_defaultImplementationId || null;\n\n  /** @private {boolean} */\n  this.wasOverridden_ \x3d false;\n\n  /** @private {boolean} */\n  this.wasRead_ \x3d false;\n\n  /**\n   * Automatically populated via ManifestGenerator.  BEWARE: This can be mutated\n   * after construction if addPossibleAtInterfaceImplementation is called later.\n   * That should rarely happen.\n   * @private @const {!Array\x3c!fava.services.ServiceId\x3e}\n   */\n  this.implementations_ \x3d wiz.getAllAtInterfaceImplementations(serviceId);\n};\n\n\n/**\n * Marks the passed in ctor or service id as implementing this interface.\n * @param {!Function|!fava.services.ServiceId} ctorOrServiceId\n * @return {!wiz.Interface} this instance, for chaining.\n * @deprecated Wiz atInterface implementations are now automatically inferred by\n * the ManifestGenerator. You no longer need to call addImplementation(); please\n * delete all calls.\n */\nwiz.Interface.prototype.addImplementation \x3d function(ctorOrServiceId) {\n  return this;  // No need to do anything.\n};\n\n\n/**\n * Returns true if the passed in object or constructor implements this\n * interface.\n *\n * If called with a ServiceId this will not respect inheritance! If that is\n * a problem you can work around that by explicitly adding your subclass\n * as an implementation implemented by a super class.\n *\n * @param {!Function|!Object|!fava.services.ServiceId} ctorOrObjectOrServiceId\n * @return {boolean}\n */\nwiz.Interface.prototype.isImplementedBy \x3d function(ctorOrObjectOrServiceId) {\n  var serviceIds \x3d [];\n  if (ctorOrObjectOrServiceId instanceof fava.services.ServiceId) {\n    serviceIds.push(ctorOrObjectOrServiceId);\n  } else {\n    var ctor \x3d ctorOrObjectOrServiceId;\n    if (typeof ctorOrObjectOrServiceId \x3d\x3d \x27object\x27) {\n      ctor \x3d ctorOrObjectOrServiceId.constructor;\n    }\n    goog.asserts.assertFunction(\n        ctor, \x27Please pass a constructor, object or service id\x27);\n    do {\n      var serviceId \x3d ctor.displayName;\n      goog.asserts.assertInstanceof(\n          serviceId, fava.services.ServiceId,\n          \x27Passed in constructor does not appear to have been created by a\x27 +\n              \x27 wiz constructor generator such as wiz.service or wiz.model\x27);\n      serviceIds.push(serviceId);\n      ctor \x3d ctor.superClass_ ? ctor.superClass_.constructor : null;\n    } while (ctor \x26\x26 ctor.displayName);\n  }\n  for (var i \x3d 0; i \x3c this.implementations_.length; i++) {\n    for (var s \x3d 0; s \x3c serviceIds.length; s++) {\n      if (this.implementations_[i] \x3d\x3d serviceIds[s]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Sets the default implementation id to a new value. This allows overriding\n * the service id that gets bound when this service gets injected. It may\n * only be called exactly once for a given interface. The implementer of the\n * interface may set a default default implementation id using the\n * {@see wiz.atInterface} function, that can be overridden using this method.\n * @param {!fava.services.ServiceId} serviceId\n */\nwiz.Interface.prototype.setDefaultImplementationId \x3d function(serviceId) {\n  goog.asserts.assert(\n      !this.wasRead_,\n      \x27The defaultImplementationId was \x27 +\n          \x27already read. Make sure to only set it from your base module\x27);\n  goog.asserts.assert(\n      !this.wasOverridden_,\n      \x27The default implementation of \x27 +\n          \x27a wiz.atInterface may only be overridden once, and it was already \x27 +\n          \x27overridden by \x3c\x27 + this.defaultImplementationId_ + \x27\x3e\x27);\n  goog.asserts.assert(\n      serviceId instanceof fava.services.ServiceId,\n      \x27serviceId should be a fava.services.ServiceId\x27);\n  this.wasOverridden_ \x3d true;\n  goog.array.remove(\n      this.serviceId_.getDependencies(), this.defaultImplementationId_);\n  this.serviceId_.getDependencies().push(serviceId);\n  this.defaultImplementationId_ \x3d serviceId;\n};\n\n\n/**\n * Checks whether the default implementation has been overridden.\n * @return {boolean}\n */\nwiz.Interface.prototype.hasCustomDefaultImplementation \x3d function() {\n  return this.wasOverridden_;\n};\n\n\n/**\n * Returns the default implementation id if any.\n * @return {?fava.services.ServiceId}\n */\nwiz.Interface.prototype.getDefaultImplementationId \x3d function() {\n  this.wasRead_ \x3d true;\n  return this.defaultImplementationId_;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * @override\n   */\n  wiz.Interface.prototype.toString \x3d function() {\n    return this.serviceId_ +\n        (this.defaultImplementationId_ ?\n             \x27 \x3c\x27 + this.defaultImplementationId_ + \x27\x3e\x27 :\n             \x27 \x3cno default implementation\x3e\x27);\n  };\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/registry/interface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy31');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy31');

}catch(e){_DumpException(e)}
/* _Module_:sy33 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy33');
var $googDebugFname="javascript/closure/dom/inputtype.js";
eval("// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines the goog.dom.InputType enum.  This enumerates\n * all input element types (for INPUT, BUTTON, SELECT and TEXTAREA\n * elements) in either the the W3C HTML 4.01 index of elements or the\n * HTML5 draft specification.\n *\n * References:\n * http://www.w3.org/TR/html401/sgml/dtd.html#InputType\n * http://www.w3.org/TR/html-markup/input.html#input\n * https://html.spec.whatwg.org/multipage/forms.html#dom-input-type\n * https://html.spec.whatwg.org/multipage/forms.html#dom-button-type\n * https://html.spec.whatwg.org/multipage/forms.html#dom-select-type\n * https://html.spec.whatwg.org/multipage/forms.html#dom-textarea-type\n *\n * @author mpn@google.com (Michal Nazarewicz)\n */\ngoog.provide(\x27goog.dom.InputType\x27);\n\n\n/**\n * Enum of all input types (for INPUT, BUTTON, SELECT and TEXTAREA elements)\n * specified by the W3C HTML4.01 and HTML5 specifications.\n * @enum {string}\n */\ngoog.dom.InputType \x3d {\n  BUTTON: \x27button\x27,\n  CHECKBOX: \x27checkbox\x27,\n  COLOR: \x27color\x27,\n  DATE: \x27date\x27,\n  DATETIME: \x27datetime\x27,\n  DATETIME_LOCAL: \x27datetime-local\x27,\n  EMAIL: \x27email\x27,\n  FILE: \x27file\x27,\n  HIDDEN: \x27hidden\x27,\n  IMAGE: \x27image\x27,\n  MENU: \x27menu\x27,\n  MONTH: \x27month\x27,\n  NUMBER: \x27number\x27,\n  PASSWORD: \x27password\x27,\n  RADIO: \x27radio\x27,\n  RANGE: \x27range\x27,\n  RESET: \x27reset\x27,\n  SEARCH: \x27search\x27,\n  SELECT_MULTIPLE: \x27select-multiple\x27,\n  SELECT_ONE: \x27select-one\x27,\n  SUBMIT: \x27submit\x27,\n  TEL: \x27tel\x27,\n  TEXT: \x27text\x27,\n  TEXTAREA: \x27textarea\x27,\n  TIME: \x27time\x27,\n  URL: \x27url\x27,\n  WEEK: \x27week\x27\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/dom/inputtype.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy33');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy33');

}catch(e){_DumpException(e)}
/* _Module_:sy34 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy34');
var $googDebugFname="javascript/closure/window/window.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for window manipulation.\n * @author hugol@google.com (Harry Ugol)\n * @author erikh@google.com (Erik Hanson)\n */\n\n\ngoog.provide(\x27goog.window\x27);\n\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.dom.safe\x27);\ngoog.require(\x27goog.html.SafeUrl\x27);\ngoog.require(\x27goog.html.uncheckedconversions\x27);\ngoog.require(\x27goog.labs.userAgent.platform\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.string.Const\x27);\ngoog.require(\x27goog.userAgent\x27);\n\n\n/**\n * Default height for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_HEIGHT \x3d 500;\n\n\n/**\n * Default width for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_WIDTH \x3d 690;\n\n\n/**\n * Default target for popup windows\n * @type {string}\n */\ngoog.window.DEFAULT_POPUP_TARGET \x3d \x27google_popup\x27;\n\n\n/**\n * @return {!Window}\n * @suppress {checkTypes}\n * @private\n */\ngoog.window.createFakeWindow_ \x3d function() {\n  return /** @type {!Window} */ ({});\n};\n\n/**\n * Opens a new window.\n *\n * @param {goog.html.SafeUrl|string|Object|null} linkRef If an Object with an \x27href\x27\n *     attribute (such as HTMLAnchorElement) is passed then the value of \x27href\x27\n *     is used, otherwise its toString method is called. Note that if a\n *     string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object\x3d} opt_options supports the following options:\n *  \x27target\x27: (string) target (window name). If null, linkRef.target will\n *          be used.\n *  \x27width\x27: (number) window width.\n *  \x27height\x27: (number) window height.\n *  \x27top\x27: (number) distance from top of screen\n *  \x27left\x27: (number) distance from left of screen\n *  \x27toolbar\x27: (boolean) show toolbar\n *  \x27scrollbars\x27: (boolean) show scrollbars\n *  \x27location\x27: (boolean) show location\n *  \x27statusbar\x27: (boolean) show statusbar\n *  \x27menubar\x27: (boolean) show menubar\n *  \x27resizable\x27: (boolean) resizable\n *  \x27noreferrer\x27: (boolean) whether to attempt to remove the referrer header\n *      from the request headers. Does this by opening a blank window that\n *      then redirects to the target url, so users may see some flickering.\n *\n * @param {?Window\x3d} opt_parentWin Parent window that should be used to open the\n *                 new window.\n *\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened. In case when a new window is opened in a different\n *                  browser sandbox (such as iOS standalone mode), the returned\n *                  object is a emulated Window object that functions as if\n *                  a cross-origin window has been opened.\n */\ngoog.window.open \x3d function(linkRef, opt_options, opt_parentWin) {\n  if (!opt_options) {\n    opt_options \x3d {};\n  }\n  var parentWin \x3d opt_parentWin || window;\n\n  /** @type {!goog.html.SafeUrl} */\n  var safeLinkRef;\n\n  if (linkRef instanceof goog.html.SafeUrl) {\n    safeLinkRef \x3d linkRef;\n  } else {\n    // HTMLAnchorElement has a toString() method with the same behavior as\n    // goog.Uri in all browsers except for Safari, which returns\n    // \x27[object HTMLAnchorElement]\x27.  We check for the href first, then\n    // assume that it\x27s a goog.Uri or String otherwise.\n    /**\n     * @type {string|!goog.string.TypedString}\n     * @suppress {missingProperties}\n     */\n    var url \x3d\n        typeof linkRef.href !\x3d \x27undefined\x27 ? linkRef.href : String(linkRef);\n    safeLinkRef \x3d goog.html.SafeUrl.sanitize(url);\n  }\n\n\n  var target \x3d opt_options.target || linkRef.target;\n\n  var sb \x3d [];\n  for (var option in opt_options) {\n    switch (option) {\n      case \x27width\x27:\n      case \x27height\x27:\n      case \x27top\x27:\n      case \x27left\x27:\n        sb.push(option + \x27\x3d\x27 + opt_options[option]);\n        break;\n      case \x27target\x27:\n      case \x27noopener\x27:\n      case \x27noreferrer\x27:\n        break;\n      default:\n        sb.push(option + \x27\x3d\x27 + (opt_options[option] ? 1 : 0));\n    }\n  }\n  var optionString \x3d sb.join(\x27,\x27);\n\n  var newWin;\n  if (goog.labs.userAgent.platform.isIos() \x26\x26 parentWin.navigator \x26\x26\n      parentWin.navigator[\x27standalone\x27] \x26\x26 target \x26\x26 target !\x3d \x27_self\x27) {\n    // iOS in standalone mode disregards \x22target\x22 in window.open and always\n    // opens new URL in the same window. The workaround is to create an \x22A\x22\n    // element and send a click event to it.\n    // Notice that the \x22A\x22 tag does NOT have to be added to the DOM.\n\n    var a \x3d /** @type {!HTMLAnchorElement} */\n        (parentWin.document.createElement(String(goog.dom.TagName.A)));\n    goog.dom.safe.setAnchorHref(a, safeLinkRef);\n\n    a.setAttribute(\x27target\x27, target);\n    if (opt_options[\x27noreferrer\x27]) {\n      a.setAttribute(\x27rel\x27, \x27noreferrer\x27);\n    }\n    var click \x3d document.createEvent(\x27MouseEvent\x27);\n    click.initMouseEvent(\n        \x27click\x27,\n        true,  // canBubble\n        true,  // cancelable\n        parentWin,\n        1);  // detail \x3d mousebutton\n    a.dispatchEvent(click);\n    // New window is not available in this case. Instead, a fake Window object\n    // is returned. In particular, it will have window.document undefined. In\n    // general, it will appear to most of clients as a Window for a different\n    // origin. Since iOS standalone web apps are run in their own sandbox, this\n    // is the most appropriate return value.\n    newWin \x3d goog.window.createFakeWindow_();\n  } else if (opt_options[\x27noreferrer\x27]) {\n    // Use a meta-refresh to stop the referrer from being included in the\n    // request headers. This seems to be the only cross-browser way to\n    // remove the referrer. It also allows for the opener to be set to null\n    // in the new window, thus disallowing the opened window from navigating\n    // its opener.\n    //\n    // Detecting user agent and then using a different strategy per browser\n    // would allow the referrer to leak in case of an incorrect/missing user\n    // agent.\n    //\n    // Also note that we can\x27t use goog.dom.safe.openInWindow here, as it\n    // requires a goog.string.Const \x27name\x27 parameter, while we\x27re using plain\n    // strings here for target.\n    newWin \x3d parentWin.open(\x27\x27, target, optionString);\n\n    var sanitizedLinkRef \x3d goog.html.SafeUrl.unwrap(safeLinkRef);\n    if (newWin) {\n      if (goog.userAgent.EDGE_OR_IE) {\n        // IE/EDGE can\x27t parse the content attribute if the url contains\n        // a semicolon. We can fix this by adding quotes around the url, but\n        // then we can\x27t parse quotes in the URL correctly. We take a\n        // best-effort approach.\n        //\n        // If the URL has semicolons, wrap it in single quotes to protect\n        // the semicolons.\n        // If the URL has semicolons and single quotes, url-encode the single\n        // quotes as well.\n        //\n        // This is imperfect. Notice that both \x27 and ; are reserved characters\n        // in URIs, so this could do the wrong thing, but at least it will\n        // do the wrong thing in only rare cases.\n        // ugh.\n        if (goog.string.contains(sanitizedLinkRef, \x27;\x27)) {\n          sanitizedLinkRef \x3d \x22\x27\x22 + sanitizedLinkRef.replace(/\x27/g, \x27%27\x27) + \x22\x27\x22;\n        }\n      }\n      newWin.opener \x3d null;\n\n      // TODO(rjamet): Building proper SafeHtml with SafeHtml.createMetaRefresh\n      // pulls in a lot of compiled code, which is composed of various unneeded\n      // goog.html parts such as SafeStyle.create among others. So, for now,\n      // keep the unchecked conversion until we figure out how to make the\n      // dependencies of createSafeHtmlTagSecurityPrivateDoNotAccessOrElse less\n      // heavy.\n      var safeHtml \x3d\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from(\n                      \x27b/12014412, meta tag with sanitized URL\x27),\n                  // The referrer policy meta tag below works around a bug in\n                  // Chrome where the meta-refresh alone fails to clear the\n                  // the referrer under certain circumstances\n                  // (crbug.com/791216).\n                  \x27\x3cmeta name\x3d\x22referrer\x22 content\x3d\x22no-referrer\x22\x3e\x27 +\n                      \x27\x3cmeta http-equiv\x3d\x22refresh\x22 content\x3d\x220; url\x3d\x27 +\n                      goog.string.htmlEscape(sanitizedLinkRef) + \x27\x22\x3e\x27);\n      goog.dom.safe.documentWrite(newWin.document, safeHtml);\n      newWin.document.close();\n    }\n  } else {\n    newWin \x3d parentWin.open(\n        goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);\n    // Passing in \x27noopener\x27 into the \x27windowFeatures\x27 param of window.open(...)\n    // will yield a feature-deprived browser. This is an known issue, tracked\n    // here: https://github.com/whatwg/html/issues/1902\n    if (newWin \x26\x26 opt_options[\x27noopener\x27]) {\n      newWin.opener \x3d null;\n    }\n  }\n  // newWin is null if a popup blocker prevented the window open.\n  return newWin;\n};\n\n\n/**\n * Opens a new window without any real content in it.\n *\n * This can be used to get around popup blockers if you need to open a window\n * in response to a user event, but need to do asynchronous work to determine\n * the URL to open, and then set the URL later.\n *\n * Example usage:\n *\n * var newWin \x3d goog.window.openBlank(\x27Loading...\x27);\n * setTimeout(\n *     function() {\n *       newWin.location.href \x3d \x27http://www.google.com\x27;\n *     }, 100);\n *\n * @param {string\x3d} opt_message String to show in the new window. This string\n *     will be HTML-escaped to avoid XSS issues.\n * @param {?Object\x3d} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}.\n * @param {?Window\x3d} opt_parentWin Parent window that should be used to open the\n *                 new window.\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened.\n */\ngoog.window.openBlank \x3d function(opt_message, opt_options, opt_parentWin) {\n  // Open up a window with the loading message and nothing else.\n  // This will be interpreted as HTML content type with a missing doctype\n  // and html/body tags, but is otherwise acceptable.\n  //\n  // IMPORTANT: The order of escaping is crucial here in order to avoid XSS.\n  // First, HTML-escaping is needed because the result of the JS expression\n  // is evaluated as HTML. Second, JS-string escaping is needed; this avoids\n  // \\u escaping from inserting HTML tags and \\ from escaping the final \x22.\n  // Finally, URL percent-encoding is done with encodeURI(); this\n  // avoids percent-encoding from bypassing HTML and JS escaping.\n  //\n  // Note: There are other ways the same result could be achieved but the\n  // current behavior was preserved when this code was refactored to use\n  // SafeUrl, in order to avoid breakage.\n  var loadingMessage;\n  if (!opt_message) {\n    loadingMessage \x3d \x27\x27;\n  } else {\n    loadingMessage \x3d\n        goog.string.escapeString(goog.string.htmlEscape(opt_message));\n  }\n  var url \x3d goog.html.uncheckedconversions\n                .safeUrlFromStringKnownToSatisfyTypeContract(\n                    goog.string.Const.from(\n                        \x27b/12014412, encoded string in javascript: URL\x27),\n                    \x27javascript:\x22\x27 + encodeURI(loadingMessage) + \x27\x22\x27);\n  return /** @type {?Window} */ (\n      goog.window.open(url, opt_options, opt_parentWin));\n};\n\n\n/**\n * Raise a help popup window, defaulting to \x22Google standard\x22 size and name.\n *\n * (If your project is using GXPs, consider using {@link PopUpLink.gxp}.)\n *\n* @param {?goog.html.SafeUrl|string|?Object} linkRef If an Object with an \x27href\x27\n *     attribute (such as HTMLAnchorElement) is passed then the value of \x27href\x27\n *     is used, otherwise  otherwise its toString method is called. Note that\n *     if a string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object\x3d} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}\n *     Additional wrinkles to the options:\n *     - if \x27target\x27 field is null, linkRef.target will be used. If *that\x27s*\n *     null, the default is \x22google_popup\x22.\n *     - if \x27width\x27 field is not specified, the default is 690.\n *     - if \x27height\x27 field is not specified, the default is 500.\n *\n * @return {boolean} true if the window was not popped up, false if it was.\n */\ngoog.window.popup \x3d function(linkRef, opt_options) {\n  if (!opt_options) {\n    opt_options \x3d {};\n  }\n\n  // set default properties\n  opt_options[\x27target\x27] \x3d opt_options[\x27target\x27] || linkRef[\x27target\x27] ||\n      goog.window.DEFAULT_POPUP_TARGET;\n  opt_options[\x27width\x27] \x3d\n      opt_options[\x27width\x27] || goog.window.DEFAULT_POPUP_WIDTH;\n  opt_options[\x27height\x27] \x3d\n      opt_options[\x27height\x27] || goog.window.DEFAULT_POPUP_HEIGHT;\n\n  var newWin \x3d goog.window.open(linkRef, opt_options);\n  if (!newWin) {\n    return true;\n  }\n  newWin.focus();\n\n  return false;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/window/window.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy34');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy34');

}catch(e){_DumpException(e)}
/* _Module_:sy35 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy35');
var $googDebugFname="javascript/closure/dom/forms.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating a form and elements.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author jonp@google.com (Jon Perlow)\n * @author elsigh@google.com (Lindsey Simon)\n * @suppress {strictMissingProperties}\n */\n\ngoog.provide(\x27goog.dom.forms\x27);\n\ngoog.require(\x27goog.dom.InputType\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.structs.Map\x27);\ngoog.require(\x27goog.window\x27);\n\n\n\n/**\n * Submits form data via a new window. This hides references to the parent\n * window and should be used when submitting forms to untrusted 3rd party urls.\n * By default, this uses the action and method of the specified form\n * element. It is possible to override the default action and method if an\n * optional submit element with formaction and/or formmethod attributes is\n * provided.\n * @param {!HTMLFormElement} form The form.\n * @param {!HTMLElement\x3d} opt_submitElement The `\x3cbutton\x3e` or `\x3cinput\x3e` element\n *     used to submit the form. The element should have a submit type.\n * @return {boolean} true If the form was submitted succesfully.\n * @throws {!Error} If opt_submitElement is not a valid form submit element.\n */\ngoog.dom.forms.submitFormInNewWindow \x3d function(form, opt_submitElement) {\n  var formData \x3d goog.dom.forms.getFormDataMap(form);\n  var action \x3d form.action;\n  var method \x3d form.method;\n\n  if (opt_submitElement) {\n    if (goog.dom.InputType.SUBMIT !\x3d opt_submitElement.type.toLowerCase()) {\n      throw new Error(\x27opt_submitElement does not have a valid type.\x27);\n    }\n\n\n    var submitValue \x3d\n        /** @type {?string} */ (goog.dom.forms.getValue(opt_submitElement));\n    if (submitValue !\x3d null) {\n      goog.dom.forms.addFormDataToMap_(\n          formData, opt_submitElement.name, submitValue);\n    }\n\n    if (opt_submitElement.getAttribute(\x27formaction\x27)) {\n      action \x3d opt_submitElement.getAttribute(\x27formaction\x27);\n    }\n\n    if (opt_submitElement.getAttribute(\x27formmethod\x27)) {\n      method \x3d opt_submitElement.getAttribute(\x27formmethod\x27);\n    }\n  }\n\n  return goog.dom.forms.submitFormDataInNewWindow(action, method, formData);\n};\n\n/**\n * Submits form data via a new window. This hides references to the parent\n * window and should be used when submitting forms to untrusted 3rd party urls.\n * @param {string} actionUri uri to submit form content to.\n * @param {string} method HTTP method used to submit the form.\n * @param {!goog.structs.Map\x3cstring, !Array\x3cstring\x3e\x3e} formData A map of the form\n *     data as field name to arrays of values.\n * @return {boolean} true If the form was submitted succesfully.\n */\ngoog.dom.forms.submitFormDataInNewWindow \x3d function(\n    actionUri, method, formData) {\n  var newWin \x3d goog.window.openBlank(\x27\x27, {noreferrer: true});\n\n  // This could be null if a new window could not be opened. e.g. if it was\n  // stopped by a popup blocker.\n  if (!newWin) {\n    return false;\n  }\n\n  var newDocument \x3d newWin.document;\n\n  var newForm \x3d\n      /** @type {!HTMLFormElement} */ (newDocument.createElement(\x27form\x27));\n  newForm.method \x3d method;\n  newForm.action \x3d actionUri;\n\n  // After this point, do not directly reference the form object\x27s functions as\n  // field names can shadow the form\x27s properties.\n\n  formData.forEach(function(fieldValues, fieldName) {\n    for (var i \x3d 0; i \x3c fieldValues.length; i++) {\n      var fieldValue \x3d fieldValues[i];\n      var newInput \x3d newDocument.createElement(\x27input\x27);\n      newInput.name \x3d fieldName;\n      newInput.value \x3d fieldValue;\n      newInput.type \x3d \x27hidden\x27;\n      HTMLFormElement.prototype.appendChild.call(newForm, newInput);\n    }\n  });\n\n  HTMLFormElement.prototype.submit.call(newForm);\n  return true;\n};\n\n\n/**\n * Returns form data as a map of name to value arrays. This doesn\x27t\n * support file inputs.\n * @param {HTMLFormElement} form The form.\n * @return {!goog.structs.Map\x3cstring, !Array\x3cstring\x3e\x3e} A map of the form data\n *     as field name to arrays of values.\n */\ngoog.dom.forms.getFormDataMap \x3d function(form) {\n  var map \x3d new goog.structs.Map();\n  goog.dom.forms.getFormDataHelper_(\n      form, map, goog.dom.forms.addFormDataToMap_);\n  return map;\n};\n\n\n/**\n * Returns the form data as an application/x-www-url-encoded string. This\n * doesn\x27t support file inputs.\n * @param {HTMLFormElement} form The form.\n * @return {string} An application/x-www-url-encoded string.\n */\ngoog.dom.forms.getFormDataString \x3d function(form) {\n  var sb \x3d [];\n  goog.dom.forms.getFormDataHelper_(\n      form, sb, goog.dom.forms.addFormDataToStringBuffer_);\n  return sb.join(\x27\x26\x27);\n};\n\n\n/**\n * Returns the form data as a map or an application/x-www-url-encoded\n * string. This doesn\x27t support file inputs.\n * @param {HTMLFormElement} form The form.\n * @param {Object} result The object form data is being put in.\n * @param {Function} fnAppend Function that takes `result`, an element\n *     name, and an element value, and adds the name/value pair to the result\n *     object.\n * @private\n */\ngoog.dom.forms.getFormDataHelper_ \x3d function(form, result, fnAppend) {\n  var els \x3d form.elements;\n  for (var el, i \x3d 0; el \x3d els[i]; i++) {\n    if (  // Make sure we don\x27t include elements that are not part of the form.\n        // Some browsers include non-form elements. Check for \x27form\x27 property.\n        // See http://code.google.com/p/closure-library/issues/detail?id\x3d227\n        // and\n        // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#the-input-element\n        (el.form !\x3d form) || el.disabled ||\n        // HTMLFieldSetElement has a form property but no value.\n        el.tagName \x3d\x3d goog.dom.TagName.FIELDSET) {\n      continue;\n    }\n\n    var name \x3d el.name;\n    switch (el.type.toLowerCase()) {\n      case goog.dom.InputType.FILE:\n      // file inputs are not supported\n      case goog.dom.InputType.SUBMIT:\n      case goog.dom.InputType.RESET:\n      case goog.dom.InputType.BUTTON:\n        // don\x27t submit these\n        break;\n      case goog.dom.InputType.SELECT_MULTIPLE:\n        var values \x3d goog.dom.forms.getValue(el);\n        if (values !\x3d null) {\n          for (var value, j \x3d 0; value \x3d values[j]; j++) {\n            fnAppend(result, name, value);\n          }\n        }\n        break;\n      default:\n        var value \x3d goog.dom.forms.getValue(el);\n        if (value !\x3d null) {\n          fnAppend(result, name, value);\n        }\n    }\n  }\n\n  // input[type\x3dimage] are not included in the elements collection\n  var inputs \x3d form.getElementsByTagName(String(goog.dom.TagName.INPUT));\n  for (var input, i \x3d 0; input \x3d inputs[i]; i++) {\n    if (input.form \x3d\x3d form \x26\x26\n        input.type.toLowerCase() \x3d\x3d goog.dom.InputType.IMAGE) {\n      name \x3d input.name;\n      fnAppend(result, name, input.value);\n      fnAppend(result, name + \x27.x\x27, \x270\x27);\n      fnAppend(result, name + \x27.y\x27, \x270\x27);\n    }\n  }\n};\n\n\n/**\n * Adds the name/value pair to the map.\n * @param {!goog.structs.Map\x3cstring, !Array\x3cstring\x3e\x3e} map The map to add to.\n * @param {string} name The name.\n * @param {string} value The value.\n * @private\n */\ngoog.dom.forms.addFormDataToMap_ \x3d function(map, name, value) {\n  var array \x3d map.get(name);\n  if (!array) {\n    array \x3d [];\n    map.set(name, array);\n  }\n  array.push(value);\n};\n\n\n/**\n * Adds a name/value pair to an string buffer array in the form \x27name\x3dvalue\x27.\n * @param {Array\x3cstring\x3e} sb The string buffer array for storing data.\n * @param {string} name The name.\n * @param {string} value The value.\n * @private\n */\ngoog.dom.forms.addFormDataToStringBuffer_ \x3d function(sb, name, value) {\n  sb.push(encodeURIComponent(name) + \x27\x3d\x27 + encodeURIComponent(value));\n};\n\n\n/**\n * Whether the form has a file input.\n * @param {HTMLFormElement} form The form.\n * @return {boolean} Whether the form has a file input.\n */\ngoog.dom.forms.hasFileInput \x3d function(form) {\n  var els \x3d form.elements;\n  for (var el, i \x3d 0; el \x3d els[i]; i++) {\n    if (!el.disabled \x26\x26 el.type \x26\x26\n        el.type.toLowerCase() \x3d\x3d goog.dom.InputType.FILE) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Enables or disables either all elements in a form or a single form element.\n * @param {Element} el The element, either a form or an element within a form.\n * @param {boolean} disabled Whether the element should be disabled.\n */\ngoog.dom.forms.setDisabled \x3d function(el, disabled) {\n  // disable all elements in a form\n  if (el.tagName \x3d\x3d goog.dom.TagName.FORM) {\n    var els \x3d /** @type {!HTMLFormElement} */ (el).elements;\n    for (var i \x3d 0; el \x3d els[i]; i++) {\n      goog.dom.forms.setDisabled(el, disabled);\n    }\n  } else {\n    // makes sure to blur buttons, multi-selects, and any elements which\n    // maintain keyboard/accessibility focus when disabled\n    if (disabled \x3d\x3d true) {\n      el.blur();\n    }\n    el.disabled \x3d disabled;\n  }\n};\n\n\n/**\n * Focuses, and optionally selects the content of, a form element.\n * @param {Element} el The form element.\n */\ngoog.dom.forms.focusAndSelect \x3d function(el) {\n  el.focus();\n  if (el.select) {\n    el.select();\n  }\n};\n\n\n/**\n * Whether a form element has a value.\n * @param {Element} el The element.\n * @return {boolean} Whether the form has a value.\n */\ngoog.dom.forms.hasValue \x3d function(el) {\n  var value \x3d goog.dom.forms.getValue(el);\n  return !!value;\n};\n\n\n/**\n * Whether a named form field has a value.\n * @param {HTMLFormElement} form The form element.\n * @param {string} name Name of an input to the form.\n * @return {boolean} Whether the form has a value.\n */\ngoog.dom.forms.hasValueByName \x3d function(form, name) {\n  var value \x3d goog.dom.forms.getValueByName(form, name);\n  return !!value;\n};\n\n\n/**\n * Gets the current value of any element with a type.\n * @param {Element} el The element.\n * @return {string|Array\x3cstring\x3e|null} The current value of the element\n *     (or null).\n */\ngoog.dom.forms.getValue \x3d function(el) {\n  // Elements with a type may need more specialized logic.\n  var type \x3d /** @type {!HTMLInputElement} */ (el).type;\n  switch (goog.isString(type) \x26\x26 type.toLowerCase()) {\n    case goog.dom.InputType.CHECKBOX:\n    case goog.dom.InputType.RADIO:\n      return goog.dom.forms.getInputChecked_(el);\n    case goog.dom.InputType.SELECT_ONE:\n      return goog.dom.forms.getSelectSingle_(el);\n    case goog.dom.InputType.SELECT_MULTIPLE:\n      return goog.dom.forms.getSelectMultiple_(el);\n    default:\n      // Not every element with a value has a type (e.g. meter and progress).\n      return el.value !\x3d null ? el.value : null;\n  }\n};\n\n\n/**\n * Returns the value of the named form field. In the case of radio buttons,\n * returns the value of the checked button with the given name.\n *\n * @param {HTMLFormElement} form The form element.\n * @param {string} name Name of an input to the form.\n *\n * @return {Array\x3cstring\x3e|string|null} The value of the form element, or\n *     null if the form element does not exist or has no value.\n */\ngoog.dom.forms.getValueByName \x3d function(form, name) {\n  var els \x3d form.elements[name];\n\n  if (els) {\n    if (els.type) {\n      return goog.dom.forms.getValue(els);\n    } else {\n      for (var i \x3d 0; i \x3c els.length; i++) {\n        var val \x3d goog.dom.forms.getValue(els[i]);\n        if (val) {\n          return val;\n        }\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Gets the current value of a checkable input element.\n * @param {Element} el The element.\n * @return {?string} The value of the form element (or null).\n * @private\n */\ngoog.dom.forms.getInputChecked_ \x3d function(el) {\n  return el.checked ? /** @type {?} */ (el).value : null;\n};\n\n\n/**\n * Gets the current value of a select-one element.\n * @param {Element} el The element.\n * @return {?string} The value of the form element (or null).\n * @private\n */\ngoog.dom.forms.getSelectSingle_ \x3d function(el) {\n  var selectedIndex \x3d /** @type {!HTMLSelectElement} */ (el).selectedIndex;\n  return selectedIndex \x3e\x3d 0 ?\n      /** @type {!HTMLSelectElement} */ (el).options[selectedIndex].value :\n      null;\n};\n\n\n/**\n * Gets the current value of a select-multiple element.\n * @param {Element} el The element.\n * @return {Array\x3cstring\x3e?} The value of the form element (or null).\n * @private\n */\ngoog.dom.forms.getSelectMultiple_ \x3d function(el) {\n  var values \x3d [];\n  for (var option, i \x3d 0;\n       option \x3d /** @type {!HTMLSelectElement} */ (el).options[i]; i++) {\n    if (option.selected) {\n      values.push(option.value);\n    }\n  }\n  return values.length ? values : null;\n};\n\n\n/**\n * Sets the current value of any element with a type.\n * @param {Element} el The element.\n * @param {*\x3d} opt_value The value to give to the element, which will be coerced\n *     by the browser in the default case using toString. This value should be\n *     an array for setting the value of select multiple elements.\n */\ngoog.dom.forms.setValue \x3d function(el, opt_value) {\n  // Elements with a type may need more specialized logic.\n  var type \x3d /** @type {!HTMLInputElement} */ (el).type;\n  switch (goog.isString(type) \x26\x26 type.toLowerCase()) {\n    case goog.dom.InputType.CHECKBOX:\n    case goog.dom.InputType.RADIO:\n      goog.dom.forms.setInputChecked_(\n          el,\n          /** @type {string} */ (opt_value));\n      return;\n    case goog.dom.InputType.SELECT_ONE:\n      goog.dom.forms.setSelectSingle_(\n          el,\n          /** @type {string} */ (opt_value));\n      return;\n    case goog.dom.InputType.SELECT_MULTIPLE:\n      goog.dom.forms.setSelectMultiple_(\n          el,\n          /** @type {!Array\x3cstring\x3e} */ (opt_value));\n      return;\n    default:\n      // Not every element with a value has a type (e.g. meter and progress).\n      el.value \x3d opt_value !\x3d null ? opt_value : \x27\x27;\n  }\n};\n\n\n/**\n * Sets a checkable input element\x27s checked property.\n * #TODO(elsigh): This seems potentially unintuitive since it doesn\x27t set\n * the value property but my hunch is that the primary use case is to check a\n * checkbox, not to reset its value property.\n * @param {Element} el The element.\n * @param {string|boolean\x3d} opt_value The value, sets the element checked if\n *     val is set.\n * @private\n */\ngoog.dom.forms.setInputChecked_ \x3d function(el, opt_value) {\n  el.checked \x3d opt_value;\n};\n\n\n/**\n * Sets the value of a select-one element.\n * @param {Element} el The element.\n * @param {string\x3d} opt_value The value of the selected option element.\n * @private\n */\ngoog.dom.forms.setSelectSingle_ \x3d function(el, opt_value) {\n  // unset any prior selections\n  el.selectedIndex \x3d -1;\n  if (goog.isString(opt_value)) {\n    for (var option, i \x3d 0;\n         option \x3d /** @type {!HTMLSelectElement} */ (el).options[i]; i++) {\n      if (option.value \x3d\x3d opt_value) {\n        option.selected \x3d true;\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Sets the value of a select-multiple element.\n * @param {Element} el The element.\n * @param {Array\x3cstring\x3e|string\x3d} opt_value The value of the selected option\n *     element(s).\n * @private\n */\ngoog.dom.forms.setSelectMultiple_ \x3d function(el, opt_value) {\n  // reset string opt_values as an array\n  if (goog.isString(opt_value)) {\n    opt_value \x3d [opt_value];\n  }\n  for (var option, i \x3d 0;\n       option \x3d /** @type {!HTMLSelectElement} */ (el).options[i]; i++) {\n    // we have to reset the other options to false for select-multiple\n    option.selected \x3d false;\n    if (opt_value) {\n      for (var value, j \x3d 0; value \x3d opt_value[j]; j++) {\n        if (option.value \x3d\x3d value) {\n          option.selected \x3d true;\n        }\n      }\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/dom/forms.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy35');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy35');

}catch(e){_DumpException(e)}
/* _Module_:sy32 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy32');
var $googDebugFname="java/com/google/apps/framework/data/client/embedjspbdecoder.js";
eval("goog.provide(\x27af.data.EmbedJspbDecoder\x27);\n\ngoog.require(\x27goog.asserts\x27);\n\n\n\n/**\n * Service for decoding protocol buffers embedded in Soy.\n *\n * @constructor\n * @final\n */\naf.data.EmbedJspbDecoder \x3d function() {};\n\n\n/**\n * Resolves a data payload rendered with Soy\x27s embedJspb (framework use only).\n *\n * This Soy example:\n *\n *   \x3cdiv data-foo\x3d\x22{embedJspb($fooProto)}\x22\x3e\n *\n * Can be retrieved by:\n *\n *   decoder.decodeEmbeddedJspb(element.getAttribute(\x27data-foo\x27))\n *\n * @param {string} payload The data payload as generated by the embedJspb soy\n *     function.\n * @param {function(new: T, !Array\x3d)} ctor The JSPB constructor to deserialize.\n * @return {T} The decoded proto instance.\n * @template T\n */\naf.data.EmbedJspbDecoder.decodeEmbeddedJspb \x3d function(payload, ctor) {\n  // { Reverse the silly encoding: remove the junk at the beginning, and add\n  // the implied open brace.\n  goog.asserts.assert(payload.indexOf(\x27%.@.\x27) \x3d\x3d 0,\n      \x27Not encoded with embedJspb.\x27);\n  var serializedJspb \x3d \x27[\x27 + payload.substring(4);\n  var array \x3d goog.asserts.assertArray(JSON.parse(serializedJspb));\n  return new ctor(array);\n};\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/embedjspbdecoder.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/query/query.js";
eval("/**\n * @fileoverview wiz.Query provides a jQuery inspired interface for very\n * common operations on collections of DOM elements. All methods return a\n * wiz.Query objects themselves unless they are used as a setter, so they can\n * be chained. Methods in this class should behave like the equally named\n * methods in jQuery; however, only a subset of functionality may be available\n * based on the types of the available interface.\n *\n * These APIs are considered for future inclusion: css, parents.\n */\n\ngoog.provide(\x27wiz.Query\x27);\ngoog.provide(\x27wiz.Query.Data\x27);\ngoog.provide(\x27wiz.Query.One\x27);\n\ngoog.require(\x27af.data.EmbedJspbDecoder\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.classlist\x27);\ngoog.require(\x27goog.dom.dataset\x27);\ngoog.require(\x27goog.dom.forms\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.style\x27);\n\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.jsaction\x27);\n\ngoog.forwardDeclare(\x27fava.AppContext\x27);\n\n\n/**\n * A jQuery inspired library for DOM querying, access and manipulation.\n * @param {!Array\x3c!Element\x3e|!Array\x3c!wiz.Query\x3e|!wiz.Query} list A list of DOM\n *     Elements or Wiz.Query objects.\n * @constructor\n * @struct\n */\nwiz.Query \x3d function(list) {\n  if (list instanceof wiz.Query) {\n    list \x3d list.list_;\n  } else if (list[0] instanceof wiz.Query) {\n    list \x3d goog.array.reduce(list, function(combinedElements, queryObj) {\n      return goog.array.concat(combinedElements, queryObj.list_);\n    }, []);\n    goog.array.removeDuplicates(list);\n  }\n  /** @const @private {!Array\x3c!Element\x3e} */\n  this.list_ \x3d goog.array.toArray(list);\n};\n\n\n/**\n * Iterate over the collection of DOM elements. Call the passed in function\n * on each element.\n * @param {function(this: S, !Element, number)} fn The iterator function to call\n *     for each element which takes 2 arguments (the element and the index).\n * @param {S\x3d} opt_scope The object to be used as the value of \x27this\x27 within fn.\n * @return {!wiz.Query} The current wiz.Query object.\n * @template S\n */\nwiz.Query.prototype.each \x3d function(fn, opt_scope) {\n  goog.array.forEach(this.list_, fn, opt_scope);\n  return this;\n};\n\n\n/**\n * Get the size of the wiz.Query collection.\n * @return {number} The size of the collection.\n */\nwiz.Query.prototype.size \x3d function() {\n  return this.list_.length;\n};\n\n\n/**\n * Get the element of the collection at the given index.\n * @param {number} index The index of the DOM element in the collection to get.\n * @return {?Element} The element at the index or null.\n */\nwiz.Query.prototype.get \x3d function(index) {\n  return this.list_[index];\n};\n\n\n/**\n * Get the first element in the collection.\n * @return {?Element} The first element or null.\n */\nwiz.Query.prototype.el \x3d function() {\n  return this.list_[0] || null;\n};\n\n\n/**\n * Returns a copy of the DOM collection as an Array.\n * @return {!Array\x3c!Element\x3e} An array with the elements wrapped by the\n *     wiz.Query object.\n */\nwiz.Query.prototype.toArray \x3d function() {\n  return this.list_.slice();\n};\n\n\n/**\n * Like array.map(), for the elements in the query.\n * @param {function(this:THIS, !Element, number): RESULT} f The function to call\n *     for every element. This function takes two arguments (the element and the\n *     index) \x26 should return a value.  The result will be added to a new array.\n * @param {THIS\x3d} opt_obj The object to be used as the value of \x27this\x27 within f.\n * @return {!Array\x3cRESULT\x3e} A new array with the results from f.\n * @template THIS, RESULT\n */\nwiz.Query.prototype.map \x3d function(f, opt_obj) {\n  return goog.array.map(this.list_, f, opt_obj);\n};\n\n\n/**\n * Compares two wiz.Query objects for equality. Returns true if this query\n * contains the same elements, in the same order, as the other query.\n * @param {!wiz.Query} query The query to compare to.\n * @return {boolean} True if both queries contain the same elements.\n */\nwiz.Query.prototype.equals \x3d function(query) {\n  return this \x3d\x3d\x3d query || goog.array.equals(this.list_, query.list_);\n};\n\n\n/**\n * Returns the wiz.Query.One for the element in this collection\n * with the specified index. The index is zero-based. Negative\n * values indicate the element selection from the end of the\n * collection. The call will fail if the element does not exist.\n * @param {number} index The 0-based selection index.\n * @return {!wiz.Query.One}\n */\nwiz.Query.prototype.eq \x3d function(index) {\n  var pos;\n  if (index \x3c 0) {\n    pos \x3d this.list_.length + index;\n  } else {\n    pos \x3d index;\n  }\n  goog.asserts.assert(pos \x3e\x3d 0 \x26\x26 pos \x3c this.list_.length,\n      \x27Invalid index: \x27 + index + \x27 (\x27 + this.list_.length + \x27)\x27);\n  return new wiz.Query.One(this.list_[pos]);\n};\n\n\n/**\n * Returns the wiz.Query.One for the first element in this collection\n * or null if the collection is empty.\n * @return {?wiz.Query.One}\n */\nwiz.Query.prototype.first \x3d function() {\n  if (this.list_.length \x3d\x3d 0) {\n    return null;\n  }\n  return new wiz.Query.One(this.list_[0]);\n};\n\n\n/**\n * Returns the wiz.Query.One for the last element in this collection\n * or null if the collection is empty.\n * @return {?wiz.Query.One}\n */\nwiz.Query.prototype.last \x3d function() {\n  if (this.list_.length \x3d\x3d 0) {\n    return null;\n  }\n  return new wiz.Query.One(this.list_[this.list_.length - 1]);\n};\n\n\n/**\n * Executes the CSS selector from all elements in the collection and returns\n * the collection of found elements in a new wiz.Query object.\n * NOTE: Use findFirst if only the first matching element is needed.\n * @param {!goog.dom.TagName|string} selector The CSS selector for matching\n *     elements.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n */\nwiz.Query.prototype.find \x3d function(selector) {\n  // TODO(malteubl) Warn if this.list_ is empty.\n  var elements \x3d [];\n  this.each(function(root) {\n    // TODO(malteubl) Optimize this for performance and memory usage.\n    var domList \x3d root.querySelectorAll(String(selector));\n    for (var i \x3d 0; i \x3c domList.length; i++) {\n      elements.push(domList[i]);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Executes the CSS selector from all elements in the collection and returns\n * the collection of the first elements found in a new wiz.Query object.\n * @param {string} selector The CSS selector for matching elements.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n */\nwiz.Query.prototype.findFirst \x3d function(selector) {\n  // TODO(malteubl) Warn if this.list_ is empty.\n  var elements \x3d [];\n  this.each(function(root) {\n    var firstElement \x3d root.querySelector(selector);\n    if (firstElement) {\n      elements.push(firstElement);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Executes a jsname attribute selector from all elements in the collection and\n * returns the collection of found elements in a new wiz.Query object.\n * NOTE: Use findFirstByJsName if only the first matching element is needed.\n * @param {string} jsName The jsname for matching elements.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n */\nwiz.Query.prototype.findByJsName \x3d function(jsName) {\n  return this.find(\x27[\x27 + wiz.Attribute.NAME + \x27\x3d\x22\x27 + jsName + \x27\x22]\x27);\n};\n\n\n/**\n * Executes a jsname attribute selector from all elements in the collection and\n * returns the collection of the first elements found in a new wiz.Query object.\n * @param {string} jsName The jsname for matching elements.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n */\nwiz.Query.prototype.findFirstByJsName \x3d function(jsName) {\n  return this.findFirst(\x27[\x27 + wiz.Attribute.NAME + \x27\x3d\x22\x27 + jsName + \x27\x22]\x27);\n};\n\n\n/**\n * Returns a list of the unique parent elements of the wiz.Query collection\n * as a new wiz.Query object.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.parent \x3d function() {\n  var elements \x3d [];\n  this.each(function(element) {\n    var parent \x3d goog.dom.getParentElement(element);\n    if (parent \x26\x26 !goog.array.contains(elements, parent)) {\n      elements.push(parent);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Returns a list of all children of all elements in the collection. As in\n * jQuery, this method does not return text nodes.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n */\nwiz.Query.prototype.children \x3d function() {\n  var elements \x3d [];\n  this.each(function(element) {\n    var children \x3d goog.dom.getChildren(element);\n    for (var i \x3d 0; i \x3c children.length; i++) {\n      elements.push(children[i]);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Filters the current collection given the matcher and returns a new\n * collection with the matching elements.\n * @param {string|function(!Element):boolean} matcher A CSS string or a matcher\n *     function that should return true if the element matches.\n *     Currently only class, ID, and attribute CSS selectors are supported.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.filter \x3d function(matcher) {\n  var elements \x3d goog.array.filter(this.list_,\n      wiz.Query.Matchers.select_(matcher));\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Returns a list of the unique ancestor elements of the wiz.Query collection\n * matching the matcher function.\n * @param {string|function(!Element):boolean} matcher A CSS string or a matcher\n *     function that should return true if the element matches.\n *     Currently only class, ID, and attribute CSS selectors are supported.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.closest \x3d function(matcher) {\n  var elements \x3d [];\n  var elementMatcherFn \x3d wiz.Query.Matchers.select_(matcher);\n  var nodeMatcherFn \x3d function(node) {\n    // Filter out non-Element Nodes, like document.\n    return (node instanceof Element) \x26\x26 elementMatcherFn(node);\n  };\n  this.each(function(element) {\n    var closest \x3d goog.dom.getAncestor(element, nodeMatcherFn,\n        /* opt_includeNode */ true);\n    if (closest \x26\x26 !goog.array.contains(elements, closest)) {\n      elements.push(closest);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Returns a list of immediately following sibling elements of each element\n * in the wiz.Query collection, optionally matched against\n * given matcher function.\n * @param {string|function(!Element):boolean\x3d} opt_matcher\n *     A CSS string or a matcher function that should return true\n *     if the element matches.\n *     Currently only class, ID, and attribute CSS selectors are supported.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.next \x3d function(opt_matcher) {\n  return this.sibling_(goog.dom.getNextElementSibling, opt_matcher);\n};\n\n\n/**\n * Returns a list of immediately preceeding sibling elements of each element\n * in the wiz.Query collection, optionally matched against\n * given matcher function.\n * @param {string|function(!Element):boolean\x3d} opt_matcher\n *     A CSS string or a matcher function that should return true\n *     if the element matches.\n *     Currently only class, ID, and attribute CSS selectors are supported.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.prev \x3d function(opt_matcher) {\n  return this.sibling_(goog.dom.getPreviousElementSibling, opt_matcher);\n};\n\n\n/**\n * @param {function(!Element):?Element} siblingFn\n * @param {string|function(!Element):boolean\x3d} opt_matcher\n * @return {!wiz.Query}\n * @private\n */\nwiz.Query.prototype.sibling_ \x3d function(siblingFn, opt_matcher) {\n  var elements \x3d [];\n  var matcherFn;\n  if (opt_matcher) {\n    matcherFn \x3d  /** @type {function (?Node): boolean} */(\n        wiz.Query.Matchers.select_(opt_matcher));\n  } else {\n    matcherFn \x3d wiz.Query.Matchers.all;\n  }\n  this.each(function(element) {\n    var sibling \x3d siblingFn(element);\n    if (sibling \x26\x26 matcherFn(sibling)) {\n      elements.push(sibling);\n    }\n  });\n  return new wiz.Query(elements);\n};\n\n\n/**\n * Return true if any element in the collection has a given class name.\n * @param {string} className The class name to check for.\n * @return {boolean} Whether one of the elements has the class name.\n */\nwiz.Query.prototype.hasClass \x3d function(className) {\n  for (var i \x3d 0; i \x3c this.list_.length; i++) {\n    if (goog.dom.classlist.contains(this.list_[i], className)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the entire class name of each element in the collection.\n * @param {string} className The class name to set the elements to.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.setClass \x3d function(className) {\n  return this.each(function(el) {\n    goog.dom.classlist.set(el, className);\n  });\n};\n\n\n/**\n * Add a class name to each element in the collection.\n * @param {string} className The class name to add to the elements.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.addClass \x3d function(className) {\n  return this.each(function(el) {\n    goog.dom.classlist.add(el, className);\n  });\n};\n\n\n/**\n * Remove a class name from each element in the collection.\n * @param {string} className The class name to remove from the elements.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.removeClass \x3d function(className) {\n  return this.each(function(el) {\n    goog.dom.classlist.remove(el, className);\n  });\n};\n\n\n/**\n * Toggle a class name on each element of the collection.\n * @param {string} className The class name to toggle on the elements.\n * @param {boolean\x3d} opt_bool Whether to toggle on or off.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.toggleClass \x3d function(className, opt_bool) {\n  if (opt_bool \x3d\x3d undefined) {\n    return this.each(function(el) {\n      goog.dom.classlist.toggle(el, className);\n    });\n  } else {\n    if (opt_bool) {\n      return this.addClass(className);\n    }\n    return this.removeClass(className);\n  }\n};\n\n\n/**\n * Get the text content of the first element.\n * @return {string} The text content of the first element of the collection.\n */\nwiz.Query.prototype.getText \x3d function() {\n  if (this.list_.length \x3e 0) {\n    var element \x3d this.list_[0];\n    // Do not use goog.dom.getTextContent because it is broken, slow and\n    // deprecated.\n    if (\x27textContent\x27 in element) {\n      return goog.string.trim(element.textContent);\n    }\n    // Only IE8 reaches this point.\n    if (\x27innerText\x27 in element) {\n      return goog.string.trim(element.innerText);\n    }\n    goog.asserts.assert(false, \x27Invalid element\x27);\n  }\n  return \x27\x27;\n};\n\n\n/**\n * Set the text content of all elements to given value.\n * @param {string} newText New text to set to all elements.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.setText \x3d function(newText) {\n  return this.each(function(element) {\n    goog.dom.setTextContent(element, newText);\n  });\n};\n\n\n/**\n * Get the value (of form elements such as input fields, selects, checkboxes,\n * etc) of the first element.\n * Usually values will be strings. For multi-selects Array\x3cstring\x3e is used.\n * @return {!Array\x3cstring\x3e|string|null|undefined} The value of the first\n *     element.\n */\nwiz.Query.prototype.getVal \x3d function() {\n  if (this.list_.length \x3e 0) {\n    return goog.dom.forms.getValue(this.list_[0]);\n  }\n  return undefined;\n};\n\n\n/**\n * Set the value (of form elements such as input fields, selects, checkboxes,\n * etc) of all elements.\n * Usually values will be strings. For multi-selects Array\x3cstring\x3e is used.\n * @param {(!Array\x3cstring\x3e|string|null)\x3d} opt_newVal New value to set.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.setVal \x3d function(opt_newVal) {\n  return this.each(function(element) {\n    goog.dom.forms.setValue(element, opt_newVal);\n  });\n};\n\n\n/**\n * Get the attribute value with the given name of the first element.\n * Returns a string if the attribute is present, returns null if the attribute\n * was not found and returns undefined if the collection is empty.\n * @param {string} name\n * @return {string|null|undefined}\n */\nwiz.Query.prototype.getAttr \x3d function(name) {\n  if (this.list_.length \x3e 0) {\n    return this.list_[0].getAttribute(name);\n  }\n  return undefined;\n};\n\n\n/**\n * Set the attribute value with the given name.\n * @param {string} name\n * @param {string|number|boolean} value\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.setAttr \x3d function(name, value) {\n  return this.each(function(element) {\n    element.setAttribute(name, value);\n  });\n};\n\n\n/**\n * Remove the attribute value with the given name.\n * @param {string} name\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.removeAttr \x3d function(name) {\n  return this.each(function(element) {\n    element.removeAttribute(name);\n  });\n};\n\n\n/**\n * Get the style value with the given property from the first element. Returns\n * an empty string if the style has not been explicitly set and undefined if\n * there are no elements in the set.\n * @param {string} name\n * @return {string|number|undefined}\n */\nwiz.Query.prototype.getStyle \x3d function(name) {\n  if (this.list_.length \x3e 0) {\n    return goog.style.getStyle(this.list_[0], name);\n  }\n  return undefined;\n};\n\n\n/**\n * Set the style value of the given property or properties.\n * @param {string|!Object\x3cstring, string|number|boolean\x3e} nameOrMap\n * @param {string|number|boolean\x3d} opt_value\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.setStyle \x3d function(nameOrMap, opt_value) {\n  return this.each(function(element) {\n    goog.style.setStyle(element, nameOrMap, opt_value);\n  });\n};\n\n\n/**\n * Gets a {@code data-} attribute from the first element.\n * @param {string} key The user defined key of the data- attribute.\n * @return {!wiz.Query.Data} The attribute value.\n */\nwiz.Query.prototype.getData \x3d function(key) {\n  if (this.list_.length \x3d\x3d\x3d 0) {\n    return new wiz.Query.Data(key, null);\n  }\n\n  var value \x3d goog.dom.dataset.get(this.list_[0], key);\n  return new wiz.Query.Data(key, value);\n};\n\n\n/**\n * Sets a {@code data-} attribute on all elements. Does not affect preexisting\n * wiz.Query instances containing these elements.\n * @param {string} key The user defined key of the data- attribute.\n * @param {?string} value The attribute value.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.setData \x3d function(key, value) {\n  this.each(function(element) {\n    if (value \x3d\x3d null) {\n      goog.dom.dataset.remove(element, key);\n    } else {\n      goog.dom.dataset.set(element, key, value);\n    }\n  });\n  return this;\n};\n\n\n/**\n * Set focus to the first element.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.focus \x3d function() {\n  try {\n    this.el().focus();\n  } catch (e) {\n    // IE throws an exception if the element cannot be focused.\n  }\n  return this;\n};\n\n\n/**\n * Triggers a click event on the first element.\n */\nwiz.Query.prototype.click \x3d function() {\n  var doc \x3d goog.dom.getOwnerDocument(this.el());\n  if (doc.createEvent) {\n    var clickEvent \x3d doc.createEvent(\x27MouseEvents\x27);\n    clickEvent.initMouseEvent(\x27click\x27, true, true, doc.defaultView,\n        1, 0, 0, 0, 0, false, false, false, false, 0, null);\n    this.el().dispatchEvent(clickEvent);\n  } else {\n    var clickEvent \x3d doc.createEventObject();\n    clickEvent.clientX \x3d 0;\n    clickEvent.clientY \x3d 0;\n    clickEvent.screenX \x3d 0;\n    clickEvent.screenY \x3d 0;\n    clickEvent.altKey \x3d false;\n    clickEvent.ctrlKey \x3d false;\n    clickEvent.shiftKey \x3d false;\n    clickEvent.button \x3d 0;\n    this.el().fireEvent(\x27onclick\x27, clickEvent);\n  }\n};\n\n\n/** @typedef {?Element|?wiz.Query|?Node|?Array\x3c!Element\x3e} */\nwiz.Query.Elements;\n\n\n/**\n * Helper function to run DOM operations.\n * @param {function((?Element|?Node),!Element)} operation Function that takes DOM\n *     node to operate with and a reference node.\n * @param {?wiz.Query.Elements} operand DOM node(s)\n * @return {!wiz.Query} The current wiz.Query object.\n * @private\n */\nwiz.Query.prototype.domManip_ \x3d function(operation, operand) {\n  if (this.list_.length \x3d\x3d 1) {\n    // Operating on a single element has the special quality that we never\n    // clone the operand(s). The default behavior of appending an already\n    // attached DOM node to another place in the DOM is equivalent to moving\n    // that DOM node.\n    var element \x3d this.list_[0];\n    if (operand instanceof wiz.Query) {\n      operand.each(function(operandNode) {\n        operation(operandNode, element);\n      });\n    } else if (goog.isArray(operand)) {\n      goog.array.forEach(operand, function(operandNode) {\n        operation(operandNode, element);\n      });\n    } else {\n      operation(operand, element);\n    }\n    return this;\n  }\n  // When performing a DOM operation on multiple elements, we must clone\n  // the operand so that each element receives its own copy.\n  function manip(operation, operand, element) {\n    var cloneOrOriginal \x3d operand;\n    if (operand \x26\x26 operand.parentNode) {\n      // Nodes that are already hooked to the DOM can\x27t be appended, etc.\n      // Thus make a copy\n      cloneOrOriginal \x3d operand.cloneNode(true);\n    }\n    operation(cloneOrOriginal, element);\n  }\n  return this.each(function(element) {\n    if (operand instanceof wiz.Query) {\n      operand.each(function(operandNode) {\n        manip(operation, operandNode, element);\n      });\n    } else if (goog.isArray(operand)) {\n      goog.array.forEach(operand, function(operandNode) {\n        manip(operation, operandNode, element);\n      });\n    } else {\n      manip(operation, operand, element);\n    }\n  });\n};\n\n\n/**\n * Appends the element \x22toAppend\x22 to every element in the collection. If\n * toAppend is itself a wiz.Query collection all elements are appended.\n * @param {!wiz.Query.Elements} toAppend Element, Node, or\n *      wiz.Query collection to append.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.append \x3d function(toAppend) {\n  return this.domManip_(function(refNode, parent) {\n    parent.appendChild(refNode);\n  }, toAppend);\n};\n\n\n/**\n * Appends the current elements to become children of the specified elements.\n * @param {!Element|!wiz.Query} container The collection to append to.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.appendTo \x3d function(container) {\n  new wiz.Query([container]).append(this);\n  return this;\n};\n\n\n/**\n * Removes the elements in the current collection from the DOM.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.remove \x3d function() {\n  return this.domManip_(function(ignore, element) {\n    goog.dom.removeNode(element);\n  }, null);\n};\n\n\n/**\n * Empties the element by removing all its children.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.empty \x3d function() {\n  return this.domManip_(function(ignore, element) {\n    goog.dom.removeChildren(element);\n  }, null);\n};\n\n\n/**\n * Appends the new sibling after every element in the collection.\n * @param {!wiz.Query.Elements} sibling Sibling to add to the DOM.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.after \x3d function(sibling) {\n  return this.domManip_(goog.dom.insertSiblingAfter, sibling);\n};\n\n\n/**\n * Appends the new sibling before every element in the collection.\n * @param {!wiz.Query.Elements} sibling Sibling to add to the DOM.\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.before \x3d function(sibling) {\n  return this.domManip_(goog.dom.insertSiblingBefore, sibling);\n};\n\n\n/**\n * Replace each element in the set of matched elements with the provided new\n * element.  Returns the original elements, which will no longer be in the DOM.\n * @param {!Element|!wiz.Query.One} element\n * @return {!wiz.Query} The current wiz.Query object.\n */\nwiz.Query.prototype.replaceWith \x3d function(element) {\n  return this.domManip_(goog.dom.replaceNode, element);\n};\n\n\n/**\n * Toggles whether to display the elements in the collection.\n * For behavior {@see goog.style.setElementShown}.\n * @param {boolean} display Whether the element should be displayed.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.toggle \x3d function(display) {\n  return this.each(function(element) {\n    goog.style.setElementShown(element, display);\n  });\n};\n\n\n/**\n * Shows the elements in the collection.\n * For behavior {@see goog.style.setElementShown}.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.show \x3d function() {\n  return this.toggle(true);\n};\n\n\n/**\n * Hides the elements in the collection.\n * For behavior {@see goog.style.setElementShown}.\n * @return {!wiz.Query}\n */\nwiz.Query.prototype.hide \x3d function() {\n  return this.toggle(false);\n};\n\n\n/**\n * Triggers a custom event on the DOM nodes in the collection.\n * Browser events are currently not supported.\n * @param {!wiz.event.EventType\x3cDATA\x3e} eventType The type of the event.\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {boolean\x3d} opt_bubbles Whether the event bubbles. Defaults to true.\n * @return {!wiz.Query}\n * @template DATA\n */\nwiz.Query.prototype.trigger \x3d function(eventType, opt_data, opt_bubbles) {\n  return this.each(function(element) {\n    wiz.jsaction.trigger(element, eventType, opt_data, opt_bubbles);\n  });\n};\n\n\n/**\n * Returns the first element of the {@link wiz.Query} or the {@link Element}.\n * @param {!wiz.Query|!Element} query\n * @return {!Element}\n */\nwiz.Query.el \x3d function(query) {\n  return goog.asserts.assertElement(query instanceof wiz.Query ?\n      query.el() : query, \x27wiz.Query.el requires an element.\x27);\n};\n\n\n\n/**\n * A wiz.Query implementation for list of DOM elements with exactly one\n * element.\n * @param {?Element|!wiz.Query} element A DOM Element. {@link wiz.Query} must be\n *     of length 1.\n * @param {!Array\x3c!Element\x3e\x3d} opt_oneElementList A one list of DOM elements.\n *     Note this is intended for framework use, the array should not be mutated\n *     once the new wiz.Query.One has been constructed.\n * @constructor\n * @struct\n * @const\n * @extends {wiz.Query}\n */\nwiz.Query.One \x3d function(element, opt_oneElementList) {\n  if (element instanceof wiz.Query) {\n    goog.asserts.assert(element.size() \x3d\x3d 1,\n        \x27wiz.Query.One initialized with wiz.Query length not equal to 1\x27);\n    opt_oneElementList \x3d element.list_;\n    element \x3d null;\n  }\n  var list \x3d element !\x3d null ? [element] : opt_oneElementList;\n  goog.asserts.assert(list !\x3d null, \x27wiz.Query.One requires to be \x27 +\n      \x27instantiated with a non-null element or one-element list.\x27);\n  goog.asserts.assert(list.length \x3d\x3d\x3d 1, \x27wiz.Query.One requires \x27 +\n      \x27to be initialized with an exactly one element list. List length is: \x27 +\n      list.length);\n  goog.asserts.assert(list[0] !\x3d null, \x27The element in opt_oneElementList \x27 +\n      \x27cannot be null.\x27);\n  wiz.Query.One.base(this, \x27constructor\x27, list);\n};\ngoog.inherits(wiz.Query.One, wiz.Query);\n\n\n/**\n * Returns a list of all children of the element in the query. As in\n * jQuery, this method does not return text nodes.\n * @return {!wiz.Query} The wiz.Query wrapping the matched elements.\n * @override\n */\nwiz.Query.One.prototype.children \x3d function() {\n  return new wiz.Query(\n      Array.prototype.slice.call(goog.dom.getChildren(this.list_[0])));\n};\n\n\n/**\n * Iterate over the collection of DOM elements. Call the passed in function\n * on each element.\n * @param {function(this: S, !Element, number)} fn The iterator function to call\n *     for each element which takes 2 arguments (the element and the index).\n * @param {S\x3d} opt_scope The object to be used as the value of \x27this\x27 within fn.\n * @return {!wiz.Query.One} The current wiz.Query.One object.\n * @template S\n * @override\n */\nwiz.Query.One.prototype.each \x3d function(fn, opt_scope) {\n  fn.call(opt_scope, this.list_[0], 0);\n  return this;\n};\n\n\n/** @override */\nwiz.Query.One.prototype.size \x3d function() {\n  return 1;\n};\n\n\n/**\n * Get the element in the collection.\n * @return {!Element} The element.\n * @override\n */\nwiz.Query.One.prototype.el \x3d function() {\n  return this.list_[0];\n};\n\n\n/**\n * Returns self.\n * @param {number} index The 0-based index.\n * @return {!wiz.Query.One}\n * @override\n */\nwiz.Query.One.prototype.eq \x3d function(index) {\n  goog.asserts.assert(index \x3d\x3d 0 || index \x3d\x3d -1,\n      \x27Invalid index: \x27 + index + \x27 (1)\x27);\n  return this;\n};\n\n\n/**\n * Returns self.\n * @return {!wiz.Query.One}\n * @override\n */\nwiz.Query.One.prototype.first \x3d function() {\n  return this;\n};\n\n\n/**\n * Returns the first element of the {@link wiz.Query} or the {@link Element} as\n * a {@link wiz.Query.One}. If query is already a {@link wiz.Query.One} this is\n * just a pass through method.\n * @param {!wiz.Query|!Element} query\n * @return {!wiz.Query.One}\n */\nwiz.Query.one \x3d function(query) {\n  return query instanceof wiz.Query.One ? query :\n      new wiz.Query.One(wiz.Query.el(query));\n};\n\n\n\n/**\n * Represents the value of a {@code data-} attribute or an entry in\n * `WIZ_global_data`. Can be used as a `string` or `boolean`\n * or `number` type. For `WIZ_global_data` it can also be used to\n * get {@code Array\x3cwiz.Query.Data} or {@code Object\x3cstring, wiz.Query.Data\x3e}\n * types. Allows passing in of defaults if the value does not exist.\n * @param {string} key Key of the data field. Retained for debugging purposes.\n * @param {*} value Value of the data field.\n * @constructor\n */\nwiz.Query.Data \x3d function(key, value) {\n  /** @const @private {string} */\n  this.key_ \x3d key;\n\n  /** @const @private {*} */\n  this.value_ \x3d value;\n};\n\n\n/**\n * Throws an error about key not found in data.\n * @private\n */\nwiz.Query.Data.prototype.throwNotDefinedError_ \x3d function() {\n  if (goog.DEBUG \x26\x26 this.key_.includes(\x27-\x27)) {\n    throw new Error(\x27Data \x27 + this.key_ + \x27 not defined. Most likely \x27 +\n        \x27because you need to replace - with camelcase. More information \x27 +\n        \x27http://go/wiz-errors#data-not-found\x27);\n  }\n  throw new Error(\x27Data \x27 + this.key_ + \x27 not defined.\x27);\n};\n\n\n/**\n * Converts the data value to a string. Throws an error if the data attribute\n * is not defined and no default value is provided.\n * @param {(string|T)\x3d} opt_defaultValue Default value if the data value is\n *     not defined.\n * @return {string|T} The converted string value.\n * @template T\n */\nwiz.Query.Data.prototype.string \x3d function(opt_defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    if (arguments.length \x3d\x3d 0) {\n      this.throwNotDefinedError_();\n    }\n    return /** @type {?} */ (opt_defaultValue);\n  }\n\n  if (goog.isString(this.value_)) {\n    return this.value_;\n  }\n\n  throw new TypeError(\x27Invalid string data \x3c\x27 + this.key_ + \x27\x3e: \x27 +\n      this.value_ + \x27-\x27 + typeof this.value_);\n};\n\n\n/**\n * Converts the data value to a boolean. Throws an error if the data attribute\n * is not defined and no default value is provided.\n * @param {(boolean|T)\x3d} opt_defaultValue Default value if the data value is\n *     not defined.\n * @return {boolean|T} The converted boolean value.\n * @template T\n */\nwiz.Query.Data.prototype.bool \x3d function(opt_defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    if (arguments.length \x3d\x3d 0) {\n      this.throwNotDefinedError_();\n    }\n    return /** @type {?} */ (opt_defaultValue);\n  }\n\n  if (goog.isBoolean(this.value_)) {\n    return this.value_;\n  }\n\n  if (goog.isString(this.value_)) {\n    var value \x3d this.value_.toLowerCase();\n    if (value \x3d\x3d\x3d \x27true\x27 || value \x3d\x3d\x3d \x271\x27) {\n      return true;\n    }\n    if (value \x3d\x3d\x3d \x27false\x27 || value \x3d\x3d\x3d \x270\x27) {\n      return false;\n    }\n  }\n\n  throw new TypeError(\x27Invalid boolean data \x3c\x27 + this.key_ + \x27\x3e: \x27 +\n      this.value_ + \x27-\x27 + typeof this.value_);\n};\n\n\n/**\n * Converts the data value to a number. Throws an error if the data attribute\n * is not defined and no default value is provided.\n * WARNING: Positive and negative integers cannot exceed 2^53 bits in\n * JavaScript. Refer to http://ecma262-5.com/ELS5_HTML.htm#Section_8.5\n * @param {(number|T)\x3d} opt_defaultValue Default value if the data value is\n *     not defined.\n * @return {number|T} The converted numeric value.\n * @template T\n */\nwiz.Query.Data.prototype.number \x3d function(opt_defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    if (arguments.length \x3d\x3d 0) {\n      this.throwNotDefinedError_();\n    }\n    return /** @type {?} */ (opt_defaultValue);\n  }\n\n  if (goog.isNumber(this.value_)) {\n    return this.value_;\n  }\n\n  if (goog.isString(this.value_)) {\n    var value \x3d Number(this.value_);\n    if (!isNaN(value) \x26\x26 !goog.string.isEmptyOrWhitespace(this.value_)) {\n      return /** @type {number} */ (value);\n    }\n  }\n\n  throw new TypeError(\x27Invalid numeric data \x3c\x27 + this.key_ + \x27\x3e: \x27 +\n      this.value_ + \x27-\x27 + typeof this.value_);\n};\n\n\n/**\n * @return {boolean} Whether the value is defined.\n */\nwiz.Query.Data.prototype.isDefined \x3d function() {\n  return this.value_ !\x3d null;\n};\n\n\n/**\n * Returns the original data value.\n * @return {string}\n * @override\n */\nwiz.Query.Data.prototype.toString \x3d function() {\n  return this.string();\n};\n\n\n/**\n * Returns an embedded enum value.\n * @param {!Object\x3cENUM_TYPE, number|string\x3e} enumType The enum with which to\n *     interpret the value.\n * @param {ENUM_TYPE\x3d} opt_defaultValue Default value if the data value is not\n *     defined\n * @return {ENUM_TYPE}\n * @template ENUM_TYPE\n */\nwiz.Query.Data.prototype.enum \x3d function(enumType, opt_defaultValue) {\n  var enumValue \x3d goog.isNumber(goog.object.getAnyValue(enumType)) ?\n      this.number(opt_defaultValue) :\n      this.string(opt_defaultValue);\n  goog.asserts.assert(goog.object.transpose(enumType)[enumValue]);\n  return enumValue;\n};\n\n\n/**\n * Returns a promise the value of the embedded JSPB.\n * @param {!fava.AppContext} appContext The app context\n * @param {function(new: PROTO_TYPE, !Array\x3d)} jspbCtor The jspb constructor.\n * @param {(PROTO_TYPE|DEFAULT_VALUE)\x3d} opt_defaultValue Default value if the\n *     data value is not defined.\n * @return {!goog.async.Deferred\x3cPROTO_TYPE|null\x3e}\n * @template PROTO_TYPE, DEFAULT_VALUE\n * @deprecated Use protoRequired or protoOptional instead.\n */\nwiz.Query.Data.prototype.proto \x3d function(\n    appContext, jspbCtor, opt_defaultValue) {\n  return goog.async.Deferred.succeed(\n      this.protoOrDefault(jspbCtor, opt_defaultValue));\n};\n\n\n/**\n * Synchronously returns the value of the embedded JSPB.  This is its own method\n * because the type system cannot infer an optional template parameter.\n * @param {function(new: PROTO_TYPE, !Array\x3d)} jspbCtor The jspb constructor.\n * @return {PROTO_TYPE}\n * @template PROTO_TYPE\n */\nwiz.Query.Data.prototype.protoRequired \x3d function(jspbCtor) {\n  if (this.value_ \x3d\x3d null) {\n    throw new Error(\x27Data \x27 + this.key_ + \x27 not defined.\x27);\n  }\n  var payload \x3d this.string();\n  return af.data.EmbedJspbDecoder.decodeEmbeddedJspb(payload, jspbCtor);\n};\n\n\n/**\n * Synchronously returns the value of the embedded JSPB.\n * @param {function(new: PROTO_TYPE, !Array\x3d)} jspbCtor The jspb constructor.\n * @param {DEFAULT_VALUE} defaultValue Default value if the\n *     data value is not defined.\n * @return {PROTO_TYPE|DEFAULT_VALUE}\n * @template PROTO_TYPE, DEFAULT_VALUE\n */\nwiz.Query.Data.prototype.protoOrDefault \x3d function(jspbCtor, defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    return defaultValue;\n  }\n  var payload \x3d this.string();\n  return af.data.EmbedJspbDecoder.decodeEmbeddedJspb(payload, jspbCtor);\n};\n\n\n/**\n * Returns the underlying array value of the data. Throws an error if the value\n * is not actually an array.\n * Note: this should only be used for data coming from `WIZ_global_data`.\n * @param {DEFAULT_VALUE\x3d} opt_defaultValue\n * @return {!Array\x3c!wiz.Query.Data\x3e|DEFAULT_VALUE}\n * @template DEFAULT_VALUE\n */\nwiz.Query.Data.prototype.array \x3d function(opt_defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    if (arguments.length \x3d\x3d 0) {\n      throw new Error(\x27Data \x27 + this.key_ + \x27 not defined.\x27);\n    }\n    return /** @type {?} */ (opt_defaultValue);\n  }\n\n  if (goog.isArrayLike(this.value_)) {\n    return goog.array.map(\n        /** @type {!IArrayLike} */ (this.value_),\n        function(item, index) {\n          return new wiz.Query.Data(this.key_ + \x27[\x27 + index + \x27]\x27, item);\n        }, this);\n  }\n\n  throw new TypeError(\x27Invalid array data \x3c\x27 + this.key_ + \x27\x3e: \x27 +\n      this.value_ + \x27-\x27 + typeof this.value_);\n};\n\n\n/**\n * Returns the underlying object value of the data. Throws an error if the value\n * is not actually an object.\n * Note: this should only be used for data coming from `WIZ_global_data`.\n * @param {DEFAULT_VALUE\x3d} opt_defaultValue\n * @return {!Object\x3cstring, !wiz.Query.Data\x3e|DEFAULT_VALUE}\n * @template DEFAULT_VALUE\n */\nwiz.Query.Data.prototype.object \x3d function(opt_defaultValue) {\n  if (this.value_ \x3d\x3d null) {\n    if (arguments.length \x3d\x3d 0) {\n      throw new Error(\x27Data \x27 + this.key_ + \x27 not defined.\x27);\n    }\n    return /** @type {?} */ (opt_defaultValue);\n  }\n\n  if (!goog.isArrayLike(this.value_) \x26\x26 goog.isObject(this.value_)) {\n    return goog.object.map(this.value_, function(value, key) {\n      return new wiz.Query.Data(this.key_ + \x27.\x27 + key, value);\n    }, this);\n  }\n\n  throw new TypeError(\x27Invalid object data \x3c\x27 + this.key_ + \x27\x3e: \x27 +\n      this.value_ + \x27-\x27 + typeof this.value_);\n};\n\n\n/**\n * A namespace for matcher functions. I.e. used in wiz.Query.prototype.closest.\n * @const\n */\nwiz.Query.Matchers \x3d {};\n\n\n/**\n * Matches strings that can be converted to matcher functions.\n * @private @const {!RegExp}\n */\nwiz.Query.Matchers.supportedMatchers_ \x3d /^\\.?[a-zA-Z0-9-_]+$$/;\n\n\n/**\n * Parses attribute selectors.  String escapes are not supported.\n * @private @const {!RegExp}\n */\nwiz.Query.Matchers.attributeSelectorParser_ \x3d\n    /^\\[([a-z0-9-]+)(\x3d\x22([^\\\\\x22]*)\x22)?]$/;\n\n\n/**\n * Select an appropriate matcher based on the type and the shape of the matcher\n * argument\n * @param {function(!Element):boolean|string} matcher\n * @return {function(!Element):boolean}\n * @private\n */\nwiz.Query.Matchers.select_ \x3d function(matcher) {\n  if (typeof matcher \x3d\x3d \x27string\x27) {\n    goog.asserts.assert(wiz.Query.Matchers.supportedMatchers_.test(matcher) ||\n        wiz.Query.Matchers.attributeSelectorParser_.test(matcher),\n        \x27Currently only simple class name, tag name, and quoted attribute \x27 +\n        \x27selectors are supported.\x27);\n    if (matcher.substr(0, 1) \x3d\x3d \x27.\x27) {\n      var className \x3d matcher.substr(1);  // Get rid of the leading .\n      return wiz.Query.Matchers.byClassName(className);\n    } else if (matcher.substr(0, 1) \x3d\x3d \x27[\x27) {\n      var parsed \x3d wiz.Query.Matchers.attributeSelectorParser_.exec(matcher);\n      // Check for \x27\x3d\x27 to distinguish between \x27[attr] and [attr\x3d\x22\x22]\x27 since IE 8\n      // will return an empty string instead of undefined for a non-match.\n      var value \x3d matcher.indexOf(\x27\x3d\x27) \x3d\x3d -1 ? undefined : parsed[3];\n      return wiz.Query.Matchers.byAttribute(parsed[1], value);\n    } else {\n      return wiz.Query.Matchers.byTagName(matcher);\n    }\n  }\n  goog.asserts.assertFunction(matcher);\n  return matcher;\n};\n\n\n/**\n * @param {string} className\n * @return {function(!Element):boolean} Returns a matcher that checks whether\n *     the element matches the class name.\n */\nwiz.Query.Matchers.byClassName \x3d function(className) {\n  return function(element) {\n    return element.getAttribute \x26\x26\n        goog.dom.classlist.contains(element, className);\n  };\n};\n\n\n/**\n * @param {string} jsName\n * @return {function(!Element):boolean} Returns a matcher that checks whether\n *     the element\x27s jsname matches the given jsname.\n */\nwiz.Query.Matchers.byJsName \x3d function(jsName) {\n  return wiz.Query.Matchers.byAttribute(wiz.Attribute.NAME, jsName);\n};\n\n\n/**\n * @param {string} name\n * @param {string\x3d} opt_value\n * @return {function(!Element):boolean} Returns a matcher that checks whether\n *     the element has the specified attribute and whether it equals the value,\n *     if specified.\n */\nwiz.Query.Matchers.byAttribute \x3d function(name, opt_value) {\n  return function(element) {\n    return goog.isDef(opt_value)\n        ? element.getAttribute \x26\x26 element.getAttribute(name) \x3d\x3d opt_value\n        : element.hasAttribute \x26\x26 element.hasAttribute(name);\n  };\n};\n\n\n/**\n * @param {string} tagName Case insensitive tag name.\n * @return {function(!Element):boolean} Returns a matcher that checks whether\n *     the element matches the tag name.\n */\nwiz.Query.Matchers.byTagName \x3d function(tagName) {\n  tagName \x3d tagName.toUpperCase();\n  return function(element) {\n    var elemTagName \x3d element.tagName;\n    return elemTagName \x26\x26 elemTagName.toUpperCase() \x3d\x3d tagName;\n  };\n};\n\n\n/**\n * Matcher function that matches all elements.\n * @param {!Element} element\n * @return {boolean}\n */\nwiz.Query.Matchers.all \x3d function(element) {\n  return true;\n};\n\n\n/**\n * @param {!wiz.Query|!Element} element Element to exclude from the list.\n * @return {function(!Element):boolean} Returns a matcher that matches all\n *     elements except for the one given.\n */\nwiz.Query.Matchers.allExcept \x3d function(element) {\n  var matchVal \x3d element instanceof wiz.Query ? element.el() : element;\n  return function(element) {\n    return element !\x3d matchVal;\n  };\n};\n\n\n/**\n * @param {string} key Key for custom data attribute.\n * @param {string\x3d} opt_value Value of the custom data attribute.\n * @return {function(!Element):boolean} Returns a matcher that matches all\n *     elements that have a data attribute with the given key whose value\n *     is equal to the specified value. If the value is not specified, then\n *     it merely tests for the presence of that data attribute.\n */\nwiz.Query.Matchers.byData \x3d function(key, opt_value) {\n  if (arguments.length \x3d\x3d 2) {\n    return function(element) {\n      return goog.dom.dataset.get(element, key) \x3d\x3d opt_value;\n    };\n  } else {\n    return function(element) {\n      return goog.dom.dataset.has(element, key);\n    };\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/query/query.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy32');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy32');

}catch(e){_DumpException(e)}
/* _Module_:sy2y */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2y');
var $googDebugFname="javascript/apps/wiz/controller/context.js";
eval("/**\n * @fileoverview Provides methods to store context data in the form of protocol\n * buffers in the DOM for use by child.\n */\ngoog.provide(\x27wiz.context\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.nextTick\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27wiz.dom\x27);\n\n\n/**\n * Property key under which context data is stored in DOM nodes.\n * @private\n */\nwiz.context.CONTEXT_KEY_ \x3d \x27__wizcontext\x27;\n\n\n/**\n * Stores the deferred for a `wiz.context.get` if the value of the key\n * hasn\x27t been set yet on data retrieval. The deferred is called by\n * `wiz.context.set` and then discarded when the value becomes available.\n * @private\n */\nwiz.context.REQUESTS_ \x3d \x27__wizcontext:requests\x27;\n\n\n/**\n * Stores a list of pending context keys currently awaiting values to be set\n * by `wiz.context.set`.\n * @private\n */\nwiz.context.ATTRIBUTE_ \x3d \x27jscontext\x27;\n\n\n/**\n * Regex to check whether a context key is valid.\n * @private\n */\nwiz.context.VALID_KEY_REGEX_ \x3d /^[a-zA-Z0-9-_\\.]+$/;\n\n\n/**\n * Get context data from a DOM node or its ancestors.\n * @param {?Node|?Element} start The start node for searching for context data.\n * @param {string|!xid.Reference\x3cT\x3e} key\n * @return {!goog.async.Deferred\x3cT\x3e} Deferred of the\n *     context value.\n * @template T\n */\nwiz.context.get \x3d function(start, key) {\n  goog.asserts.assert(start !\x3d null, \x27The start element must not be null.\x27);\n  goog.asserts.assert(wiz.context.VALID_KEY_REGEX_.test(key),\n      \x27The key must be a valid HTML attribute with no spaces.\x27);\n  if (start[wiz.context.REQUESTS_] \x26\x26 start[wiz.context.REQUESTS_][key]) {\n    return start[wiz.context.REQUESTS_][key];\n  }\n  start \x3d /** @type {!Element} */ (start);\n  var d \x3d new goog.async.Deferred();\n  var value \x3d undefined;\n  wiz.dom.getAncestor(start, function(node) {\n    var container \x3d node[wiz.context.CONTEXT_KEY_];\n    if (!container) {\n      return false;\n    }\n    value \x3d container[key];\n    if (value !\x3d\x3d undefined) {\n      // TODO(malteubl) Cache. Invalidate on reset.\n      return true;\n    }\n    return false;\n  }, true);\n  if (value !\x3d\x3d undefined) {\n    d.callback(value);\n  } else {\n    // The value was not set yet. Mark that we need some context data on the\n    // DOM Node.\n    wiz.context.wait_(start, key, d);\n    var owner \x3d wiz.dom.getOwner(start);\n    if (owner !\x3d start) {\n      // If the node lives in a tree that is owned by another DOM node, also\n      // wait on that owner node.\n      wiz.context.wait_(owner, key, d);\n    }\n    // Log messages if key is never set, as this is always assumed to be an\n    // error eventually, but there is no general way to define a timeout.\n    // Do this only in debug mode and when the code is not compiled in\n    // local development.\n    if (goog.DEBUG \x26\x26 !COMPILED) {\n      var interval \x3d goog.global.setInterval(function() {\n        if (!goog.dom.contains(start.ownerDocument, start)) {\n          goog.global.clearInterval(interval);\n          return;\n        }\n        goog.log.error(goog.log.getLogger(\x27wiz.context\x27), \x27Context key \x3c\x27 +\n            key + \x27\x3e was requested but has not been set yet.\x27);\n      }, 3000);\n      d.addCallback(function() {\n        if (interval) {\n          goog.global.clearInterval(interval);\n        }\n      });\n    }\n  }\n  return d;\n};\n\n\n/**\n * Stores data in the form of protocol buffers in the DOM.\n * @param {?Node|?Element} node The node to store the context on.\n * @param {string|!xid.Reference\x3cT\x3e} key\n * @param {T} value The context value.\n * @template T\n */\nwiz.context.set \x3d function(node, key, value) {\n  goog.asserts.assert(node !\x3d null, \x27The node must not be null.\x27);\n  goog.asserts.assert(wiz.context.VALID_KEY_REGEX_.test(key),\n      \x27The key must be alphanumeric with no spaces.\x27);\n  if (goog.DEBUG \x26\x26 !COMPILED) {\n    // Only run when not compiled to avoid breaking disambiguation with\n    // accessing fieldIndex;\n    var type \x3d goog.typeOf(value);\n    goog.asserts.assert(type \x3d\x3d \x27string\x27 || type \x3d\x3d \x27number\x27 ||\n        type \x3d\x3d \x27boolean\x27 || value \x3d\x3d\x3d null ||\n        // getJsPbMessageId is quoted to avoid disambiguation problems in the\n        // JSCompiler. Since this code only runs in UNCOMPILED mode it doesn\x27t\n        // make a difference semantically.\n        (value \x26\x26 value[\x27getJsPbMessageId\x27]),\n        \x27Value must be a string, boolean, number, null or proto.\x27);\n  }\n  var store \x3d node[wiz.context.CONTEXT_KEY_];\n  if (!store) {\n    store \x3d node[wiz.context.CONTEXT_KEY_] \x3d {};\n  }\n  store[key] \x3d value;\n  // TODO(dfli): Coalesce multiple calls for the same key into one scan.\n  goog.async.nextTick(goog.partial(wiz.context.fire_, node, key, value));\n};\n\n\n/**\n * Find all nodes currently awaiting context data and check for the key and\n * fire the deferreds with the value being set.\n * @param {!Node|!Element} node The node to store the context on.\n * @param {string|!xid.Reference\x3cT\x3e} key\n * @param {T} value The context value.\n * @template T\n * @private\n */\nwiz.context.fire_ \x3d function(node, key, value) {\n  // Looks for nodes using the attribute selector [jscontext~\x3dKEY] which looks\n  // for the presence of the KEY as one of the words in a whitespace-separated\n  // list of words.\n  key \x3d String(key);\n  var selector \x3d \x27[\x27 + wiz.context.ATTRIBUTE_ + \x27~\x3d\x22\x27 + key + \x27\x22]\x27;\n  var contextNodes \x3d /** @type {!Array\x3c!Node\x3e} */ (\n      goog.array.toArray(node.querySelectorAll(selector)));\n  if (goog.array.contains(wiz.context.getKeys_(node), key)) {\n    contextNodes.push(node);\n  }\n  for (var i \x3d 0; node \x3d contextNodes[i]; i++) {\n    var keys \x3d wiz.context.getKeys_(node);\n    if (goog.array.remove(keys, key)) {\n      // In the case of an owned node relationship there may be the same\n      // deferred waiting on 2 nodes. Do not call it again if it fired\n      // already.\n      if (!node[wiz.context.REQUESTS_][key].hasFired()) {\n        node[wiz.context.REQUESTS_][key].callback(value);\n      }\n      node[wiz.context.REQUESTS_][key] \x3d null;\n      wiz.context.setKeys_(node, keys);\n    }\n  }\n};\n\n\n/**\n * Stores a deferred on an element, to be called when the context is set.\n * @param {!Element} element\n * @param {string|!xid.Reference} key\n * @param {!goog.async.Deferred} d\n * @private\n */\nwiz.context.wait_ \x3d function(element, key, d) {\n  var keys \x3d wiz.context.getKeys_(element);\n  keys.push(String(key));\n  wiz.context.setKeys_(element, keys);\n\n  // Store the request so we can fire it once the value is set.\n  var store \x3d element[wiz.context.REQUESTS_];\n  if (!store) {\n    store \x3d element[wiz.context.REQUESTS_] \x3d {};\n  }\n  store[key] \x3d d;\n};\n\n\n/**\n * Gets the list of context keys currently being requested by the node.\n * @param {!Node|!Element} node\n * @return {!Array\x3cstring\x3e}\n * @private\n */\nwiz.context.getKeys_ \x3d function(node) {\n  var context \x3d node.getAttribute(wiz.context.ATTRIBUTE_);\n  return context ? context.split(\x27 \x27) : [];\n};\n\n\n/**\n * Sets the list of context keys currently being requested by the node.\n * @param {!Node|!Element} node\n * @param {!Array\x3cstring\x3e} keys\n * @private\n */\nwiz.context.setKeys_ \x3d function(node, keys) {\n  if (keys.length \x3d\x3d 0) {\n    node.removeAttribute(wiz.context.ATTRIBUTE_);\n  } else {\n    // Concatenate the keys using an empty space so that we can do simple\n    // matching via the [attr~\x3dvalue] selector.\n    node.setAttribute(wiz.context.ATTRIBUTE_, keys.join(\x27 \x27));\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/context.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/model/lifecycle.js";
eval("/**\n * @fileoverview Functions to instantiate models.\n */\ngoog.provide(\x27wiz.lifecycle.ModelNotFoundError\x27);\ngoog.provide(\x27wiz.lifecycle.getModel\x27);\n\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.debug.Error\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Manager\x27);\ngoog.require(\x27wiz.Property\x27);\ngoog.require(\x27wiz.atInterface\x27);\ngoog.require(\x27wiz.dom\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.lookupWizService\x27);\n\n\n\n/**\n * Gets a model of a given type (if specified in the DOM) from the DOM context\n * of an element.\n *\n * If an element has multiple matching models, the last one wins.\n *\n * NOTE: Only use this to access models from goog.ui.Component during migration\n * to wiz.\n * @param {!Element} element Element from which to start looking for a model\n *     going up through the DOM ancestors.\n * @param {!fava.services.ServiceId\x3cT\x3e|function(new: T)} key The key of the\n *     model or a wiz.atInterface interface.\n * @param {!fava.AppContext\x3d} opt_appContext\n * @param {!fava.services.ServiceId\x3d} opt_injectee The key of the model instance\n *     that is injecting this request.  This allows recursive model dependencies\n *     (via interfaces); getModel will skip this model from the original element\n *     only (it can still return a different instance of this model for a parent\n *     element).\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n */\nwiz.lifecycle.getModel \x3d function(element, key, opt_appContext, opt_injectee) {\n  /** @type {?Element} */\n  var el \x3d element;\n  var isInterfaceInjection \x3d typeof key \x3d\x3d \x27function\x27;\n  var modelInterface \x3d isInterfaceInjection ?\n      wiz.atInterface.get(key) : null;\n  var keyString \x3d \x27\x27 + key;\n  do {\n    var attr \x3d el.getAttribute(wiz.Attribute.MODEL);\n    if (!attr) {\n      continue;\n    }\n    var names \x3d goog.string.trim(attr)\n        .split(wiz.lifecycle.getModel.SPLIT_MODEL_NAMES_);\n    // We are going right to left because the right most model has higher\n    // precedence.\n    for (var i \x3d names.length - 1; i \x3e\x3d 0; i--) {\n      var modelName \x3d names[i];\n      var modelId \x3d key;\n      // For non-interface Injections the strings must be the same.\n      if (!isInterfaceInjection \x26\x26 modelName !\x3d keyString) {\n        continue;\n      } else if (isInterfaceInjection) {\n        // Check whether the model\n        modelId \x3d wiz.lookupWizService(modelName);\n        if (!modelInterface.isImplementedBy(modelId)) {\n          continue;\n        }\n      }\n      if (modelId \x3d\x3d opt_injectee \x26\x26 el \x3d\x3d element) {\n        // Don\x27t return the requesting model from its own element.\n        continue;\n      }\n      if (el[wiz.Property.MODEL] \x26\x26 el[wiz.Property.MODEL][modelName]) {\n        return el[wiz.Property.MODEL][modelName];\n      }\n      var internalDeferred \x3d wiz.inject.Injector.getInstance()\n          .getCtor(modelId);\n      if (!el[wiz.Property.MODEL]) {\n        el[wiz.Property.MODEL] \x3d {};\n      }\n      // This Deferred object can be observed inside the model initializer. We\n      // must therefore make sure that it already exists \x26 will resolve to the\n      // model instance (not an intermediary state). Therefore, we need to use\n      // a separate Deferred instance so that other code won\x27t see the ctor.\n      var publicDeferred \x3d el[wiz.Property.MODEL][modelName] \x3d\n          new goog.async.Deferred()\n              .addCallback(goog.functions.constant(internalDeferred));\n\n      var makeModel \x3d function(ctor) {\n        return ctor.create(modelId, el, opt_appContext);\n      };\n      if (goog.DEBUG) {\n        makeModel.displayName \x3d \x27# Model: \x27 + modelId;\n      }\n      internalDeferred.addCallback(makeModel);\n\n      // Once the our internal Deferred has callbacks to resolve to the actual\n      // model, we can resolve the exposed Deferred.  It will now only see the\n      // final value of the internal Deferred, fully solving http://b/30562616\n      publicDeferred.callback();\n      wiz.Manager.getManager(el).notifyElement(el);\n      return publicDeferred;\n    }\n  } while (el \x3d wiz.dom.getParentElement(el));\n\n  return goog.async.Deferred.fail(new wiz.lifecycle.ModelNotFoundError(key));\n};\n\n\n/**\n * Error raised when there\x27s no valid model annotated in the dom.\n * @param {!fava.services.ServiceId|function()} key\n * @public @constructor\n * @extends {goog.debug.Error}\n */\nwiz.lifecycle.ModelNotFoundError \x3d function(key) {\n  wiz.lifecycle.ModelNotFoundError.base(this, \x27constructor\x27,\n      \x27No valid model for \x27 + key +\n      (goog.DEBUG ?\n          \x27. More information http://go/wiz-errors#not-found-in-dom-scope\x27 :\n          \x27\x27));\n\n  /** @public @const {!fava.services.ServiceId|function()} */\n  this.key \x3d key;\n};\ngoog.inherits(wiz.lifecycle.ModelNotFoundError, goog.debug.Error);\n\n\n/** @private @const {!RegExp} Pattern for splitting model names. */\nwiz.lifecycle.getModel.SPLIT_MODEL_NAMES_ \x3d /;\\s*|\\s+/;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/model/lifecycle.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/model/baseresponse.js";
goog.loadModule("/**\n * @fileoverview Type for response object of Wiz class\n */\ngoog.module(\x27wiz.ModelBaseResponse\x27);\ngoog.module.declareLegacyNamespace();\n\n\n/** @record */\nexports \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!Deferred} */ this.deferred;\n  }\n};\n\n\n/** @record */\nclass Deferred{\n  constructor() {\n    /** @type {!Element} */ this.element;\n  }\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/model/baseresponse.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/model/modelbase.js";
eval("/**\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.Model\x27);\ngoog.provide(\x27wiz.ModelSource\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27wiz.ModelBaseResponse\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.async.Response\x27);\ngoog.require(\x27wiz.async.Source\x27);\ngoog.require(\x27wiz.atInterface\x27);\ngoog.require(\x27wiz.common.FrameworkRestricted\x27);\ngoog.require(\x27wiz.context\x27);\ngoog.require(\x27wiz.jsaction\x27);\ngoog.require(\x27wiz.lifecycle.ModelNotFoundError\x27);\ngoog.require(\x27wiz.lifecycle.getModel\x27);\n\n// TODO(mknichel): Move wiz.model.Context to a separate file to remove the\n// circular dependency between this file and model.js\ngoog.forwardDeclare(\x27wiz.model.Context\x27);\n\n/** @interface @extends {wiz.async.Source}*/\nwiz.ModelSource \x3d function() {};\n\n\n/**\n * Returns the element that this model is associated with. This method must\n * only be called by other classes inside Wiz and those should not expose the\n * element to user code, since we don\x27t want people to write DOM code inside\n * models.\n * @param {!wiz.common.FrameworkRestricted} restricted\n * @return {!Element}\n */\nwiz.ModelSource.prototype.getRootElementRestricted;\n\n\n/**\n * Sets a function that should handle updates for data of the given kind\n * for this model.\n * @param {!xid.String} messageXid\n * @param {function(!jspb.Message, !wiz.event.EventType)} handler\n */\nwiz.ModelSource.prototype.setDataUpdateHandler;\n\n\n\n/**\n * Base WizModel implementation from which all model should extend.\n * Provides shared context, state, and data to all controllers within the\n * DOM tree rooted at the element passed to this model.\n * @param {!fava.services.ServiceId|!wiz.ModelBaseResponse} keyOrDeps\n * @param {!Element\x3d} opt_element Root node to which the model is attached.\n * @param {!fava.AppContext\x3d} opt_appContext\n * @constructor @struct\n * @extends {wiz.Object}\n * @implements {wiz.async.Source}\n * @implements {wiz.ModelSource}\n */\nwiz.Model \x3d function(keyOrDeps, opt_element, opt_appContext) {\n  /** @type {!wiz.ObjectBaseResponse} */\n  var superResponse \x3d keyOrDeps.super_response ||\n      {deferred: {key: keyOrDeps, appContext: opt_appContext}};\n  wiz.Model.base(this, \x27constructor\x27, superResponse);\n\n  /** @const @private {!Element} */\n  this.element_ \x3d opt_element || keyOrDeps.deferred.element;\n\n  /** @private {?wiz.Query.One} */\n  this.root_ \x3d null;\n\n  /**\n   * @private {\n   *     ?Object\x3c!xid.String,function(!jspb.Message, !wiz.event.EventType)\x3e}\n   */\n  this.dataUpdateHandlers_ \x3d null;\n\n  if (goog.DEBUG \x26\x26 !this.element_.id) {\n    this.element_.id \x3d String(this);\n  }\n};\ngoog.inherits(wiz.Model, wiz.Object);\n\n/**\n * @return {!wiz.async.Request}\n * @nocollapse\n */\nwiz.Model.deps \x3d function() {\n  return {\n    deferred: {\n      /**\n       * @this {!wiz.ModelSource}\n       * @return {!goog.async.Deferred\x3c!Element\x3e}\n       */\n      element: function() {\n        return goog.async.Deferred.succeed(this.getRootElementRestricted(\n            wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK));\n      }\n    }\n  };\n};\n\n\n/**\n * @return {string} Model name.\n * @override\n */\nwiz.Model.prototype.toString \x3d function() {\n  // If in debug mode, make it very easy to find the controller instance\n  // in the DOM by assigning an id if it is not present.\n  return this.getObjectKey() + \x27[\x27 + goog.getUid(this.element_) + \x27]\x27;\n};\n\n\n/** @override */\nwiz.Model.prototype.getContext \x3d function(key) {\n  return wiz.context.get(this.element_, key);\n};\n\n\n/**\n * Gets the data passed in via {@code data-} attributes from the model\n * for the specified key.\n * @param {string} key Key for the data value.\n * @return {!wiz.Query.Data} Value of the data.\n * @override\n */\nwiz.Model.prototype.getData \x3d function(key) {\n  if (!this.root_) {\n    this.root_ \x3d new wiz.Query.One(this.element_);\n  }\n  return this.root_.getData(key);\n};\n\n\n/**\n * @return {string} A unique id for this model instance.\n */\nwiz.Model.prototype.getId \x3d function() {\n  return this.element_.id || String(goog.getUid(this.element_));\n};\n\n\n/**\n * Sends the passed in event to all controllers in the scope of the model.\n * @param {!wiz.event.EventType\x3cT\x3e} eventType\n * @param {T\x3d} opt_data Optional data for the event.\n * @protected\n * @template T\n */\nwiz.Model.prototype.notify \x3d function(eventType, opt_data) {\n  wiz.jsaction.broadcast(this.element_, eventType, opt_data, this);\n};\n\n\n/** @override */\nwiz.Model.prototype.getRootElementRestricted \x3d function(restricted) {\n  return this.element_;\n};\n\n\n/**\n * Returns the nearest model of the given type.\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n */\nwiz.Model.prototype.getModel \x3d function(key) {\n  return wiz.lifecycle\n      .getModel(\n          this.element_, key, this.getOptionalAppContext(), this.getObjectKey())\n      .addErrback(e \x3d\x3e {\n        if (e instanceof wiz.lifecycle.ModelNotFoundError) {\n          e.message +\x3d \x27 requested by \x27 + this;\n        }\n        return e;\n      });\n};\n\n\n/** @override */\nwiz.Model.prototype.setDataUpdateHandler \x3d function(messageXid, handler) {\n  if (!this.dataUpdateHandlers_) {\n    this.dataUpdateHandlers_ \x3d {};\n  }\n  goog.asserts.assert(!this.dataUpdateHandlers_[messageXid],\n      \x27Update handler for \x3c\x27 + messageXid + \x27\x3e in \x3c\x27 + this +\n      \x27\x3e already specified.\x27);\n  this.dataUpdateHandlers_[messageXid] \x3d handler;\n};\n\n\n/**\n * Returns a function that should handle updates for data of the given kind\n * for this model.\n * @param {!xid.String} messageXid\n * @return {function(!jspb.Message, !wiz.event.EventType)|undefined}\n */\nwiz.Model.prototype.getDataUpdateHandler \x3d function(messageXid) {\n  if (!this.dataUpdateHandlers_) {\n    return undefined;\n  }\n  return this.dataUpdateHandlers_[messageXid];\n};\n\n\n/**\n * Allows adding listeners for jsactions programmatically. This mostly works\n * like `goog.events.listen`. An important distinction is that you do\n * not need to unlisten events to avoid memory leaks, so feel free to\n * ignore the return value. This method is intended for the following uses:\n * - If a model needs to listen to events from a model on which it depends to\n *   potentially fire its own events.\n * - When transitioning from legacy code. Eg. Porting a Closure-based UI\n *   component to listen to events from a Wiz model to prepare for wizzifying\n *   the component.\n * In particular, it is not intended to be used to circumvent the bubbling\n * semantics of Wiz notifications.\n * @param {!wiz.event.EventType\x3cDATA,OPT_SOURCE\x3e} eventType wiz.event.\n * @param {\n *     function(this:THIS,!wiz.Event\x3cDATA,OPT_SOURCE\x3e): (boolean|undefined)}\n *     callback Callback function that can return true to allow the event to\n *     bubble.\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback. IMPORTANT: There is no need to unlisten\n *     in the dispose phase. Only memorize the return value if your app\n *     needs to unlisten before the DOM node that the listener is attached\n *     to is removed to the DOM.\n * @template DATA,OPT_SOURCE,THIS\n */\nwiz.Model.prototype.listen \x3d function(eventType, callback, opt_context) {\n  return wiz.jsaction.listen(this.element_, eventType, callback, opt_context);\n};\n\n\n/**\n * Adds a jsaction event listener for a specific event. After the event has\n * fired the event listener is removed from the target element.\n * See `wiz.Model#listen` for intended uses.\n *\n * @param {!wiz.event.EventType\x3cDATA,OPT_SOURCE\x3e} eventType wiz.event.\n * @param {function(this:THIS,!wiz.Event\x3cDATA,OPT_SOURCE\x3e)} callback\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback. IMPORTANT: There is no need to unlisten\n *     in the dispose phase. Only memorize the return value if your app\n *     needs to unlisten before the DOM node that the listener is attached\n *     to is removed to the DOM.\n * @template DATA,OPT_SOURCE,THIS\n */\nwiz.Model.prototype.listenOnce \x3d function(eventType, callback, opt_context) {\n  return wiz.jsaction.listenOnce(\n      this.element_, eventType, callback, opt_context);\n};\n\n\n// NOTE: Bindings common to both Controllers and Models should go here, since\n// models are more fundamental than Controllers.\nwiz.async.bind({\n  /**\n   * Retrieves the Wiz Model.\n   * @param {!wiz.Controller|!wiz.controller.Context|\n   *      !wiz.Model|!wiz.model.Context} source\n   * @param {function(new:wiz.Model)|!fava.services.ServiceId} keyOrConstructor\n   *     Constructor of the model or its service id or a wiz.atInterface.\n   *     If the key is an interface a model, the first model implementing that\n   *     interface will be retrieved.\n   * @return {!goog.async.Deferred\x3c!wiz.Model\x3e}\n   */\n  model: function(source, keyOrConstructor) {\n    goog.asserts.assert(source.getModel,\n        \x27Models can only be bound by controllers and models\x27);\n    var key;\n    if (goog.isFunction(keyOrConstructor)) {\n      if (wiz.atInterface.isInterface(keyOrConstructor)) {\n        key \x3d keyOrConstructor;\n      } else {\n        var displayName \x3d keyOrConstructor.displayName;\n        goog.asserts.assert(displayName, \x27Model must be named.\x27);\n        key \x3d displayName;\n      }\n    } else {\n      key \x3d keyOrConstructor;\n    }\n    return source.getModel(key);\n  },\n  /**\n   * Retrieves data embedded in the element\x27s DOM via the Soy syntax:\n   *\n   * \x3cdiv jscontroller\x3d\x22foo\x22 data-\x3cNAME\x3e\x3d\x22{embedJspb($dataProto)}\x22\x3e\n   *\n   * Note the above is the only currently-supported syntax -- in particular,\n   * the serialization format is subject to change.\n   *\n   * @param {!wiz.Controller|!wiz.Model} source\n   * @param {{name: string, ctor: function(new: jspb.Message, !Array\x3d)}} key\n   *     Pair of data attribute name and JSPB constructor.\n   * @return {!goog.async.Deferred\x3c!jspb.Message\x3e}\n   */\n  embeddedProto: function(source, key) {\n    // NOTE: Can\x27t assert instanceof Controller since we can\x27t have any hard\n    // deps on Controller here.\n    goog.asserts.assert(source.getData, \x27Must be a Model or Controller\x27);\n    goog.asserts.assertObject(key, \x27Key must be an object\x27);\n    goog.asserts.assertString(key.name, \x27key.name must be a string\x27);\n    goog.asserts.assertFunction(key.ctor, \x27key.ctor must be a constructor\x27);\n    return goog.async.Deferred.succeed(source.getData(key.name)\n        .protoOrDefault(key.ctor, null));\n  }\n});\n\n/** @type {!Object\x3c!wiz.Model\x3e} */\nwiz.async.Response.prototype.model;\n\n\n/** @type {!Object\x3c!jspb.Message\x3e} */\nwiz.async.Response.prototype.embeddedProto;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/model/modelbase.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2y');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2y');

}catch(e){_DumpException(e)}
/* _Module_:sy36 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy36');
var $googDebugFname="javascript/apps/wiz/controller/contextprovider.js";
eval("goog.provide(\x27wiz.ContextProvider\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.async.Source\x27);\n\n\n\n/**\n * Creates objects that can be used as context sources when no DOM is\n * available through which it can be acquired. Getting context is just a lookup\n * on the passed in `contextData` object. If lookup fails it proceeds\n * though the optional parent.\n * @param {!Object\x3d} opt_contextData Key / Value object from which context is\n *     looked up.\n * @param {!wiz.async.Source\x3d} opt_parent An optional parent object from which\n *     to retrieve context if it is not available in `contextData`.\n * @param {function((string|!xid.Reference)):*\x3d} opt_resolver A function that is\n *     called to retrieve a value if not value is found in opt_contextData.\n * @param {!fava.AppContext\x3d} opt_appContext\n *\n * @constructor @struct @final\n * @implements {wiz.async.Source}\n */\nwiz.ContextProvider \x3d function(opt_contextData, opt_parent, opt_resolver,\n    opt_appContext) {\n  /** @const @private {!Object} */\n  this.context_ \x3d opt_contextData || {};\n\n  /** @const @private {?wiz.async.Source} */\n  this.parent_ \x3d opt_parent || null;\n\n  /** @const @private {?(function((string|!xid.Reference)):*)} */\n  this.resolver_ \x3d opt_resolver || null;\n\n  /** @const @private {!fava.AppContext|undefined} */\n  this.appContext_ \x3d opt_appContext ||\n      (opt_parent \x26\x26 opt_parent.getOptionalAppContext());\n};\n\n\n/** @override */\nwiz.ContextProvider.prototype.getContext \x3d function(key) {\n  var val \x3d this.getMyVal_(key);\n  if (val \x3d\x3d null \x26\x26 this.parent_) {\n    return this.parent_.getContext(key);\n  }\n  goog.asserts.assert(val !\x3d null, \x27Missing context key \x3c\x27 + key + \x27\x3e\x27);\n  return goog.async.Deferred.succeed(val);\n};\n\n\n/** @override */\nwiz.ContextProvider.prototype.getAppContext \x3d function() {\n  goog.asserts.assert(this.appContext_, \x27AppContext not provided\x27);\n  return this.appContext_;\n};\n\n\n/**\n * @override\n */\nwiz.ContextProvider.prototype.getOptionalAppContext \x3d function() {\n  return this.appContext_ || undefined;\n};\n\n\n/** @override */\nwiz.ContextProvider.prototype.getData \x3d function(key) {\n  var val \x3d this.getMyVal_(key);\n  if (val \x3d\x3d null \x26\x26 this.parent_) {\n    return this.parent_.getData(key);\n  }\n  goog.asserts.assert(typeof val \x3d\x3d \x27string\x27 || val \x3d\x3d null, \x27Value for \x3c\x27 +\n      key + \x27\x3e not a string.\x27);\n  val \x3d /** @type {?string} */ (val);\n  return new wiz.Query.Data(key, val);\n};\n\n\n/**\n * @param {string|!xid.Reference} key\n * @return {*}\n * @private\n */\nwiz.ContextProvider.prototype.getMyVal_ \x3d function(key) {\n  var val \x3d this.context_[key];\n  if (val \x3d\x3d null \x26\x26 this.resolver_) {\n    return this.resolver_(key);\n  }\n  return val;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/contextprovider.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/renderer/renderers.js";
eval("goog.provide(\x27wiz.renderers\x27);\n\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27wiz.ContextProvider\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\n\ngoog.forwardDeclare(\x27wiz.Renderer\x27);\n\n\n\n/**\n * Get an instance of a renderer.\n * This function should not be used inside a renderer class itself.\n * @param {!fava.services.ServiceId\x3cT\x3e|string|function(new:T, ?, ?, ?, ?)}\n *     idOrConstructor The id or constructor of the renderer.\n * @param {?wiz.async.Source\x3d} opt_contextSource Source for context to the\n *     renderer. {@see wiz.ContextProvider} How to make ad-hoc context.\n * @param {!fava.AppContext\x3d} opt_appContext\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n * @public\n */\nwiz.renderers.getInstance \x3d function(idOrConstructor, opt_contextSource,\n    opt_appContext) {\n  var name \x3d idOrConstructor;\n  if (goog.isFunction(idOrConstructor)) {\n    name \x3d idOrConstructor.displayName;\n  }\n  var d \x3d wiz.inject.Injector.getInstance().getCtor(name);\n  d.addCallback(function(ctor) {\n    return wiz.Object.create(\n        name, ctor,\n        opt_contextSource ||\n            new wiz.ContextProvider(\n                undefined, undefined, undefined, opt_appContext || undefined));\n  });\n  return /** @type {!goog.async.Deferred\x3c!wiz.Renderer\x3e} */ (d);\n};\n\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/renderer/renderers.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy36');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy36');

}catch(e){_DumpException(e)}
/* _Module_:sy37 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy37');
var $googDebugFname="javascript/apps/wiz/service/services.js";
eval("goog.provide(\x27wiz.services\x27);\n\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\n\n\n\n/**\n * Store any requests made for services.  Services are currently singletons\n * so all requests for a specific service should return the same instance.\n * @package {!Object\x3c!fava.services.ServiceId,!goog.async.Deferred\x3e}\n */\nwiz.services.requests \x3d {};\n\n\n/**\n * Get an instance of a service.\n * @param {!fava.services.ServiceId\x3cT\x3e|function(new:T)} key\n * @param {?fava.AppContext\x3d} opt_appContext\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n * @public\n */\nwiz.services.getInstance \x3d function(key, opt_appContext) {\n  const serviceId \x3d wiz.inject.Injector.resolveInterface(key);\n  var ctorD \x3d wiz.services.requests[serviceId];\n  if (!ctorD) {\n    ctorD \x3d wiz.inject.Injector.getInstance().getCtor(serviceId);\n    wiz.services.requests[serviceId] \x3d ctorD;\n  }\n\n  var d \x3d new goog.async.Deferred();\n  var makeService \x3d function(ctor) {\n    var deferredService \x3d ctor.getScopedInstance(\n        serviceId, opt_appContext || undefined);\n    deferredService.addCallbacks(function(service) {\n      d.callback(service);\n    }, function(error) {\n      d.errback(error);\n    });\n  };\n  if (goog.DEBUG) {\n    makeService.displayName \x3d \x27# Service: \x27 + serviceId;\n  }\n  var makeServiceFromInterfaceOrService \x3d function(ctor) {\n    var iface \x3d wiz.inject.Injector.resolveInterface(ctor);\n    if (iface !\x3d ctor) {\n      var newD \x3d wiz.services.getInstance(\n          /** @type {!fava.services.ServiceId} */ (iface), opt_appContext);\n      newD.chainDeferred(d);\n      return;\n    }\n    return makeService(ctor);\n  };\n  ctorD.addCallback(makeServiceFromInterfaceOrService);\n  ctorD.addErrback(function(e) {\n    d.errback(e);\n  });\n  return d;\n};\n\n\n/** @private @const {?goog.log.Logger} */\nwiz.services.logger_ \x3d goog.log.getLogger(\x27wiz.service\x27);\n\n\n/**\n * Resets the wiz.service scope store. Should only be called during testing.\n * @package Use wiz.service.reset instead.\n */\nwiz.services.reset \x3d function() {\n  wiz.services.requests \x3d {};\n};\n\n\n/**\n * IGNORE.\n * Compiler hack to make projects that do include wiz.services but\n * not wiz.service happy.\n * @package\n */\nwiz.services.getScopedInstance \x3d function() {\n  // I am food for DCE.\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/service/services.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/service/service.js";
eval("/**\n * @fileoverview Wizservices provide shared logic and data for a set of\n * controllers within a DOM tree.\n */\ngoog.provide(\x27wiz.service\x27);\ngoog.provide(\x27wiz.service.InitializerFunction\x27);\ngoog.provide(\x27wiz.service.getInstance\x27);\ngoog.provide(\x27wiz.service.init\x27);\ngoog.provide(\x27wiz.service.reset\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.services\x27);\n\n\n\n/**\n * Creates a new constructor for a service.\n * USAGE: (4 Options)\n * Simple:\n * {@code foo.BarService \x3d wiz.service(foo.services.BAR);}\n *\n * By default all services are singletons! If you want to make each service\n * injection create a new instance, call the method \x22oneInstancePerInjection\x22\n * on the service constructor:\n *\n * {@code foo.BarService \x3d\n *     wiz.service(foo.services.BAR);\n *     foo.BarService.oneInstancePerInjection();}\n *\n * With initializer:\n * {@code foo.BarService \x3d wiz.service(foo.services.BAR, function() {\n *   this.foo_ \x3d this.getAppContext().getFoo();\n * });}\n * The initializer may not return a value.  Call \x22this.delayConstructionBy\x22\n * with a promise to delay providing the service until the promise is resolved.\n *\n * With things to get and initializer:\n * {@code\n * foo.BarService \x3d wiz.service(foo.services.BAR, {\n *   service: {\n *     foo: \x27foo\x27\n *   }\n * }, function(get) {\n *   this.initTest_(get.service.foo);\n * });}\n * {@see wiz.async.get} for usage of the second param (object literal).\n *\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {(wiz.service.InitializerFunction|?wiz.async.Request)\x3d}\n *     opt_initializerOrGetParam Custom initializer function for the service\n *     or an object literal as passed to `wiz.async.get`.\n * @param {wiz.service.InitializerFunction\x3d} opt_initializer Custom\n *     initializer function for the service.\n * @return {function(new: T, ...)} Constructor for a service that\n *     inherits from wiz.service.\n * @template T\n */\nwiz.service \x3d function(key, opt_initializerOrGetParam, opt_initializer) {\n  // TODO(26986212): all the other factory methods delegate to\n  // wiz.factoryMethod. wiz.factoryMethod returns a constructor that takes\n  // four parameters, while the constructor returned below\n  // (and the logic in WizPass) has three parameters. So wiz.service\n  // cannot delegate to wiz.factoryMethod without substantial refactoring.\n  goog.asserts.assert(key \x26\x26 typeof key !\x3d\x3d \x27function\x27);\n\n  // NOTE: wiz.service calls are rewritten by the compiler, any changes\n  // here should be refected in the compiler as well.\n  // prefer to make changes in \x22wiz.service.init\x22 instead.\n\n  var getParam;\n  var initializer;\n  if (typeof opt_initializerOrGetParam \x3d\x3d \x27function\x27) {\n    initializer \x3d opt_initializerOrGetParam;\n  } else {\n    getParam \x3d opt_initializerOrGetParam;\n    initializer \x3d opt_initializer;\n  }\n\n  if (goog.DEBUG \x26\x26 initializer) {\n    initializer.displayName \x3d String(key) + \x27.initializer\x27;\n  }\n\n  // The typeof an ES6 class is \x27function\x27. But according to the spec\n  // (http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.tostring),\n  // (class{}).toString() must start with \x27class\x27.\n  // This check does not work in FF because of this bug:\n  // (https://bugzilla.mozilla.org/show_bug.cgi?id\x3d1216630).\n  // Tests with ES6 classes on FF must be transpiled first.\n  var isES6 \x3d initializer \x26\x26 initializer.toString().indexOf(\x27class\x27) \x3d\x3d\x3d 0;\n\n  /**\n   * Wrapper constructor around the service specific initializers.\n   * @param {?} key\n   * @param {!fava.AppContext|undefined} appContext\n   * @param {?} response\n   * @constructor\n   * @extends {wiz.Object}\n   */\n  var Service \x3d function(key, appContext, response) {\n    goog.asserts.assert(\n        key,\n        \x27Invalid instantiation of \x3c\x27 + this.constructor.displayName +\n            \x27\x3e. Wiz Objects should never be instantiated directly. \x27 +\n            \x27Instead use a helper like wiz.service.getInstance or equivalent.\x27 +\n            \x27 In unit tests use .getService (or equivalent) method of the \x27 +\n            \x27wiz.testing.Environment or mock the constructor if appropriate.\x27);\n    // In the general case, there is usually only one argument, but this is\n    // done to keep in compat mode with existing tests.\n    var superClassFirstArg \x3d key.super_response ? key.super_response : key;\n    var initializerArg \x3d key.super_response ? key : response;\n    var super_response \x3d response \x26\x26 response.super_response;\n    // Use the old method of calling the base class constructor because\n    // goog.base will compile away to the wrong base class.\n    Service.superClass_.constructor.call(\n        this, superClassFirstArg, appContext, super_response);\n    if (!isES6) {\n      initializer \x26\x26 initializer.call(this, initializerArg);\n    } else {\n      // If the initializer is an ES6 class, we cannot call its constructor\n      // on a custom receiver as in the other branch. But we can get close\n      // by setting the prototype of its prototype to be this instance.\n      // Property lookups will go up the prototype chain as normal.\n      Object[\x27setPrototypeOf\x27](initializer.prototype, this);\n      var ctor \x3d /** @type {function(new: ?, ...)} */ (initializer);\n      var tmp \x3d new ctor(initializerArg);\n      // Export state of instance back to the Wiz object.\n      // Its methods have already been exported by patchPrototype_.\n      Object.assign(this, tmp);\n    }\n  };\n  goog.inherits(Service, wiz.Object);\n  wiz.service.init(key, getParam, Service);\n  wiz.service.patchPrototype_(/** @type {!Function} */ (initializer), Service);\n  return Service;\n};\n\n\n/**\n * Copy of {@link wiz.patchPrototype_}, which is private.\n *\n * @param {!Function} initializer The initializer.\n * @param {function(new: B, ...)} ctor The Wiz object constructor.\n * @suppress {checkTypes}\n * @private\n * @template B\n */\nwiz.service.patchPrototype_ \x3d function(initializer, ctor) {\n  if (!initializer || !initializer.prototype) {\n    return;\n  }\n  if (\x27getOwnPropertyNames\x27 in Object) {\n    // ES6 methods are nonenumerable, so they don\x27t show up in for..in loops.\n    // Use Object.getOwnPropertyNames instead.\n    Object.getOwnPropertyNames(initializer.prototype)\n        .filter(function(method) { return method !\x3d\x3d \x27constructor\x27; })\n        .forEach(function(method) {\n          ctor.prototype[method] \x3d initializer.prototype[method];\n        });\n  } else {\n    for (var method in initializer.prototype) {\n      ctor.prototype[method] \x3d initializer.prototype[method];\n    }\n  }\n};\n\n\n// TODO(johnlenz): remove this stub once the compiler changes are complete\n// and available everywhere.\n\n/** @type {!Function} */\nFunction.prototype.oneInstancePerInjection;\n\n\n/**\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {?wiz.async.Request|undefined} getParam\n *     an object literal as passed to `wiz.async.get`.\n * @param {function(new: T, ...)} service for a service\n * @template T\n * @public\n */\nwiz.service.init \x3d function(key, getParam, service) {\n  wiz.Object.addCommonCtorProps(service);\n  service.displayName \x3d key;\n  wiz.inject.Injector.getInstance().register(key, service);\n\n  /**\n   * @return {!wiz.async.Request} response\n   * @nocollapse\n   */\n  service.deps \x3d service.deps || goog.functions.constant(getParam || {});\n\n  /**\n   * Call this on the service constructor to change the injection behavior\n   * to creating a new instance of the service on every injection as opposed\n   * to the default singleton behavior.\n   *\n   * Usage:\n   * var FooService \x3d wiz.service(\u2026);\n   * FooService.oneInstancePerInjection();\n   *\n   * @this {function(new: T, ...)}\n   * @return {function(new: T, ...)}\n   * @template T\n   */\n  service.oneInstancePerInjection \x3d wiz.service.withNoScope_;\n\n\n  /**\n   * Returns an instance of this service. Override for different scopes.\n   * @param {!fava.services.ServiceId} key Service key for the model.\n   * @param {!fava.AppContext\x3d} opt_appContext\n   * @this {function(new: T, ...)}\n   * @return {!goog.async.Deferred\x3cT\x3e}\n   * @template T\n   */\n  service.getScopedInstance \x3d function(key, opt_appContext) {\n    key \x3d wiz.inject.Injector.resolveInterface(key);\n    var instance \x3d wiz.service.instances_[key];\n    if (instance) {\n      return instance;\n    }\n\n    /*\n     * Create a new Deferred to as a temporary placeholder. Since deferreds\n     * can resolve synchronously, performing a wiz.async.get while a service is\n     * being constructed could cause the service to get instantiated while\n     * already trying to instantiate it without this temporary Deferred. This\n     * results in an orphan wiz service instance that is only used by one\n     * injector.\n     */\n    var d \x3d wiz.service.instances_[key] \x3d new goog.async.Deferred();\n    wiz.service.getNoScopeInstance_.call(service, key, opt_appContext)\n        .addCallbacks(d.callback, d.errback, d);\n    return d;\n  };\n};\n\n/**\n * Type of the function passed to `wiz.service` as initializer.\n * The `wiz.async.Response` param is available if the function was\n * called with a `wiz.async.Request`.\n * If the function returns a deferred, the dispatcher will hold instantiating\n * the service until the deferred is resolved.\n * @typedef {function(this:wiz.Object, !wiz.async.Response):undefined}\n */\nwiz.service.InitializerFunction;\n\n\n/**\n * Get an instance of a service.\n * @param {!fava.services.ServiceId\x3cT\x3e|function(new:T)} key\n * @param {!fava.AppContext\x3d} opt_appContext\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n */\nwiz.service.getInstance \x3d function(key, opt_appContext) {\n  return wiz.services.getInstance(key, opt_appContext);\n};\n\n\n/** @private @const {?goog.log.Logger} */\nwiz.service.logger_ \x3d goog.log.getLogger(\x27wiz.service\x27);\n\n\n/**\n * Marks a service constructor to have no scope, so that upon every injection\n * a new instance is created.\n * @this {function(new: T, ...)}\n * @return {function(new: T, ...)}\n * @template T\n * @private\n */\nwiz.service.withNoScope_ \x3d function() {\n  this.getScopedInstance \x3d wiz.service.getNoScopeInstance_;\n  return this;\n};\n\n\n/**\n * Holds instances of Singleton Wiz services.\n * @private {!Object\x3c!fava.services.ServiceId, !goog.async.Deferred\x3c!wiz.Object\x3e\x3e}\n */\nwiz.service.instances_ \x3d {};\n\n\n/**\n * Return a new service instance on every invocation.\n * @param {!fava.services.ServiceId} key Service key for the model.\n * @param {!fava.AppContext\x3d} opt_appContext\n * @this {!Function}\n * @return {!goog.async.Deferred\x3c!wiz.Object\x3e}\n * @private\n */\nwiz.service.getNoScopeInstance_ \x3d function(key, opt_appContext) {\n  var context \x3d new wiz.Object.Context(key, opt_appContext, this);\n  return wiz.Object.create(key, this, context);\n};\n\n\n/**\n * Resets the wiz.service scope store. Should only be called during testing.\n */\nwiz.service.reset \x3d function() {\n  wiz.services.reset();\n  wiz.service.instances_ \x3d {};\n};\n\nwiz.async.bindBatch({\n  /**\n   * Retrieves Wiz services.\n   * @param {!wiz.async.Source} source\n   * @param {!wiz.async.RetrievableMap} aliasToServiceKey The complete\n   *     map of services\n   * @return {!Object\x3cstring,!goog.async.Deferred|!goog.Promise\x3e}\n   */\n  service: function(source, aliasToServiceKey) {\n    var serviceKeys \x3d goog.object.getValues(aliasToServiceKey);\n    // Start a batched request for all of the services. Ignore the return\n    // value since we\x27ll extract the deferred for each service below\n    wiz.inject.Injector.getInstance().getAsync(serviceKeys);\n    return goog.object.map(aliasToServiceKey, function(serviceKey, alias) {\n      // Get the deferred for the service request, this will not initiate a\n      // new request\n      var serviceId \x3d wiz.inject.Injector.resolveInterface(\n          /** @type {!fava.services.ServiceId} */ (serviceKey));\n      return wiz.service.getInstance(\n          /** @type {!fava.services.ServiceId\x3c?\x3e} */ (serviceId),\n          source.getOptionalAppContext());\n    });\n  }\n});\n\n\nif (goog.DEBUG) {\n  wiz.async.bindBatch({\n\n    /**\n     * Prevent frequent typo\n     * @return {!goog.Promise}\n     */\n    services: function() {\n      throw new Error(\x27There is no \x22services\x22 binding. \x27 +\n          \x27Did you mean \x22service\x22?\x27);\n    }\n  });\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/service/service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy37');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy37');

}catch(e){_DumpException(e)}
/* _Module_:sy2x */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy2x');
var $googDebugFname="javascript/apps/wiz/controller/baseresponse.js";
goog.loadModule("/**\n * @fileoverview Type for response object of Wiz class\n */\ngoog.module(\x27wiz.ControllerBaseResponse\x27);\ngoog.module.declareLegacyNamespace();\n\n\n/** @record */\nexports \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!Deferred} */ this.deferred;\n  }\n};\n\n\n/** @record */\nclass Deferred {\n  constructor() {\n    /** @type {?wiz.Dispatcher} */ this.dispatcher;\n    /** @type {!wiz.Query} */ this.element;\n  }\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/baseresponse.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/controller/controllers.js";
eval("/**\n * @fileoverview Functions related to controllers.\n */\ngoog.provide(\x27wiz.controllers\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.jsaction.util\x27);\n\n\n/**\n * Gets the closest controller root for the specified element.\n * @param {!Element} element Element in a controller DOM tree.\n * @param {boolean} includeElement Whether to include the element in the\n *     search.\n * @return {?Element} Controller root element.\n */\nwiz.controllers.getControllerRoot \x3d wiz.jsaction.util.getControllerRoot;\n\n\n/**\n * Find descendant elements with the specified jsname, scoping the jsname to the\n * specified owner element (which must contain a controller).\n * Owned elements are not searched (unlike getElementsInControllerScope).\n * @param {!Element} ownerEl the element with the owning controller.\n * @param {!Element} container start point of the search.\n * @param {string} name jsname to search for.\n * @return {!Array\x3c!Element\x3e} All descendant elements matching the name.\n */\nwiz.controllers.findElementByJsName \x3d function(ownerEl, container, name) {\n  goog.asserts.assert(ownerEl.hasAttribute(wiz.Attribute.CONTROLLER),\n      \x27ownerEl must contain a jscontroller to scope jsnames.\x27);\n  // Query on the selector {@code [jsname\x3d...]}.\n  var selector \x3d \x27[\x27 + wiz.Attribute.NAME + \x27\x3d\x22\x27 + name + \x27\x22]\x27;\n  var elements \x3d container.querySelectorAll(selector);\n\n  // Check to make sure the element is not a descendent of a subcontroller.\n  var matched \x3d [];\n  for (var i \x3d 0; i \x3c elements.length; i++) {\n    var controllerRoot \x3d wiz.controllers.getControllerRoot(elements[i],\n        /* includeElement */ false);\n    if (controllerRoot \x3d\x3d ownerEl) {\n      matched.push(elements[i]);\n    }\n  }\n\n  return matched;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/controllers.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/controller/controllerbase.js";
eval("/**\n * @fileoverview Base controller implementation from which all other\n * WizControllers extend.\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.Controller\x27);\n\ngoog.require(\x27goog.Disposable\x27);\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.Timer\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.DeferredList\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.EventHandler\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.ControllerBaseResponse\x27);\n\n\n\n/**\n * @suppress {extraRequire} Required to get the wiz.async.bind\n *     for models. Also Controllers really do want to have a model, so this\n *     should cost very little in practice.\n */\ngoog.require(\x27wiz.Model\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.Property\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.async.Response\x27);\ngoog.require(\x27wiz.async.Source\x27);\ngoog.require(\x27wiz.context\x27);\ngoog.require(\x27wiz.controllers\x27);\ngoog.require(\x27wiz.dom\x27);\ngoog.require(\x27wiz.jsaction\x27);\ngoog.require(\x27wiz.jsaction.ActionHandler\x27);\ngoog.require(\x27wiz.lifecycle.ModelNotFoundError\x27);\ngoog.require(\x27wiz.lifecycle.getModel\x27);\ngoog.require(\x27wiz.renderers\x27);\n/**\n * @suppress {extraRequire} Bring in service binding.\n */\ngoog.require(\x27wiz.service\x27);\ngoog.require(\x27xid\x27);\n\n\ngoog.forwardDeclare(\x27wiz.Renderer\x27);\ngoog.forwardDeclare(\x27wiz.controller.Context\x27);\n\n\n/**\n * Base controller implementation from which all controllers should extend.\n * Provides standardized functionality for accessing data and elements related\n * to the controller.\n * @param {!fava.services.ServiceId|!wiz.ControllerBaseResponse} keyOrDeps\n * @param {!Element\x3d} opt_element Root node to which the controller is attached.\n * @param {!wiz.Dispatcher\x3d} opt_dispatcher The dispatcher that is instantiating\n *     this controller.\n * @constructor @struct\n * @extends {wiz.Object} Controllers are disposable, but you do not have\n *     to worry about ever disposing them yourself. The framework will call\n *     dispose eventually for you (At an arbitrary point in time after the\n *     controller was removed from the DOM). ALSO: None of the built-in\n *     controller mechanisms for DOM access and event listening require\n *     disposing. Use this exclusively for holding on to objects that\n *     explicitly require to be disposed.\n * @implements {wiz.async.Source}\n * @implements {wiz.jsaction.ActionHandler}\n */\nwiz.Controller \x3d function(keyOrDeps, opt_element, opt_dispatcher) {\n  /** @type {!wiz.ObjectBaseResponse} */\n  var superResponse \x3d keyOrDeps.super_response || {\n    // TODO(b/36371805) Remove fallback after tests are resolved.\n    deferred: {\n      key: keyOrDeps,\n      appContext: opt_dispatcher \x26\x26 opt_dispatcher.getAppContext()\n    }\n  };\n  wiz.Controller.base(this, \x27constructor\x27, superResponse);\n\n  /**\n   * @private {!Element}\n   * @const\n   */\n  this.element_ \x3d\n      goog.asserts.assert(opt_element || keyOrDeps.deferred.element.el());\n\n  /**\n   * @private {!wiz.Dispatcher}\n   * @const\n   */\n  this.dispatcher_ \x3d\n      goog.asserts.assert(opt_dispatcher || keyOrDeps.deferred.dispatcher);\n\n  /**\n   * @private {!wiz.Controller.Cache}\n   * @const\n   */\n  this.cache_ \x3d new wiz.Controller.Cache();\n\n  if (goog.DEBUG \x26\x26 !this.element_.id) {\n    this.element_.id \x3d String(this);\n  }\n\n  /**\n   * Use by {@see wiz.vsync.method} to store vsync tasks per instance.\n   * @private {?Object\x3cfunction(this:wiz.Controller, !wiz.Event)\x3e}\n   */\n  this.vsyncTaskStorage_ \x3d null;\n};\ngoog.inherits(wiz.Controller, wiz.Object);\n\n\n/**\n * @return {!wiz.async.Request}\n * @nocollapse\n */\nwiz.Controller.deps \x3d function() {\n  return {\n    deferred: {\n      /**\n       * @this {!wiz.controller.Context}\n       * @return {!goog.async.Deferred\x3c!wiz.Dispatcher\x3e}\n       */\n      dispatcher: function() {\n        return goog.async.Deferred.succeed(this.getDispatcher());\n      },\n      /**\n       * @this {!wiz.controller.Context}\n       * @return {!goog.async.Deferred\x3c!wiz.Query\x3e}\n       */\n      element: function() {\n        return goog.async.Deferred.succeed(this.getRoot());\n      }\n    }\n  };\n};\n\n\n/**\n * @return {string} Controller name.\n * @override\n */\nwiz.Controller.prototype.toString \x3d function() {\n  // If in debug mode, make it very easy to find the controller instance\n  // in the DOM by assigning an id if it is not present.\n  return this.getObjectKey() + \x27[\x27 + goog.getUid(this.element_) + \x27]\x27;\n};\n\n\n/**\n * Stores per controller actions. This property needs to be overridden for\n * subclassing in the `wiz.controller` function.\n * The property is \x22static\x22. All instances share the same object.\n * There is exactly one default action installed for every controller\n * called \x22wakeup\x22. Bind this if all you want is to trigger instantiating\n * a controller.\n * @type {!Object\x3cstring,!Function\x3e|undefined}\n */\nwiz.Controller.prototype.wizaction;\n\n\n/** @override @final */\nwiz.Controller.prototype.getAppContext \x3d function() {\n  return this.dispatcher_.getAppContext();\n};\n\n\n/** @override @final */\nwiz.Controller.prototype.getOptionalAppContext \x3d function() {\n  return this.dispatcher_.getOptionalAppContext();\n};\n\n\n/**\n * Gets the document object for the element attached to the controller.\n * @return {!Document} Document object for the attached element.\n * @final\n */\nwiz.Controller.prototype.getOwnerDocument \x3d function() {\n  return goog.dom.getOwnerDocument(this.element_);\n};\n\n\n/**\n * Gets the global window object for the element attached to the controller.\n * @return {!Window} Window object for the attached element.\n * @final\n */\nwiz.Controller.prototype.getWindow \x3d function() {\n  return goog.dom.getWindow(this.getOwnerDocument());\n};\n\n\n/**\n * Waits for descendent elements with the specified jsname which are owned by a\n * controller on the given element.\n * @param {!Element|!wiz.Query} root element that the owning controller is\n *     attached to.\n * @param {string} name jsname of the elements.\n * @return {!goog.Promise\x3c!wiz.Query\x3e} A promise of a wiz.Query object with the\n *     elements matching the name.\n * @private\n */\nwiz.Controller.waitForElementsInControllerScope_ \x3d function(root, name) {\n  var rootEl \x3d /** @type {!Element} */ (\n      root instanceof wiz.Query.One ? root.el() : root);\n  var document \x3d goog.dom.getOwnerDocument(rootEl);\n  return new goog.Promise(function(resolve, reject) {\n    (function findViewportElem() {\n      var elements \x3d wiz.Controller.getElementsInControllerScope(root, name);\n      if (elements.size() \x3e 0 || document.readyState \x3d\x3d \x27complete\x27) {\n        resolve(elements);\n      } else {\n        goog.Timer.callOnce(findViewportElem, 50);\n      }\n    })();\n  });\n};\n\n\n/**\n * Waits for the descendent elements of the controller with the specified\n * jsname.\n * @param {string} name jsname of the elements.\n * @return {!goog.Promise\x3c!wiz.Query\x3e} wiz.Query promise with the elements\n * matching the name.\n * @final\n */\nwiz.Controller.prototype.waitForElements \x3d function(name) {\n  return wiz.Controller.waitForElementsInControllerScope_(this.element_, name);\n};\n\n/**\n * Gets the descendent element of the controller with the specified jsname.\n * Throws an exception if no element is found. If it is OK to find 0 elements,\n * use the getElements method.\n * @param {string} name jsname of the element.\n * @return {!goog.Promise\x3c!wiz.Query.One\x3e} wiz.Query promise with the element\n * matching the name.\n * @final\n */\nwiz.Controller.prototype.waitForElement \x3d function(name) {\n  return this.waitForElements(name).then(elements \x3d\x3e {\n    if (elements.size() \x3e 0) {\n      return elements.eq(0);\n    }\n    var errorMsg;\n    if (goog.DEBUG) {\n      // Search the global DOM to see if the element is in the wrong subtree\n      var selector \x3d `[${wiz.Attribute.NAME}\x3d${name}]`;\n      if (this.element_.querySelectorAll(selector).length \x3e\x3d 1) {\n        errorMsg \x3d `Element with jsname \x3c${name}\x3e is not in the scope of ` +\n            `controller \x3c${this}\x3e.`;\n      } else {\n        errorMsg \x3d\n            `Missing element with jsname \x3c${name}\x3e. Controller \x3c${this}\x3e.`;\n      }\n      errorMsg +\x3d \x27 More information can be found in \x27 +\n          \x27http://go/wiz-errors#not-found-in-dom-scope\x27;\n    } else {\n      errorMsg \x3d `Missing element with jsname \x3c${name}\x3e. Controller \x3c${this}\x3e.`;\n    }\n    throw new Error(errorMsg);\n  });\n};\n\n/**\n * Gets the descendent elements of the controller with the specified jsname.\n * @param {string} name jsname of the elements.\n * @return {!wiz.Query} wiz.Query object with the elements matching the name.\n * @final\n */\nwiz.Controller.prototype.getElements \x3d function(name) {\n  return wiz.Controller.getElementsInControllerScope(this.element_, name);\n};\n\n\n/**\n * Gets descendent elements with the specified jsname which are owned by a\n * controller on the given element. This allows a search for owned elements\n * without having a controller instance.\n * @param {!Element|!wiz.Query} root element that the owning controller is\n *     attached to.\n * @param {string} name jsname of the elements.\n * @return {!wiz.Query} wiz.Query object with the elements matching the name.\n */\nwiz.Controller.getElementsInControllerScope \x3d function(root, name) {\n  xid.assertXidLikeString(name);\n  var el \x3d wiz.Query.el(root);\n\n  var matched \x3d [];\n  matched.push.apply(matched,\n      wiz.controllers.findElementByJsName(el, el, name));\n\n  // Get the owned elements that match the corresponding jsname.\n  var owned \x3d el[wiz.Property.OWNED];\n  if (owned) {\n    for (var i \x3d 0; i \x3c owned.length; i++) {\n      if (owned[i].getAttribute(wiz.Attribute.NAME) \x3d\x3d name) {\n        matched.push(owned[i]);\n      }\n      matched.push.apply(matched,\n          wiz.controllers.findElementByJsName(el, owned[i], name));\n    }\n  }\n\n  return new wiz.Query(matched);\n};\n\n\n/**\n * Gets the descendent element of the controller with the specified jsname.\n * Throws an exception if no element is found. If it is OK to find 0 elements,\n * use the getElements method.\n * @param {string} name jsname of the element.\n * @return {!wiz.Query.One} wiz.Query object with the element matching the name.\n * @final\n */\nwiz.Controller.prototype.getElement \x3d function(name) {\n  var elements \x3d this.getElements(name);\n  if (elements.size() \x3e\x3d 1) {\n    return elements.eq(0);\n  }\n  var errorMsg;\n  if (goog.DEBUG) {\n    // Search the global DOM to see if the element is in the wrong subtree\n    var selector \x3d \x27[\x27 + wiz.Attribute.NAME + \x27\x3d\x22\x27 + name + \x27\x22]\x27;\n    elements \x3d this.element_.querySelectorAll(selector);\n    if (elements.length \x3e\x3d 1) {\n      errorMsg \x3d \x27Element with jsname \x3c\x27 + name + \x27\x3e is not in the scope \x27 +\n          \x27of controller \x3c\x27 + this + \x27\x3e.\x27;\n    } else {\n      errorMsg \x3d \x27Missing element with jsname \x3c\x27 + name + \x27\x3e. Controller \x3c\x27 +\n          this + \x27\x3e.\x27;\n    }\n    errorMsg +\x3d \x27 More information can be found in \x27 +\n        \x27http://go/wiz-errors#not-found-in-dom-scope\x27;\n  } else {\n    errorMsg \x3d \x27Missing element with jsname \x3c\x27 + name + \x27\x3e. Controller \x3c\x27 +\n        this + \x27\x3e.\x27;\n  }\n  throw new Error(errorMsg);\n};\n\n/**\n * Gets the root element of the controller.\n * @return {!wiz.Query.One} wiz.Query object for the root element of the\n *     controller.\n * @final\n */\nwiz.Controller.prototype.getRoot \x3d function() {\n  if (this.cache_.root) {\n    return this.cache_.root;\n  }\n  return this.cache_.root \x3d new wiz.Query.One(this.element_);\n};\n\n\n/**\n * Gets the data passed in via {@code data-} attributes from the controller\n * for the specified key.\n * @param {string} key Key for the data value.\n * @return {!wiz.Query.Data} Value of the data.\n * @override\n * @final\n */\nwiz.Controller.prototype.getData \x3d function(key) {\n  return this.getRoot().getData(key);\n};\n\n\n/** @override @final */\nwiz.Controller.prototype.getContext \x3d function(key) {\n  return wiz.context.get(this.element_, key);\n};\n\n\n/**\n * Returns the nearest model of the given type.\n * @param {!fava.services.ServiceId\x3cT\x3e|function(new: T)} key\n * @return {!goog.async.Deferred\x3cT\x3e}\n * @template T\n * @final\n */\nwiz.Controller.prototype.getModel \x3d function(key) {\n  return wiz.lifecycle\n      .getModel(this.element_, key, this.getOptionalAppContext())\n      .addErrback(e \x3d\x3e {\n        if (e instanceof wiz.lifecycle.ModelNotFoundError) {\n          e.message +\x3d \x27 requested by \x27 + this;\n        }\n        return e;\n      });\n};\n\n\n/**\n * Return the controller for a given named element. Optionally takes in a\n * callback to fire immediately after the controller is retrieved.\n * @param {string|!Element} elementOrName JsName or the DOM element of the\n *     controller element.\n * @param {(function(!wiz.Controller):undefined)\x3d} opt_callback\n * @return {!goog.async.Deferred\x3c!wiz.Controller\x3e} Deferred controller result.\n * @final\n */\nwiz.Controller.prototype.getController \x3d function(elementOrName, opt_callback) {\n  if (elementOrName.tagName) {\n    var d \x3d this.dispatcher_.getController(/** @type {!Element} */ (\n        elementOrName));\n    if (opt_callback) {\n      d.addCallback(opt_callback);\n    }\n    return d;\n  }\n  goog.asserts.assertString(elementOrName);\n\n  return this.getControllers(elementOrName)\n      .addCallback(function(controllers) {\n        if (controllers.length \x3d\x3d 0) {\n          throw new Error(\n              \x27Missing element with jsname \x3c\x27 + elementOrName +\n              \x27\x3e. Controller \x3c\x27 + this + \x27\x3e\x27 +\n              (goog.DEBUG ?\n                  \x27. More information \x27 +\n                  \x27http://go/wiz-errors#not-found-in-dom-scope\x27 :\n                  \x27\x27));\n        }\n        if (opt_callback) {\n          opt_callback(controllers[0]);\n        }\n        return controllers[0];\n      }, this);\n};\n\n\n/**\n * Return the controllers for a multiple named elements. Optionally takes in a\n * callback to fire immediately after the controller is retrieved.\n * @param {string} name JsName of the controller element.\n * @param {(function(!Array\x3c!wiz.Controller\x3e):undefined)\x3d} opt_callback\n * @return {!goog.async.Deferred\x3c!Array\x3c!wiz.Controller\x3e\x3e} Deferred controller\n *     results.\n * @final\n */\nwiz.Controller.prototype.getControllers \x3d function(name, opt_callback) {\n  var controllers \x3d [];\n  var elements \x3d this.getElements(name);\n  var currentControllerRoot \x3d this.getRoot().el();\n  if (elements.size() \x3d\x3d 0 \x26\x26\n      currentControllerRoot.ownerDocument.readyState \x3d\x3d \x27loading\x27) {\n    // If we found nothing and the document isn\x27t fully loaded yet, try again\n    // after it loaded.\n    // This reduces the likelihood of a race condition where controller\n    // injection during page load with cached JS fails.\n    var d \x3d new goog.async.Deferred();\n    goog.events.listenOnce(currentControllerRoot.ownerDocument,\n        \x27readystatechange\x27, function() {\n          this.getControllers(name, opt_callback).addCallbacks(function(c) {\n            d.callback(c);\n          }, function(e) {\n            d.errback(e);\n          });\n        }, false, this);\n    return d;\n  }\n  elements.each(goog.bind(function(el) {\n    goog.asserts.assert(\n        wiz.controllers.getControllerRoot(el, true) !\x3d\n            currentControllerRoot,\n        \x27A controller retrieved via getController should never be equal to\x27 +\n        \x27 the current controller. jsname\x3d\x27 + name);\n    controllers.push(this.dispatcher_.getController(el));\n  }, this));\n  var dlist \x3d goog.async.DeferredList.gatherResults(controllers);\n  if (opt_callback) {\n    dlist.addCallback(opt_callback);\n  }\n  return dlist;\n};\n\n\n/**\n * Dispatch a custom event.\n * @param {!wiz.event.EventType\x3cDATA\x3e} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @param {boolean\x3d} opt_bubbles Whether the event bubbles. Defaults to true.\n * @template DATA\n * @final\n */\nwiz.Controller.prototype.trigger \x3d function(eventType, opt_data, opt_bubbles) {\n  // TODO(dfli): Remove this in favor of native handling of owners by jsaction.\n  var target \x3d this.element_;\n  // If a jsaction event handler is defined on the controller root, the\n  // controller will handle and dispatch the event appropriately up through\n  // either the DOM or the \x27owner\x27 hierarchy. Otherwise, we manually dispatch\n  // the event to the owner if it exists.\n  var owner \x3d /** @type {!Element} */ (this.element_[wiz.Property.OWNER]);\n  if (owner \x26\x26 !wiz.jsaction.bindsJsAction(\n      this.element_, eventType)) {\n    target \x3d owner;\n  }\n  if (target) {\n    var eventInfo \x3d {\n      // The _retarget property guarantees the targetElement of the wiz.Event\n      // object points to the controller element (instead of the owner/parent).\n      \x27_retarget\x27: this.element_\n    };\n    eventInfo[wiz.Property.EVENT_SOURCE] \x3d this;\n    wiz.jsaction.trigger(target, eventType, opt_data, opt_bubbles, eventInfo);\n  }\n};\n\n\n/**\n * Triggers a custom event on all elements (that handle the event) nested within\n * an element (using a DFS to search _downwards_, not upwards, and including all\n * owned elements that aren\x27t physically inside the parent).\n * See {@link wiz.jsaction.broadcast} for more information.\n *\n * @param {!wiz.event.EventType\x3cDATA, SOURCE\x3e} eventType\n * @param {DATA\x3d} opt_data Data associated with the event.\n * @template DATA, SOURCE\n */\nwiz.Controller.prototype.notify \x3d function(eventType, opt_data) {\n  wiz.jsaction.broadcast(this.getRoot().el(), eventType, opt_data, this);\n};\n\n\n/**\n * Returns the global event queue which can be used to listen for events on\n * the document.body level.\n * @return {!wiz.Controller.RootEventChannel}\n * @final\n */\nwiz.Controller.prototype.getRootEventChannel \x3d function() {\n  var eventChannel \x3d this.cache_.rootEventChannel;\n  if (!eventChannel) {\n    eventChannel \x3d this.cache_.rootEventChannel \x3d\n        new wiz.Controller.RootEventChannel(this.element_);\n    this.registerDisposable(eventChannel);\n  }\n  return eventChannel;\n};\n\n\n/**\n * Set the \x22ownership\x22 of an element. An example use case is a dialog that is\n * not a direct child of a given owner but wants to dispatch all events to this\n * logical \x22owner\x22 or \x22opener\x22.\n *\n * What this means in particular is that if the owned DOM node or any child\n * triggers an event, it will bubble up to this controller instead of using the\n * default DOM owner. Also, whatever model is in scope for this controller will\n * be in scope for the owned DOM node and all its children.\n *\n * WARNING: Only ever call this on nodes you client side rendered yourself and\n * do it immediately after the render.\n *\n * @param {!(!wiz.Query.One|!Element)} ownedNode The node for which to set the\n *     owner.\n * @param {!wiz.Query\x3d} opt_owner The element that will be set as the owner.\n *     Default to the current controller.\n * @final\n */\nwiz.Controller.prototype.setAsOwner \x3d function(ownedNode, opt_owner) {\n  var rootEl \x3d this.getRoot().el();\n  if (opt_owner) {\n    goog.asserts.assert(wiz.controllers.getControllerRoot(\n        /** @type {!Element} */ (opt_owner.el()), true) \x3d\x3d rootEl,\n        \x27The owner must be a child of the calling controller.\x27);\n  }\n  var ownedEl \x3d /** @type {!Element} */ (ownedNode instanceof wiz.Query.One ?\n      ownedNode.el() : ownedNode);\n  wiz.dom.setOwner(ownedEl, /** @type {!Element} */ (opt_owner ?\n      opt_owner.el() : this.getRoot().el()));\n};\n\n/**\n * In the case where owned elements are cleared from the DOM, clean up\n * references as well.\n */\nwiz.Controller.prototype.cleanUpOwned \x3d function() {\n  wiz.dom.cleanUpOwned(this.getRoot().el());\n};\n\n\n/**\n * Returns a wiz.Query collection of the owner of the current controller.\n * This may be particularly useful to call @{code .trigger(\u2026)} with events\n * for the owner.\n *\n * This method retrieves the value set by the owner using the\n * `setAsOwner` method.\n *\n * It is asserted that the controller actually has an owner.\n * @return {!wiz.Query.One}\n * @final\n */\nwiz.Controller.prototype.getOwner \x3d function() {\n  var owner \x3d this.element_[wiz.Property.OWNER];\n  goog.asserts.assert(owner !\x3d null, \x27No owner found.\x27);\n  return new wiz.Query.One(owner);\n};\n\n\n/**\n * Creates a Closure EventHandler for a controller to listen to legacy\n * components.\n *\n * WARNING: Closure events should only be used to listen to legacy components.\n * Where possible, bind all new events using jsaction.\n *\n * @this {THIS}\n * @return {!goog.events.EventHandler\x3cTHIS\x3e}\n * @template THIS\n * @final\n */\nwiz.Controller.prototype.getClosureHandler \x3d function() {\n  // Cast self, since the inferred THIS is unknown inside the function body.\n  var self \x3d /** @type {!wiz.Controller} */ (this);\n  if (self.cache_.closureHandler) {\n    return self.cache_.closureHandler;\n  }\n  return self.cache_.closureHandler \x3d new goog.events.EventHandler(self);\n};\n\n\n/**\n * Override {@link disposeObject} for custom disposal instead. Generally\n * prefer to use the {@link goog.Disposable.prototype.registerDisposable}\n * method instead.\n * @override @final\n */\nwiz.Controller.prototype.disposeObjectFrameworkInternal \x3d function() {\n  if (this.cache_.closureHandler) {\n    this.cache_.closureHandler.dispose();\n    this.cache_.closureHandler \x3d null;\n  }\n\n  // Remove this controller from its owner\x27s set of virtual children.\n  var owner \x3d /** @type {?Element} */ (this.element_[wiz.Property.OWNER]);\n  if (owner \x26\x26 owner[wiz.Property.OWNED]) {\n    goog.array.remove(owner[wiz.Property.OWNED],\n        this.getRoot().el());\n  }\n  wiz.Controller.base(this, \x27disposeObjectFrameworkInternal\x27);\n};\n\n\n/**\n * Marks the document as dirty with respect to having added or removed\n * controllers.\n * @final\n */\nwiz.Controller.prototype.dirty \x3d function() {\n  this.dispatcher_.getManager().dirty();\n};\n\n\n/**\n * Empty Wiz action available in all controllers. Can be used i.e. to bind the\n * render event when nothing in particular should be done except the\n * initialization of the controller.\n */\nwiz.Controller.prototype.wakeup \x3d goog.nullFunction;\n// Implementation note: This is being turned into a @wizaction in the\n// intermediate class created in wiz.controller.\n\n\n/**\n * Returns the vsync method cache for this controller.\n * @see {wiz.vsync.method}.\n * @param {wiz.common.FrameworkRestricted} restricted\n * @return {!Object\x3cfunction(this:wiz.Controller, !wiz.Event)\x3e}\n * @final\n */\nwiz.Controller.prototype.getVsyncTaskStorage \x3d function(restricted) {\n  if (!this.vsyncTaskStorage_) {\n    this.vsyncTaskStorage_ \x3d {};\n  }\n  return this.vsyncTaskStorage_;\n};\n\n\n/**\n * Object to store stuff in. Mostly used to not spam the instance variable\n * namespace of wiz.Controller.\n * @constructor @final @struct\n * @package\n */\nwiz.Controller.Cache \x3d function() {\n  /** @type {?wiz.Query.One} */\n  this.root \x3d null;\n\n  /** @type {?wiz.Controller.RootEventChannel} */\n  this.rootEventChannel \x3d null;\n\n  /** @type {?goog.events.EventHandler} */\n  this.closureHandler \x3d null;\n};\n\n\n/**\n * Object representing the root event channel. All events in the system bubble\n * up to this level unless they are first stopped at some lower level.\n * This object must only be constructed by wiz.Controller.\n * While one instance is created per controller, only one logical root channel\n * exists.\n * @param {!Element} element Element belonging to the global event scope.\n * @constructor\n * @extends {goog.Disposable}\n */\nwiz.Controller.RootEventChannel \x3d function(element) {\n  /**\n   * @private {!Array\x3cwiz.jsaction.UnlistenKey\x3e}\n   */\n  this.listeners_ \x3d [];\n\n  /**\n   * @private {!HTMLBodyElement}\n   * @const\n   */\n  this.root_ \x3d /** @type {!HTMLBodyElement} */ (element.ownerDocument.body);\n};\ngoog.inherits(wiz.Controller.RootEventChannel, goog.Disposable);\n\n\n/**\n * Adds a global listener for arbitrary jsaction events. Automatically cleans\n * up the handler when the given controller goes out of scope.\n * ({@see wiz.jsaction.listen}).\n * @param {!wiz.event.EventType\x3cTYPE\x3e|string} eventType\n * @param {function(this:THIS,!wiz.Event\x3cTYPE\x3e)} callback\n * @param {THIS\x3d} opt_context This scope of the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback.\n * @template TYPE,THIS\n */\nwiz.Controller.RootEventChannel.prototype.listen \x3d function(eventType,\n    callback, opt_context) {\n  // Attach listener through jsaction.\n  var unlistenKey \x3d wiz.jsaction.listenGlobal(this.root_, eventType,\n      callback, opt_context);\n  this.listeners_.push(unlistenKey);\n  return unlistenKey;\n};\n\n\n/**\n * Adds a global listener for arbitrary jsaction events that removes itself\n * after the 1st invocation.\n * Automatically cleans up the handler when the given controller goes out of\n * scope.\n * @param {!wiz.event.EventType\x3cTYPE\x3e} eventType\n * @param {function(this:THIS,!wiz.Event\x3cTYPE\x3e,TYPE)} callback\n * @param {THIS\x3d} opt_context This value for the callback.\n * @return {!wiz.jsaction.UnlistenKey} Objects to be passed to unlisten for\n *     unlistening this callback.\n * @template TYPE,THIS\n */\nwiz.Controller.RootEventChannel.prototype.listenOnce \x3d function(eventType,\n    callback, opt_context) {\n  var self \x3d this;\n  var unlistenKey;\n  /** @this {Object} */\n  var wrappedCb \x3d function() {\n    self.unlistenByKey(/** @type {!wiz.jsaction.UnlistenKey} */ (unlistenKey));\n    unlistenKey \x3d null; // Make the IE8 GC happy.\n    // Call callback with default this and arguments send to listeners.\n    callback.apply(this, arguments);\n  };\n  unlistenKey \x3d this.listen(eventType, wrappedCb, opt_context);\n  return /** @type {!wiz.jsaction.UnlistenKey} */ (unlistenKey);\n};\n\n\n/**\n * Removes a global event listener.\n * @param {wiz.jsaction.UnlistenKey} key\n * @return {boolean} Whether the unlisten actually unlistened anything.\n */\nwiz.Controller.RootEventChannel.prototype.unlistenByKey \x3d function(key) {\n  var retVal \x3d wiz.jsaction.unlistenByKey(key);\n  retVal \x3d goog.array.remove(this.listeners_, key) \x26\x26 retVal;\n  return retVal;\n};\n\n\n/**\n * Exports a Wiz action into an object\x27s wizaction map. This is called\n * by the compiler on public-like methods of Wiz controllers.\n * This is needed because it is possible that the wizaction map has not been\n * initialized yet.\n * @param {!Object} obj Object whose static property is being exported.\n * @param {string} xidString Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\nwiz.Controller.exportProperty \x3d (obj, xidString, symbol) \x3d\x3e {\n  const parentPrototype \x3d Object.getPrototypeOf(obj);\n  // If the prototype chain of obj already contains a wizaction property then\n  // set obj.wizaction to a new object that inherits from the existing wizaction\n  // object. This allows obj to inherit wizaction from its parent but avoid\n  // mutating the parent\x27s wizaction.\n  if (parentPrototype \x26\x26 parentPrototype.wizaction \x26\x26\n      parentPrototype.wizaction \x3d\x3d obj.wizaction) {\n    obj.wizaction \x3d Object.create(obj.wizaction);\n  } else if (!obj.wizaction) {\n    obj.wizaction \x3d {};\n  }\n  goog.exportProperty(obj.wizaction, xidString, symbol);\n};\n\n\n/** @override */\nwiz.Controller.RootEventChannel.prototype.disposeInternal \x3d function() {\n  var listeners \x3d this.listeners_;\n  for (var i \x3d 0; i \x3c listeners.length; i++) {\n    wiz.jsaction.unlistenByKey(listeners[i]);\n  }\n  this.listeners_ \x3d [];\n  wiz.Controller.RootEventChannel.base(this, \x27disposeInternal\x27);\n};\n\n\n// Set up controller specific wiz.async bindings.\nwiz.async.bind({\n  /**\n   * Retrieves the first matching controller.\n   * @param {!wiz.Controller|!wiz.controller.Context} controller\n   * @param {string} key Jsname of the controller element.\n   * @return {!goog.async.Deferred\x3c!wiz.Controller\x3e}\n   */\n  controller: function(controller, key) {\n    // goog.asserts.assertInstanceof(controller, wiz.Controller);\n    goog.asserts.assert(goog.isString(key), \x27Controller name must be a string\x27);\n    return controller.getController(key);\n  },\n  /**\n   * Retrieves all matching controllers.\n   * @param {!wiz.Controller|!wiz.controller.Context} controller\n   * @param {string} key JsName of the controller.\n   * @return {!goog.async.Deferred\x3c!Array\x3c!wiz.Controller\x3e\x3e}\n   */\n  controllers: function(controller, key) {\n    // goog.asserts.assertInstanceof(controller, wiz.Controller);\n    goog.asserts.assert(goog.isString(key), \x27Controller name must be a string\x27);\n    return controller.getControllers(key);\n  },\n  /**\n   * Make a renderer for the given name and source.\n   * @param {!wiz.async.Source} source\n   * @param {function(new:wiz.Renderer)|!fava.services.ServiceId} keyOrConstructor\n   *     Constructor of the renderer or its service id.\n   * @return {!goog.async.Deferred\x3c!wiz.Renderer\x3e}\n   */\n  renderer: function(source, keyOrConstructor) {\n    var key;\n    if (goog.isFunction(keyOrConstructor)) {\n      var displayName \x3d keyOrConstructor.displayName;\n      goog.asserts.assert(displayName, \x27Renderer must be named.\x27);\n      key \x3d displayName;\n    } else {\n      key \x3d keyOrConstructor;\n    }\n    return wiz.renderers.getInstance(key, source, source.getAppContext());\n  }\n});\n\n/** @type {!Object\x3c!wiz.Controller\x3e} */\nwiz.async.Response.prototype.controller;\n/** @type {!Object\x3c!Array\x3c!wiz.Controller\x3e\x3e} */\nwiz.async.Response.prototype.controllers;\n\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/controllerbase.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy2x');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy2x');

}catch(e){_DumpException(e)}
/* _Module_:sy38 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy38');
var $googDebugFname="gws/js/wiz/manager.js";
goog.loadModule("/**\n * @fileoverview Simple wrapper functions for Wiz infrastructure.\n */\n\ngoog.module(\x27search.wiz.manager\x27);\ngoog.module.declareLegacyNamespace();\n\nconst Promise \x3d goog.require(\x27goog.Promise\x27);\nconst Resolver \x3d goog.require(\x27goog.promise.Resolver\x27);\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst WizManager \x3d goog.require(\x27wiz.Manager\x27);\nconst WizQuery \x3d goog.require(\x27wiz.Query\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst jsaction \x3d goog.require(\x27wiz.jsaction\x27);\n\n/** @type {boolean} */\nlet initialized \x3d false;\n\n/**\n * @type {!Resolver} Contains a Promise that is resolved when\n *     initialized \x26\x26 enabled.\n */\nlet initResolver \x3d Promise.withResolver();\n\n/**\n * Marks that Wiz has been initialized.\n * @package\n */\nfunction init() {\n  initialized \x3d true;\n  initResolver.resolve();\n}\n\n/**\n * For testing only.\n * @package\n */\nfunction reset() {\n  initialized \x3d false;\n  initResolver \x3d Promise.withResolver();\n}\n\n/**\n * Marks the page as \x22dirty\x22, which scans the DOM for new and removed\n * controllers and initializes/destroys them in the next tick.\n * This should be called whenever new HTML is inserted which might have DOM\n * nodes that may have Wiz controllers that need to be initialized.\n * node is provided only to determine which document to associate the change\n * with.\n * @param {?Node|?Window|?Document\x3d} node\n */\nfunction dirty(node \x3d dom.getDocument()) {\n  // If Wiz has not been initialized yet, just quietly return. Wiz will\n  // call dirty when it initializes.\n  if (!initialized) return;\n\n  WizManager.dirty(node);\n}\n\n/**\n * This function is provided for Reactive and infrastructure code that need a\n * Wiz controller.\n *\n * Do not use this function if you are working from a Wiz\n * Controller or Service. Use standard Wiz dependency injection.\n * See go/gws-wiz#injection-dependencies\n *\n * @param {!Element|!WizQuery} element\n * @return {!goog.Thenable\x3c!WizController\x3e} A promise that resolves to the\n *     controller on element. If there is no Wiz controller defined on element,\n *     the promise is rejected.\n */\nfunction getController(element) {\n  return initResolver.promise.then(() \x3d\x3e {\n    const dispatcher \x3d jsaction.getDispatcherForDocument(dom.getDocument());\n    return /** @type {!goog.Thenable\x3c!WizController\x3e} */ (\n        dispatcher.getController(element));\n  });\n}\n\nexports \x3d {\n  init,\n  reset,\n  dirty,\n  getController,\n};\n\n//# sourceURL\x3dhttps://qs/gws/js/wiz/manager.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy38');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy38');

}catch(e){_DumpException(e)}
/* _Module_:sy5e */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy5e');
var $googDebugFname="googledata/html/templates/gws/head/xjs/quantum/motions/immersive/state_keys.js";
eval("/**\n * @fileoverview State Keys for immersive motions.\n */\ngoog.provide(\x27gws.quantum.motions.immersive.StateKeys\x27);\n\n\n/**\n * State keys for the immersion state in GWS history.\n * !!IMPORTANT!!\n * When you add a new history state key, you also need to add it\n * to the AGSA whitelist for hash parameters (go/agsa-whitelists).\n * Example CL: CL/103167952\n *\n * Otherwise it will break historyState of AGSA as well as your new feature.\n * See also: go/au-redlion-postmortem-backbutton\n * @enum {string}\n */\ngws.quantum.motions.immersive.StateKeys \x3d {\n  // A key to use for the immersion state in GWS history.\n  HISTORY: \x27istate\x27,\n  //  A key to use for the full page state in GWS history.\n  FULL_PAGE: \x27fpstate\x27,\n  // A key to use for the Oleo state in GWS history.\n  // TODO(hoainguyen): We should try to consolodate and handle all keys,\n  // including movies, finance, etc, in one place, for example here.\n  OLEO: \x27mie\x27,\n  // A key used by the Sports state in GWS history.\n  SPORTS: \x27sie\x27,\n  // A key to use for the images result carousel state in GWS history.\n  IMAGES_RESULT_CAROUSEL: \x27imgrc\x27,\n  // A key to use for the flights state in GWS history.\n  FLIGHTS: \x27flt\x27,\n  // A key used by the Apps state in GWS history.\n  APPS: \x27aie\x27,\n  // A key used by the Product listing ad (PLA) immersive state in GWS history.\n  PLA: \x27pie\x27,\n  // A key used by the Local Async navigation framework (g/trex-dd).\n  TREX: \x27trex\x27\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/quantum/motions/immersive/state_keys.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy5e');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy5e');

}catch(e){_DumpException(e)}
/* _Module_:sy67 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy67');
var $googDebugFname="javascript/closure/html/legacyconversions.js";
eval("// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Transitional utilities to unsafely trust random strings as\n * goog.html types. Intended for temporary use when upgrading a library that\n * used to accept plain strings to use safe types, but where it\x27s not\n * practical to transitively update callers.\n *\n * IMPORTANT: No new code should use the conversion functions in this file,\n * they are intended for refactoring old code to use goog.html types. New code\n * should construct goog.html types via their APIs, template systems or\n * sanitizers. If that\u2019s not possible it should use\n * goog.html.uncheckedconversions and undergo security review.\n\n * MOE:begin_intracomment_strip\n * At Google goog.html.legacyconversions are restricted via both BUILD\n * visibility and Conformance rules. The goal is to allow us to progressively\n * get rid of using strings to represent HTML-related data which is passed to\n * DOM APIs that execute script (like innerHTML or Anchor.href), while avoiding\n * regressions. Please carefully read the documentation below before using\n * these functions. If you have questions contact ise-hardening@ and we\u2019ll\n * gladly help.\n * MOE:end_intracomment_strip\n *\n * The semantics of the conversions in goog.html.legacyconversions are very\n * different from the ones provided by goog.html.uncheckedconversions. The\n * latter are for use in code where it has been established through manual\n * security review that the value produced by a piece of code will always\n * satisfy the SafeHtml contract (e.g., the output of a secure HTML sanitizer).\n * In uses of goog.html.legacyconversions, this guarantee is not given -- the\n * value in question originates in unreviewed legacy code and there is no\n * guarantee that it satisfies the SafeHtml contract.\n *\n * There are only three valid uses of legacyconversions:\n *\n * 1. Introducing a goog.html version of a function which currently consumes\n * string and passes that string to a DOM API which can execute script - and\n * hence cause XSS - like innerHTML. For example, Dialog might expose a\n * setContent method which takes a string and sets the innerHTML property of\n * an element with it. In this case a setSafeHtmlContent function could be\n * added, consuming goog.html.SafeHtml instead of string, and using\n * goog.dom.safe.setInnerHtml instead of directly setting innerHTML.\n * setContent could then internally use legacyconversions to create a SafeHtml\n * from string and pass the SafeHtml to setSafeHtmlContent. In this scenario\n * remember to document the use of legacyconversions in the modified setContent\n * and consider deprecating it as well.\n *\n * 2. Automated refactoring of application code which handles HTML as string\n * but needs to call a function which only takes goog.html types. For example,\n * in the Dialog scenario from (1) an alternative option would be to refactor\n * setContent to accept goog.html.SafeHtml instead of string and then refactor\n * all current callers to use legacyconversions to pass SafeHtml. This is\n * generally preferable to (1) because it keeps the library clean of\n * legacyconversions, and makes code sites in application code that are\n * potentially vulnerable to XSS more apparent.\n *\n * 3. Old code which needs to call APIs which consume goog.html types and for\n * which it is prohibitively expensive to refactor to use goog.html types.\n * Generally, this is code where safety from XSS is either hopeless or\n * unimportant.\n *\n * @visibility {//javascript/closure/html:approved_for_legacy_conversion}\n * @visibility {//javascript/closure/bin/sizetests:__pkg__}\n */\n\n\ngoog.provide(\x27goog.html.legacyconversions\x27);\n\ngoog.require(\x27goog.html.SafeHtml\x27);\ngoog.require(\x27goog.html.SafeScript\x27);\ngoog.require(\x27goog.html.SafeStyle\x27);\ngoog.require(\x27goog.html.SafeStyleSheet\x27);\ngoog.require(\x27goog.html.SafeUrl\x27);\ngoog.require(\x27goog.html.TrustedResourceUrl\x27);\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to SafeHtml for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} html A string to be converted to SafeHtml.\n * @return {!goog.html.SafeHtml} The value of html, wrapped in a SafeHtml\n *     object.\n */\ngoog.html.legacyconversions.safeHtmlFromString \x3d function(html) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      html, null /* dir */);\n};\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to SafeScript for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} script A string to be converted to SafeScript.\n * @return {!goog.html.SafeScript} The value of script, wrapped in a SafeScript\n *     object.\n */\ngoog.html.legacyconversions.safeScriptFromString \x3d function(script) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\n      script);\n};\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to SafeStyle for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} style A string to be converted to SafeStyle.\n * @return {!goog.html.SafeStyle} The value of style, wrapped in a SafeStyle\n *     object.\n */\ngoog.html.legacyconversions.safeStyleFromString \x3d function(style) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\n      style);\n};\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to SafeStyleSheet for legacy\n * API purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} styleSheet A string to be converted to SafeStyleSheet.\n * @return {!goog.html.SafeStyleSheet} The value of style sheet, wrapped in\n *     a SafeStyleSheet object.\n */\ngoog.html.legacyconversions.safeStyleSheetFromString \x3d function(styleSheet) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeStyleSheet\n      .createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to SafeUrl for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} url A string to be converted to SafeUrl.\n * @return {!goog.html.SafeUrl} The value of url, wrapped in a SafeUrl\n *     object.\n */\ngoog.html.legacyconversions.safeUrlFromString \x3d function(url) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Performs an \x22unchecked conversion\x22 from string to TrustedResourceUrl for\n * legacy API purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} url A string to be converted to TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} The value of url, wrapped in a\n *     TrustedResourceUrl object.\n */\ngoog.html.legacyconversions.trustedResourceUrlFromString \x3d function(url) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n/**\n * @private {function(): undefined}\n */\ngoog.html.legacyconversions.reportCallback_ \x3d goog.nullFunction;\n\n\n/**\n * Sets a function that will be called every time a legacy conversion is\n * performed. The function is called with no parameters but it can use\n * goog.debug.getStacktrace to get a stacktrace.\n *\n * @param {function(): undefined} callback Error callback as defined above.\n */\ngoog.html.legacyconversions.setReportCallback \x3d function(callback) {\n  goog.html.legacyconversions.reportCallback_ \x3d callback;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/legacyconversions.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy67');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy67');

}catch(e){_DumpException(e)}
/* _Module_:sy8g */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy8g');
var $googDebugFname="template/prototemplate/proto/wiz_js_map_entry.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.prototemplate.WizJsMapEntry\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.prototemplate.WizJsMapEntry \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.prototemplate.WizJsMapEntry, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.prototemplate.WizJsMapEntry.displayName \x3d \x27proto.prototemplate.WizJsMapEntry\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.prototemplate.WizJsMapEntry.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.prototemplate.WizJsMapEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.prototemplate.WizJsMapEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.prototemplate.WizJsMapEntry.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    id: jspb.Message.getField(msg, 1),\n    serializedMessage: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.prototemplate.WizJsMapEntry}\n */\nproto.prototemplate.WizJsMapEntry.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.prototemplate.WizJsMapEntry;\n  return proto.prototemplate.WizJsMapEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.prototemplate.WizJsMapEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.prototemplate.WizJsMapEntry}\n */\nproto.prototemplate.WizJsMapEntry.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setSerializedMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.prototemplate.WizJsMapEntry.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.prototemplate.WizJsMapEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.prototemplate.WizJsMapEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.prototemplate.WizJsMapEntry.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 2));\n  if (f !\x3d null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id \x3d 1;\n * @return {?string}\n */\nproto.prototemplate.WizJsMapEntry.prototype.getId \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.prototemplate.WizJsMapEntry.prototype.setId \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.prototemplate.WizJsMapEntry.prototype.clearId \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.prototemplate.WizJsMapEntry.prototype.hasId \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * optional string serialized_message \x3d 2;\n * @return {?string}\n */\nproto.prototemplate.WizJsMapEntry.prototype.getSerializedMessage \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {?string|undefined} value */\nproto.prototemplate.WizJsMapEntry.prototype.setSerializedMessage \x3d function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.prototemplate.WizJsMapEntry.prototype.clearSerializedMessage \x3d function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.prototemplate.WizJsMapEntry.prototype.hasSerializedMessage \x3d function() {\n  return jspb.Message.getField(this, 2) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.prototemplate.WizJsMapEntry}\n */\nproto.prototemplate.WizJsMapEntry.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.prototemplate.WizJsMapEntry, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/template/prototemplate/proto/wiz_js_map_entry.jspb.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy8g');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy8g');

}catch(e){_DumpException(e)}
/* _Module_:sy8f */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy8f');
var $googDebugFname="googledata/html/templates/gws/head/xjs/act/storage.js";
eval("/**\n * @fileoverview The storage layers for act.\n */\n\ngoog.provide(\x27gws.act.Serializable\x27);\ngoog.provide(\x27gws.act.Storage\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27search.cache.Namespace\x27);\ngoog.require(\x27search.cache.factory\x27);\ngoog.require(\x27storagecache.PersistentStorageType\x27);\ngoog.require(\x27storagecache.Priority\x27);\n\n/** @interface */\ngws.act.Serializable \x3d goog.defineClass(null, {\n  /** @return {!Array} */\n  serialize: goog.abstractMethod\n});\n\n/**\n * Constructs the storage object with a prefix that distinguishes it from\n * other accessors of session storage. As well, users must provide a function\n * that converts a serialized value into its deserialized form. A failure to\n * deserialize should be converted to a thrown exception.\n * @param {!search.cache.Namespace} prefix\n * @param {function(!Array): !gws.act.Serializable} deserializeFunc\n * @constructor\n */\ngws.act.Storage \x3d function(prefix, deserializeFunc) {\n  /** @package @const */\n  this.deserialize \x3d deserializeFunc;\n\n  /** @private @const */\n  this.cache_ \x3d search.cache.factory.get(\n      storagecache.PersistentStorageType.SESSION, prefix);\n};\n\n/**\n * Stores a value under a key.\n * @param {string} key\n * @param {!gws.act.Serializable} value\n */\ngws.act.Storage.prototype.store \x3d function(key, value) {\n  this.cache_.set(key, value.serialize());\n};\n\n/**\n * Store a value under a key in memory only.\n * @param {string} key\n * @param {!gws.act.Serializable} value\n */\ngws.act.Storage.prototype.storeInMemory \x3d function(key, value) {\n  this.cache_.set(key, value.serialize(), storagecache.Priority.MEMORY_ONLY);\n};\n\n/**\n * Retrieves an item under a key. Returns null if not found.\n * @param {string} key\n * @return {?gws.act.Serializable}\n */\ngws.act.Storage.prototype.get \x3d function(key) {\n  const serializedValue \x3d this.cache_.get(key);\n  if (serializedValue) {\n    return this.deserialize(goog.asserts.assertArray(serializedValue).slice());\n  }\n  return null;\n};\n\n/**\n * Removes a key from storage.\n * @param {string} key\n */\ngws.act.Storage.prototype.remove \x3d function(key) {\n  this.cache_.remove(key);\n};\n\n/**\n * Returns true if the value associated with the key is persisted to\n * sessionstorage.\n * @param {string} key\n * @return {boolean}\n */\ngws.act.Storage.prototype.isPersisted \x3d function(key) {\n  // This is not quite an accurate check, but Cache doesn\x27t currently support\n  // checking if a key is persisted or in memory.\n  return search.cache.factory.isAvailable(\n             storagecache.PersistentStorageType.SESSION) \x26\x26\n      this.cache_.get(key) !\x3d\x3d null;\n};\n\n/**\n * Clears all the entries in the storage\n */\ngws.act.Storage.prototype.clear \x3d function() {\n  this.cache_.clear();\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/act/storage.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/act/act.js";
eval("/**\n * @fileoverview This module describes Act, a model for describing an HTML\n * page. See http://go/gws-act.\n *\n * To see the dashboard of all the telemetry metrics, go to\n * https://x20web.corp.google.com/teams/gws-telemetry/\n *   www/quantum-telemetry-dashboard/dashboard.html\n * and look for ACT metrics.\n */\n\n\ngoog.provide(\x27gws.act\x27);\ngoog.provide(\x27gws.act.Atom\x27);\ngoog.provide(\x27gws.act.CssAtom\x27);\ngoog.provide(\x27gws.act.DocumentInfoAtom\x27);\ngoog.provide(\x27gws.act.JslayoutAtom\x27);\ngoog.provide(\x27gws.act.Node\x27);\ngoog.provide(\x27gws.act.PendingAtom\x27);\ngoog.provide(\x27gws.act.cache\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.dom.classlist\x27);\ngoog.require(\x27goog.dom.dataset\x27);\ngoog.require(\x27goog.dom.safe.InsertAdjacentHtmlPosition\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.html.legacyconversions\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.style\x27);\ngoog.require(\x27gws.act.Serializable\x27);\ngoog.require(\x27gws.act.Storage\x27);\ngoog.require(\x27gws.debug.telemetry\x27);\ngoog.require(\x27gws.debug.telemetry.Beacon\x27);\ngoog.require(\x27jslayout.reactive.framework\x27);\ngoog.require(\x27proto.prototemplate.WizJsMapEntry\x27);\ngoog.require(\x27search.cache.Namespace\x27);\ngoog.require(\x27search.cache.factory\x27);\ngoog.require(\x27search.log.errorLogger\x27);\ngoog.require(\x27search.wiz.manager\x27);\ngoog.require(\x27storagecache.PersistentStorageType\x27);\n\n\n/** @private {goog.log.Logger} */\ngws.act.logger_ \x3d goog.log.getLogger(\x27gws.act\x27);\n\n\n/**\n * An a.b.c. that any Act content should subclass. The subclass\x27s constructor\n * should take its id and any additional data fields in the serialized form.\n * Note that the id is a trivially comparable short hand for the contents of\n * the atom, and could be used to reconstruct some state of the atom.\n * @implements {gws.act.Serializable}\n */\ngws.act.Atom \x3d goog.defineClass(null, {\n  constructor: function() {},\n\n\n  statics: {\n    /** @private {!Object\x3cstring, boolean\x3e} */\n    specialAttributeMap_: {\n      \x27id\x27: true,\n      \x27data-jiis\x27: true,\n      \x27data-ved\x27: true,\n      \x27data-async-type\x27: true,\n      \x27data-async-actions\x27: true,\n      \x27data-async-context-required\x27: true\n    },\n\n\n    /** @private {!Object\x3cstring, function(...):!gws.act.Atom\x3e} */\n    subtypeRegistry_: {},\n\n\n    /**\n     * Register the given type and factory function with the subtype registry.\n     * @param {string} type\n     * @param {function(...):!gws.act.Atom} atomFactory\n     */\n    register: function(type, atomFactory) {\n      if (type in gws.act.Atom.subtypeRegistry_) {\n        throw new Error(\x27Existing atom already registered: \x27 + type);\n      }\n      gws.act.Atom.subtypeRegistry_[type] \x3d atomFactory;\n    },\n\n\n    /**\n     * Deserialize the given serialized Atom into its concrete subtype.\n     * @param {!Array} bits The serialized Atom bits, which may be modified by\n     *     this operation.\n     * @return {!gws.act.Atom}\n     */\n    deserialize: function(bits) {\n      var telemetryBeacon \x3d\n          new gws.debug.telemetry.Beacon(\x27act\x27, \x27atom_deserialize\x27);\n      gws.debug.telemetry.beginInteraction(telemetryBeacon);\n      var type \x3d bits.shift();\n      var factory \x3d gws.act.Atom.subtypeRegistry_[type];\n      if (!factory) {\n        throw new Error(\x27Deserialize encountered an unknown atom!\x27);\n      }\n\n      var atom \x3d factory.apply(null, bits);\n      gws.debug.telemetry.endInteraction(telemetryBeacon);\n      return atom;\n    },\n\n\n    /**\n     * Returns whether an attribute is special and should be ignored by ACT.\n     * @param {string} name\n     * @return {boolean}\n     * @private\n     */\n    isSpecialActAttribute_: function(name) {\n      return name in gws.act.Atom.specialAttributeMap_;\n    },\n\n\n    /**\n     * Constructs an atom from a dom element.\n     * @param {!Element} container\n     * @param {string} html of container, reprocessed so that the content\n     *     of subcontainers has been removed\n     * @return {!gws.act.Atom}\n     * @private\n     */\n    createFromElement_: function(container, html) {\n      if (container.tagName \x3d\x3d goog.dom.TagName.STYLE) {\n        return new gws.act.CssAtom(html);\n      } else {\n        // Also read the various container attributes.\n        var attributes \x3d {};\n        for (var i \x3d 0; i \x3c container.attributes.length; ++i) {\n          var attribute \x3d container.attributes[i];\n          // TODO(applmak): Combine this attribute-reading with the serializer\n          // for the jslayout atom, which does the same work.\n          if (!gws.act.Atom.isSpecialActAttribute_(attribute.name)) {\n            attributes[attribute.name] \x3d attribute.value;\n          }\n        }\n        return gws.act.JslayoutAtom.create(\n            html, undefined, undefined, attributes);\n      }\n    }\n  },\n\n\n  /**\n   * Returns the type of the atom.\n   * @return {string}\n   */\n  getType: goog.abstractMethod,\n\n\n  /**\n   * Returns the uid of the atom.\n   * @return {string}\n   */\n  getUid: goog.abstractMethod,\n\n\n  /**\n   * Applies the atom to the given containerId.\n   * @param {!Element} container\n   * @return {boolean} true iff the caller should recurse into children.\n   */\n  apply: goog.abstractMethod,\n\n\n  /**\n   * Serializes the atom to an array.\n   * @return {!Array}\n   * @override\n   */\n  serialize: goog.abstractMethod,\n\n\n  /**\n   * Appends the passed-in atom to this atom and renders it in the\n   * given container.\n   *\n   * @param {!gws.act.Atom} appendAtom\n   * @param {!Element} container\n   *\n   * @return {!gws.act.Atom} A new atom with the combined content,\n   * suitable for caching.\n   */\n  append: goog.abstractMethod,\n\n\n  /**\n   * Prepends the passed-in atom to this atom and renders it in the given\n   * container.\n   *\n   * @param {!gws.act.Atom} appendAtom\n   * @param {!Element} container\n   *\n   * @return {!gws.act.Atom} A new atom with the combined content,\n   *     suitable for caching.\n   */\n  prepend: goog.abstractMethod\n});\n\n\n/**\n * A node in the composition tree.\n * @implements {gws.act.Serializable}\n */\ngws.act.Node \x3d goog.defineClass(null, {\n  /**\n   * @param {string} containerId\n   * @param {string} atomUid\n   * @param {!Array\x3c!gws.act.Node\x3e\x3d} opt_children\n   */\n  constructor: function(containerId, atomUid, opt_children) {\n    /** @const @type {string} */\n    this.containerId \x3d containerId;\n\n    /** @private {string} */\n    this.atomUid_ \x3d atomUid;\n\n    /** @const @type {(!Array\x3c!gws.act.Node\x3e|undefined)} */\n    this.children \x3d opt_children;\n  },\n\n\n  statics: {\n    /**\n     * Creates a new Node.\n     * This is different than the constructor, because it takes an Atom as a\n     * parameter, and caches it in memory.\n     * @param {string} containerId\n     * @param {!gws.act.Atom} atom\n     * @param {!Array\x3c!gws.act.Node\x3e\x3d} opt_children\n     * @return {!gws.act.Node}\n     */\n    create: function(containerId, atom, opt_children) {\n      gws.act.cache.storeAtomInMemory(atom);\n      return new gws.act.Node(containerId, atom.getUid(), opt_children);\n    },\n\n\n    /**\n     * Convert some POD Array of Arrays to a tree of Nodes. Atoms will be cached\n     * in memory.\n     * [ containerID, [ atomId, type, ... ] ]\n     * or\n     * [ containerID, [ atomId, type, ... ], [ child, ... ] ]\n     *\n     * @param {!Array} bits\n     * @return {!gws.act.Node}\n     */\n    deserializeFromWire: function(bits) {\n      var containerId \x3d bits[0];\n      var atom \x3d gws.act.Atom.deserialize(bits[1]);\n      gws.act.cache.storeAtomInMemory(atom);\n      if (bits[2]) {\n        var children \x3d goog.array.map(bits[2], function(childBits) {\n          return gws.act.Node.deserializeFromWire(childBits);\n        });\n      }\n      return new gws.act.Node(containerId, atom.getUid(), children);\n    },\n\n\n    /**\n     * Convert some POD Array of Arrays to a tree of Nodes.\n     * [ containerID, atomUid ]\n     * or\n     * [ containerID, atomUid, [ child, ... ] ]\n     *\n     * @param {!Array} bits\n     * @return {!gws.act.Node} The tree.\n     */\n    deserialize: function(bits) {\n      var containerId \x3d bits[0];\n      var atomUid \x3d bits[1];\n      if (bits[2]) {\n        var children \x3d goog.array.map(bits[2], function(thingy) {\n          return gws.act.Node.deserialize(thingy);\n        });\n      }\n      return new gws.act.Node(containerId, atomUid, children);\n    },\n\n\n    /**\n     * @private {number} token that indicates that a container begins here\n     */\n    MARKER_START_: 1,\n\n\n    /**\n     * @private {number} token that indicates that a container ends here\n     */\n    MARKER_END_: -1,\n\n\n    /**\n     * @private {!RegExp} assists in the donut parsing process\n     */\n    FRAGMENT_RE_: /\x3c!--ACT(START|END)--\x3e([\\s\\S]*?)(?\x3d\x3c!--ACT(START|END)--\x3e)/g,\n\n\n    /**\n     * Add markers so that the parser can easily find\n     * @param {!Array\x3c!Element\x3e} containers ACT containers to be marked\n     * @return {!Array\x3c!Node\x3e} the markers\n     * @private\n     */\n    placeMarkers_: function(containers) {\n      var markers \x3d goog.array.map(containers, function(element) {\n        var start \x3d document.createComment(\x27ACTSTART\x27);\n        var end \x3d document.createComment(\x27ACTEND\x27);\n        goog.dom.insertChildAt(element, start, 0);\n        goog.dom.appendChild(element, end);\n        return [start, end];\n      });\n      return goog.array.flatten(markers);\n    },\n\n\n    /**\n     * Creates a token stream for createDonutHTMLByIDMapping_.\n     * @param {string} html HTML that includes all of the containers\n     * @return {!Array\x3cnumber|string\x3e} the tokens\n     * @private\n     */\n    parseToTokens_: function(html) {\n      gws.act.Node.FRAGMENT_RE_.lastIndex \x3d\n          0;                                // allows global regex to be reused\n      var tokens \x3d [];                      // list of markerToken|string\n      var fragmentMatch;\n      while ((fragmentMatch \x3d gws.act.Node.FRAGMENT_RE_.exec(html)) !\x3d null) {\n        goog.asserts.assert(fragmentMatch);\n        tokens.push(\n            (fragmentMatch[1] \x3d\x3d \x27START\x27) ? gws.act.Node.MARKER_START_ :\n                                            gws.act.Node.MARKER_END_);\n        tokens.push(fragmentMatch[2]);\n      }\n      tokens.push(gws.act.Node.MARKER_END_);\n      return tokens;\n    },\n\n\n    /**\n     * Returns a element-id-to-donut-html mapping.\n     * @param {!Array\x3c!Element\x3e} containers data-jiis containers in document\n     *     order\n     * @param {!Array\x3cnumber|string\x3e} tokens\n     * @return {!Object\x3cstring, string\x3e} id to donut HTML mapping\n     * @private\n     */\n    createDonutHTMLByID_: function(containers, tokens) {\n      var actHTMLByID \x3d {};\n      var startIndex \x3d tokens.length;\n      for (var i \x3d containers.length - 1; i \x3e\x3d 0; i--) {\n        startIndex \x3d\n            tokens.lastIndexOf(gws.act.Node.MARKER_START_, startIndex - 1);\n        var endIndex \x3d tokens.indexOf(gws.act.Node.MARKER_END_, startIndex + 1);\n        // This removes content and markers from tokens\n        var containerContent \x3d\n            tokens.splice(startIndex, endIndex - startIndex + 1);\n        // This removes the markers, leaving only content\n        containerContent \x3d\n            containerContent.splice(1, containerContent.length - 2);\n        actHTMLByID[containers[i].id] \x3d containerContent.join(\x27\x27);\n      }\n      return actHTMLByID;\n    },\n\n\n    /**\n     * Creates node trees from the given dom element.\n     * @param {!Element} element\n     * @param {(function(!Element, string):!gws.act.Atom)\x3d} opt_atomFactory\n     *     Optional function that constructs an atom from the given container.\n     * @return {!Array\x3c!gws.act.Node\x3e}\n     */\n    createTreesFromDomFragment: function(element, opt_atomFactory) {\n      var telemetryBeacon \x3d new gws.debug.telemetry.Beacon(\n          \x27act\x27, \x27node_create_trees_from_dom_fragment\x27);\n      gws.debug.telemetry.beginInteraction(telemetryBeacon);\n      var rootIsContainer \x3d goog.dom.dataset.get(element, \x27jiis\x27);\n\n      // Containers, in document order\n      var containers \x3d rootIsContainer ? [element] : [];\n      goog.array.extend(containers, element.querySelectorAll(\x27[data-jiis]\x27));\n\n      // To start all containers are potential roots.\n      var roots \x3d {};\n      goog.array.forEach(containers, function(c) { roots[c.id] \x3d c; });\n\n      // Find tree edges and prune potential roots.\n      var edges \x3d goog.object.map(roots, function(v) { return []; });\n      goog.array.forEach(containers, function(container) {\n        // The containers should all be non-null, even though querySelectorAll\n        // is typed to return Element and not !Element.\n        goog.asserts.assert(container);\n        var ancestor \x3d goog.dom.getParentElement(container);\n        // Find the closest ancestor container.\n        while (ancestor) {\n          if (goog.dom.dataset.has(ancestor, \x27jiis\x27)) {\n            // Record the edge\n            edges[ancestor.id].push(container);\n            delete roots[container.id];\n            break;\n          }\n          ancestor \x3d goog.dom.getParentElement(ancestor);\n        }\n      });\n      var rootElements \x3d goog.object.getValues(roots);\n      var nodeTrees \x3d goog.array.map(rootElements, function(root) {\n        // Process HTML into ACT-suitable form by getting a container\x27s HTML\n        // and then stripping the HTML of subcontainers.  Do this for every\n        // container.\n        var branch \x3d [root];\n        goog.array.extend(branch, root.querySelectorAll(\x27[data-jiis]\x27));\n\n        var actHTMLByID;\n        var markers;\n        if (branch.length \x3d\x3d 1) {\n          markers \x3d [];\n          actHTMLByID \x3d {};\n          actHTMLByID[root.id] \x3d root.innerHTML;\n        } else {\n          markers \x3d gws.act.Node.placeMarkers_(branch);\n          var elementHTML \x3d root.innerHTML;\n          var tokens \x3d gws.act.Node.parseToTokens_(elementHTML);\n          actHTMLByID \x3d gws.act.Node.createDonutHTMLByID_(branch, tokens);\n        }\n\n        // Creates the root nodes after recursively creating their children and\n        // removing the children\x27s content from the container elements.\n        function createNode(container) {\n          var id \x3d container.id;\n\n          // Process children before parents\n          var children \x3d goog.array.map(edges[id], createNode);\n          var atom \x3d opt_atomFactory ?\n              opt_atomFactory(container, actHTMLByID[container.id]) :\n              gws.act.Atom.createFromElement_(\n                  container, actHTMLByID[container.id]);\n          gws.act.cache.storeAtomInMemory(atom);\n          return new gws.act.Node(\n              id, atom.getUid(), children.length ? children : undefined);\n        }\n        goog.array.forEach(markers, goog.dom.removeNode);\n        return createNode(root);\n      });\n      gws.debug.telemetry.endInteraction(telemetryBeacon);\n      return nodeTrees;\n    }\n  },\n\n\n  /**\n   * Returns the atom UID of this Node.\n   * @return {string}\n   */\n  getAtomUid: function() {\n    return this.atomUid_;\n  },\n\n\n  /**\n   * Returns the atom associated with this Node. This may hit session storage,\n   * so be aware of the performance implications of calling this.\n   * @return {?gws.act.Atom}\n   */\n  getAtom: function() {\n    return gws.act.cache.fetchAtom(this.atomUid_);\n  },\n\n\n  /**\n   * Returns true if this node has pending content.\n   * @return {boolean}\n   */\n  isPending: function() {\n    return this.getAtomUid() \x3d\x3d gws.act.PendingAtom.getInstance().getUid();\n  },\n\n\n  /**\n   * Serializes this Node into an Array-based form in order to put a\n   * representation of this tree into session storage. go/act-jslayout has\n   * details.\n   * @return {!Array}\n   * @override\n   */\n  serialize: function() {\n    var /** !Array\x3c*\x3e */ bits \x3d [this.containerId, this.atomUid_];\n    if (this.children) {\n      bits.push(goog.array.map(\n          this.children, function(child) { return child.serialize(); }));\n    }\n    return bits;\n  },\n\n\n  /**\n   * Return a new composition Tree with the specified nodes grafted in.\n   * @param {!Array\x3c!gws.act.Node\x3e} nodes\n   * @return {!gws.act.Node} The grafted tree.\n   */\n  graftMultiple: function(nodes) {\n    return goog.array.reduce(\n        nodes, function(base, graft) { return base.graft(graft); }, this);\n  },\n\n\n  /**\n   * Return a new composition Tree with the specified node grafted in.\n   * @param {!gws.act.Node} node\n   * @return {!gws.act.Node} The grafted tree.\n   */\n  graft: function(node) {\n    /**\n     * Returns a copy of the array with the specified index replaced by value.\n     * @param {!Array\x3c!gws.act.Node\x3e} array\n     * @param {number} index\n     * @param {!gws.act.Node} value\n     * @return {!Array\x3c!gws.act.Node\x3e}\n     */\n    function updatedArray(array, index, value) {\n      return goog.array.map(array, function(element, i) {\n        return (index \x3d\x3d i) ? value : element;\n      });\n    }\n\n    function graftHelper(base, graft) {\n      if (base.containerId \x3d\x3d graft.containerId) {\n        return {node: graft, replaced: true};\n      }\n\n      if (base.children) {\n        for (var i \x3d 0, child; child \x3d base.children[i]; ++i) {\n          var result \x3d graftHelper(child, graft);\n          if (result.replaced) {\n            // We changed the child, that means I need to clone myself.\n            // Since we know that we can\x27t mention the same containerId multiple\n            // times in the same tree, so we can early return.\n            return {\n              node: new gws.act.Node(\n                  base.containerId, base.getAtomUid(),\n                  updatedArray(base.children, i, result.node)),\n              replaced: true\n            };\n          } else {\n            // We didn\x27t change the child, so we can just keep going.\n          }\n        }\n      }\n\n      // We didn\x27t change ANY children.... just return me.\n      return {node: base, replaced: false};\n    }\n\n    var result \x3d graftHelper(this, node);\n    if (!result.replaced) {\n      const error \x3d new Error(\n          `Failed to graft! Unable to find container id: ${node.containerId}`);\n      // Log error even if it may be handled gracefully, to find possible\n      // instances of b/72433042.\n      search.log.errorLogger.log(error);\n      throw error;\n    }\n    return result.node;\n  },\n\n\n  /**\n   * Applies a tree of atoms.\n   * @param {!Document\x3d} opt_document Document to search in to find containers.\n   */\n  apply: function(opt_document) {\n    var shouldRecurse \x3d !!this.children;\n    // Special root node \x27\x27 should not be applied.\n    if (this.containerId) {\n      var container;\n      var doc \x3d opt_document || window.document;\n      container \x3d doc.getElementById(this.containerId);\n      if (!container) {\n        const error \x3d new Error(`Container ${this.containerId} not found!`);\n        // Log error even if it may be handled gracefully, to find possible\n        // instances of b/72433042.\n        search.log.errorLogger.log(error);\n        throw error;\n      }\n      shouldRecurse \x3d goog.asserts.assert(this.getAtom()).apply(container);\n    }\n    if (shouldRecurse) {\n      goog.array.forEach(\n          this.children || [], function(child) { child.apply(opt_document); });\n    }\n  },\n\n\n  /**\n   * Appends the passed-in node to this node.\n   *\n   * @param {!gws.act.Node} node\n   * @return {!gws.act.Node} The combination of old and appended nodes.\n   */\n  append: function(node) {\n    return this.insertBeforeOrAfter(\n        node, goog.dom.safe.InsertAdjacentHtmlPosition.BEFOREEND);\n  },\n\n\n  /**\n   * Prepends the passed-in node to this node.\n   *\n   * @param {!gws.act.Node} node\n   * @return {!gws.act.Node} The combination of old and appended nodes.\n   */\n  prepend: function(node) {\n    return this.insertBeforeOrAfter(\n        node, goog.dom.safe.InsertAdjacentHtmlPosition.AFTERBEGIN);\n  },\n\n\n  /**\n   * Prepends or appends the passed-in node to this node.\n   * Renders only the passed-in node in the containerId.\n   *\n   * The containerIds of both nodes must match.\n   *\n   * @param {!gws.act.Node} node\n   * @param {!goog.dom.safe.InsertAdjacentHtmlPosition} position\n   * @return {!gws.act.Node} The combination of old and appended nodes.\n   */\n  insertBeforeOrAfter: function(node, position) {\n    goog.asserts.assert(\n        this.containerId \x3d\x3d node.containerId, \x27Mismatched container id: \x27 +\n            this.containerId + \x27 \x27 + node.containerId);\n    goog.asserts.assert(this.getAtom(), \x27This atom must be defined\x27);\n    var appendedAtom \x3d node.getAtom();\n    goog.asserts.assert(appendedAtom, \x27Appended atom must be defined\x27);\n\n    var container \x3d goog.dom.getRequiredElement(this.containerId);\n    var newAtom;\n    switch (position) {\n      case goog.dom.safe.InsertAdjacentHtmlPosition.AFTERBEGIN:\n        newAtom \x3d goog.asserts.assert(this.getAtom())\n                      .prepend(appendedAtom, container);\n        break;\n      case goog.dom.safe.InsertAdjacentHtmlPosition.BEFOREEND:\n        newAtom \x3d\n            goog.asserts.assert(this.getAtom()).append(appendedAtom, container);\n        break;\n      default:\n        throw new Error(`Invalid position!`);\n    }\n    gws.act.cache.storeAtomInMemory(newAtom);\n    var newChildren \x3d (this.children || []).concat(node.children || []);\n    newChildren \x3d (newChildren.length \x3e 0) ? newChildren : undefined;\n    // If the passed-in node has any children, let\x27s apply those.\n    if (node.children) {\n      goog.array.forEach(node.children, function(child) { child.apply(); });\n    }\n    return new gws.act.Node(this.containerId, newAtom.getUid(), newChildren);\n  },\n\n\n  /**\n   * Visits each node in the tree in DOM order (preorder traversal).\n   * @param {function(!gws.act.Node)} callback\n   * TODO(applmak): Collapse these uses with \x27walk\x27 below.\n   */\n  preorder: function(callback) {\n    this.walk(function(node) {\n      callback(node);\n      return true;\n    });\n  },\n\n  /**\n   * Visits each node in the tree in DOM order. If the callback returns false,\n   * abort the walk down that branch.\n   * @param {function(!gws.act.Node): boolean} callback\n   */\n  walk: function(callback) {\n    if (!callback(this)) {\n      return;\n    }\n    if (this.children) {\n      goog.array.forEach(this.children, function(c) { c.walk(callback); });\n    }\n  },\n\n\n  /**\n   * Walks this tree and the passed-in tree, and calls the specified callback\n   * when a difference in atom id is detected.\n   * @param {!gws.act.Node} that\n   * @param {function(!gws.act.Node, !gws.act.Node)} callback The callback\n   *     invoked when a diff is detected. The first param is the node in \x27this\x27\n   *     tree and the second param is the node in \x27that\x27 tree.\n   */\n  diff: function(that, callback) {\n    goog.asserts.assert(\n        this.containerId \x3d\x3d that.containerId,\n        \x27Diff detected a mismatched container id! \x27 + this.containerId + \x27 \x27 +\n            that.containerId);\n    if (this.getAtomUid() !\x3d that.getAtomUid()) {\n      callback(this, that);\n      // Once a diff is detected, recursion doesn\x27t make sense, because the tree\n      // structure is quite different.\n      return;\n    }\n\n    if (this.children) {\n      goog.asserts.assert(\n          that.children, \x27Diff detected a structure \x27 +\n              \x27difference with no corresponding atom uid difference! \x27 +\n              this.containerId);\n      goog.asserts.assert(\n          this.children.length \x3d\x3d that.children.length,\n          \x27Diff detected a structure difference \x27 +\n              \x27with no corresponding atom uid difference! \x27 + this.containerId);\n      goog.array.forEach(this.children, function(thisChild, index) {\n        goog.asserts.assert(that.children);\n        thisChild.diff(that.children[index], callback);\n      });\n    }\n  },\n\n\n  /**\n   * Merges this tree and the passed-in tree, calling the specified callback\n   * when a difference in atom id is detected, and using its return value in the\n   * final tree.\n   * @param {!gws.act.Node} that\n   * @param {function(!gws.act.Node, !gws.act.Node): !gws.act.Node} callback\n   *     The callback invoked when a diff is detected. The first param is the\n   *     node in \x27this\x27 tree and the second param is the node in \x27that\x27 tree.\n   * @return {!gws.act.Node}\n   */\n  merge: function(that, callback) {\n    goog.asserts.assert(\n        this.containerId \x3d\x3d that.containerId,\n        \x27Merge detected a mismatched container id! \x27 + this.containerId + \x27 \x27 +\n            that.containerId);\n    if (this.getAtomUid() !\x3d that.getAtomUid()) {\n      return callback(this, that);\n    }\n\n    if (this.children) {\n      goog.asserts.assert(\n          that.children, \x27Merge detected a structure difference \x27 +\n              \x27with no corresponding atom uid difference! \x27 + this.containerId);\n      goog.asserts.assert(\n          this.children.length \x3d\x3d that.children.length,\n          \x27Merge detected a structure difference \x27 +\n              \x27with no corresponding atom uid difference! \x27 + this.containerId);\n      var newChildren \x3d\n          goog.array.map(this.children, function(thisChild, index) {\n            goog.asserts.assert(that.children);\n            return thisChild.merge(that.children[index], callback);\n          });\n      return new gws.act.Node(this.containerId, this.atomUid_, newChildren);\n    }\n    return this;\n  },\n\n\n  /**\n   * Finds the first node in this tree in pre-order traversal where the\n   * predicate function returns true.\n   * @param {function(!gws.act.Node): boolean} pred\n   * @return {gws.act.Node}\n   */\n  find: function(pred) {\n    if (pred(this)) {\n      return this;\n    }\n    if (this.children) {\n      for (var i \x3d 0, child \x3d null; child \x3d this.children[i]; ++i) {\n        var foundChild \x3d child.find(pred);\n        if (foundChild) {\n          return foundChild;\n        }\n      }\n    }\n    return null;\n  },\n\n\n  /**\n   * Finds the first node in this tree in pre-order traversal that has the\n   * passed-in containerId.\n   * @param {string} container\n   * @return {gws.act.Node}\n   */\n  findByName: function(container) {\n    return this.find(function(child) {\n      return child.containerId \x3d\x3d container;\n    });\n  },\n\n\n  /**\n   * Finds all nodes in this tree in pre-order traversal where the predicate\n   * function returns true.\n   * @param {function(!gws.act.Node): boolean} pred\n   * @return {!Array\x3cgws.act.Node\x3e}\n   */\n  findAll: function(pred) {\n    // Use a helper to accumulate results since it\x27s much faster than a naive\n    // implementation which merges results from each recursive call.\n    function helper(node, pred, results) {\n      if (pred(node)) {\n        results.push(node);\n      }\n      if (node.children) {\n        goog.array.forEach(\n            node.children, function(child) { helper(child, pred, results); });\n      }\n      return results;\n    }\n    return helper(this, pred, []);\n  },\n\n\n  /**\n   * Returns a debug string version of the node.\n   * DEBUG-only.\n   * @param {number\x3d} opt_indent\n   * @return {string}\n   */\n  print: function(opt_indent) {\n    if (!goog.DEBUG) {\n      throw new Error(\x27print() called in non-DEBUG context\x27);\n    }\n\n    function repeat(n, s) {\n      var ret \x3d \x27\x27;\n      for (var i \x3d 0; i \x3c n; ++i) {\n        ret +\x3d s;\n      }\n      return ret;\n    }\n\n    var indent \x3d opt_indent || 0;\n    var ret \x3d\n        repeat(indent, \x27  \x27) + this.containerId + \x27: \x27 + this.getAtomUid();\n    var persisted \x3d gws.act.cache.atoms_.isPersisted(this.getAtomUid());\n    var missing \x3d !this.getAtom();\n    var tags \x3d [];\n    if (persisted) {\n      tags.push(\x27persisted\x27);\n    }\n    if (missing) {\n      tags.push(\x27missing\x27);\n    }\n    if (tags.length) {\n      ret +\x3d \x27 (\x27 + tags.join(\x27, \x27) + \x27)\x27;\n    }\n    if (this.children \x26\x26 this.children.length) {\n      ret +\x3d \x27\\n\x27 +\n          goog.array\n              .map(\n                  this.children,\n                  function(child) {\n                    return child.print(indent + 1);\n                  })\n              .join(\x27\\n\x27);\n    }\n    return ret;\n  }\n});\n\n\n/**\n * A const node representing the empty tree. NOTE: This empty node\n * references a nonexistent atom uid so that any attempt to actually apply\n * it would fail.  Applying this tree and wiping the page is surely not\n * desired behavior, so we fail intentionally. However, the tree can be\n * grafted onto normally.\n * @const {!gws.act.Node}\n */\ngws.act.EMPTY_NODE \x3d new gws.act.Node(\x27\x27, \x27_epsilon\x27);\n\n\n/* Below here are subclasses of Atom. */\n\n\n/**\n* An atom representing a jslayout template.\n*/\ngws.act.JslayoutAtom \x3d goog.defineClass(gws.act.Atom, {\n  /**\n   * Construct a new atom representing a jslayout template.\n   * @param {string} html\n   * @param {string\x3d} opt_id\n   * @param {!Array\x3d} opt_reactiveContext The jspb-encoded reactive context of\n   *     the atom.\n   * @param {!Object\x3d} opt_attributes A dictionary of attributes to apply to\n   *     the container Element.\n   * @param {!Array\x3c!Array\x3e\x3d} opt_rawWizJsMapEntries Array of jspb-encoded Wiz\n   *     jsdata entries.\n   * @param {!Array\x3c!Array\x3e\x3d} opt_rawReactiveContexts Array of jspb-encoded\n   *     reactive contexts to process in addition to opt_reactiveContext.\n   */\n  constructor: function(\n      html, opt_id, opt_reactiveContext, opt_attributes, opt_rawWizJsMapEntries,\n      opt_rawReactiveContexts) {\n    gws.act.JslayoutAtom.base(this, \x27constructor\x27);\n\n    /** @private {string} */\n    this.id_ \x3d opt_id || gws.act.cache.getUniqueAtomId_();\n\n    /** @private {string} */\n    this.html_ \x3d html;\n\n    /** @private {!Array|undefined} */\n    this.reactiveContextMetadata_ \x3d opt_reactiveContext;\n\n    /** @private {!Object|undefined} */\n    this.attributes_ \x3d opt_attributes;\n\n    /** @private @const */\n    this.rawWizJsMapEntries_ \x3d opt_rawWizJsMapEntries;\n\n    // TODO(b/71548063): Merge opt_reactiveContext and opt_rawReactiveContexts.\n    /** @private @const */\n    this.rawReactiveContexts_ \x3d opt_rawReactiveContexts;\n  },\n\n\n  statics: {\n    /**\n     * @param {string} html\n     * @param {string\x3d} opt_id\n     * @param {!Array\x3d} opt_reactiveContext The jspb-encoded reactive context of\n     *     the atom.\n     * @param {!Object\x3d} opt_attributes A dictionary of attributes to apply to\n     *     the container Element.\n     * @param {!Array\x3c!Array\x3e\x3d} opt_rawWizJsMapEntries Array of jspb-encoded Wiz\n     *     jsdata entries.\n     * @param {!Array\x3c!Array\x3e\x3d} opt_rawReactiveContexts Array of jspb-encoded\n     *     reactive contexts to process in addition to opt_reactiveContext.\n     * @return {!gws.act.JslayoutAtom}\n     */\n    create: function(\n        html, opt_id, opt_reactiveContext, opt_attributes,\n        opt_rawWizJsMapEntries, opt_rawReactiveContexts) {\n      if (!html \x26\x26 !opt_id \x26\x26 !opt_reactiveContext \x26\x26\n          (!opt_attributes || goog.object.isEmpty(opt_attributes))) {\n        return gws.act.JslayoutAtom.EMPTY;\n      }\n      return new gws.act.JslayoutAtom(\n          html, opt_id, opt_reactiveContext, opt_attributes,\n          opt_rawWizJsMapEntries, opt_rawReactiveContexts);\n    },\n\n    /**\n     * Handles clearing and setting the right attributes on the container.\n     * @param {!Object|undefined} attrs The attributes that need to be applied,\n     *     or undefined if no changes should be made to the container element.\n     * @param {!Element} container The container element to which these\n     * attributes will be applied.\n     *\n     * @private\n     */\n    handleAttributes_: function(attrs, container) {\n      if (!attrs) {\n        return;\n      }\n      var keysToRemove \x3d [];\n      for (var i \x3d 0; i \x3c container.attributes.length; ++i) {\n        var attribute \x3d container.attributes[i];\n        if (!gws.act.Atom.isSpecialActAttribute_(attribute.name)) {\n          keysToRemove.push(attribute.name);\n        }\n      }\n\n      goog.array.forEach(\n          keysToRemove, function(key) { container.removeAttribute(key); });\n\n      for (var k in attrs) {\n        container.setAttribute(k, attrs[k]);\n      }\n    }\n  },\n\n\n  /**\n   * @override\n   */\n  getUid: function() {\n    return this.id_;\n  },\n\n\n  /**\n   * Returns the type of this atom.\n   * @override\n   */\n  getType: function() {\n    return \x27dom\x27;\n  },\n\n\n  /**\n   * Fills the container referenced by containerId with the html contents of\n   * this atom.\n   * @override\n   */\n  apply: function(container) {\n    var telemetryBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_apply \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(telemetryBeacon);\n\n    var disposeBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_apply_dispose \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(disposeBeacon);\n    // Before setting new HTML, dispose old Reactive contexts.\n    jslayout.reactive.framework.disposeContextsInContainer(container);\n    gws.debug.telemetry.endInteraction(disposeBeacon);\n\n    var popBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_apply_pop \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(popBeacon);\n    // Pop contents onto the page.\n    container.innerHTML \x3d this.html_;\n    gws.debug.telemetry.endInteraction(popBeacon);\n\n    var attrBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_apply_attr \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(attrBeacon);\n\n    // Fix up the container\x27s attributes.\n    gws.act.JslayoutAtom.handleAttributes_(this.attributes_, container);\n    gws.debug.telemetry.endInteraction(attrBeacon);\n\n    // Execute contained scripts, since innerHTML doesn\x27t do it.\n    if (gws.act.executeScripts) {\n      this.executeScripts_(container, []);\n    }\n\n    // Instantiate controllers in the page.\n    if (this.reactiveContextMetadata_) {\n      jslayout.reactive.framework.processRawContextMetadata(\n          this.reactiveContextMetadata_);\n    }\n    if (this.rawReactiveContexts_) {\n      for (const rawReactiveContext of this.rawReactiveContexts_) {\n        jslayout.reactive.framework.processRawContextMetadata(\n            rawReactiveContext);\n      }\n    }\n    if (this.rawWizJsMapEntries_) {\n      for (const rawWizJsMapEntry of this.rawWizJsMapEntries_) {\n        const wizJsMapEntry \x3d\n            new proto.prototemplate.WizJsMapEntry(rawWizJsMapEntry);\n        window[\x27W_jd\x27][wizJsMapEntry.getId()] \x3d JSON.parse(\n            goog.asserts.assert(wizJsMapEntry.getSerializedMessage()));\n      }\n    }\n    search.wiz.manager.dirty();\n    gws.debug.telemetry.endInteraction(telemetryBeacon);\n\n    return true;\n  },\n\n\n  /**\n   * Serialize the DOM to an array.\n   * @override\n   */\n  serialize: function() {\n    var ret \x3d [\n      \x27dom\x27,\n      this.html_,\n      this.id_,\n      this.reactiveContextMetadata_ || null,\n      this.attributes_ || null,\n      this.rawWizJsMapEntries_ || null,\n      this.rawReactiveContexts_ || null,\n    ];\n    // Trim trailing nulls. Using \x3d\x3d\x3d to prevent accidental infinite loop.\n    while (ret[ret.length - 1] \x3d\x3d\x3d null) {\n      ret.pop();\n    }\n    return ret;\n  },\n\n\n  /** @override */\n  append: function(appendAtom, container) {\n    return this.insertAdjacentHtml(\n        appendAtom, container,\n        goog.dom.safe.InsertAdjacentHtmlPosition.BEFOREEND);\n  },\n\n\n  /** @override */\n  prepend: function(appendAtom, container) {\n    return this.insertAdjacentHtml(\n        appendAtom, container,\n        goog.dom.safe.InsertAdjacentHtmlPosition.AFTERBEGIN);\n  },\n\n\n  /**\n   * The atom that is being appended must be of the same type as the\n   * existing atom.\n   *\n   * A new id is generated for the returned atom.\n   *\n   * Should we care about the attributes of the appended atom?\n   * What if the existing atom has \x22class: \x27a b\x27\x22 and the appended atom\n   * has \x22class: \x27c d\x27\x22, who wins?\n   *\n   * @param {!gws.act.Atom} appendAtom\n   * @param {!Element} container\n   * @param {!goog.dom.safe.InsertAdjacentHtmlPosition} position\n   *\n   * @return {!gws.act.Atom} A new atom with the combined content,\n   */\n  insertAdjacentHtml: function(appendAtom, container, position) {\n    var appendBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_append \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(appendBeacon);\n\n    var atom \x3d /** @type {!gws.act.JslayoutAtom} **/ (appendAtom);\n\n    if (atom.getType() !\x3d \x27dom\x27) {\n      search.log.errorLogger.log(\n          new Error(\x27Cannot append atoms of different types.\x27),\n          {\x27source_type\x27: this.getType(), \x27append_type\x27: atom.getType()});\n    }\n\n    var existingScriptTags \x3d goog.array.clone(\n        goog.dom.getElementsByTagName(goog.dom.TagName.SCRIPT, container));\n\n    // Make sure we add the HTML to the page without\n    // affecting the existing DOM.\n    var appendPopBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_append_pop \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(appendPopBeacon);\n    container.insertAdjacentHTML(position, atom.html_);\n    gws.debug.telemetry.endInteraction(appendPopBeacon);\n\n    // Execute contained scripts, since insertAdjacentHTML doesn\x27t do it.\n    if (gws.act.executeScripts) {\n      this.executeScripts_(container, existingScriptTags);\n    }\n\n    var attrs \x3d {};\n    if (this.attributes_) {\n      goog.object.extend(attrs, this.attributes_);\n    }\n    if (atom.attributes_) {\n      goog.object.extend(attrs, atom.attributes_);\n      // Only set the attributes of the new appended atom.\n      for (var k in atom.attributes_) {\n        container.setAttribute(k, atom.attributes_[k]);\n      }\n    }\n\n    if (atom.reactiveContextMetadata_) {\n      jslayout.reactive.framework.appendRawContextMetadata(\n          atom.reactiveContextMetadata_);\n    }\n    if (atom.rawReactiveContexts_) {\n      for (const rawReactiveContext of atom.rawReactiveContexts_) {\n        jslayout.reactive.framework.appendRawContextMetadata(\n            rawReactiveContext);\n      }\n    }\n\n    let combinedRawWizJsMapEntries \x3d this.rawWizJsMapEntries_;\n    if (atom.rawWizJsMapEntries_) {\n      for (const rawWizJsMapEntry of atom.rawWizJsMapEntries_) {\n        const wizJsMapEntry \x3d\n            new proto.prototemplate.WizJsMapEntry(rawWizJsMapEntry);\n        window[\x27W_jd\x27][wizJsMapEntry.getId()] \x3d JSON.parse(\n            goog.asserts.assert(wizJsMapEntry.getSerializedMessage()));\n      }\n      combinedRawWizJsMapEntries \x3d combinedRawWizJsMapEntries ?\n          combinedRawWizJsMapEntries.concat(atom.rawWizJsMapEntries_) :\n          atom.rawWizJsMapEntries_;\n    }\n    search.wiz.manager.dirty();\n\n    gws.debug.telemetry.endInteraction(appendBeacon);\n    // Create the atom with all the attributes.\n    let html \x3d this.html_;\n    if (position \x3d\x3d goog.dom.safe.InsertAdjacentHtmlPosition.AFTERBEGIN) {\n      html \x3d atom.html_ + html;\n    } else if (position \x3d\x3d goog.dom.safe.InsertAdjacentHtmlPosition.BEFOREEND) {\n      html \x3d html + atom.html_;\n    }\n    return gws.act.JslayoutAtom.create(\n        html, undefined, this.reactiveContextMetadata_, attrs,\n        combinedRawWizJsMapEntries);\n  },\n\n\n  /**\n   * Executes scripts inside specified container.\n   * @param {!Element} container The element which may have script tags.\n   * @param {!Array\x3c!Element\x3e} tagsToIgnore If the script tag is listed here,\n   *     the script won\x27t be executed.\n   * @private\n   */\n  executeScripts_: function(container, tagsToIgnore) {\n    var scriptBeacon \x3d new gws.debug.telemetry.Beacon(\n        \x27act\x27, \x27jslayout_atom_apply_script \x27 + container.id);\n    gws.debug.telemetry.beginInteraction(scriptBeacon);\n\n    // TODO(gws-ui-eng): We should do that separation on the server. This atom\n    // should consist of the html part and the script part, that can be either\n    // eval\x27d or inserted as a script node.\n    var scriptTags \x3d\n        goog.dom.getElementsByTagName(goog.dom.TagName.SCRIPT, container);\n    var scripts \x3d goog.array.filter(goog.array.map(scriptTags, function(tag) {\n      return goog.array.contains(tagsToIgnore, tag) ? null : tag.text;\n    }), goog.functions.identity);\n\n    if (scripts.length !\x3d 0) {\n      // Create one script element wrapper to insert all the script blocks.\n      // This will effectively execute the contained scripts.\n      var xjsElem \x3d goog.dom.createElement(goog.dom.TagName.SCRIPT);\n      xjsElem.text \x3d scripts.join(\x27;\x27);\n      goog.dom.appendChild(container, xjsElem);\n      // Clean up the temporary script wrapper, since all scripts have been\n      // executed by now.\n      goog.dom.removeNode(xjsElem);\n    }\n    gws.debug.telemetry.endInteraction(scriptBeacon);\n  },\n\n\n  /**\n   * Returns true if the atom contains no html.\n   * @return {boolean}\n   */\n  isEmpty: function() {\n    return !this.html_;\n  }\n});\n\n\n/** @type {!gws.act.JslayoutAtom} */\ngws.act.JslayoutAtom.EMPTY \x3d new gws.act.JslayoutAtom(\x27\x27, \x27_e\x27);\ngws.act.Atom.register(\x27dom\x27, gws.act.JslayoutAtom.create);\n\n\n/**\n * Pending atom type.\n */\ngws.act.PendingAtom \x3d goog.defineClass(gws.act.Atom, {\n  constructor: function() {\n    gws.act.PendingAtom.base(this, \x27constructor\x27);\n  },\n\n\n  /** @override */\n  getUid: goog.functions.constant(\x27_p\x27),\n\n\n  /** @override */\n  getType: goog.functions.constant(\x27pending\x27),\n\n\n  /** @override */\n  apply: function() {\n    search.log.errorLogger.log(\n        new Error(\x27applying a pending atom is just plain wrong\x27));\n    return false;\n  },\n\n  /**\n   * isEmpty is always false for this type.\n   * @return {boolean}\n   */\n  isEmpty: goog.functions.TRUE,\n\n\n  /** @override */\n  serialize: goog.functions.constant([\x27pending\x27])\n});\ngoog.addSingletonGetter(gws.act.PendingAtom);\ngws.act.Atom.register(\n    \x27pending\x27, goog.partial(goog.functions.create, gws.act.PendingAtom));\n\n\n/**\n * Atom which represents CSS.\n * In the future, this may become part of the jslayout atom.\n */\ngws.act.CssAtom \x3d goog.defineClass(gws.act.Atom, {\n  /**\n   * @param {string} css\n   * @param {string\x3d} opt_id\n   */\n  constructor: function(css, opt_id) {\n    gws.act.CssAtom.base(this, \x27constructor\x27);\n\n    /** @private {string} */\n    this.css_ \x3d css;\n\n    /** @private {string} */\n    this.id_ \x3d opt_id || gws.act.cache.getUniqueAtomId_();\n  },\n\n\n  /** @override */\n  getUid: function() {\n    return this.id_;\n  },\n\n\n  /** @override */\n  getType: function() {\n    return \x27css\x27;\n  },\n\n\n  /** @override */\n  apply: function(container) {\n    goog.asserts.assertInstanceof(\n        container, HTMLStyleElement,\n        \x27Attempting to apply CssAtom to \x3c\x27 + container.tagName + \x27\x3e\x27);\n    goog.style.setSafeStyleSheet(\n        container,\n        goog.html.legacyconversions.safeStyleSheetFromString(this.css_));\n    return true;\n  },\n\n  /** @override */\n  append: function(atom, containerId) {\n    // TODO(ndsouza): Is this a legit operation?\n    return this;\n  },\n\n\n  /** @override */\n  prepend: function(atom, containerId) {\n    // TODO(ndsouza): Is this a legit operation?\n    return this;\n  },\n\n\n  /** @override */\n  serialize: function() {\n    return [\x27css\x27, this.css_, this.id_];\n  }\n});\ngws.act.Atom.register(\n    \x27css\x27, goog.partial(goog.functions.create, gws.act.CssAtom));\n\n\n/**\n * An Atom representing some meta-attributes of the page, like Title.\n */\ngws.act.DocumentInfoAtom \x3d goog.defineClass(gws.act.Atom, {\n  /**\n   * @param {string} title\n   * @param {string} bodyClass\n   * @param {string} eventId\n   */\n  constructor: function(title, bodyClass, eventId) {\n    gws.act.DocumentInfoAtom.base(this, \x27constructor\x27);\n\n    /** @private @const {string} */\n    this.title_ \x3d title;\n\n    /** @private @const {string} */\n    this.bodyClass_ \x3d bodyClass;\n\n    /** @private @const {string} */\n    this.eventId_ \x3d eventId;\n  },\n\n\n  /** @override */\n  getUid: function() {\n    return \x27doc_\x27 + this.eventId_;\n  },\n\n\n  /** @override */\n  getType: goog.functions.constant(\x27doc\x27),\n\n\n  /** @override */\n  apply: function(container) {\n    document.title \x3d this.title_;\n    var classes \x3d this.bodyClass_.split(\x27 \x27);\n    goog.array.forEach(classes, function(className) {\n      if (className.length \x3e 0) {\n        goog.dom.classlist.add(document.body, className);\n      }\n    });\n    goog.exportSymbol(\x27google.kEI\x27, this.eventId_);\n    return true;\n  },\n\n\n  /** @override */\n  serialize: function() {\n    return [\x27doc\x27, this.title_, this.bodyClass_, this.eventId_];\n  },\n\n\n  /** @override */\n  append: function(atom, containerId) {\n    // no-op.\n    return this;\n  },\n\n\n  /** @override */\n  prepend: function(atom, containerId) {\n    // no-op.\n    return this;\n  }\n});\ngws.act.Atom.register(\n    \x27doc\x27, goog.partial(goog.functions.create, gws.act.DocumentInfoAtom));\n\n\n// The global Act cache.\n\n\n/**\n * Storage for atoms.\n * @private {!gws.act.Storage}\n */\ngws.act.cache.atoms_ \x3d new gws.act.Storage(\n    search.cache.Namespace.ACT_ATOM_STORAGE, gws.act.Atom.deserialize);\n\n\n/**\n * Storage for nodes.\n * @private {!gws.act.Storage}\n */\ngws.act.cache.nodes_ \x3d new gws.act.Storage(\n    search.cache.Namespace.ACT_NODE_STORAGE, gws.act.Node.deserialize);\n\n\n/** @private {!storagecache.Cache} */\ngws.act.cache.miscStorage_ \x3d search.cache.factory.get(\n    storagecache.PersistentStorageType.SESSION,\n    search.cache.Namespace.ACT_MISC_STORAGE);\n\n\n/** @private {string} */\ngws.act.cache.SESSION_STORAGE_NEXT_ID_ \x3d \x27acti\x27;\n\n\n/**\n * Write a value to misc session storage if not present. Returns the value in\n * session storage.\n * @param {string} key\n * @param {string} value\n * @return {string}\n */\ngws.act.cache.writeToMiscIfNotPresent \x3d function(key, value) {\n  var existingValue \x3d gws.act.cache.miscStorage_.get(key);\n  if (existingValue !\x3d null) {\n    return /** @type {string} */ (existingValue);\n  }\n  gws.act.cache.miscStorage_.set(key, value);\n  return value;\n};\n\n\n// TODO(ryoji): Break this off as an independent use of sessionStorage\n// to avoid having atom logic alone depend on gws.act.cache.\n/**\n * Generates an atom ID unique to sessionStorage context.\n * When the server doesn\x27t want to bother sending down an atom ID, we choose\n * to sythesize one instead. For now, choose a global decrementing integer.\n * @return {string}\n * @private\n */\ngws.act.cache.getUniqueAtomId_ \x3d function() {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_get_unique_atom_id\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  // Browsers with fast back navigation caching can keep multiple page\n  // in a loaded state at the same time for one tab; so interleaved use\n  // use of this by different page sessions is possible.  So we can\x27t read\n  // this into memory only at the start of the page session.\n  var storedValue \x3d\n      gws.act.cache.miscStorage_.get(gws.act.cache.SESSION_STORAGE_NEXT_ID_);\n  var lastClientCacheIndex \x3d 0;\n  if (goog.isString(storedValue)) {\n    var lastIndex \x3d goog.string.toNumber(/** @type {string} */ (storedValue));\n    if (!isNaN(lastIndex)) {\n      lastClientCacheIndex \x3d lastIndex;\n    }\n  }\n\n  --lastClientCacheIndex;\n\n  gws.act.cache.miscStorage_.set(\n      gws.act.cache.SESSION_STORAGE_NEXT_ID_, \x27\x27 + lastClientCacheIndex);\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n  return String(lastClientCacheIndex);\n};\n\n\n/**\n * Stores a node tree into the cache under the given key.\n * @param {string} key\n * @param {!gws.act.Node} tree\n */\ngws.act.cache.storeTree \x3d function(key, tree) {\n  gws.act.cache.storeTree_(key, tree);\n};\n\n\n/**\n * @param {string} key\n * @param {!gws.act.Node} tree\n * @private\n */\ngws.act.cache.storeTree_ \x3d function(key, tree) {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_store_tree\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  goog.log.fine(gws.act.logger_, function() {\n    return \x27Storing tree: \x27 + key + \x27\\n\x27 + tree.print();\n  });\n  gws.act.cache.nodes_.store(key, tree);\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n};\n\n\n/**\n * Stores a node tree in the cache under the given key and stores its atoms.\n * @param {string} key\n * @param {!gws.act.Node} tree\n */\ngws.act.cache.storeTreeWithAtoms \x3d function(key, tree) {\n  gws.act.cache.storeTree_(key, tree);\n  tree.preorder(function(node) {\n    if (!node.containerId) {\n      return;\n    }\n    var atom \x3d node.getAtom();\n    if (atom) {\n      gws.act.cache.storeAtom_(atom);\n    } else {\n      search.log.errorLogger.log(\n          new Error(\x27No atom!\x27), {\x27k\x27: key, \x27c\x27: node.containerId});\n    }\n  });\n};\n\n\n/**\n * This is only intended for support of legacy JESR app logic and should\n * not be used elsewhere until a general cache removal model is defined.\n * Removes the stored tree previously put under a key.  If there is\n * already no tree stored under the passed key, the call does nothing.\n * This does not do garbage collection of atoms that were only referenced\n * by the tree being removed.\n * @param {string} key\n */\ngws.act.cache.removeTree \x3d function(key) {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_remove_tree\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  gws.act.cache.nodes_.remove(key);\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n};\n\n\n/**\n * Stores an atom into the cache.\n * @param {!gws.act.Atom} atom\n */\ngws.act.cache.storeAtom \x3d function(atom) {\n  gws.act.cache.storeAtom_(atom);\n};\n\n/**\n * Removes an Atom from storage. Note that there may still be Nodes that refer\n * to this atom in memory, and that those Nodes will no longer be able to render\n * correctly after calling this method.\n * @param {string} key\n */\ngws.act.cache.removeAtom \x3d function(key) {\n  goog.log.fine(gws.act.logger_, \x27Removing atom: \x27 + key);\n  gws.act.cache.atoms_.remove(key);\n};\n\n/**\n * @param {!gws.act.Atom} atom\n * @private\n */\ngws.act.cache.storeAtom_ \x3d function(atom) {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_store_atom\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  var key \x3d atom.getUid();\n  goog.log.fine(gws.act.logger_, \x27Storing atom: \x27 + key);\n  // TODO(applmak): This could be slow. Maybe do some analysis?\n  gws.act.cache.atoms_.store(key, atom);\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n};\n\n\n/**\n * Stores an atom in the cache, but in memory only. This is useful, when we need\n * a place to stick some atoms, but don\x27t necessarily want to cache it to disk.\n * Users that want to persist an atom should use act.cache.storeAtom.\n * TODO(applmak): This API allows us to remove the cachedAtom_ bit on Nodes.\n * @param {!gws.act.Atom} atom\n */\ngws.act.cache.storeAtomInMemory \x3d function(atom) {\n  var key \x3d atom.getUid();\n  goog.log.fine(gws.act.logger_, \x27Storing atom in memory: \x27 + key);\n  gws.act.cache.atoms_.storeInMemory(key, atom);\n};\n\n\n/**\n * Retrieves an atom from the cache with the specified uid. If the atom is not\n * found, returns null.\n * @param {string} uid\n * @return {?gws.act.Atom}\n */\ngws.act.cache.fetchAtom \x3d function(uid) {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_fetch_atom\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  var atom \x3d /** @type {?gws.act.Atom} */ (gws.act.cache.atoms_.get(uid));\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n  return atom;\n};\n\n\n/**\n * Retrieves a composition tree from the cache with the specified key. Note that\n * retrieving a tree does not also retrieve its atoms. If the tree is not found,\n * returns null.\n * @param {string} key\n * @return {?gws.act.Node}\n */\ngws.act.cache.fetchTree \x3d function(key) {\n  var telemetryBeacon \x3d\n      new gws.debug.telemetry.Beacon(\x27act\x27, \x27cache_fetch_tree\x27);\n  gws.debug.telemetry.beginInteraction(telemetryBeacon);\n  var tree \x3d /** @type {?gws.act.Node} */ (gws.act.cache.nodes_.get(key));\n  gws.debug.telemetry.endInteraction(telemetryBeacon);\n  return tree;\n};\n\n\n/**\n * Resets the cache for testing purposes.\n */\ngws.act.cache.reset \x3d function() {\n  gws.act.cache.atoms_.clear();\n  gws.act.cache.nodes_.clear();\n  gws.act.cache.miscStorage_.clear();\n  gws.act.cache.storeAtomInMemory(gws.act.PendingAtom.getInstance());\n  gws.act.cache.storeAtomInMemory(gws.act.JslayoutAtom.EMPTY);\n};\n\n\n/**\n * @type {boolean}\n *\n * By default, script tags placed into the DOM by ACT will be executed.  If this\n * isn\x27t desired (and ONLY in tests), you can turn off this behavior here.\n */\ngws.act.executeScripts \x3d true;\n\n\n/**\n * Returns a version of the tree with all the Pending atoms replaced by Empty\n * atoms. The original tree is unaffected. This is handy when one wants to\n * render a tree with pending atoms, as during a progressive render, because\n * Pending atoms throw on render.\n * @param {!gws.act.Node} tree\n * @return {!gws.act.Node}\n */\ngws.act.convertPendingToEmpty \x3d function(tree) {\n  tree.preorder(function(node) {\n    if (node.isPending()) {\n      // Note that pending containers can\x27t have any children, so we avoid that\n      // complexity during the graft.\n      tree \x3d tree.graft(new gws.act.Node(\n          node.containerId, gws.act.JslayoutAtom.EMPTY.getUid()));\n    }\n  });\n  return tree;\n};\n\n// Force the pending \x26 empty atoms to always be in the cache.\n(function() {\n  gws.act.cache.storeAtomInMemory(gws.act.PendingAtom.getInstance());\n  gws.act.cache.storeAtomInMemory(gws.act.JslayoutAtom.EMPTY);\n})();\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/act/act.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy8f');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy8f');

}catch(e){_DumpException(e)}
/* _Module_:sye5 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sye5');
var $googDebugFname="googledata/html/templates/gws/head/xjs/quantum/motions/immersive/state_utils.js";
eval("/**\n * @fileoverview State Utils for immersive motions.\n */\ngoog.provide(\x27gws.quantum.motions.immersive.stateUtils\x27);\n\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27gws.historyState\x27);\ngoog.require(\x27gws.quantum.motions.immersive.StateKeys\x27);\n\n\ngoog.scope(function() {\nconst StateKeys \x3d gws.quantum.motions.immersive.StateKeys;\nconst stateUtils \x3d gws.quantum.motions.immersive.stateUtils;\n\n\n/**\n * A key to use for the immersion state in GWS history.\n * @const\n */\nstateUtils.IMAGES_RESULT_CAROUSEL_NULL_PLACEHOLDER \x3d \x27_\x27;\n\n\n/**\n * @return {boolean} Whether an immersive history state is present.\n */\nstateUtils.hasImmersiveHistoryState \x3d function() {\n  return goog.object.some(StateKeys, function(v) {\n    return stateUtils.hasParticularImmersiveHistoryStateKey(v);\n  });\n};\n\n/**\n * @param {!StateKeys} stateKey\n * @return {boolean} Whether the given immersive history state is present.\n */\nstateUtils.hasParticularImmersiveHistoryStateKey \x3d function(stateKey) {\n  const historyStateValueForStateKey \x3d gws.historyState.getParam(stateKey);\n\n  if (historyStateValueForStateKey \x3d\x3d \x27\x27) {\n    return false;\n  }\n\n  // Handle unique cases.\n  if (stateKey \x3d\x3d StateKeys.HISTORY) {\n    return historyStateValueForStateKey !\x3d \x270\x27;\n  }\n\n  if (stateKey \x3d\x3d StateKeys.IMAGES_RESULT_CAROUSEL) {\n    return historyStateValueForStateKey !\x3d\n        stateUtils.IMAGES_RESULT_CAROUSEL_NULL_PLACEHOLDER;\n  }\n\n  if (stateKey \x3d\x3d StateKeys.FLIGHTS) {\n    return historyStateValueForStateKey.indexOf(\x27;e:1\x27) !\x3d -1;\n  }\n\n  // All other cases.\n  return !!historyStateValueForStateKey;\n};\n\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/quantum/motions/immersive/state_utils.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sye5');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sye5');

}catch(e){_DumpException(e)}
/* _Module_:sytj */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sytj');
var $googDebugFname="googledata/html/templates/gws/head/xjs/quantum/api/page.js";
goog.loadModule("/**\n * @fileoverview Provide API to access things about the page, like the current\n * ACT Tree, for Quantum when JESR is not enabled.\n */\ngoog.module(\x27gws.quantum.api.page\x27);\n\nconst Promise \x3d goog.require(\x27goog.Promise\x27);\n\nconst initialPageResolver_ \x3d Promise.withResolver();\n\n/**\n * @return {!Promise\x3c!gws.act.Node\x3e} A promise which will resolve to\n * the ACT node representing the initial page.\n */\nexports.getInitialPage \x3d () \x3d\x3e {\n  return initialPageResolver_.promise;\n};\n\n/**\n * @param {!gws.act.Node} tree The ACT node representing the initial page.\n */\nexports.setInitialPage \x3d tree \x3d\x3e {\n  initialPageResolver_.resolve(tree);\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/quantum/api/page.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sytj');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sytj');

}catch(e){_DumpException(e)}
/* _Module_:qim */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('qim');
var $googDebugFname="googledata/html/templates/gws/head/xjs/quantum/immersive.js";
goog.loadModule("/**\n * @fileoverview This module saves the state the initial page rendering to an\n * Act tree after the page loads, and loads any immersives that should be\n * opened, but are not always included in the secondary XJS request.\n */\n\ngoog.module(\x27gws.quantum.immersive\x27);\n\nconst CssAtom \x3d goog.require(\x27gws.act.CssAtom\x27);\nconst JslayoutAtom \x3d goog.require(\x27gws.act.JslayoutAtom\x27);\nconst Node \x3d goog.require(\x27gws.act.Node\x27);\nconst StateKeys \x3d goog.require(\x27gws.quantum.motions.immersive.StateKeys\x27);\nconst TagName \x3d goog.require(\x27goog.dom.TagName\x27);\nconst page \x3d goog.require(\x27gws.quantum.api.page\x27);\nconst stateUtils \x3d goog.require(\x27gws.quantum.motions.immersive.stateUtils\x27);\n\n/**\n * Initialization hook.\n */\nfunction init() {\n  // Store the current traditional render as the current ACT node in the quantum\n  // API. Wait for DOMContentLoaded event.\n  google.dclc(() \x3d\x3e {\n    const roots \x3d Node.createTreesFromDomFragment(\n        /** @type {!Element} */ (document.documentElement),\n        (container, html) \x3d\x3e {\n          return container.tagName \x3d\x3d TagName.STYLE ? new CssAtom(html) :\n                                                      new JslayoutAtom(html);\n        });\n    const root \x3d new Node(\x27\x27, \x27\x27, roots);\n    // TODO(alishah): Merge with gws.jesr.rendering.getCurrent().\n    page.setInitialPage(root);\n  });\n\n  // If the Trex param appears in the history state, the Trex pinto module\n  // needs to be loaded so that it can handle the hash change callback\n  // which will the request for the current immersive  UI.\n  //\n  // The trex module is late-loaded here to avoid inline javascript\n  // checking for the Trex state on each SRP. Doing this with inline\n  // javascript in the header would result in worse overall page latency.\n  //\n  // More information on trex at: go/trex-dd.\n  if (stateUtils.hasParticularImmersiveHistoryStateKey(StateKeys.TREX)) {\n    // The Trex pinto module has the same name as its URL param.\n    google.load(StateKeys.TREX);\n  }\n}\n\nexports \x3d {init};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/quantum/immersive.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/quantum/immersive_start.js";
goog.loadModule("goog.module(\x27gws.quantum.immersiveStart\x27);\n\nconst immersive \x3d goog.require(\x27gws.quantum.immersive\x27);\n\nimmersive.init();\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/quantum/immersive_start.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('qim');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('qim');

}catch(e){_DumpException(e)}
/* _Module_:sy4q */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy4q');
var $googDebugFname="googledata/html/templates/gws/head/xjs/attention/prod/constants.js";
eval("/**\n * @fileoverview Exported constants used by gws.attentionProd.\n */\n\ngoog.provide(\x27gws.attentionProd.constants\x27);\n\n\n/**\n * ID of anchor element used by gws.attentionProd.anchorPing to simulate click\n * and send ping.\n * @const\n */\ngws.attentionProd.constants.PING_LINK_ID \x3d \x27attention-ping\x27;\n\n\n/**\n * ID of image element container used by gws.attentionProd.googleLog to send\n * gen204.\n * @const\n */\ngws.attentionProd.constants.SEND_IMAGE_CONTAINER_ID \x3d \x27attn-img\x27;\n\n\n/**\n * Event when Attention is loaded and ready.\n * @const\n */\ngws.attentionProd.constants.ATTENTION_READY \x3d \x27attn-ev-ready\x27;\n\n\n/**\n * Event when Attention preload data is available.\n * @const\n */\ngws.attentionProd.constants.ATTENTION_PRELOAD \x3d \x27attn-ev-preload\x27;\n\n\n/**\n * Event when a new swipe container is initialized.\n * @const\n */\ngws.attentionProd.constants.SWIPE_INIT \x3d \x27attn-swp-init\x27;\n\n\n/**\n * Event when a swipe container is removed.\n * @const\n */\ngws.attentionProd.constants.SWIPE_DISPOSE \x3d \x27attn-swp-dis\x27;\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/attention/prod/constants.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy4q');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy4q');

}catch(e){_DumpException(e)}
/* _Module_:pvtlp */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('pvtlp');
var $googDebugFname="googledata/html/templates/gws/head/xjs/attention/prod/page_view_time_logger.js";
eval("/**\n * @fileoverview Logs the viewtime of a page. When there is a show event, the\n * time relative to page start is logged as a \x27s\x27 event. Similarly, when there\n * is an exit event, its logged as an \x27e\x27 event with the relative time.\n * All this data is sent to the server on any browser exit event.\n */\ngoog.provide(\x27gws.attentionProd.pageViewTimeLogger\x27);\n\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.EventType\x27);\ngoog.require(\x27goog.labs.dom.PageVisibilityState\x27);\ngoog.require(\x27gws.attentionProd.constants\x27);\ngoog.require(\x27gws.dom\x27);\ngoog.require(\x27search.task.scheduler\x27);\n\n\ngoog.scope(function() {\n\nvar pageViewTimeLogger \x3d gws.attentionProd.pageViewTimeLogger;\nconst scheduler \x3d goog.module.get(\x27search.task.scheduler\x27);\n\n\n/**\n * @private {!Array\x3c!Array\x3cnumber|string|!Array\x3cnumber\x3e\x3e\x3e}\n */\npageViewTimeLogger.events_ \x3d [];\n\n\n/**\n * Holds the timeout id if set during a scroll event.\n * @private {?number}\n */\npageViewTimeLogger.timeoutHolder_ \x3d null;\n\n\n/**\n * Sets up the listeners for pagehide, blur etc so that an exit time can be\n * marked. Also, sends the previous data.\n */\npageViewTimeLogger.init \x3d function() {\n  pageViewTimeLogger.send_(\n      \x27\x26ei\x3d\x27 + google.getEI(document.body) + \x27\x26t\x3d\x27 + goog.now());\n\n  pageViewTimeLogger.reportViewport_();\n  goog.events.listen(\n      window, goog.events.EventType.BLUR, pageViewTimeLogger.exitFn_);\n  goog.events.listen(\n      window, goog.events.EventType.PAGEHIDE, pageViewTimeLogger.exitFn_);\n\n  goog.events.listen(\n      window, goog.events.EventType.FOCUS, pageViewTimeLogger.reportViewport_);\n  goog.events.listen(\n      window, goog.events.EventType.PAGESHOW,\n      pageViewTimeLogger.reportViewport_);\n\n  goog.events.listen(\n      window, goog.events.EventType.SCROLL, pageViewTimeLogger.handleScroll_);\n\n  var pageVisibilityMonitor \x3d gws.dom.getPageVisibilityMonitor();\n  goog.events.listen(\n      pageVisibilityMonitor, goog.events.EventType.VISIBILITYCHANGE,\n      pageViewTimeLogger.handleVisibilityChange_);\n\n  goog.events.listen(\n      window, gws.attentionProd.constants.ATTENTION_READY,\n      pageViewTimeLogger.attentionReady_);\n};\n\n\n/**\n * Handler for Attention ready event. Passes on the data collected to Attention.\n * Also, removes the redundant listeners as Attention adds these anyway.\n * @private\n */\npageViewTimeLogger.attentionReady_ \x3d function() {\n  if (pageViewTimeLogger.events_.length \x3e 0) {\n    goog.events.fireListeners(\n        window, gws.attentionProd.constants.ATTENTION_PRELOAD, false,\n        pageViewTimeLogger.events_);\n  }\n  pageViewTimeLogger.dispose();\n};\n\n\n/**\n * Dispose method to remove all the listeners.\n */\npageViewTimeLogger.dispose \x3d function() {\n\n  goog.events.unlisten(\n      window, goog.events.EventType.BLUR, pageViewTimeLogger.exitFn_);\n  goog.events.unlisten(\n      window, goog.events.EventType.PAGEHIDE, pageViewTimeLogger.exitFn_);\n  goog.events.unlisten(\n      window, goog.events.EventType.FOCUS, pageViewTimeLogger.reportViewport_);\n  goog.events.unlisten(\n      window, goog.events.EventType.PAGESHOW,\n      pageViewTimeLogger.reportViewport_);\n\n  goog.events.unlisten(\n      window, goog.events.EventType.SCROLL, pageViewTimeLogger.handleScroll_);\n\n  var pageVisibilityMonitor \x3d gws.dom.getPageVisibilityMonitor();\n  goog.events.unlisten(\n      pageVisibilityMonitor, goog.events.EventType.VISIBILITYCHANGE,\n      pageViewTimeLogger.handleVisibilityChange_);\n\n  if (pageViewTimeLogger.timeoutHolder_) {\n    scheduler.clearTimeout(pageViewTimeLogger.timeoutHolder_);\n    pageViewTimeLogger.timeoutHolder_ \x3d null;\n  }\n\n  pageViewTimeLogger.events_ \x3d [];\n};\n\n\n/**\n * Handles window scroll. Sets a timer to report viewport after 500ms.\n * @private\n */\npageViewTimeLogger.handleScroll_ \x3d function() {\n  if (pageViewTimeLogger.timeoutHolder_) {\n    return;\n  }\n\n  pageViewTimeLogger.timeoutHolder_ \x3d scheduler.setTimeout(function() {\n    pageViewTimeLogger.reportViewport_();\n    pageViewTimeLogger.timeoutHolder_ \x3d null;\n  }, 500);\n};\n\n\n/**\n * Handler for the visibility change events.\n * If page becomes visible, reports viewport, else report exit.\n * @private\n */\npageViewTimeLogger.handleVisibilityChange_ \x3d function() {\n  var pageVisibilityMonitor \x3d gws.dom.getPageVisibilityMonitor();\n  switch (pageVisibilityMonitor.getVisibilityState()) {\n    case goog.labs.dom.PageVisibilityState.UNLOADED:\n    case goog.labs.dom.PageVisibilityState.HIDDEN:\n      pageViewTimeLogger.exitFn_();\n      break;\n    case goog.labs.dom.PageVisibilityState.VISIBLE:\n      pageViewTimeLogger.reportViewport_();\n      break;\n  }\n};\n\n\n/**\n * Adds a viewport event in the events array.\n * @private\n */\npageViewTimeLogger.reportViewport_ \x3d function() {\n  pageViewTimeLogger.events_.push([\n    goog.now(), \x27v\x27,\n    [\n      Math.round(window.pageXOffset), Math.round(window.pageYOffset),\n      Math.round(window.innerWidth), Math.round(window.innerHeight)\n    ]\n  ]);\n};\n\n\n/**\n * Reports exit in the events array.\n * @private\n */\npageViewTimeLogger.exitFn_ \x3d function() {\n  pageViewTimeLogger.events_.push([goog.now(), \x27e\x27]);\n};\n\n\n/**\n * Sends the given data to the server.\n * @param {?string} data The data.\n * @private\n */\npageViewTimeLogger.send_ \x3d function(data) {\n  if (!data) {\n    return;\n  }\n\n  var appName \x3d \x27pvtl\x27;\n  var src \x3d google.logUrl(appName, data);\n  if (!src) {\n    return;\n  }\n\n  if (goog.isDefAndNotNull(navigator.sendBeacon) \x26\x26\n      navigator.sendBeacon(src, \x27\x27)) {\n    return;\n  }\n  google.log(appName, data);\n};\n\n});\n\ngws.attentionProd.pageViewTimeLogger.init();\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/attention/prod/page_view_time_logger.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('pvtlp');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('pvtlp');

}catch(e){_DumpException(e)}
/* _Module_:sy1h */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1h');
var $googDebugFname="gws/js/stableapi/bridge/api_bridge.js";
goog.loadModule("/**\n * @fileoverview The API bridge maintains the contract symbols so that calls\n * from multiple module sets can be connected. For more details, please see\n * go/gws-xjs-fusion.\n */\ngoog.module(\x27search.api.bridge.ApiBridge\x27);\n\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\n\nconst GSI_NAME \x3d \x27_GSI_\x27;\nwindow[GSI_NAME] \x3d window[GSI_NAME] || new Map();\n/** @const {!Map\x3cstring, *\x3e} */\nconst symbolTable \x3d window[GSI_NAME];\n\nconst PROXY_FUNC_ \x3d \x27__gfunc__\x27;\n\n\n/**\n * Connects calls from one module set to the other via contract symbol maps.\n */\nconst ApiBridge \x3d {\n  /**\n   * Exports one symbol to the map as contract symbol.\n   * @param {string} symbol the contract symbol to export to.\n   * @param {*} object the reference to be exported.\n   */\n  export(symbol, object) {\n    asserts.assert(\n        !symbolTable.has(symbol), `Attempts to re-register symbol ${symbol}`);\n    symbolTable.set(symbol, object);\n  },\n\n  /**\n   * Returns a symbol from the map.\n   * @param {string} symbol the contract symbol.\n   * @return {*} the object for this symbol.\n   */\n  getSymbol(symbol) {\n    return asserts.assert(\n        symbolTable.get(symbol), `Cannot found symbol ${symbol}.`);\n  },\n\n  /**\n   * Creates an object whose constructor is exported as the given symbol.\n   * @param {string} symbol the contract symbol of the constructor.\n   * @param {...*} args the arguments passed to the constructor.\n   * @return {!Object}\n   */\n  create(symbol, ...args) {\n    /** @type {function(new:Object, ...*)} */\n    const constr \x3d\n        /** @type {function(new:Object, ...*)} */ (symbolTable.get(symbol));\n    asserts.assert(\n        constr \x26\x26 constr.prototype \x26\x26 constr.prototype.constructor,\n        `Cannot create an object from non-constructor symbol ${symbol}.`);\n    return new constr(...args);\n  },\n\n  /**\n   * Calls a non-static function that is exported as the contract symbol.\n   * @param {string} symbol the constructor symbol of the function\n   * @param {!Object} obj the \x22this\x22 pointer.\n   * @param {...*} args arguments passed to the function.\n   * @return {*}\n   */\n  invoke(symbol, obj, ...args) {\n    const func \x3d symbolTable.get(symbol);\n    asserts.assertFunction(func);\n    return func.call(obj, ...args);\n  },\n\n  /**\n   * Calls a static function that is exported as the contract symbol.\n   * @param {string} symbol the contract symbol of the function.\n   * @param {...*} args arguments to the function.\n   * @return {*}\n   */\n  invokeStatic(symbol, ...args) {\n    const func \x3d symbolTable.get(symbol);\n    asserts.assertFunction(func);\n    return func(...args);\n  },\n\n  /**\n   * Sets the proxy function so that code in the main module set can call\n   * into subclasses defined in the add-on module sets. For details, refer to\n   * go/gws-xjs-fusion.\n   * @param {!Object} obj the object to set the proxy function on.\n   * @param {string} name the name of the proxy function.\n   * @param {!Function} proxyFunc the proxy function.\n   */\n  setProxyFunction(obj, name, proxyFunc) {\n    obj[PROXY_FUNC_] \x3d obj[PROXY_FUNC_] || {};\n    obj[PROXY_FUNC_][name] \x3d proxyFunc;\n  },\n\n  /**\n   * Invokes the proxy function that is set on the object.\n   * @param {string} name the name of the proxy function.\n   * @param {!Object} obj the object that the proxies are set on.\n   * @param {...*} args the arguments.\n   * @return {*}\n   */\n  invokeProxy(name, obj, ...args) {\n    asserts.assertObject(obj[PROXY_FUNC_]);\n    asserts.assertFunction(obj[PROXY_FUNC_][name]);\n\n    return obj[PROXY_FUNC_][name](...args);\n  },\n\n  /**\n   * Resets the simple table for testing.\n   * @package\n   */\n  resetForTesting() {\n    symbolTable.clear();\n  }\n};\n\nexports \x3d ApiBridge;\n\n//# sourceURL\x3dhttps://qs/gws/js/stableapi/bridge/api_bridge.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1h');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1h');

}catch(e){_DumpException(e)}
/* _Module_:sy1j */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1j');
var $googDebugFname="java/com/google/apps/framework/data/client/services.js";
eval("/**\n * @fileoverview Service IDs for the Apps Framework data system.\n */\n\ngoog.provide(\x27af.data.services\x27);\n\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27af.data.DataService\x27);\ngoog.forwardDeclare(\x27af.data.InitialDataService\x27);\n\n\n/**\n * @type {!fava.services.ServiceId\x3c!af.data.DataService\x3e}\n */\naf.data.services.DATA \x3d new fava.services.ServiceId(\n    xid(\x27af.data.DataService\x27),\n    undefined,\n    [fava.services.REQUEST]);\n\n\n/**\n * @type {!fava.services.ServiceId\x3c!af.data.InitialDataService\x3e}\n */\naf.data.services.INITIAL_DATA \x3d new fava.services.ServiceId(\n    xid(\x27af.data.InitialDataService\x27));\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/services.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/batchservices.js";
eval("/**\n * @fileoverview Service IDs for the Apps Framework data system.\n */\n\ngoog.provide(\x27af.data.batchservices\x27);\n\ngoog.require(\x27af.data.services\x27);\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27af.data.BatchFetchService\x27);\n\n\n/**\n * @type {!fava.services.ServiceId\x3c!af.data.BatchFetchService\x3e}\n */\naf.data.batchservices.BATCH_FETCH \x3d new fava.services.ServiceId(\n    xid(\x27af.data.BatchFetchService\x27),\n    undefined,\n    [af.data.services.DATA]);\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/batchservices.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/cache/services.js";
eval("/**\n * @fileoverview Service IDs for the Apps Framework data cache system.\n */\n\ngoog.provide(\x27af.data.cache.services\x27);\n\ngoog.require(\x27af.data.services\x27);\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27af.data.cache.CacheService\x27);\n\n\n/**\n * @type {!fava.services.ServiceId\x3c!af.data.cache.CacheService\x3e}\n */\naf.data.cache.services.CACHE \x3d new fava.services.ServiceId(\n    xid(\x27af.data.cache.CacheService\x27),\n    undefined,\n    [af.data.services.INITIAL_DATA]);\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/cache/services.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1j');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1j');

}catch(e){_DumpException(e)}
/* _Module_:sy1f */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy1f');
var $googDebugFname="javascript/apps/wiz/inject/registry.js";
eval("/**\n * @fileoverview This file acts as a common namespace that is enhanced by the\n * wizids.js files generated by the wiz builddef. You should goog.require this\n * namespace from a file in your base module to ensure all Wiz objects in any\n * of the modules in your moduleset are properly registered.\n * @enhanceable\n * @suppress {extraProvide}\n */\n\ngoog.provide(\x27wiz.inject.Registry\x27);\n\n// Intentionally left blank.\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/inject/registry.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/entrypoints/bar/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.entrypoints.bar.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.entrypoints.bar.controllers.MiniappEntryPointBarControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.entrypoints.bar.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.entrypoints.bar.MiniappEntryPointBarController\x3e} */\ngws.common.jslayout.miniapp.entrypoints.bar.controllers.MINIAPP_ENTRY_POINT_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.entrypoints.bar.MiniappEntryPointBarController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.entrypoints.bar.MiniappEntryPointBarController} */\ngws.common.jslayout.miniapp.entrypoints.bar.typedefs.controllers_MINIAPP_ENTRY_POINT_BAR;\n\n/** @record */\ngws.common.jslayout.miniapp.entrypoints.bar.controllers.MiniappEntryPointBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/entrypoints/bar/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/autoinstall/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.controllers.AgsaHomeScreenIconAutoInstallControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.AgsaHomeScreenIconAutoInstallWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.AgsaHomeScreenIconAutoInstallController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.controllers.AGSA_HOME_SCREEN_ICON_AUTO_INSTALL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.AgsaHomeScreenIconAutoInstallController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.AgsaHomeScreenIconAutoInstallController} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.typedefs.controllers_AGSA_HOME_SCREEN_ICON_AUTO_INSTALL;\n\n/** @record */\nclass gwscommonjslayoutminiapphomescreeniconandroidagsaautoinstallcontrollersAgsaHomeScreenIconAutoInstallControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.AgsaHomeScreenIconAutoInstallWizModel} */ this.agsaHomeScreenIconAutoInstallWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.autoinstall.controllers.AgsaHomeScreenIconAutoInstallControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutminiapphomescreeniconandroidagsaautoinstallcontrollersAgsaHomeScreenIconAutoInstallControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/autoinstall/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/banner/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.controllers.AgsaHomeScreenIconBannerControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.AgsaHomeScreenIconBannerWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.AgsaHomeScreenIconBannerController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.controllers.AGSA_HOME_SCREEN_ICON_BANNER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.AgsaHomeScreenIconBannerController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.AgsaHomeScreenIconBannerController} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.typedefs.controllers_AGSA_HOME_SCREEN_ICON_BANNER;\n\n/** @record */\nclass gwscommonjslayoutminiapphomescreeniconandroidagsabannercontrollersAgsaHomeScreenIconBannerControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.AgsaHomeScreenIconBannerWizModel} */ this.agsaHomeScreenIconBannerWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.banner.controllers.AgsaHomeScreenIconBannerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutminiapphomescreeniconandroidagsabannercontrollersAgsaHomeScreenIconBannerControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/banner/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/element/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.controllers.AgsaHomeScreenIconElementControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.AgsaHomeScreenIconElement\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.AgsaHomeScreenIconElementController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.element.controllers.AGSA_HOME_SCREEN_ICON_ELEMENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.AgsaHomeScreenIconElementController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.AgsaHomeScreenIconElementController} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.element.typedefs.controllers_AGSA_HOME_SCREEN_ICON_ELEMENT;\n\n/** @record */\nclass gwscommonjslayoutminiapphomescreeniconandroidagsaelementcontrollersAgsaHomeScreenIconElementControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.element.AgsaHomeScreenIconElement} */ this.agsaHomeScreenIconElement;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.element.controllers.AgsaHomeScreenIconElementControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutminiapphomescreeniconandroidagsaelementcontrollersAgsaHomeScreenIconElementControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/element/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/footerlink/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.controllers.AgsaHomeScreenIconFooterLinkControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.AgsaHomeScreenIconFooterLinkWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.AgsaHomeScreenIconFooterLinkController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.controllers.AGSA_HOME_SCREEN_ICON_FOOTER_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.AgsaHomeScreenIconFooterLinkController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.AgsaHomeScreenIconFooterLinkController} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.typedefs.controllers_AGSA_HOME_SCREEN_ICON_FOOTER_LINK;\n\n/** @record */\nclass gwscommonjslayoutminiapphomescreeniconandroidagsafooterlinkcontrollersAgsaHomeScreenIconFooterLinkControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.AgsaHomeScreenIconFooterLinkWizModel} */ this.agsaHomeScreenIconFooterLinkWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.footerlink.controllers.AgsaHomeScreenIconFooterLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutminiapphomescreeniconandroidagsafooterlinkcontrollersAgsaHomeScreenIconFooterLinkControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/footerlink/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/promotioncard/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.controllers.AgsaHomeScreenIconPromotionCardControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.AgsaHomeScreenIconPromotionCardWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.AgsaHomeScreenIconPromotionCardController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.controllers.AGSA_HOME_SCREEN_ICON_PROMOTION_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.AgsaHomeScreenIconPromotionCardController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.AgsaHomeScreenIconPromotionCardController} */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.typedefs.controllers_AGSA_HOME_SCREEN_ICON_PROMOTION_CARD;\n\n/** @record */\nclass gwscommonjslayoutminiapphomescreeniconandroidagsapromotioncardcontrollersAgsaHomeScreenIconPromotionCardControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.AgsaHomeScreenIconPromotionCardWizModel} */ this.agsaHomeScreenIconPromotionCardWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.android.agsa.promotioncard.controllers.AgsaHomeScreenIconPromotionCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutminiapphomescreeniconandroidagsapromotioncardcontrollersAgsaHomeScreenIconPromotionCardControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/android/agsa/promotioncard/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/ios/safari/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.ios.safari.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.ios.safari.controllers.IosSafariHomeScreenIconBannerControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.miniapp.homescreenicon.ios.safari.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.miniapp.homescreenicon.ios.safari.IosSafariHomeScreenIconBannerController\x3e} */\ngws.common.jslayout.miniapp.homescreenicon.ios.safari.controllers.IOS_SAFARI_HOME_SCREEN_ICON_BANNER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.miniapp.homescreenicon.ios.safari.IosSafariHomeScreenIconBannerController\x27));\n\n/** @typedef {!gws.common.jslayout.miniapp.homescreenicon.ios.safari.IosSafariHomeScreenIconBannerController} */\ngws.common.jslayout.miniapp.homescreenicon.ios.safari.typedefs.controllers_IOS_SAFARI_HOME_SCREEN_ICON_BANNER;\n\n/** @record */\ngws.common.jslayout.miniapp.homescreenicon.ios.safari.controllers.IosSafariHomeScreenIconBannerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/common/jslayout/miniapp/homescreenicon/ios/safari/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/feed/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.feed.controllers\x27);\ngoog.provide(\x27search.feed.controllers.FollowButtonControllerResponse\x27);\ngoog.provide(\x27search.feed.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.feed.FollowButtonWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.feed.FollowButtonController\x3e} */\nsearch.feed.controllers.FOLLOW_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.feed.FollowButtonController\x27));\n\n/** @typedef {!search.feed.FollowButtonController} */\nsearch.feed.typedefs.controllers_FOLLOW_BUTTON;\n\n/** @record */\nclass searchfeedcontrollersFollowButtonControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.feed.FollowButtonWizProto} */ this.followButtonWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.feed.controllers.FollowButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchfeedcontrollersFollowButtonControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/feed/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/hotels/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.hotels.controllers\x27);\ngoog.provide(\x27gws.hotels.controllers.OfferControllerResponse\x27);\ngoog.provide(\x27gws.hotels.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.hotels.OfferWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.hotels.OfferController\x3e} */\ngws.hotels.controllers.OFFER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.hotels.OfferController\x27));\n\n/** @typedef {!gws.hotels.OfferController} */\ngws.hotels.typedefs.controllers_OFFER;\n\n/** @record */\nclass gwshotelscontrollersOfferControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.hotels.OfferWizModel} */ this.offerWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.hotels.controllers.OfferControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshotelscontrollersOfferControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/hotels/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/navigationdrawer/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.common.drawer.controllers\x27);\ngoog.provide(\x27search.common.drawer.controllers.NavigationDrawerControllerResponse\x27);\ngoog.provide(\x27search.common.drawer.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.drawer.NavigationDrawerWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.common.drawer.NavigationDrawerController\x3e} */\nsearch.common.drawer.controllers.NAVIGATION_DRAWER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.common.drawer.NavigationDrawerController\x27));\n\n/** @typedef {!search.common.drawer.NavigationDrawerController} */\nsearch.common.drawer.typedefs.controllers_NAVIGATION_DRAWER;\n\n/** @record */\nclass searchcommondrawercontrollersNavigationDrawerControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.drawer.NavigationDrawerWizProto} */ this.navigationDrawerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.common.drawer.controllers.NavigationDrawerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchcommondrawercontrollersNavigationDrawerControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/navigationdrawer/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/ads/apps/dragonfly/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.ads.apps.dragonfly.controllers\x27);\ngoog.provide(\x27gws.plugins.ads.apps.dragonfly.controllers.DragonflyCtdControllerResponse\x27);\ngoog.provide(\x27gws.plugins.ads.apps.dragonfly.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.ads.apps.dragonfly.DragonflyCtdController\x3e} */\ngws.plugins.ads.apps.dragonfly.controllers.DRAGONFLY_CTD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.ads.apps.dragonfly.DragonflyCtdController\x27));\n\n/** @typedef {!gws.plugins.ads.apps.dragonfly.DragonflyCtdController} */\ngws.plugins.ads.apps.dragonfly.typedefs.controllers_DRAGONFLY_CTD;\n\n/** @record */\ngws.plugins.ads.apps.dragonfly.controllers.DragonflyCtdControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/ads/apps/dragonfly/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/ads/clicktomessage/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.ads.clicktomessage.controllers\x27);\ngoog.provide(\x27gws.ads.clicktomessage.controllers.SmsUrlControllerResponse\x27);\ngoog.provide(\x27gws.ads.clicktomessage.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.clicktomessage.SmsUrlController\x3e} */\ngws.ads.clicktomessage.controllers.SMS_URL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.clicktomessage.SmsUrlController\x27));\n\n/** @typedef {!gws.ads.clicktomessage.SmsUrlController} */\ngws.ads.clicktomessage.typedefs.controllers_SMS_URL;\n\n/** @record */\ngws.ads.clicktomessage.controllers.SmsUrlControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/ads/clicktomessage/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/ads/products/listing/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.productAds.controllers\x27);\ngoog.provide(\x27gws.productAds.controllers.JackpotSmartReviewsIkpControllerResponse\x27);\ngoog.provide(\x27gws.productAds.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.JackpotSmartReviewsIkpController\x3e} */\ngws.productAds.controllers.JACKPOT_SMART_REVIEWS_IKP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.JackpotSmartReviewsIkpController\x27));\n\n/** @typedef {!gws.productAds.JackpotSmartReviewsIkpController} */\ngws.productAds.typedefs.controllers_JACKPOT_SMART_REVIEWS_IKP;\n\n/** @record */\ngws.productAds.controllers.JackpotSmartReviewsIkpControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/ads/products/listing/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/clientsidefunbox/common/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.csf.common.csfshare.controllers\x27);\ngoog.provide(\x27gws.csf.common.csfshare.controllers.CsfShareControllerResponse\x27);\ngoog.provide(\x27gws.csf.common.csfshare.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.csf.common.csfshare.CsfShareController\x3e} */\ngws.csf.common.csfshare.controllers.CSF_SHARE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.csf.common.csfshare.CsfShareController\x27));\n\n/** @typedef {!gws.csf.common.csfshare.CsfShareController} */\ngws.csf.common.csfshare.typedefs.controllers_CSF_SHARE;\n\n/** @record */\ngws.csf.common.csfshare.controllers.CsfShareControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/clientsidefunbox/common/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/clientsidefunbox/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.csf.assistantonsrp.controllers\x27);\ngoog.provide(\x27gws.csf.assistantonsrp.controllers.AssistantOnSrpControllerResponse\x27);\ngoog.provide(\x27gws.csf.assistantonsrp.typedefs\x27);\ngoog.provide(\x27gws.csf.fundemo.controllers\x27);\ngoog.provide(\x27gws.csf.fundemo.controllers.FunDemoControllerResponse\x27);\ngoog.provide(\x27gws.csf.fundemo.typedefs\x27);\ngoog.provide(\x27gws.csf.googlebday.controllers\x27);\ngoog.provide(\x27gws.csf.googlebday.controllers.GoogleBdayControllerResponse\x27);\ngoog.provide(\x27gws.csf.googlebday.typedefs\x27);\ngoog.provide(\x27gws.csf.tuner.controllers\x27);\ngoog.provide(\x27gws.csf.tuner.controllers.TunerControllerResponse\x27);\ngoog.provide(\x27gws.csf.tuner.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.csf.googlebday.GoogleBdayController\x3e} */\ngws.csf.googlebday.controllers.GOOGLE_BDAY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.csf.googlebday.GoogleBdayController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.csf.fundemo.FunDemoController\x3e} */\ngws.csf.fundemo.controllers.FUN_DEMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.csf.fundemo.FunDemoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.csf.tuner.TunerController\x3e} */\ngws.csf.tuner.controllers.TUNER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.csf.tuner.TunerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.csf.assistantonsrp.AssistantOnSrpController\x3e} */\ngws.csf.assistantonsrp.controllers.ASSISTANT_ON_SRP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.csf.assistantonsrp.AssistantOnSrpController\x27));\n\n/** @typedef {!gws.csf.assistantonsrp.AssistantOnSrpController} */\ngws.csf.assistantonsrp.typedefs.controllers_ASSISTANT_ON_SRP;\n\n/** @record */\ngws.csf.assistantonsrp.controllers.AssistantOnSrpControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.csf.fundemo.FunDemoController} */\ngws.csf.fundemo.typedefs.controllers_FUN_DEMO;\n\n/** @record */\ngws.csf.fundemo.controllers.FunDemoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.csf.googlebday.GoogleBdayController} */\ngws.csf.googlebday.typedefs.controllers_GOOGLE_BDAY;\n\n/** @record */\ngws.csf.googlebday.controllers.GoogleBdayControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.csf.tuner.TunerController} */\ngws.csf.tuner.typedefs.controllers_TUNER;\n\n/** @record */\ngws.csf.tuner.controllers.TunerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/clientsidefunbox/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/collections/tray/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.collections.tray.controllers\x27);\ngoog.provide(\x27gws.plugins.collections.tray.controllers.SaveTrayListContentControllerResponse\x27);\ngoog.provide(\x27gws.plugins.collections.tray.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.collections.tray.SaveTrayListContentController\x3e} */\ngws.plugins.collections.tray.controllers.SAVE_TRAY_LIST_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.collections.tray.SaveTrayListContentController\x27));\n\n/** @typedef {!gws.plugins.collections.tray.SaveTrayListContentController} */\ngws.plugins.collections.tray.typedefs.controllers_SAVE_TRAY_LIST_CONTENT;\n\n/** @record */\ngws.plugins.collections.tray.controllers.SaveTrayListContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/collections/tray/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/duffy3/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.duffy3.controllers\x27);\ngoog.provide(\x27gws.duffy3.controllers.DragonflyOfficialFeedbackControllerResponse\x27);\ngoog.provide(\x27gws.duffy3.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.duffy3.DragonflyOfficialFeedbackController\x3e} */\ngws.duffy3.controllers.DRAGONFLY_OFFICIAL_FEEDBACK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.duffy3.DragonflyOfficialFeedbackController\x27));\n\n/** @typedef {!gws.duffy3.DragonflyOfficialFeedbackController} */\ngws.duffy3.typedefs.controllers_DRAGONFLY_OFFICIAL_FEEDBACK;\n\n/** @record */\ngws.duffy3.controllers.DragonflyOfficialFeedbackControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/duffy3/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/horizon/textlists/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.horizon.textlists.controllers\x27);\ngoog.provide(\x27search.horizon.textlists.controllers.AddToCalendarControllerResponse\x27);\ngoog.provide(\x27search.horizon.textlists.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.AddToCalendarWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.horizon.textlists.AddToCalendarController\x3e} */\nsearch.horizon.textlists.controllers.ADD_TO_CALENDAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.horizon.textlists.AddToCalendarController\x27));\n\n/** @typedef {!search.horizon.textlists.AddToCalendarController} */\nsearch.horizon.textlists.typedefs.controllers_ADD_TO_CALENDAR;\n\n/** @record */\nclass searchhorizontextlistscontrollersAddToCalendarControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.AddToCalendarWizProto} */ this.addToCalendarWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.horizon.textlists.controllers.AddToCalendarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchhorizontextlistscontrollersAddToCalendarControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/horizon/textlists/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/images/result_group/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.images.resultGroup.controllers\x27);\ngoog.provide(\x27search.images.resultGroup.controllers.ImageViewerGroupControllerResponse\x27);\ngoog.provide(\x27search.images.resultGroup.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.images.ViewerControllerWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.images.resultGroup.ImageViewerGroupController\x3e} */\nsearch.images.resultGroup.controllers.IMAGE_VIEWER_GROUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.images.resultGroup.ImageViewerGroupController\x27));\n\n/** @typedef {!search.images.resultGroup.ImageViewerGroupController} */\nsearch.images.resultGroup.typedefs.controllers_IMAGE_VIEWER_GROUP;\n\n/** @record */\nclass searchimagesresultGroupcontrollersImageViewerGroupControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.images.ViewerControllerWizProto} */ this.viewerControllerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.images.resultGroup.controllers.ImageViewerGroupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchimagesresultGroupcontrollersImageViewerGroupControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/images/result_group/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/images/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.images.universal.controllers\x27);\ngoog.provide(\x27gws.images.universal.controllers.ImagesUniversalResizingControllerResponse\x27);\ngoog.provide(\x27gws.images.universal.typedefs\x27);\ngoog.provide(\x27gws.visual_web.controllers\x27);\ngoog.provide(\x27gws.visual_web.controllers.FilmstripGalleryControllerResponse\x27);\ngoog.provide(\x27gws.visual_web.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.images.universal.ImagesUniversalResizingController\x3e} */\ngws.images.universal.controllers.IMAGES_UNIVERSAL_RESIZING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.images.universal.ImagesUniversalResizingController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.visual_web.FilmstripGalleryController\x3e} */\ngws.visual_web.controllers.FILMSTRIP_GALLERY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.visual_web.FilmstripGalleryController\x27));\n\n/** @typedef {!gws.images.universal.ImagesUniversalResizingController} */\ngws.images.universal.typedefs.controllers_IMAGES_UNIVERSAL_RESIZING;\n\n/** @record */\ngws.images.universal.controllers.ImagesUniversalResizingControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.visual_web.FilmstripGalleryController} */\ngws.visual_web.typedefs.controllers_FILMSTRIP_GALLERY;\n\n/** @record */\ngws.visual_web.controllers.FilmstripGalleryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/images/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/answers/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.answers.controllers\x27);\ngoog.provide(\x27gws.knowledge.answers.controllers.AnswersHeaderControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.answers.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.answers.AnswersHeaderController\x3e} */\ngws.knowledge.answers.controllers.ANSWERS_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.answers.AnswersHeaderController\x27));\n\n/** @typedef {!gws.knowledge.answers.AnswersHeaderController} */\ngws.knowledge.answers.typedefs.controllers_ANSWERS_HEADER;\n\n/** @record */\ngws.knowledge.answers.controllers.AnswersHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/answers/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/entitypreview/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.entitypreview.controllers\x27);\ngoog.provide(\x27gws.knowledge.entitypreview.controllers.EntityPreviewControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.entitypreview.controllers.EntityPreviewItemControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.entitypreview.controllers.EntityPreviewTargetControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.entitypreview.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.knowledge.entitypreview.EntityPreview\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.entitypreview.EntityPreviewController\x3e} */\ngws.knowledge.entitypreview.controllers.ENTITY_PREVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.entitypreview.EntityPreviewController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.entitypreview.EntityPreviewTargetController\x3e} */\ngws.knowledge.entitypreview.controllers.ENTITY_PREVIEW_TARGET \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.entitypreview.EntityPreviewTargetController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.entitypreview.EntityPreviewItemController\x3e} */\ngws.knowledge.entitypreview.controllers.ENTITY_PREVIEW_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.entitypreview.EntityPreviewItemController\x27));\n\n/** @typedef {!gws.knowledge.entitypreview.EntityPreviewController} */\ngws.knowledge.entitypreview.typedefs.controllers_ENTITY_PREVIEW;\n\n/** @record */\nclass gwsknowledgeentitypreviewcontrollersEntityPreviewControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.knowledge.entitypreview.EntityPreview} */ this.entityPreview;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.entitypreview.controllers.EntityPreviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeentitypreviewcontrollersEntityPreviewControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.entitypreview.EntityPreviewItemController} */\ngws.knowledge.entitypreview.typedefs.controllers_ENTITY_PREVIEW_ITEM;\n\n/** @record */\ngws.knowledge.entitypreview.controllers.EntityPreviewItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.entitypreview.EntityPreviewTargetController} */\ngws.knowledge.entitypreview.typedefs.controllers_ENTITY_PREVIEW_TARGET;\n\n/** @record */\ngws.knowledge.entitypreview.controllers.EntityPreviewTargetControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/entitypreview/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/ugc/translation/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.knowledge.ugc.translation.controllers\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.FactsTranslationDialogControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.TranslationDialogDesktopControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.TranslationDialogMobileControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.TranslationInputControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.controllers.TranslationLoaderControllerResponse\x27);\ngoog.provide(\x27search.knowledge.ugc.translation.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.TranslationInputController\x3e} */\nsearch.knowledge.ugc.translation.controllers.TRANSLATION_INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.TranslationInputController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.TranslationDialogController\x3e} */\nsearch.knowledge.ugc.translation.controllers.TRANSLATION_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.TranslationDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.TranslationDialogMobileController\x3e} */\nsearch.knowledge.ugc.translation.controllers.TRANSLATION_DIALOG_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.TranslationDialogMobileController\x27),\n    [search.knowledge.ugc.translation.controllers.TRANSLATION_DIALOG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.FactsTranslationDialogController\x3e} */\nsearch.knowledge.ugc.translation.controllers.FACTS_TRANSLATION_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.FactsTranslationDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.TranslationLoaderController\x3e} */\nsearch.knowledge.ugc.translation.controllers.TRANSLATION_LOADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.TranslationLoaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.ugc.translation.TranslationDialogDesktopController\x3e} */\nsearch.knowledge.ugc.translation.controllers.TRANSLATION_DIALOG_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.ugc.translation.TranslationDialogDesktopController\x27),\n    [search.knowledge.ugc.translation.controllers.TRANSLATION_DIALOG]);\n\n/** @typedef {!search.knowledge.ugc.translation.FactsTranslationDialogController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_FACTS_TRANSLATION_DIALOG;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.FactsTranslationDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.ugc.translation.TranslationDialogController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_TRANSLATION_DIALOG;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.ugc.translation.TranslationDialogDesktopController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_TRANSLATION_DIALOG_DESKTOP;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.TranslationDialogDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse} */ this.superResponse;\n    /** @type {!search.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.ugc.translation.TranslationDialogMobileController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_TRANSLATION_DIALOG_MOBILE;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.TranslationDialogMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse} */ this.superResponse;\n    /** @type {!search.knowledge.ugc.translation.controllers.TranslationDialogControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.ugc.translation.TranslationInputController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_TRANSLATION_INPUT;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.TranslationInputControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.ugc.translation.TranslationLoaderController} */\nsearch.knowledge.ugc.translation.typedefs.controllers_TRANSLATION_LOADER;\n\n/** @record */\nsearch.knowledge.ugc.translation.controllers.TranslationLoaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/ugc/translation/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/verticals/elections/results/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.knowledge.elections.results.controllers\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.AppControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.AsyncDataControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.BarChartCardControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.ListSectionControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.MastheadControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.controllers.TabCardControllerResponse\x27);\ngoog.provide(\x27search.knowledge.elections.results.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.elections.results.ElectionsResultsCard.TabbedCard\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.elections.results.ResultsOnebox\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.elections.results.components.masthead.TopBanner\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.BarChartCardController\x3e} */\nsearch.knowledge.elections.results.controllers.BAR_CHART_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.BarChartCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.TabCardController\x3e} */\nsearch.knowledge.elections.results.controllers.TAB_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.TabCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.AppController\x3e} */\nsearch.knowledge.elections.results.controllers.APP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.AppController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.MastheadController\x3e} */\nsearch.knowledge.elections.results.controllers.MASTHEAD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.MastheadController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.ListSectionController\x3e} */\nsearch.knowledge.elections.results.controllers.LIST_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.ListSectionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.elections.results.AsyncDataController\x3e} */\nsearch.knowledge.elections.results.controllers.ASYNC_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.elections.results.AsyncDataController\x27));\n\n/** @typedef {!search.knowledge.elections.results.AppController} */\nsearch.knowledge.elections.results.typedefs.controllers_APP;\n\n/** @record */\nsearch.knowledge.elections.results.controllers.AppControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.elections.results.AsyncDataController} */\nsearch.knowledge.elections.results.typedefs.controllers_ASYNC_DATA;\n\n/** @record */\nclass searchknowledgeelectionsresultscontrollersAsyncDataControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.elections.results.ResultsOnebox} */ this.resultsOnebox;\n  }\n}\n\n\n\n/** @record */\nsearch.knowledge.elections.results.controllers.AsyncDataControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchknowledgeelectionsresultscontrollersAsyncDataControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.elections.results.BarChartCardController} */\nsearch.knowledge.elections.results.typedefs.controllers_BAR_CHART_CARD;\n\n/** @record */\nsearch.knowledge.elections.results.controllers.BarChartCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.elections.results.ListSectionController} */\nsearch.knowledge.elections.results.typedefs.controllers_LIST_SECTION;\n\n/** @record */\nsearch.knowledge.elections.results.controllers.ListSectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.elections.results.MastheadController} */\nsearch.knowledge.elections.results.typedefs.controllers_MASTHEAD;\n\n/** @record */\nclass searchknowledgeelectionsresultscontrollersMastheadControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.elections.results.components.masthead.TopBanner} */ this.topBanner;\n  }\n}\n\n\n\n/** @record */\nsearch.knowledge.elections.results.controllers.MastheadControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchknowledgeelectionsresultscontrollersMastheadControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.knowledge.elections.results.TabCardController} */\nsearch.knowledge.elections.results.typedefs.controllers_TAB_CARD;\n\n/** @record */\nclass searchknowledgeelectionsresultscontrollersTabCardControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.elections.results.ElectionsResultsCard.TabbedCard} */ this.tabbedCard;\n  }\n}\n\n\n\n/** @record */\nsearch.knowledge.elections.results.controllers.TabCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchknowledgeelectionsresultscontrollersTabCardControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/verticals/elections/results/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/verticals/showtimes/amp/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.showtimes.amp.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.showtimes.amp.controllers.ShowtimesTicketAmpActionControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.showtimes.amp.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.assistant.api.client_op.OpenAmpActionsViewerArgs\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.showtimes.amp.ShowtimesTicketAmpActionController\x3e} */\ngws.knowledge.verticals.showtimes.amp.controllers.SHOWTIMES_TICKET_AMP_ACTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.showtimes.amp.ShowtimesTicketAmpActionController\x27));\n\n/** @typedef {!gws.knowledge.verticals.showtimes.amp.ShowtimesTicketAmpActionController} */\ngws.knowledge.verticals.showtimes.amp.typedefs.controllers_SHOWTIMES_TICKET_AMP_ACTION;\n\n/** @record */\nclass gwsknowledgeverticalsshowtimesampcontrollersShowtimesTicketAmpActionControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.assistant.api.client_op.OpenAmpActionsViewerArgs} */ this.ampActionData;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.verticals.showtimes.amp.controllers.ShowtimesTicketAmpActionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeverticalsshowtimesampcontrollersShowtimesTicketAmpActionControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/verticals/showtimes/amp/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/wholepage/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.wholepage.controllers\x27);\ngoog.provide(\x27gws.knowledge.wholepage.controllers.ActionableLinkControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.wholepage.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.wholepage.ActionableLinkController\x3e} */\ngws.knowledge.wholepage.controllers.ACTIONABLE_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.wholepage.ActionableLinkController\x27));\n\n/** @typedef {!gws.knowledge.wholepage.ActionableLinkController} */\ngws.knowledge.wholepage.typedefs.controllers_ACTIONABLE_LINK;\n\n/** @record */\ngws.knowledge.wholepage.controllers.ActionableLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/wholepage/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/knowledge/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.knowledge.thirdpartyaction.controllers\x27);\ngoog.provide(\x27search.knowledge.thirdpartyaction.controllers.FilterActionResultsControllerResponse\x27);\ngoog.provide(\x27search.knowledge.thirdpartyaction.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.deeplinks.ThirdPartyActionResultFilterChip\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.knowledge.thirdpartyaction.FilterActionResultsController\x3e} */\nsearch.knowledge.thirdpartyaction.controllers.FILTER_ACTION_RESULTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.knowledge.thirdpartyaction.FilterActionResultsController\x27));\n\n/** @typedef {!search.knowledge.thirdpartyaction.FilterActionResultsController} */\nsearch.knowledge.thirdpartyaction.typedefs.controllers_FILTER_ACTION_RESULTS;\n\n/** @record */\nclass searchknowledgethirdpartyactioncontrollersFilterActionResultsControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.deeplinks.ThirdPartyActionResultFilterChip} */ this.resultFilterProto;\n  }\n}\n\n\n\n/** @record */\nsearch.knowledge.thirdpartyaction.controllers.FilterActionResultsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchknowledgethirdpartyactioncontrollersFilterActionResultsControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/knowledge/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/matchbubble/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.matchbubble.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.matchbubble.controllers.PopoutMatchBubbleButtonControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.matchbubble.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.matchbubble.MatchWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.matchbubble.PopoutMatchBubbleButtonController\x3e} */\ngws.liveResults.sports.immersive.wiz.matchbubble.controllers.POPOUT_MATCH_BUBBLE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.matchbubble.PopoutMatchBubbleButtonController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.matchbubble.PopoutMatchBubbleButtonController} */\ngws.liveResults.sports.immersive.wiz.matchbubble.typedefs.controllers_POPOUT_MATCH_BUBBLE_BUTTON;\n\n/** @record */\nclass gwsliveResultssportsimmersivewizmatchbubblecontrollersPopoutMatchBubbleButtonControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.matchbubble.MatchWizModel} */ this.matchWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.matchbubble.controllers.PopoutMatchBubbleButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultssportsimmersivewizmatchbubblecontrollersPopoutMatchBubbleButtonControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/matchbubble/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/landing/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.EntityNewsClusterControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.SuggestedEntitiesCarouselControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.miniapp.landing.EntityNewsClusterWizModel\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.liveresults.features.sports.immersive.templates.SuggestedEntitiesCarouselWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.miniapp.landing.SuggestedEntitiesCarouselController\x3e} */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.SUGGESTED_ENTITIES_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.SuggestedEntitiesCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.miniapp.landing.EntityNewsClusterController\x3e} */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.ENTITY_NEWS_CLUSTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.miniapp.landing.EntityNewsClusterController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.miniapp.landing.EntityNewsClusterController} */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.typedefs.controllers_ENTITY_NEWS_CLUSTER;\n\n/** @record */\nclass gwsliveResultssportsimmersivewizminiapplandingcontrollersEntityNewsClusterControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.miniapp.landing.EntityNewsClusterWizModel} */ this.entityNewsClusterWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.EntityNewsClusterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultssportsimmersivewizminiapplandingcontrollersEntityNewsClusterControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.miniapp.landing.SuggestedEntitiesCarouselController} */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.typedefs.controllers_SUGGESTED_ENTITIES_CAROUSEL;\n\n/** @record */\nclass gwsliveResultssportsimmersivewizminiapplandingcontrollersSuggestedEntitiesCarouselControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.liveresults.features.sports.immersive.templates.SuggestedEntitiesCarouselWizModel} */ this.suggestedEntitiesCarouselWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.miniapp.landing.controllers.SuggestedEntitiesCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultssportsimmersivewizminiapplandingcontrollersSuggestedEntitiesCarouselControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/landing/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/onboarding/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.InterestPickerExpandedSectionControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.OnboardingControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.miniapp.onboarding.OnboardingController\x3e} */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.ONBOARDING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.OnboardingController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.miniapp.onboarding.InterestPickerExpandedSectionController\x3e} */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.INTEREST_PICKER_EXPANDED_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.miniapp.onboarding.InterestPickerExpandedSectionController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.INTEREST_PICKER_EXPANDED_SECTION,\n    xid(\x27gws.suit.accordion.ExpansionAction\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.miniapp.onboarding.InterestPickerExpandedSectionController} */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.typedefs.controllers_INTEREST_PICKER_EXPANDED_SECTION;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.InterestPickerExpandedSectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.miniapp.onboarding.OnboardingController} */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.typedefs.controllers_ONBOARDING;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.miniapp.onboarding.controllers.OnboardingControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/onboarding/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.controllers.LandingPageStandingsControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.miniapp.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.miniapp.LandingPageStandingsController\x3e} */\ngws.liveResults.sports.immersive.wiz.miniapp.controllers.LANDING_PAGE_STANDINGS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.miniapp.LandingPageStandingsController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.miniapp.LandingPageStandingsController} */\ngws.liveResults.sports.immersive.wiz.miniapp.typedefs.controllers_LANDING_PAGE_STANDINGS;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.miniapp.controllers.LandingPageStandingsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/miniapp/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/standings/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.standings.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.standings.controllers.StandingsTableRowControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.standings.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.standings.StandingsTableRowWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.standings.StandingsTableRowController\x3e} */\ngws.liveResults.sports.immersive.wiz.standings.controllers.STANDINGS_TABLE_ROW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.standings.StandingsTableRowController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.standings.StandingsTableRowController} */\ngws.liveResults.sports.immersive.wiz.standings.typedefs.controllers_STANDINGS_TABLE_ROW;\n\n/** @record */\nclass gwsliveResultssportsimmersivewizstandingscontrollersStandingsTableRowControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.standings.StandingsTableRowWizModel} */ this.standingsTableRowWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.standings.controllers.StandingsTableRowControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultssportsimmersivewizstandingscontrollersStandingsTableRowControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/standings/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/twoteams/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.twoteams.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.twoteams.controllers.TwoTeamsOneboxControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.twoteams.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.twoteams.TwoTeamsOneboxWizModel\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.twoteams.TwoTeamsOneboxController\x3e} */\ngws.liveResults.sports.immersive.wiz.twoteams.controllers.TWO_TEAMS_ONEBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.twoteams.TwoTeamsOneboxController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.twoteams.TwoTeamsOneboxController} */\ngws.liveResults.sports.immersive.wiz.twoteams.typedefs.controllers_TWO_TEAMS_ONEBOX;\n\n/** @record */\nclass gwsliveResultssportsimmersivewiztwoteamscontrollersTwoTeamsOneboxControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.com.google.gws.plugins.liveresults.sports.immersive.wiz.twoteams.TwoTeamsOneboxWizModel} */ this.twoTeamsOneboxWizModel;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.twoteams.controllers.TwoTeamsOneboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultssportsimmersivewiztwoteamscontrollersTwoTeamsOneboxControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/twoteams/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/ugc/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.ugc.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.ugc.controllers.SportsLiveCommentsControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.ugc.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.ugc.SportsLiveCommentsController\x3e} */\ngws.liveResults.sports.immersive.wiz.ugc.controllers.SPORTS_LIVE_COMMENTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.ugc.SportsLiveCommentsController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.ugc.SportsLiveCommentsController} */\ngws.liveResults.sports.immersive.wiz.ugc.typedefs.controllers_SPORTS_LIVE_COMMENTS;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.ugc.controllers.SportsLiveCommentsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/ugc/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers.AddTeamsButtonControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers.AddTeamsDialogControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers.InfiniteMatchListControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers.LeagueBracketsControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.controllers.ScrollingPanelControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.sports.immersive.wiz.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.AddTeamsButtonController\x3e} */\ngws.liveResults.sports.immersive.wiz.controllers.ADD_TEAMS_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.AddTeamsButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.ScrollingPanelController\x3e} */\ngws.liveResults.sports.immersive.wiz.controllers.SCROLLING_PANEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.ScrollingPanelController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.InfiniteMatchListController\x3e} */\ngws.liveResults.sports.immersive.wiz.controllers.INFINITE_MATCH_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.InfiniteMatchListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.AddTeamsDialogController\x3e} */\ngws.liveResults.sports.immersive.wiz.controllers.ADD_TEAMS_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.AddTeamsDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.sports.immersive.wiz.LeagueBracketsController\x3e} */\ngws.liveResults.sports.immersive.wiz.controllers.LEAGUE_BRACKETS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.sports.immersive.wiz.LeagueBracketsController\x27));\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.AddTeamsButtonController} */\ngws.liveResults.sports.immersive.wiz.typedefs.controllers_ADD_TEAMS_BUTTON;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.controllers.AddTeamsButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.AddTeamsDialogController} */\ngws.liveResults.sports.immersive.wiz.typedefs.controllers_ADD_TEAMS_DIALOG;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.controllers.AddTeamsDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.InfiniteMatchListController} */\ngws.liveResults.sports.immersive.wiz.typedefs.controllers_INFINITE_MATCH_LIST;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.controllers.InfiniteMatchListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.LeagueBracketsController} */\ngws.liveResults.sports.immersive.wiz.typedefs.controllers_LEAGUE_BRACKETS;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.controllers.LeagueBracketsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.liveResults.sports.immersive.wiz.ScrollingPanelController} */\ngws.liveResults.sports.immersive.wiz.typedefs.controllers_SCROLLING_PANEL;\n\n/** @record */\ngws.liveResults.sports.immersive.wiz.controllers.ScrollingPanelControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/sports/immersive/wiz/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/translate/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.liveResult.translateWidget.controllers\x27);\ngoog.provide(\x27search.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse\x27);\ngoog.provide(\x27search.liveResult.translateWidget.controllers.TranslateLanguagePickerDesktopControllerResponse\x27);\ngoog.provide(\x27search.liveResult.translateWidget.controllers.TranslateLanguagePickerMobileControllerResponse\x27);\ngoog.provide(\x27search.liveResult.translateWidget.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.liveresults.translate_widget_schrodinger.LanguagePickerWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.translateWidget.TranslateLanguagePickerController\x3e} */\nsearch.liveResult.translateWidget.controllers.TRANSLATE_LANGUAGE_PICKER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.translateWidget.TranslateLanguagePickerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.translateWidget.TranslateLanguagePickerDesktopController\x3e} */\nsearch.liveResult.translateWidget.controllers.TRANSLATE_LANGUAGE_PICKER_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.translateWidget.TranslateLanguagePickerDesktopController\x27),\n    [search.liveResult.translateWidget.controllers.TRANSLATE_LANGUAGE_PICKER]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.translateWidget.TranslateLanguagePickerMobileController\x3e} */\nsearch.liveResult.translateWidget.controllers.TRANSLATE_LANGUAGE_PICKER_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.translateWidget.TranslateLanguagePickerMobileController\x27),\n    [search.liveResult.translateWidget.controllers.TRANSLATE_LANGUAGE_PICKER]);\n\n/** @typedef {!search.liveResult.translateWidget.TranslateLanguagePickerController} */\nsearch.liveResult.translateWidget.typedefs.controllers_TRANSLATE_LANGUAGE_PICKER;\n\n/** @record */\nclass searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.liveresults.translate_widget_schrodinger.LanguagePickerWizProto} */ this.languagePickerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.translateWidget.TranslateLanguagePickerDesktopController} */\nsearch.liveResult.translateWidget.typedefs.controllers_TRANSLATE_LANGUAGE_PICKER_DESKTOP;\n\n/** @record */\nclass searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerDesktopControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.liveresults.translate_widget_schrodinger.LanguagePickerWizProto} */ this.languagePickerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.translateWidget.controllers.TranslateLanguagePickerDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse} */ this.superResponse;\n    /** @type {!search.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse} */ this.super_response;\n    /** @type {!searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerDesktopControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.translateWidget.TranslateLanguagePickerMobileController} */\nsearch.liveResult.translateWidget.typedefs.controllers_TRANSLATE_LANGUAGE_PICKER_MOBILE;\n\n/** @record */\nclass searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerMobileControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.liveresults.translate_widget_schrodinger.LanguagePickerWizProto} */ this.languagePickerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.translateWidget.controllers.TranslateLanguagePickerMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse} */ this.superResponse;\n    /** @type {!search.liveResult.translateWidget.controllers.TranslateLanguagePickerControllerResponse} */ this.super_response;\n    /** @type {!searchliveResulttranslateWidgetcontrollersTranslateLanguagePickerMobileControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/translate/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/live_result/weather/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.liveResult.weather.controllers\x27);\ngoog.provide(\x27search.liveResult.weather.controllers.WeatherFooterControllerResponse\x27);\ngoog.provide(\x27search.liveResult.weather.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.weather.WeatherFooterController\x3e} */\nsearch.liveResult.weather.controllers.WEATHER_FOOTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.weather.WeatherFooterController\x27));\n\n/** @typedef {!search.liveResult.weather.WeatherFooterController} */\nsearch.liveResult.weather.typedefs.controllers_WEATHER_FOOTER;\n\n/** @record */\nsearch.liveResult.weather.controllers.WeatherFooterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/live_result/weather/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/local/basic/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.basic.controllers\x27);\ngoog.provide(\x27gws.local.categorical.basic.controllers.NoResultsControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.basic.controllers.NotSignedInControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.basic.controllers.UdcSettingsOffControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.basic.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.basic.NotSignedInController\x3e} */\ngws.local.categorical.basic.controllers.NOT_SIGNED_IN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.basic.NotSignedInController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.basic.NoResultsController\x3e} */\ngws.local.categorical.basic.controllers.NO_RESULTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.basic.NoResultsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.basic.UdcSettingsOffController\x3e} */\ngws.local.categorical.basic.controllers.UDC_SETTINGS_OFF \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.basic.UdcSettingsOffController\x27));\n\n/** @typedef {!gws.local.categorical.basic.NoResultsController} */\ngws.local.categorical.basic.typedefs.controllers_NO_RESULTS;\n\n/** @record */\ngws.local.categorical.basic.controllers.NoResultsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.categorical.basic.NotSignedInController} */\ngws.local.categorical.basic.typedefs.controllers_NOT_SIGNED_IN;\n\n/** @record */\ngws.local.categorical.basic.controllers.NotSignedInControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.categorical.basic.UdcSettingsOffController} */\ngws.local.categorical.basic.typedefs.controllers_UDC_SETTINGS_OFF;\n\n/** @record */\ngws.local.categorical.basic.controllers.UdcSettingsOffControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/local/basic/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/local/indoormap/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.indoormap.controllers\x27);\ngoog.provide(\x27gws.local.indoormap.controllers.IndoorMapControllerResponse\x27);\ngoog.provide(\x27gws.local.indoormap.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.local.indoormap.MapWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.indoormap.IndoorMapController\x3e} */\ngws.local.indoormap.controllers.INDOOR_MAP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.indoormap.IndoorMapController\x27));\n\n/** @typedef {!gws.local.indoormap.IndoorMapController} */\ngws.local.indoormap.typedefs.controllers_INDOOR_MAP;\n\n/** @record */\nclass gwslocalindoormapcontrollersIndoorMapControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.indoormap.MapWizProto} */ this.mapWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.local.indoormap.controllers.IndoorMapControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalindoormapcontrollersIndoorMapControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/local/indoormap/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/local/map/map_expando/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.local.map.controllers\x27);\ngoog.provide(\x27search.local.map.controllers.MapExpandoControllerResponse\x27);\ngoog.provide(\x27search.local.map.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.map.MapExpandoController\x3e} */\nsearch.local.map.controllers.MAP_EXPANDO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.map.MapExpandoController\x27));\n\n/** @typedef {!search.local.map.MapExpandoController} */\nsearch.local.map.typedefs.controllers_MAP_EXPANDO;\n\n/** @record */\nsearch.local.map.controllers.MapExpandoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/local/map/map_expando/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/local/merchant/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.local.merchant.controllers\x27);\ngoog.provide(\x27gws.common.local.merchant.controllers.TaskImmersivePlaceholderControllerResponse\x27);\ngoog.provide(\x27gws.common.local.merchant.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.local.merchant.TaskImmersivePlaceholderController\x3e} */\ngws.common.local.merchant.controllers.TASK_IMMERSIVE_PLACEHOLDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.local.merchant.TaskImmersivePlaceholderController\x27));\n\n/** @typedef {!gws.common.local.merchant.TaskImmersivePlaceholderController} */\ngws.common.local.merchant.typedefs.controllers_TASK_IMMERSIVE_PLACEHOLDER;\n\n/** @record */\ngws.common.local.merchant.controllers.TaskImmersivePlaceholderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/local/merchant/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/local/personalplaces/placelist/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.local.personalplaces.placelist.controllers\x27);\ngoog.provide(\x27search.local.personalplaces.placelist.controllers.PersonalPlaceListsKpControllerResponse\x27);\ngoog.provide(\x27search.local.personalplaces.placelist.controllers.SavePlaceButtonControllerResponse\x27);\ngoog.provide(\x27search.local.personalplaces.placelist.controllers.SavePlaceMenuControllerResponse\x27);\ngoog.provide(\x27search.local.personalplaces.placelist.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.common.jslayout.geo.personalplacelist.SavePlaceMenuWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.local.personalplaces.placelist.SavePlaceButtonWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.local.personalplaces.placelist.PersonalPlaceListsKPProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.personalplaces.placelist.SavePlaceButtonController\x3e} */\nsearch.local.personalplaces.placelist.controllers.SAVE_PLACE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.personalplaces.placelist.SavePlaceButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.personalplaces.placelist.PersonalPlaceListsKpController\x3e} */\nsearch.local.personalplaces.placelist.controllers.PERSONAL_PLACE_LISTS_KP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.personalplaces.placelist.PersonalPlaceListsKpController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.personalplaces.placelist.SavePlaceMenuController\x3e} */\nsearch.local.personalplaces.placelist.controllers.SAVE_PLACE_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.personalplaces.placelist.SavePlaceMenuController\x27));\n\n/** @typedef {!search.local.personalplaces.placelist.PersonalPlaceListsKpController} */\nsearch.local.personalplaces.placelist.typedefs.controllers_PERSONAL_PLACE_LISTS_KP;\n\n/** @record */\nclass searchlocalpersonalplacesplacelistcontrollersPersonalPlaceListsKpControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.personalplaces.placelist.PersonalPlaceListsKPProto} */ this.personalPlaceListsKpProto;\n  }\n}\n\n\n\n/** @record */\nsearch.local.personalplaces.placelist.controllers.PersonalPlaceListsKpControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchlocalpersonalplacesplacelistcontrollersPersonalPlaceListsKpControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.personalplaces.placelist.SavePlaceButtonController} */\nsearch.local.personalplaces.placelist.typedefs.controllers_SAVE_PLACE_BUTTON;\n\n/** @record */\nclass searchlocalpersonalplacesplacelistcontrollersSavePlaceButtonControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.local.personalplaces.placelist.SavePlaceButtonWizProto} */ this.savePlaceButtonWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.local.personalplaces.placelist.controllers.SavePlaceButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchlocalpersonalplacesplacelistcontrollersSavePlaceButtonControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.personalplaces.placelist.SavePlaceMenuController} */\nsearch.local.personalplaces.placelist.typedefs.controllers_SAVE_PLACE_MENU;\n\n/** @record */\nclass searchlocalpersonalplacesplacelistcontrollersSavePlaceMenuControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.common.jslayout.geo.personalplacelist.SavePlaceMenuWizProto} */ this.savePlaceMenuWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.local.personalplaces.placelist.controllers.SavePlaceMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchlocalpersonalplacesplacelistcontrollersSavePlaceMenuControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/local/personalplaces/placelist/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/shopping/oshop/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.shopping.oshop.controllers\x27);\ngoog.provide(\x27gws.shopping.oshop.controllers.BuyingGuidesControllerResponse\x27);\ngoog.provide(\x27gws.shopping.oshop.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.shopping.oshop.BuyingGuidesController\x3e} */\ngws.shopping.oshop.controllers.BUYING_GUIDES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.shopping.oshop.BuyingGuidesController\x27));\n\n/** @typedef {!gws.shopping.oshop.BuyingGuidesController} */\ngws.shopping.oshop.typedefs.controllers_BUYING_GUIDES;\n\n/** @record */\ngws.shopping.oshop.controllers.BuyingGuidesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/shopping/oshop/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/srppagination/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.srpPagination.controllers\x27);\ngoog.provide(\x27gws.srpPagination.controllers.SrpPaginationControllerResponse\x27);\ngoog.provide(\x27gws.srpPagination.models\x27);\ngoog.provide(\x27gws.srpPagination.models.SrpPaginationModelResponse\x27);\ngoog.provide(\x27gws.srpPagination.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.srppagination.jslayout.SrpPaginationData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.srpPagination.SrpPaginationModel\x3e} */\ngws.srpPagination.models.SRP_PAGINATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.srpPagination.SrpPaginationModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.srpPagination.SrpPaginationController\x3e} */\ngws.srpPagination.controllers.SRP_PAGINATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.srpPagination.SrpPaginationController\x27),\n    [gws.srpPagination.models.SRP_PAGINATION]);\n\n/** @typedef {!gws.srpPagination.SrpPaginationController} */\ngws.srpPagination.typedefs.controllers_SRP_PAGINATION;\n\n/** @record */\nclass gwssrpPaginationcontrollersSrpPaginationControllerResponse_model {\n  constructor() {\n    /** @type {!gws.srpPagination.typedefs.models_SRP_PAGINATION} */ this.srpPaginationModel;\n  }\n}\n\n\n\n/** @record */\ngws.srpPagination.controllers.SrpPaginationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwssrpPaginationcontrollersSrpPaginationControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.srpPagination.SrpPaginationModel} */\ngws.srpPagination.typedefs.models_SRP_PAGINATION;\n\n/** @record */\nclass gwssrpPaginationmodelsSrpPaginationModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.srppagination.jslayout.SrpPaginationData} */ this.srpPaginationData;\n  }\n}\n\n\n\n/** @record */\ngws.srpPagination.models.SrpPaginationModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwssrpPaginationmodelsSrpPaginationModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/srppagination/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/tip/base_wizids.js";
eval("/**\n * @fileoverview Duplicate generated wizids.js. This file will be included in\n * base moduleset. It also exports the service id symbol to add-on moduleset\n * TODO(fishx): Auto generate this file.\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.tip.controllers\x27);\ngoog.provide(\x27search.tip.controllers.TipCalculatorControllerResponse\x27);\ngoog.provide(\x27search.tip.typedefs\x27);\n\ngoog.require(\x27search.api.bridge.ApiBridge\x27);\ngoog.require(\x27search.modules.MultiModulesetRegistry\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\nconst ApiBridge \x3d goog.module.get(\x27search.api.bridge.ApiBridge\x27);\nconst MultiModulesetRegistry \x3d\n    goog.module.get(\x27search.modules.MultiModulesetRegistry\x27);\n\n/** @const {!fava.services.ServiceId\x3c!Object\x3e} */\nsearch.tip.controllers.TIP_CALCULATOR \x3d\n    wiz.objectIdWithAutoRegistration(xid(\x27search.tip.TipCalculatorController\x27));\n\n/** @typedef {!Object} */\nsearch.tip.typedefs.controllers_TIP_CALCULATOR;\n\n/** @record */\nsearch.tip.controllers.TipCalculatorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\nApiBridge.export(\n    xid(\x27symbol.search.tip.controllers.TIP_CALCULATOR\x27),\n    search.tip.controllers.TIP_CALCULATOR);\nMultiModulesetRegistry.registerAddonModuleset({\n  featureModule: xid(\x27search.tip.TipCalculatorController\x27),\n  // null means that this feature will be served by base module set.\n  modulesetName: google.mmtipc ? \x27tipc\x27 : null,\n  baseModule: xid(\x27search.tip.TipCalculatorControllerBase\x27),\n});\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/tip/base_wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/top_nav/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.topNav.controllers\x27);\ngoog.provide(\x27search.topNav.controllers.TopNavExactlyControllerResponse\x27);\ngoog.provide(\x27search.topNav.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.topNav.TopNavExactlyController\x3e} */\nsearch.topNav.controllers.TOP_NAV_EXACTLY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.topNav.TopNavExactlyController\x27));\n\n/** @typedef {!search.topNav.TopNavExactlyController} */\nsearch.topNav.typedefs.controllers_TOP_NAV_EXACTLY;\n\n/** @record */\nsearch.topNav.controllers.TopNavExactlyControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/top_nav/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/vidya/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.vidya.controllers\x27);\ngoog.provide(\x27gws.vidya.controllers.VidyaLegacyTabControllerResponse\x27);\ngoog.provide(\x27gws.vidya.controllers.VidyaOnboardingCardControllerResponse\x27);\ngoog.provide(\x27gws.vidya.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.vidya.VidyaOnboardingCardController\x3e} */\ngws.vidya.controllers.VIDYA_ONBOARDING_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.vidya.VidyaOnboardingCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.vidya.VidyaLegacyTabController\x3e} */\ngws.vidya.controllers.VIDYA_LEGACY_TAB \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.vidya.VidyaLegacyTabController\x27));\n\n/** @typedef {!gws.vidya.VidyaLegacyTabController} */\ngws.vidya.typedefs.controllers_VIDYA_LEGACY_TAB;\n\n/** @record */\ngws.vidya.controllers.VidyaLegacyTabControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.vidya.VidyaOnboardingCardController} */\ngws.vidya.typedefs.controllers_VIDYA_ONBOARDING_CARD;\n\n/** @record */\ngws.vidya.controllers.VidyaOnboardingCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/vidya/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/votemort/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.ballot.controllers\x27);\ngoog.provide(\x27search.ballot.controllers.CategoryChipControllerResponse\x27);\ngoog.provide(\x27search.ballot.controllers.CategoryHeaderControllerResponse\x27);\ngoog.provide(\x27search.ballot.controllers.DrillDownControllerResponse\x27);\ngoog.provide(\x27search.ballot.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.ballot.DrillDownController\x3e} */\nsearch.ballot.controllers.DRILL_DOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.ballot.DrillDownController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.ballot.CategoryHeaderController\x3e} */\nsearch.ballot.controllers.CATEGORY_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.ballot.CategoryHeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.ballot.CategoryChipController\x3e} */\nsearch.ballot.controllers.CATEGORY_CHIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.ballot.CategoryChipController\x27));\n\n/** @typedef {!search.ballot.CategoryChipController} */\nsearch.ballot.typedefs.controllers_CATEGORY_CHIP;\n\n/** @record */\nsearch.ballot.controllers.CategoryChipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.ballot.CategoryHeaderController} */\nsearch.ballot.typedefs.controllers_CATEGORY_HEADER;\n\n/** @record */\nsearch.ballot.controllers.CategoryHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.ballot.DrillDownController} */\nsearch.ballot.typedefs.controllers_DRILL_DOWN;\n\n/** @record */\nsearch.ballot.controllers.DrillDownControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/votemort/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/stars/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.stars.controllers\x27);\ngoog.provide(\x27search.stars.controllers.NavLinkControllerResponse\x27);\ngoog.provide(\x27search.stars.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.stars.NavLinkController\x3e} */\nsearch.stars.controllers.NAV_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.stars.NavLinkController\x27));\n\n/** @typedef {!search.stars.NavLinkController} */\nsearch.stars.typedefs.controllers_NAV_LINK;\n\n/** @record */\nsearch.stars.controllers.NavLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/stars/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/suit/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.img.controllers\x27);\ngoog.provide(\x27search.suit.img.controllers.FadeInImgControllerResponse\x27);\ngoog.provide(\x27search.suit.img.controllers.LazyImgControllerResponse\x27);\ngoog.provide(\x27search.suit.img.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.img.FadeInImgController\x3e} */\nsearch.suit.img.controllers.FADE_IN_IMG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.img.FadeInImgController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.img.LazyImgController\x3e} */\nsearch.suit.img.controllers.LAZY_IMG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.img.LazyImgController\x27));\n\n/** @typedef {!search.suit.img.FadeInImgController} */\nsearch.suit.img.typedefs.controllers_FADE_IN_IMG;\n\n/** @record */\nsearch.suit.img.controllers.FadeInImgControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.suit.img.LazyImgController} */\nsearch.suit.img.typedefs.controllers_LAZY_IMG;\n\n/** @record */\nsearch.suit.img.controllers.LazyImgControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/suit/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/query/window/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.interfaces\x27);\ngoog.provide(\x27wiz.typedefs\x27);\ngoog.provide(\x27wiz.window.services\x27);\ngoog.provide(\x27wiz.window.services.OneWindowServiceResponse\x27);\ngoog.provide(\x27wiz.window.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.window.OneWindowService\x3e} */\nwiz.window.services.ONE_WINDOW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.window.OneWindowService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.window.services.ONE_WINDOW,\n    xid(\x27wiz.Window\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.Window\x3e} */\nwiz.interfaces.WINDOW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.Window\x27),\n    [wiz.window.services.ONE_WINDOW]);\n\n/** @typedef {!wiz.window.OneWindowService} */\nwiz.window.typedefs.services_ONE_WINDOW;\n\n/** @record */\nwiz.window.services.OneWindowServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.Window} */\nwiz.typedefs.interfaces_WINDOW;\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/query/window/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/a11y/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.a11y.services\x27);\ngoog.provide(\x27wiz.a11y.services.FocusServiceResponse\x27);\ngoog.provide(\x27wiz.a11y.typedefs\x27);\n\ngoog.require(\x27wiz.interfaces\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.a11y.FocusService\x3e} */\nwiz.a11y.services.FOCUS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.a11y.FocusService\x27),\n    [wiz.interfaces.WINDOW]);\n\n/** @typedef {!wiz.a11y.FocusService} */\nwiz.a11y.typedefs.services_FOCUS;\n\n/** @record */\nclass wiza11yservicesFocusServiceResponse_service {\n  constructor() {\n    /** @type {!wiz.Window} */ this.win;\n  }\n}\n\n\n\n/** @record */\nwiz.a11y.services.FocusServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wiza11yservicesFocusServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/a11y/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/modal/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.modal.services\x27);\ngoog.provide(\x27search.modal.services.ModalServiceResponse\x27);\ngoog.provide(\x27search.modal.typedefs\x27);\n\ngoog.require(\x27wiz.a11y.services\x27);\ngoog.require(\x27wiz.a11y.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27wiz.window.services\x27);\ngoog.require(\x27wiz.window.typedefs\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.modal.ModalService\x3e} */\nsearch.modal.services.MODAL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.modal.ModalService\x27),\n    [wiz.a11y.services.FOCUS, wiz.window.services.ONE_WINDOW]);\n\n/** @typedef {!search.modal.ModalService} */\nsearch.modal.typedefs.services_MODAL;\n\n/** @record */\nclass searchmodalservicesModalServiceResponse_service {\n  constructor() {\n    /** @type {!wiz.a11y.typedefs.services_FOCUS} */ this.focus;\n    /** @type {!wiz.window.typedefs.services_ONE_WINDOW} */ this.window;\n  }\n}\n\n\n\n/** @record */\nsearch.modal.services.ModalServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!searchmodalservicesModalServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/js/modal/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/dialog/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.dialog.controllers\x27);\ngoog.provide(\x27gws.fruit.dialog.controllers.DialogControllerResponse\x27);\ngoog.provide(\x27gws.fruit.dialog.typedefs\x27);\n\ngoog.require(\x27search.modal.services\x27);\ngoog.require(\x27search.modal.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.dialog.DialogController\x3e} */\ngws.fruit.dialog.controllers.DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.dialog.DialogController\x27),\n    [search.modal.services.MODAL]);\n\n/** @typedef {!gws.fruit.dialog.DialogController} */\ngws.fruit.dialog.typedefs.controllers_DIALOG;\n\n/** @record */\nclass gwsfruitdialogcontrollersDialogControllerResponse_service {\n  constructor() {\n    /** @type {!search.modal.typedefs.services_MODAL} */ this.modal;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.dialog.controllers.DialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitdialogcontrollersDialogControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dialog/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/ad_call_action/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.ad_call_action.controllers\x27);\ngoog.provide(\x27gws.fruit.ad_call_action.controllers.AdCallControllerResponse\x27);\ngoog.provide(\x27gws.fruit.ad_call_action.controllers.AdDirectCallControllerResponse\x27);\ngoog.provide(\x27gws.fruit.ad_call_action.typedefs\x27);\n\ngoog.require(\x27gws.fruit.dialog.controllers\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.ad_call_action.AdDirectCallController\x3e} */\ngws.fruit.ad_call_action.controllers.AD_DIRECT_CALL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.ad_call_action.AdDirectCallController\x27),\n    [gws.fruit.dialog.controllers.DIALOG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.ad_call_action.AdCallController\x3e} */\ngws.fruit.ad_call_action.controllers.AD_CALL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.ad_call_action.AdCallController\x27));\n\n/** @typedef {!gws.fruit.ad_call_action.AdCallController} */\ngws.fruit.ad_call_action.typedefs.controllers_AD_CALL;\n\n/** @record */\nclass gwsfruitad_call_actioncontrollersAdCallControllerResponse_controller {\n  constructor() {\n  }\n}\n\n\n\n/** @record */\ngws.fruit.ad_call_action.controllers.AdCallControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitad_call_actioncontrollersAdCallControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.ad_call_action.AdDirectCallController} */\ngws.fruit.ad_call_action.typedefs.controllers_AD_DIRECT_CALL;\n\n/** @record */\nclass gwsfruitad_call_actioncontrollersAdDirectCallControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.dialog;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.ad_call_action.controllers.AdDirectCallControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitad_call_actioncontrollersAdDirectCallControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/ad_call_action/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/exams/exam_expandable/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.examExpandable.controllers\x27);\ngoog.provide(\x27gws.fruit.examExpandable.controllers.ExamExpandableControllerResponse\x27);\ngoog.provide(\x27gws.fruit.examExpandable.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.examExpandable.ExamExpandableController\x3e} */\ngws.fruit.examExpandable.controllers.EXAM_EXPANDABLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.examExpandable.ExamExpandableController\x27));\n\n/** @typedef {!gws.fruit.examExpandable.ExamExpandableController} */\ngws.fruit.examExpandable.typedefs.controllers_EXAM_EXPANDABLE;\n\n/** @record */\ngws.fruit.examExpandable.controllers.ExamExpandableControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/exams/exam_expandable/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/exclusive_expandable_group/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.exclusive_expandable_group.controllers\x27);\ngoog.provide(\x27gws.fruit.exclusive_expandable_group.controllers.ExclusiveExpandableGroupControllerResponse\x27);\ngoog.provide(\x27gws.fruit.exclusive_expandable_group.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.exclusive_expandable_group.ExclusiveExpandableGroupController\x3e} */\ngws.fruit.exclusive_expandable_group.controllers.EXCLUSIVE_EXPANDABLE_GROUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.exclusive_expandable_group.ExclusiveExpandableGroupController\x27));\n\n/** @typedef {!gws.fruit.exclusive_expandable_group.ExclusiveExpandableGroupController} */\ngws.fruit.exclusive_expandable_group.typedefs.controllers_EXCLUSIVE_EXPANDABLE_GROUP;\n\n/** @record */\ngws.fruit.exclusive_expandable_group.controllers.ExclusiveExpandableGroupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/exclusive_expandable_group/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/explore_on_back/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.elements.explore_on_back.controllers\x27);\ngoog.provide(\x27gws.fruit.elements.explore_on_back.controllers.ExploreOnBackCacheControllerResponse\x27);\ngoog.provide(\x27gws.fruit.elements.explore_on_back.controllers.ExploreOnBackControllerResponse\x27);\ngoog.provide(\x27gws.fruit.elements.explore_on_back.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.elements.explore_on_back.ExploreOnBackCacheController\x3e} */\ngws.fruit.elements.explore_on_back.controllers.EXPLORE_ON_BACK_CACHE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.elements.explore_on_back.ExploreOnBackCacheController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.elements.explore_on_back.ExploreOnBackController\x3e} */\ngws.fruit.elements.explore_on_back.controllers.EXPLORE_ON_BACK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.elements.explore_on_back.ExploreOnBackController\x27));\n\n/** @typedef {!gws.fruit.elements.explore_on_back.ExploreOnBackCacheController} */\ngws.fruit.elements.explore_on_back.typedefs.controllers_EXPLORE_ON_BACK_CACHE;\n\n/** @record */\ngws.fruit.elements.explore_on_back.controllers.ExploreOnBackCacheControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.elements.explore_on_back.ExploreOnBackController} */\ngws.fruit.elements.explore_on_back.typedefs.controllers_EXPLORE_ON_BACK;\n\n/** @record */\ngws.fruit.elements.explore_on_back.controllers.ExploreOnBackControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/explore_on_back/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/nutrients_form/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.nutrients_form.controllers\x27);\ngoog.provide(\x27gws.fruit.nutrients_form.controllers.NutrientsFormControllerResponse\x27);\ngoog.provide(\x27gws.fruit.nutrients_form.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.nutrients_form.NutrientsFormController\x3e} */\ngws.fruit.nutrients_form.controllers.NUTRIENTS_FORM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.nutrients_form.NutrientsFormController\x27));\n\n/** @typedef {!gws.fruit.nutrients_form.NutrientsFormController} */\ngws.fruit.nutrients_form.typedefs.controllers_NUTRIENTS_FORM;\n\n/** @record */\ngws.fruit.nutrients_form.controllers.NutrientsFormControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/nutrients_form/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/primitives/web/horizontal_scroller/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.horizontalScroller.controllers\x27);\ngoog.provide(\x27gws.fruit.horizontalScroller.controllers.HorizontalScrollerControllerResponse\x27);\ngoog.provide(\x27gws.fruit.horizontalScroller.controllers.HorizontalScrollerWithNavButtonsControllerResponse\x27);\ngoog.provide(\x27gws.fruit.horizontalScroller.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.horizontalScroller.HorizontalScrollerController\x3e} */\ngws.fruit.horizontalScroller.controllers.HORIZONTAL_SCROLLER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.horizontalScroller.HorizontalScrollerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.horizontalScroller.HorizontalScrollerWithNavButtonsController\x3e} */\ngws.fruit.horizontalScroller.controllers.HORIZONTAL_SCROLLER_WITH_NAV_BUTTONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.horizontalScroller.HorizontalScrollerWithNavButtonsController\x27),\n    [gws.fruit.horizontalScroller.controllers.HORIZONTAL_SCROLLER]);\n\n/** @typedef {!gws.fruit.horizontalScroller.HorizontalScrollerController} */\ngws.fruit.horizontalScroller.typedefs.controllers_HORIZONTAL_SCROLLER;\n\n/** @record */\ngws.fruit.horizontalScroller.controllers.HorizontalScrollerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.horizontalScroller.HorizontalScrollerWithNavButtonsController} */\ngws.fruit.horizontalScroller.typedefs.controllers_HORIZONTAL_SCROLLER_WITH_NAV_BUTTONS;\n\n/** @record */\ngws.fruit.horizontalScroller.controllers.HorizontalScrollerWithNavButtonsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.fruit.horizontalScroller.controllers.HorizontalScrollerControllerResponse} */ this.superResponse;\n    /** @type {!gws.fruit.horizontalScroller.controllers.HorizontalScrollerControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/primitives/web/horizontal_scroller/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/primitives/web/image/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.image.controllers\x27);\ngoog.provide(\x27gws.fruit.image.controllers.ImageControllerResponse\x27);\ngoog.provide(\x27gws.fruit.image.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.image.ImageController\x3e} */\ngws.fruit.image.controllers.IMAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.image.ImageController\x27));\n\n/** @typedef {!gws.fruit.image.ImageController} */\ngws.fruit.image.typedefs.controllers_IMAGE;\n\n/** @record */\ngws.fruit.image.controllers.ImageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/primitives/web/image/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/carousel/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.carousel.controllers\x27);\ngoog.provide(\x27gws.fruit.carousel.controllers.CarouselControllerResponse\x27);\ngoog.provide(\x27gws.fruit.carousel.controllers.CarouselDesktopControllerResponse\x27);\ngoog.provide(\x27gws.fruit.carousel.controllers.CarouselItemControllerResponse\x27);\ngoog.provide(\x27gws.fruit.carousel.typedefs\x27);\n\ngoog.require(\x27gws.fruit.horizontalScroller.controllers\x27);\ngoog.require(\x27gws.fruit.image.controllers\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.carousel.CarouselItemController\x3e} */\ngws.fruit.carousel.controllers.CAROUSEL_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.carousel.CarouselItemController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.carousel.CarouselController\x3e} */\ngws.fruit.carousel.controllers.CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.carousel.CarouselController\x27),\n    [gws.fruit.horizontalScroller.controllers.HORIZONTAL_SCROLLER, gws.fruit.carousel.controllers.CAROUSEL_ITEM, gws.fruit.image.controllers.IMAGE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.carousel.CarouselDesktopController\x3e} */\ngws.fruit.carousel.controllers.CAROUSEL_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.carousel.CarouselDesktopController\x27),\n    [gws.fruit.carousel.controllers.CAROUSEL]);\n\n/** @typedef {!gws.fruit.carousel.CarouselController} */\ngws.fruit.carousel.typedefs.controllers_CAROUSEL;\n\n/** @record */\nclass gwsfruitcarouselcontrollersCarouselControllerResponse_preload {\n  constructor() {\n    /** @type {?} */ this.carouselItemControllers;\n    /** @type {?} */ this.image;\n  }\n}\n\n\n\n/** @record */\nclass gwsfruitcarouselcontrollersCarouselControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.horizontalScroller;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.carousel.controllers.CarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitcarouselcontrollersCarouselControllerResponse_preload} */ this.preload;\n    /** @type {!gwsfruitcarouselcontrollersCarouselControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.carousel.CarouselDesktopController} */\ngws.fruit.carousel.typedefs.controllers_CAROUSEL_DESKTOP;\n\n/** @record */\ngws.fruit.carousel.controllers.CarouselDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.fruit.carousel.controllers.CarouselControllerResponse} */ this.superResponse;\n    /** @type {!gws.fruit.carousel.controllers.CarouselControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.carousel.CarouselItemController} */\ngws.fruit.carousel.typedefs.controllers_CAROUSEL_ITEM;\n\n/** @record */\ngws.fruit.carousel.controllers.CarouselItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/carousel/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/dialog_close_button/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.dialog_close_button.controllers\x27);\ngoog.provide(\x27gws.fruit.dialog_close_button.controllers.DialogCloseButtonControllerResponse\x27);\ngoog.provide(\x27gws.fruit.dialog_close_button.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.dialog_close_button.DialogCloseButtonController\x3e} */\ngws.fruit.dialog_close_button.controllers.DIALOG_CLOSE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.dialog_close_button.DialogCloseButtonController\x27));\n\n/** @typedef {!gws.fruit.dialog_close_button.DialogCloseButtonController} */\ngws.fruit.dialog_close_button.typedefs.controllers_DIALOG_CLOSE_BUTTON;\n\n/** @record */\ngws.fruit.dialog_close_button.controllers.DialogCloseButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dialog_close_button/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/dialog_launcher/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.dialog_launcher.controllers\x27);\ngoog.provide(\x27gws.fruit.dialog_launcher.controllers.DialogLauncherControllerResponse\x27);\ngoog.provide(\x27gws.fruit.dialog_launcher.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.dialog_launcher.DialogLauncherController\x3e} */\ngws.fruit.dialog_launcher.controllers.DIALOG_LAUNCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.dialog_launcher.DialogLauncherController\x27));\n\n/** @typedef {!gws.fruit.dialog_launcher.DialogLauncherController} */\ngws.fruit.dialog_launcher.typedefs.controllers_DIALOG_LAUNCHER;\n\n/** @record */\ngws.fruit.dialog_launcher.controllers.DialogLauncherControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dialog_launcher/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/dropdown_list/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.dropdown_list.controllers\x27);\ngoog.provide(\x27gws.fruit.dropdown_list.controllers.DropdownListControllerResponse\x27);\ngoog.provide(\x27gws.fruit.dropdown_list.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.dropdown_list.DropdownListController\x3e} */\ngws.fruit.dropdown_list.controllers.DROPDOWN_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.dropdown_list.DropdownListController\x27));\n\n/** @typedef {!gws.fruit.dropdown_list.DropdownListController} */\ngws.fruit.dropdown_list.typedefs.controllers_DROPDOWN_LIST;\n\n/** @record */\ngws.fruit.dropdown_list.controllers.DropdownListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dropdown_list/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/inline_expandable/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.inline_expandable.controllers\x27);\ngoog.provide(\x27gws.fruit.inline_expandable.controllers.InlineExpandableControllerResponse\x27);\ngoog.provide(\x27gws.fruit.inline_expandable.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.inline_expandable.InlineExpandableController\x3e} */\ngws.fruit.inline_expandable.controllers.INLINE_EXPANDABLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.inline_expandable.InlineExpandableController\x27));\n\n/** @typedef {!gws.fruit.inline_expandable.InlineExpandableController} */\ngws.fruit.inline_expandable.typedefs.controllers_INLINE_EXPANDABLE;\n\n/** @record */\ngws.fruit.inline_expandable.controllers.InlineExpandableControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/inline_expandable/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/popover/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.standard.popover.controllers\x27);\ngoog.provide(\x27gws.fruit.standard.popover.controllers.PopoverControllerResponse\x27);\ngoog.provide(\x27gws.fruit.standard.popover.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.fruit.elements.standard.popover.PopoverProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.standard.popover.PopoverController\x3e} */\ngws.fruit.standard.popover.controllers.POPOVER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.standard.popover.PopoverController\x27));\n\n/** @typedef {!gws.fruit.standard.popover.PopoverController} */\ngws.fruit.standard.popover.typedefs.controllers_POPOVER;\n\n/** @record */\nclass gwsfruitstandardpopovercontrollersPopoverControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.fruit.elements.standard.popover.PopoverProto} */ this.popover;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.standard.popover.controllers.PopoverControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitstandardpopovercontrollersPopoverControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/popover/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/share_button/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.share_button.controllers\x27);\ngoog.provide(\x27gws.fruit.share_button.controllers.ShareDialogContentControllerResponse\x27);\ngoog.provide(\x27gws.fruit.share_button.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.share_button.ShareDialogContentController\x3e} */\ngws.fruit.share_button.controllers.SHARE_DIALOG_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.share_button.ShareDialogContentController\x27));\n\n/** @typedef {!gws.fruit.share_button.ShareDialogContentController} */\ngws.fruit.share_button.typedefs.controllers_SHARE_DIALOG_CONTENT;\n\n/** @record */\ngws.fruit.share_button.controllers.ShareDialogContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/share_button/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/standard/toggle/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.standard.toggle.controllers\x27);\ngoog.provide(\x27gws.fruit.standard.toggle.controllers.ToggleControllerResponse\x27);\ngoog.provide(\x27gws.fruit.standard.toggle.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.standard.toggle.ToggleController\x3e} */\ngws.fruit.standard.toggle.controllers.TOGGLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.standard.toggle.ToggleController\x27));\n\n/** @typedef {!gws.fruit.standard.toggle.ToggleController} */\ngws.fruit.standard.toggle.typedefs.controllers_TOGGLE;\n\n/** @record */\ngws.fruit.standard.toggle.controllers.ToggleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/toggle/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/elements/why_this_ad_dialog/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.why_this_ad_dialog.controllers\x27);\ngoog.provide(\x27gws.fruit.why_this_ad_dialog.controllers.WhyThisAdDialogControllerResponse\x27);\ngoog.provide(\x27gws.fruit.why_this_ad_dialog.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.why_this_ad_dialog.WhyThisAdDialogController\x3e} */\ngws.fruit.why_this_ad_dialog.controllers.WHY_THIS_AD_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.why_this_ad_dialog.WhyThisAdDialogController\x27));\n\n/** @typedef {!gws.fruit.why_this_ad_dialog.WhyThisAdDialogController} */\ngws.fruit.why_this_ad_dialog.typedefs.controllers_WHY_THIS_AD_DIALOG;\n\n/** @record */\ngws.fruit.why_this_ad_dialog.controllers.WhyThisAdDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/why_this_ad_dialog/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/primitives/web/search_tools_card/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.searchtools.controllers\x27);\ngoog.provide(\x27gws.fruit.searchtools.controllers.DropdownResponse\x27);\ngoog.provide(\x27gws.fruit.searchtools.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.searchtools.Dropdown\x3e} */\ngws.fruit.searchtools.controllers.DROPDOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.searchtools.Dropdown\x27));\n\n/** @typedef {!gws.fruit.searchtools.Dropdown} */\ngws.fruit.searchtools.typedefs.controllers_DROPDOWN;\n\n/** @record */\ngws.fruit.searchtools.controllers.DropdownResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/primitives/web/search_tools_card/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/primitives/web/search_tools_toggle/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.toolbelt.controllers\x27);\ngoog.provide(\x27gws.fruit.toolbelt.controllers.ToggleResponse\x27);\ngoog.provide(\x27gws.fruit.toolbelt.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.toolbelt.Toggle\x3e} */\ngws.fruit.toolbelt.controllers.TOGGLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.toolbelt.Toggle\x27));\n\n/** @typedef {!gws.fruit.toolbelt.Toggle} */\ngws.fruit.toolbelt.typedefs.controllers_TOGGLE;\n\n/** @record */\ngws.fruit.toolbelt.controllers.ToggleResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/primitives/web/search_tools_toggle/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/core/host_cluster/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.hostcluster.controllers\x27);\ngoog.provide(\x27gws.fruit.hostcluster.controllers.HostClusterStackControllerResponse\x27);\ngoog.provide(\x27gws.fruit.hostcluster.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.hostcluster.HostClusterStackController\x3e} */\ngws.fruit.hostcluster.controllers.HOST_CLUSTER_STACK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.hostcluster.HostClusterStackController\x27));\n\n/** @typedef {!gws.fruit.hostcluster.HostClusterStackController} */\ngws.fruit.hostcluster.typedefs.controllers_HOST_CLUSTER_STACK;\n\n/** @record */\ngws.fruit.hostcluster.controllers.HostClusterStackControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/core/host_cluster/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/core/more_translations/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.more_translations.controllers\x27);\ngoog.provide(\x27gws.fruit.more_translations.controllers.MoreTranslationsControllerResponse\x27);\ngoog.provide(\x27gws.fruit.more_translations.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.more_translations.MoreTranslationsController\x3e} */\ngws.fruit.more_translations.controllers.MORE_TRANSLATIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.more_translations.MoreTranslationsController\x27));\n\n/** @typedef {!gws.fruit.more_translations.MoreTranslationsController} */\ngws.fruit.more_translations.typedefs.controllers_MORE_TRANSLATIONS;\n\n/** @record */\ngws.fruit.more_translations.controllers.MoreTranslationsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/core/more_translations/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/core/navquery_searchbox/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.navquery_searchbox.controllers\x27);\ngoog.provide(\x27gws.fruit.navquery_searchbox.controllers.NavquerySearchboxControllerResponse\x27);\ngoog.provide(\x27gws.fruit.navquery_searchbox.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.navquery_searchbox.NavquerySearchboxController\x3e} */\ngws.fruit.navquery_searchbox.controllers.NAVQUERY_SEARCHBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.navquery_searchbox.NavquerySearchboxController\x27));\n\n/** @typedef {!gws.fruit.navquery_searchbox.NavquerySearchboxController} */\ngws.fruit.navquery_searchbox.typedefs.controllers_NAVQUERY_SEARCHBOX;\n\n/** @record */\ngws.fruit.navquery_searchbox.controllers.NavquerySearchboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/core/navquery_searchbox/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/core/table_preview/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.sections.core.table_preview.controllers\x27);\ngoog.provide(\x27gws.fruit.sections.core.table_preview.controllers.TablePreviewControllerResponse\x27);\ngoog.provide(\x27gws.fruit.sections.core.table_preview.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.sections.core.table_preview.TablePreviewController\x3e} */\ngws.fruit.sections.core.table_preview.controllers.TABLE_PREVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.sections.core.table_preview.TablePreviewController\x27));\n\n/** @typedef {!gws.fruit.sections.core.table_preview.TablePreviewController} */\ngws.fruit.sections.core.table_preview.typedefs.controllers_TABLE_PREVIEW;\n\n/** @record */\ngws.fruit.sections.core.table_preview.controllers.TablePreviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/core/table_preview/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/core/translate_widget/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.translate_widget.controllers\x27);\ngoog.provide(\x27gws.fruit.translate_widget.controllers.TranslateWidgetControllerResponse\x27);\ngoog.provide(\x27gws.fruit.translate_widget.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.translate_widget.TranslateWidgetController\x3e} */\ngws.fruit.translate_widget.controllers.TRANSLATE_WIDGET \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.translate_widget.TranslateWidgetController\x27));\n\n/** @typedef {!gws.fruit.translate_widget.TranslateWidgetController} */\ngws.fruit.translate_widget.typedefs.controllers_TRANSLATE_WIDGET;\n\n/** @record */\ngws.fruit.translate_widget.controllers.TranslateWidgetControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/core/translate_widget/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/funbox/spinner_section/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.spinner_section.controllers\x27);\ngoog.provide(\x27gws.fruit.spinner_section.controllers.SpinnerSectionControllerResponse\x27);\ngoog.provide(\x27gws.fruit.spinner_section.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.spinner_section.SpinnerSectionController\x3e} */\ngws.fruit.spinner_section.controllers.SPINNER_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.spinner_section.SpinnerSectionController\x27));\n\n/** @typedef {!gws.fruit.spinner_section.SpinnerSectionController} */\ngws.fruit.spinner_section.typedefs.controllers_SPINNER_SECTION;\n\n/** @record */\ngws.fruit.spinner_section.controllers.SpinnerSectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/funbox/spinner_section/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/knowledge/nutrition_section/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.nutrition_section.controllers\x27);\ngoog.provide(\x27gws.fruit.nutrition_section.controllers.NutritionSectionControllerResponse\x27);\ngoog.provide(\x27gws.fruit.nutrition_section.models\x27);\ngoog.provide(\x27gws.fruit.nutrition_section.models.NutritionSectionModelResponse\x27);\ngoog.provide(\x27gws.fruit.nutrition_section.typedefs\x27);\n\ngoog.require(\x27gws.fruit.dropdown_list.controllers\x27);\ngoog.require(\x27gws.fruit.nutrients_form.controllers\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.fruit.sections.knowledge.nutrition_section.NutritionSectionProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.nutrition_section.NutritionSectionModel\x3e} */\ngws.fruit.nutrition_section.models.NUTRITION_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.nutrition_section.NutritionSectionModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.nutrition_section.NutritionSectionController\x3e} */\ngws.fruit.nutrition_section.controllers.NUTRITION_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.nutrition_section.NutritionSectionController\x27),\n    [gws.fruit.dropdown_list.controllers.DROPDOWN_LIST, gws.fruit.nutrients_form.controllers.NUTRIENTS_FORM, gws.fruit.nutrition_section.models.NUTRITION_SECTION]);\n\n/** @typedef {!gws.fruit.nutrition_section.NutritionSectionController} */\ngws.fruit.nutrition_section.typedefs.controllers_NUTRITION_SECTION;\n\n/** @record */\nclass gwsfruitnutrition_sectioncontrollersNutritionSectionControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.servings;\n    /** @type {?} */ this.nutrients;\n  }\n}\n\n\n\n/** @record */\nclass gwsfruitnutrition_sectioncontrollersNutritionSectionControllerResponse_model {\n  constructor() {\n    /** @type {!gws.fruit.nutrition_section.typedefs.models_NUTRITION_SECTION} */ this.nutrition;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.nutrition_section.controllers.NutritionSectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitnutrition_sectioncontrollersNutritionSectionControllerResponse_controller} */ this.controller;\n    /** @type {!gwsfruitnutrition_sectioncontrollersNutritionSectionControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.nutrition_section.NutritionSectionModel} */\ngws.fruit.nutrition_section.typedefs.models_NUTRITION_SECTION;\n\n/** @record */\nclass gwsfruitnutrition_sectionmodelsNutritionSectionModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.fruit.sections.knowledge.nutrition_section.NutritionSectionProto} */ this.nutrition;\n  }\n}\n\n\n\n/** @record */\ngws.fruit.nutrition_section.models.NutritionSectionModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwsfruitnutrition_sectionmodelsNutritionSectionModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/knowledge/nutrition_section/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/local/place_facts_section/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.place_facts_section.controllers\x27);\ngoog.provide(\x27gws.fruit.place_facts_section.controllers.PlaceFactsSectionControllerResponse\x27);\ngoog.provide(\x27gws.fruit.place_facts_section.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.place_facts_section.PlaceFactsSectionController\x3e} */\ngws.fruit.place_facts_section.controllers.PLACE_FACTS_SECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.place_facts_section.PlaceFactsSectionController\x27));\n\n/** @typedef {!gws.fruit.place_facts_section.PlaceFactsSectionController} */\ngws.fruit.place_facts_section.typedefs.controllers_PLACE_FACTS_SECTION;\n\n/** @record */\ngws.fruit.place_facts_section.controllers.PlaceFactsSectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/local/place_facts_section/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/standard/inline_expand_action_bar/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.inlineExpandActionBar.controllers\x27);\ngoog.provide(\x27gws.fruit.inlineExpandActionBar.controllers.InlineExpandActionBarControllerResponse\x27);\ngoog.provide(\x27gws.fruit.inlineExpandActionBar.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.inlineExpandActionBar.InlineExpandActionBarController\x3e} */\ngws.fruit.inlineExpandActionBar.controllers.INLINE_EXPAND_ACTION_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.inlineExpandActionBar.InlineExpandActionBarController\x27));\n\n/** @typedef {!gws.fruit.inlineExpandActionBar.InlineExpandActionBarController} */\ngws.fruit.inlineExpandActionBar.typedefs.controllers_INLINE_EXPAND_ACTION_BAR;\n\n/** @record */\ngws.fruit.inlineExpandActionBar.controllers.InlineExpandActionBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/standard/inline_expand_action_bar/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/fruit/sections/vasco/vasco_task_card_carousel/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.fruit.vasco_task_card_carousel.controllers\x27);\ngoog.provide(\x27gws.fruit.vasco_task_card_carousel.controllers.VascoPopoverLoggingControllerResponse\x27);\ngoog.provide(\x27gws.fruit.vasco_task_card_carousel.controllers.VascoTaskCardCarouselControllerResponse\x27);\ngoog.provide(\x27gws.fruit.vasco_task_card_carousel.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.vasco_task_card_carousel.VascoPopoverLoggingController\x3e} */\ngws.fruit.vasco_task_card_carousel.controllers.VASCO_POPOVER_LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.vasco_task_card_carousel.VascoPopoverLoggingController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.fruit.vasco_task_card_carousel.VascoTaskCardCarouselController\x3e} */\ngws.fruit.vasco_task_card_carousel.controllers.VASCO_TASK_CARD_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.fruit.vasco_task_card_carousel.VascoTaskCardCarouselController\x27));\n\n/** @typedef {!gws.fruit.vasco_task_card_carousel.VascoPopoverLoggingController} */\ngws.fruit.vasco_task_card_carousel.typedefs.controllers_VASCO_POPOVER_LOGGING;\n\n/** @record */\ngws.fruit.vasco_task_card_carousel.controllers.VascoPopoverLoggingControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.fruit.vasco_task_card_carousel.VascoTaskCardCarouselController} */\ngws.fruit.vasco_task_card_carousel.typedefs.controllers_VASCO_TASK_CARD_CAROUSEL;\n\n/** @record */\ngws.fruit.vasco_task_card_carousel.controllers.VascoTaskCardCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/fruit/sections/vasco/vasco_task_card_carousel/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/fullscreen/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.fullscreen.controllers\x27);\ngoog.provide(\x27search.fullscreen.controllers.AppControllerResponse\x27);\ngoog.provide(\x27search.fullscreen.services\x27);\ngoog.provide(\x27search.fullscreen.services.AppInitServiceResponse\x27);\ngoog.provide(\x27search.fullscreen.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.AppController\x3e} */\nsearch.fullscreen.controllers.APP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.AppController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.AppInitService\x3e} */\nsearch.fullscreen.services.APP_INIT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.AppInitService\x27));\n\n/** @typedef {!search.fullscreen.AppController} */\nsearch.fullscreen.typedefs.controllers_APP;\n\n/** @record */\nsearch.fullscreen.controllers.AppControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.fullscreen.AppInitService} */\nsearch.fullscreen.typedefs.services_APP_INIT;\n\n/** @record */\nsearch.fullscreen.services.AppInitServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/js/fullscreen/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/fullscreen/search/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.fullscreen.search.controllers\x27);\ngoog.provide(\x27search.fullscreen.search.controllers.SearchAppControllerResponse\x27);\ngoog.provide(\x27search.fullscreen.search.services\x27);\ngoog.provide(\x27search.fullscreen.search.services.SearchAppInitServiceResponse\x27);\ngoog.provide(\x27search.fullscreen.search.typedefs\x27);\n\ngoog.require(\x27search.fullscreen.controllers\x27);\ngoog.require(\x27search.fullscreen.controllers.AppControllerResponse\x27);\ngoog.require(\x27search.fullscreen.services\x27);\ngoog.require(\x27search.fullscreen.services.AppInitServiceResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.search.SearchAppInitService\x3e} */\nsearch.fullscreen.search.services.SEARCH_APP_INIT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.search.SearchAppInitService\x27),\n    [search.fullscreen.services.APP_INIT]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.search.SearchAppController\x3e} */\nsearch.fullscreen.search.controllers.SEARCH_APP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.search.SearchAppController\x27),\n    [search.fullscreen.controllers.APP]);\n\n/** @typedef {!search.fullscreen.search.SearchAppController} */\nsearch.fullscreen.search.typedefs.controllers_SEARCH_APP;\n\n/** @record */\nsearch.fullscreen.search.controllers.SearchAppControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.fullscreen.controllers.AppControllerResponse} */ this.superResponse;\n    /** @type {!search.fullscreen.controllers.AppControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.fullscreen.search.SearchAppInitService} */\nsearch.fullscreen.search.typedefs.services_SEARCH_APP_INIT;\n\n/** @record */\nsearch.fullscreen.search.services.SearchAppInitServiceResponse \x3d class {\n  constructor() {\n    /** @type {!search.fullscreen.services.AppInitServiceResponse} */ this.superResponse;\n    /** @type {!search.fullscreen.services.AppInitServiceResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/js/fullscreen/search/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/mothership/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.mothership.services\x27);\ngoog.provide(\x27search.mothership.services.GwsRpcDataServiceResponse\x27);\ngoog.provide(\x27search.mothership.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.mothership.GwsRpcDataService\x3e} */\nsearch.mothership.services.GWS_RPC_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.mothership.GwsRpcDataService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.mothership.services.GWS_RPC_DATA,\n    xid(\x27frameworks.client.data.GenericTransportInterface\x27));\n\n/** @typedef {!search.mothership.GwsRpcDataService} */\nsearch.mothership.typedefs.services_GWS_RPC_DATA;\n\n/** @record */\nsearch.mothership.services.GwsRpcDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/js/mothership/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/output/pages/base/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.fullscreen.appswitch.controllers\x27);\ngoog.provide(\x27search.fullscreen.appswitch.controllers.AppSwitchControllerResponse\x27);\ngoog.provide(\x27search.fullscreen.appswitch.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.appswitch.AppSwitchController\x3e} */\nsearch.fullscreen.appswitch.controllers.APP_SWITCH \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.appswitch.AppSwitchController\x27));\n\n/** @typedef {!search.fullscreen.appswitch.AppSwitchController} */\nsearch.fullscreen.appswitch.typedefs.controllers_APP_SWITCH;\n\n/** @record */\nsearch.fullscreen.appswitch.controllers.AppSwitchControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/output/pages/base/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/output/pages/elements/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.fullscreen.applink.controllers\x27);\ngoog.provide(\x27search.fullscreen.applink.controllers.AppSwitchingLinkControllerResponse\x27);\ngoog.provide(\x27search.fullscreen.applink.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.fullscreen.applink.AppSwitchingLinkController\x3e} */\nsearch.fullscreen.applink.controllers.APP_SWITCHING_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.fullscreen.applink.AppSwitchingLinkController\x27));\n\n/** @typedef {!search.fullscreen.applink.AppSwitchingLinkController} */\nsearch.fullscreen.applink.typedefs.controllers_APP_SWITCHING_LINK;\n\n/** @record */\nsearch.fullscreen.applink.controllers.AppSwitchingLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/output/pages/elements/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/assets/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.suit.assets.controllers\x27);\ngoog.provide(\x27gws.suit.assets.controllers.LightExampleControllerResponse\x27);\ngoog.provide(\x27gws.suit.assets.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.prototemplate.ExperimentFlagValues\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.suit.assets.LightExampleController\x3e} */\ngws.suit.assets.controllers.LIGHT_EXAMPLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.suit.assets.LightExampleController\x27));\n\n/** @typedef {!gws.suit.assets.LightExampleController} */\ngws.suit.assets.typedefs.controllers_LIGHT_EXAMPLE;\n\n/** @record */\nclass gwssuitassetscontrollersLightExampleControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.prototemplate.ExperimentFlagValues} */ this.expflagsProto;\n  }\n}\n\n\n\n/** @record */\ngws.suit.assets.controllers.LightExampleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwssuitassetscontrollersLightExampleControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/assets/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/bubble/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.bubble.controllers\x27);\ngoog.provide(\x27search.suit.bubble.controllers.BubbleControllerResponse\x27);\ngoog.provide(\x27search.suit.bubble.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.bubble.BubbleController\x3e} */\nsearch.suit.bubble.controllers.BUBBLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.bubble.BubbleController\x27));\n\n/** @typedef {!search.suit.bubble.BubbleController} */\nsearch.suit.bubble.typedefs.controllers_BUBBLE;\n\n/** @record */\nsearch.suit.bubble.controllers.BubbleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/bubble/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/checkbox/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.checkbox.controllers\x27);\ngoog.provide(\x27search.suit.checkbox.controllers.CheckboxControllerResponse\x27);\ngoog.provide(\x27search.suit.checkbox.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.checkbox.CheckboxController\x3e} */\nsearch.suit.checkbox.controllers.CHECKBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.checkbox.CheckboxController\x27));\n\n/** @typedef {!search.suit.checkbox.CheckboxController} */\nsearch.suit.checkbox.typedefs.controllers_CHECKBOX;\n\n/** @record */\nsearch.suit.checkbox.controllers.CheckboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/checkbox/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/popup/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.popup.controllers\x27);\ngoog.provide(\x27search.suit.popup.controllers.PopupControllerResponse\x27);\ngoog.provide(\x27search.suit.popup.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.suit.popup.GPopupWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.popup.PopupController\x3e} */\nsearch.suit.popup.controllers.POPUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.popup.PopupController\x27));\n\n/** @typedef {!search.suit.popup.PopupController} */\nsearch.suit.popup.typedefs.controllers_POPUP;\n\n/** @record */\nclass searchsuitpopupcontrollersPopupControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.suit.popup.GPopupWizProto} */ this.gPopupWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.suit.popup.controllers.PopupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchsuitpopupcontrollersPopupControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/popup/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/radio_button_group/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.radioButtonGroup.controllers\x27);\ngoog.provide(\x27search.suit.radioButtonGroup.controllers.RadioButtonGroupControllerResponse\x27);\ngoog.provide(\x27search.suit.radioButtonGroup.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.radioButtonGroup.RadioButtonGroupController\x3e} */\nsearch.suit.radioButtonGroup.controllers.RADIO_BUTTON_GROUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.radioButtonGroup.RadioButtonGroupController\x27));\n\n/** @typedef {!search.suit.radioButtonGroup.RadioButtonGroupController} */\nsearch.suit.radioButtonGroup.typedefs.controllers_RADIO_BUTTON_GROUP;\n\n/** @record */\nsearch.suit.radioButtonGroup.controllers.RadioButtonGroupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/radio_button_group/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/suit/ripple/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.suit.ripple.controllers\x27);\ngoog.provide(\x27search.suit.ripple.controllers.RippleControllerResponse\x27);\ngoog.provide(\x27search.suit.ripple.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.search.suit.ripple.GRippleWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.suit.ripple.RippleController\x3e} */\nsearch.suit.ripple.controllers.RIPPLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.suit.ripple.RippleController\x27));\n\n/** @typedef {!search.suit.ripple.RippleController} */\nsearch.suit.ripple.typedefs.controllers_RIPPLE;\n\n/** @record */\nclass searchsuitripplecontrollersRippleControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.search.suit.ripple.GRippleWizProto} */ this.gRippleWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.suit.ripple.controllers.RippleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchsuitripplecontrollersRippleControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/gws/suit/ripple/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/component/patchers/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.component.patchers.interfaces\x27);\ngoog.provide(\x27wiz.component.patchers.services\x27);\ngoog.provide(\x27wiz.component.patchers.services.IdomPatcherServiceResponse\x27);\ngoog.provide(\x27wiz.component.patchers.services.SoyPatcherServiceResponse\x27);\ngoog.provide(\x27wiz.component.patchers.typedefs\x27);\n\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.patchers.SoyPatcherService\x3e} */\nwiz.component.patchers.services.SOY_PATCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.patchers.SoyPatcherService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.component.patchers.services.SOY_PATCHER,\n    xid(\x27wiz.component.patchers.PatchInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.patchers.PatchInterface\x3e} */\nwiz.component.patchers.interfaces.PATCH \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.patchers.PatchInterface\x27),\n    [wiz.component.patchers.services.SOY_PATCHER]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.patchers.IdomPatcherService\x3e} */\nwiz.component.patchers.services.IDOM_PATCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.patchers.IdomPatcherService\x27),\n    [fava.services.SOY_RENDERER]);\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.component.patchers.services.IDOM_PATCHER,\n    xid(\x27wiz.component.patchers.PatchInterface\x27));\n\n/** @typedef {!wiz.component.patchers.IdomPatcherService} */\nwiz.component.patchers.typedefs.services_IDOM_PATCHER;\n\n/** @record */\nclass wizcomponentpatchersservicesIdomPatcherServiceResponse_appContext {\n  constructor() {\n    /** @type {!fava.dom.SoyRenderer} */ this.soy;\n  }\n}\n\n\n\n/** @record */\nwiz.component.patchers.services.IdomPatcherServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentpatchersservicesIdomPatcherServiceResponse_appContext} */ this.appContext;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.component.patchers.PatchInterface} */\nwiz.component.patchers.typedefs.interfaces_PATCH;\n\n\n/** @typedef {!wiz.component.patchers.SoyPatcherService} */\nwiz.component.patchers.typedefs.services_SOY_PATCHER;\n\n/** @record */\nwiz.component.patchers.services.SoyPatcherServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/component/patchers/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/experiments/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.experiments.services\x27);\ngoog.provide(\x27wiz.experiments.services.ExperimentServiceResponse\x27);\ngoog.provide(\x27wiz.experiments.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.experiments.ExperimentService\x3e} */\nwiz.experiments.services.EXPERIMENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.experiments.ExperimentService\x27));\n\n/** @typedef {!wiz.experiments.ExperimentService} */\nwiz.experiments.typedefs.services_EXPERIMENT;\n\n/** @record */\nwiz.experiments.services.ExperimentServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/experiments/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/component/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.component.controllers\x27);\ngoog.provide(\x27wiz.component.controllers.ComponentControllerResponse\x27);\ngoog.provide(\x27wiz.component.models\x27);\ngoog.provide(\x27wiz.component.models.ComponentModelResponse\x27);\ngoog.provide(\x27wiz.component.renderers\x27);\ngoog.provide(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.provide(\x27wiz.component.services\x27);\ngoog.provide(\x27wiz.component.services.ComponentServiceResponse\x27);\ngoog.provide(\x27wiz.component.services.ComponentUpdateServiceResponse\x27);\ngoog.provide(\x27wiz.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.patchers.interfaces\x27);\ngoog.require(\x27wiz.component.patchers.typedefs\x27);\ngoog.require(\x27wiz.experiments.services\x27);\ngoog.require(\x27wiz.experiments.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.ComponentService\x3e} */\nwiz.component.services.COMPONENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.ComponentService\x27),\n    [wiz.experiments.services.EXPERIMENT]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.ComponentModel\x3e} */\nwiz.component.models.COMPONENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.ComponentModel\x27),\n    [wiz.component.services.COMPONENT]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.ComponentUpdateService\x3e} */\nwiz.component.services.COMPONENT_UPDATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.ComponentUpdateService\x27),\n    [wiz.component.services.COMPONENT]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.ComponentController\x3e} */\nwiz.component.controllers.COMPONENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.ComponentController\x27),\n    [wiz.component.models.COMPONENT]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.component.ComponentRenderer\x3e} */\nwiz.component.renderers.COMPONENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.component.ComponentRenderer\x27),\n    [wiz.component.patchers.interfaces.PATCH, wiz.component.services.COMPONENT]);\n\n/** @typedef {!wiz.component.ComponentController} */\nwiz.component.typedefs.controllers_COMPONENT;\n\n/** @record */\nclass wizcomponentcontrollersComponentControllerResponse_model {\n  constructor() {\n    /** @type {!wiz.component.typedefs.models_COMPONENT} */ this.component;\n  }\n}\n\n\n\n/** @record */\nwiz.component.controllers.ComponentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentcontrollersComponentControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.component.ComponentModel} */\nwiz.component.typedefs.models_COMPONENT;\n\n/** @record */\nclass wizcomponentmodelsComponentModelResponse_service {\n  constructor() {\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n  }\n}\n\n\n\n/** @record */\nwiz.component.models.ComponentModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentmodelsComponentModelResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.component.ComponentRenderer} */\nwiz.component.typedefs.renderers_COMPONENT;\n\n/** @record */\nclass wizcomponentrenderersComponentRendererResponse_context {\n  constructor() {\n    /** @type {?} */ this.componentInfo;\n  }\n}\n\n\n\n/** @record */\nclass wizcomponentrenderersComponentRendererResponse_service {\n  constructor() {\n    /** @type {!wiz.component.patchers.typedefs.interfaces_PATCH} */ this.patcher;\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n  }\n}\n\n\n\n/** @record */\nwiz.component.renderers.ComponentRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.RendererBaseResponse} */ this.superResponse;\n    /** @type {!wiz.RendererBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentrenderersComponentRendererResponse_context} */ this.context;\n    /** @type {!wizcomponentrenderersComponentRendererResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.component.ComponentService} */\nwiz.component.typedefs.services_COMPONENT;\n\n/** @record */\nclass wizcomponentservicesComponentServiceResponse_service {\n  constructor() {\n    /** @type {!wiz.experiments.typedefs.services_EXPERIMENT} */ this.experiment;\n  }\n}\n\n\n\n/** @record */\nwiz.component.services.ComponentServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentservicesComponentServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.component.ComponentUpdateService} */\nwiz.component.typedefs.services_COMPONENT_UPDATE;\n\n/** @record */\nclass wizcomponentservicesComponentUpdateServiceResponse_service {\n  constructor() {\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n  }\n}\n\n\n\n/** @record */\nwiz.component.services.ComponentUpdateServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizcomponentservicesComponentUpdateServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/component/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/ui/tabcontent/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveui.tabcontent.component.renderers\x27);\ngoog.provide(\x27boq.localimmersiveui.tabcontent.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.localimmersiveui.tabcontent.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveui.tabcontent.RenderRenderer\x3e} */\nboq.localimmersiveui.tabcontent.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveui.tabcontent.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.localimmersiveui.tabcontent.RenderRenderer} */\nboq.localimmersiveui.tabcontent.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.localimmersiveui.tabcontent.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/ui/tabcontent/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/ui/tabcontent/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveui.tabcontent.controllers\x27);\ngoog.provide(\x27boq.localimmersiveui.tabcontent.controllers.NoOpControllerResponse\x27);\ngoog.provide(\x27boq.localimmersiveui.tabcontent.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveui.tabcontent.NoOpController\x3e} */\nboq.localimmersiveui.tabcontent.controllers.NO_OP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveui.tabcontent.NoOpController\x27));\n\n/** @typedef {!boq.localimmersiveui.tabcontent.NoOpController} */\nboq.localimmersiveui.tabcontent.typedefs.controllers_NO_OP;\n\n/** @record */\nboq.localimmersiveui.tabcontent.controllers.NoOpControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/ui/tabcontent/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/uilib/propertiesweb/highlights/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveuilibproperties.highlights.component.renderers\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.highlights.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.highlights.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveuilibproperties.highlights.RenderRenderer\x3e} */\nboq.localimmersiveuilibproperties.highlights.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveuilibproperties.highlights.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.localimmersiveuilibproperties.highlights.RenderRenderer} */\nboq.localimmersiveuilibproperties.highlights.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.localimmersiveuilibproperties.highlights.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/uilib/propertiesweb/highlights/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/uilib/propertiesweb/scalableattributes/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveuilibproperties.scalableattributes.component.renderers\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.scalableattributes.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.scalableattributes.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveuilibproperties.scalableattributes.RenderRenderer\x3e} */\nboq.localimmersiveuilibproperties.scalableattributes.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveuilibproperties.scalableattributes.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.localimmersiveuilibproperties.scalableattributes.RenderRenderer} */\nboq.localimmersiveuilibproperties.scalableattributes.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.localimmersiveuilibproperties.scalableattributes.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/uilib/propertiesweb/scalableattributes/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/uilib/propertiesweb/socialprofiles/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveuilibproperties.socialprofiles.component.renderers\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.socialprofiles.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.socialprofiles.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveuilibproperties.socialprofiles.RenderRenderer\x3e} */\nboq.localimmersiveuilibproperties.socialprofiles.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveuilibproperties.socialprofiles.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.localimmersiveuilibproperties.socialprofiles.RenderRenderer} */\nboq.localimmersiveuilibproperties.socialprofiles.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.localimmersiveuilibproperties.socialprofiles.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/uilib/propertiesweb/socialprofiles/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/geo/local/boq/immersive/uilib/propertiesweb/summarydescription/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.localimmersiveuilibproperties.summarydescription.component.renderers\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.summarydescription.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.localimmersiveuilibproperties.summarydescription.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.localimmersiveuilibproperties.summarydescription.RenderRenderer\x3e} */\nboq.localimmersiveuilibproperties.summarydescription.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.localimmersiveuilibproperties.summarydescription.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.localimmersiveuilibproperties.summarydescription.RenderRenderer} */\nboq.localimmersiveuilibproperties.summarydescription.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.localimmersiveuilibproperties.summarydescription.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/geo/local/boq/immersive/uilib/propertiesweb/summarydescription/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/appbar/explore/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.appbar.explore.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.appbar.explore.controllers.ChipRefinementsControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.appbar.explore.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.appbar.explore.ChipRefinements\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.appbar.explore.ChipRefinementsController\x3e} */\ngws.common.jslayout.appbar.explore.controllers.CHIP_REFINEMENTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.appbar.explore.ChipRefinementsController\x27));\n\n/** @typedef {!gws.common.jslayout.appbar.explore.ChipRefinementsController} */\ngws.common.jslayout.appbar.explore.typedefs.controllers_CHIP_REFINEMENTS;\n\n/** @record */\nclass gwscommonjslayoutappbarexplorecontrollersChipRefinementsControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.appbar.explore.ChipRefinements} */ this.chipRefinements;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.appbar.explore.controllers.ChipRefinementsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutappbarexplorecontrollersChipRefinementsControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/appbar/explore/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/async/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.async.controllers\x27);\ngoog.provide(\x27gws.common.async.controllers.StatefulPartialControllerResponse\x27);\ngoog.provide(\x27gws.common.async.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.async.StatefulPartialController\x3e} */\ngws.common.async.controllers.STATEFUL_PARTIAL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.async.StatefulPartialController\x27));\n\n/** @typedef {!gws.common.async.StatefulPartialController} */\ngws.common.async.typedefs.controllers_STATEFUL_PARTIAL;\n\n/** @record */\ngws.common.async.controllers.StatefulPartialControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/async/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/donate/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.donate.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.donate.controllers.DonateButtonControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.donate.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.donate.DonateButtonController\x3e} */\ngws.common.jslayout.donate.controllers.DONATE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.donate.DonateButtonController\x27));\n\n/** @typedef {!gws.common.jslayout.donate.DonateButtonController} */\ngws.common.jslayout.donate.typedefs.controllers_DONATE_BUTTON;\n\n/** @record */\ngws.common.jslayout.donate.controllers.DonateButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/donate/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/footer/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.footer.language_selector.controllers\x27);\ngoog.provide(\x27search.footer.language_selector.controllers.ScrollControllerResponse\x27);\ngoog.provide(\x27search.footer.language_selector.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.footer.language_selector.ScrollController\x3e} */\nsearch.footer.language_selector.controllers.SCROLL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.footer.language_selector.ScrollController\x27));\n\n/** @typedef {!search.footer.language_selector.ScrollController} */\nsearch.footer.language_selector.typedefs.controllers_SCROLL;\n\n/** @record */\nsearch.footer.language_selector.controllers.ScrollControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/footer/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/impreciselocation/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.geo.impreciselocation.controllers\x27);\ngoog.provide(\x27gws.geo.impreciselocation.controllers.ControllerResponse\x27);\ngoog.provide(\x27gws.geo.impreciselocation.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.geo.impreciselocation.Controller\x3e} */\ngws.geo.impreciselocation.controllers.CONTROLLER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.geo.impreciselocation.Controller\x27));\n\n/** @typedef {!gws.geo.impreciselocation.Controller} */\ngws.geo.impreciselocation.typedefs.controllers_CONTROLLER;\n\n/** @record */\ngws.geo.impreciselocation.controllers.ControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/impreciselocation/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/localpromotions/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.promotions.controllers\x27);\ngoog.provide(\x27gws.local.promotions.controllers.SinglePromotionModuleControllerResponse\x27);\ngoog.provide(\x27gws.local.promotions.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.promotions.SinglePromotionModuleController\x3e} */\ngws.local.promotions.controllers.SINGLE_PROMOTION_MODULE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.promotions.SinglePromotionModuleController\x27));\n\n/** @typedef {!gws.local.promotions.SinglePromotionModuleController} */\ngws.local.promotions.typedefs.controllers_SINGLE_PROMOTION_MODULE;\n\n/** @record */\ngws.local.promotions.controllers.SinglePromotionModuleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/localpromotions/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/photouploader/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.geo.photouploader.controllers\x27);\ngoog.provide(\x27gws.common.geo.photouploader.controllers.HostAppPhotoUploaderControllerResponse\x27);\ngoog.provide(\x27gws.common.geo.photouploader.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.geo.photouploader.HostAppPhotoUploaderController\x3e} */\ngws.common.geo.photouploader.controllers.HOST_APP_PHOTO_UPLOADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.geo.photouploader.HostAppPhotoUploaderController\x27));\n\n/** @typedef {!gws.common.geo.photouploader.HostAppPhotoUploaderController} */\ngws.common.geo.photouploader.typedefs.controllers_HOST_APP_PHOTO_UPLOADER;\n\n/** @record */\ngws.common.geo.photouploader.controllers.HostAppPhotoUploaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/photouploader/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/timetoplace/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.geo.timetoplace.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.geo.timetoplace.controllers.TimeToPlaceControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.geo.timetoplace.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.geo.timetoplace.TimeToPlaceController\x3e} */\ngws.common.jslayout.geo.timetoplace.controllers.TIME_TO_PLACE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.geo.timetoplace.TimeToPlaceController\x27));\n\n/** @typedef {!gws.common.jslayout.geo.timetoplace.TimeToPlaceController} */\ngws.common.jslayout.geo.timetoplace.typedefs.controllers_TIME_TO_PLACE;\n\n/** @record */\ngws.common.jslayout.geo.timetoplace.controllers.TimeToPlaceControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/timetoplace/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/toplists/boq/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.geo.toplists.boq.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.geo.toplists.boq.controllers.TopListsLeafPageControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.geo.toplists.boq.typedefs\x27);\n\ngoog.require(\x27wiz.component.services\x27);\ngoog.require(\x27wiz.component.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.java.com.google.gws.common.jslayout.geo.toplists.boq.ToplistsLeafPageJsdata\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.geo.toplists.boq.TopListsLeafPageController\x3e} */\ngws.common.jslayout.geo.toplists.boq.controllers.TOP_LISTS_LEAF_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.geo.toplists.boq.TopListsLeafPageController\x27),\n    [wiz.component.services.COMPONENT]);\n\n/** @typedef {!gws.common.jslayout.geo.toplists.boq.TopListsLeafPageController} */\ngws.common.jslayout.geo.toplists.boq.typedefs.controllers_TOP_LISTS_LEAF_PAGE;\n\n/** @record */\nclass gwscommonjslayoutgeotoplistsboqcontrollersTopListsLeafPageControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.java.com.google.gws.common.jslayout.geo.toplists.boq.ToplistsLeafPageJsdata} */ this.topListsData;\n  }\n}\n\n\n\n/** @record */\nclass gwscommonjslayoutgeotoplistsboqcontrollersTopListsLeafPageControllerResponse_service {\n  constructor() {\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.geo.toplists.boq.controllers.TopListsLeafPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayoutgeotoplistsboqcontrollersTopListsLeafPageControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwscommonjslayoutgeotoplistsboqcontrollersTopListsLeafPageControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/toplists/boq/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/geo/transit/datetimepicker/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.geo.transit.datetimepicker.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.geo.transit.datetimepicker.controllers.DatetimepickerControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.geo.transit.datetimepicker.controllers.SpinnerControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.geo.transit.datetimepicker.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.geo.transit.datetimepicker.DatetimepickerController\x3e} */\ngws.common.jslayout.geo.transit.datetimepicker.controllers.DATETIMEPICKER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.geo.transit.datetimepicker.DatetimepickerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.geo.transit.datetimepicker.SpinnerController\x3e} */\ngws.common.jslayout.geo.transit.datetimepicker.controllers.SPINNER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.geo.transit.datetimepicker.SpinnerController\x27));\n\n/** @typedef {!gws.common.jslayout.geo.transit.datetimepicker.DatetimepickerController} */\ngws.common.jslayout.geo.transit.datetimepicker.typedefs.controllers_DATETIMEPICKER;\n\n/** @record */\ngws.common.jslayout.geo.transit.datetimepicker.controllers.DatetimepickerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.jslayout.geo.transit.datetimepicker.SpinnerController} */\ngws.common.jslayout.geo.transit.datetimepicker.typedefs.controllers_SPINNER;\n\n/** @record */\ngws.common.jslayout.geo.transit.datetimepicker.controllers.SpinnerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/geo/transit/datetimepicker/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/hotels/tips/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.hotels.tips.controllers\x27);\ngoog.provide(\x27gws.hotels.tips.controllers.MarketTrackingTipResponse\x27);\ngoog.provide(\x27gws.hotels.tips.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.hotels.InterleavedHotelGlobalTipData.MarketTrackingTip\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.hotels.tips.MarketTrackingTip\x3e} */\ngws.hotels.tips.controllers.MARKET_TRACKING_TIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.hotels.tips.MarketTrackingTip\x27));\n\n/** @typedef {!gws.hotels.tips.MarketTrackingTip} */\ngws.hotels.tips.typedefs.controllers_MARKET_TRACKING_TIP;\n\n/** @record */\nclass gwshotelstipscontrollersMarketTrackingTipResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.hotels.InterleavedHotelGlobalTipData.MarketTrackingTip} */ this.tip;\n  }\n}\n\n\n\n/** @record */\ngws.hotels.tips.controllers.MarketTrackingTipResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshotelstipscontrollersMarketTrackingTipResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/hotels/tips/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/uraw/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.uraw.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.uraw.controllers.ReportAbuseControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.uraw.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.uraw.ReportAbuse\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.uraw.ReportAbuseController\x3e} */\ngws.common.jslayout.uraw.controllers.REPORT_ABUSE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.uraw.ReportAbuseController\x27));\n\n/** @typedef {!gws.common.jslayout.uraw.ReportAbuseController} */\ngws.common.jslayout.uraw.typedefs.controllers_REPORT_ABUSE;\n\n/** @record */\nclass gwscommonjslayouturawcontrollersReportAbuseControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.uraw.ReportAbuse} */ this.reportAbuse;\n  }\n}\n\n\n\n/** @record */\ngws.common.jslayout.uraw.controllers.ReportAbuseControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonjslayouturawcontrollersReportAbuseControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/uraw/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/livecomments/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.livecomments.controllers\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.CommentControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.ComposerControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.FilteredStreamControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.SnackbarsControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.StreamControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.controllers.StreamSelectorControllerResponse\x27);\ngoog.provide(\x27gws.common.livecomments.models\x27);\ngoog.provide(\x27gws.common.livecomments.models.LiveCommentsModelResponse\x27);\ngoog.provide(\x27gws.common.livecomments.typedefs\x27);\n\ngoog.require(\x27gws.common.jslayout.uraw.controllers\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.livecomments.LiveCommentsConfig\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.LiveCommentsModel\x3e} */\ngws.common.livecomments.models.LIVE_COMMENTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.LiveCommentsModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.ComposerController\x3e} */\ngws.common.livecomments.controllers.COMPOSER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.ComposerController\x27),\n    [gws.common.livecomments.models.LIVE_COMMENTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.CommentController\x3e} */\ngws.common.livecomments.controllers.COMMENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.CommentController\x27),\n    [gws.common.livecomments.models.LIVE_COMMENTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.StreamSelectorController\x3e} */\ngws.common.livecomments.controllers.STREAM_SELECTOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.StreamSelectorController\x27),\n    [gws.common.livecomments.models.LIVE_COMMENTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.SnackbarsController\x3e} */\ngws.common.livecomments.controllers.SNACKBARS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.SnackbarsController\x27),\n    [gws.common.livecomments.models.LIVE_COMMENTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.StreamController\x3e} */\ngws.common.livecomments.controllers.STREAM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.StreamController\x27),\n    [gws.common.jslayout.uraw.controllers.REPORT_ABUSE, gws.common.livecomments.models.LIVE_COMMENTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.livecomments.FilteredStreamController\x3e} */\ngws.common.livecomments.controllers.FILTERED_STREAM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.livecomments.FilteredStreamController\x27),\n    [gws.common.livecomments.controllers.STREAM, gws.common.livecomments.models.LIVE_COMMENTS]);\n\n/** @typedef {!gws.common.livecomments.CommentController} */\ngws.common.livecomments.typedefs.controllers_COMMENT;\n\n/** @record */\nclass gwscommonlivecommentscontrollersCommentControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.CommentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersCommentControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.ComposerController} */\ngws.common.livecomments.typedefs.controllers_COMPOSER;\n\n/** @record */\nclass gwscommonlivecommentscontrollersComposerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.ComposerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersComposerControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.FilteredStreamController} */\ngws.common.livecomments.typedefs.controllers_FILTERED_STREAM;\n\n/** @record */\nclass gwscommonlivecommentscontrollersFilteredStreamControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\nclass gwscommonlivecommentscontrollersFilteredStreamControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.reportAbuse;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.FilteredStreamControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.common.livecomments.controllers.StreamControllerResponse} */ this.superResponse;\n    /** @type {!gws.common.livecomments.controllers.StreamControllerResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersFilteredStreamControllerResponse_model} */ this.model;\n    /** @type {!gwscommonlivecommentscontrollersFilteredStreamControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.LiveCommentsModel} */\ngws.common.livecomments.typedefs.models_LIVE_COMMENTS;\n\n/** @record */\nclass gwscommonlivecommentsmodelsLiveCommentsModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.livecomments.LiveCommentsConfig} */ this.config;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.models.LiveCommentsModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentsmodelsLiveCommentsModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.SnackbarsController} */\ngws.common.livecomments.typedefs.controllers_SNACKBARS;\n\n/** @record */\nclass gwscommonlivecommentscontrollersSnackbarsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.SnackbarsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersSnackbarsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.StreamController} */\ngws.common.livecomments.typedefs.controllers_STREAM;\n\n/** @record */\nclass gwscommonlivecommentscontrollersStreamControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\nclass gwscommonlivecommentscontrollersStreamControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.reportAbuse;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.StreamControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersStreamControllerResponse_model} */ this.model;\n    /** @type {!gwscommonlivecommentscontrollersStreamControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.livecomments.StreamSelectorController} */\ngws.common.livecomments.typedefs.controllers_STREAM_SELECTOR;\n\n/** @record */\nclass gwscommonlivecommentscontrollersStreamSelectorControllerResponse_model {\n  constructor() {\n    /** @type {!gws.common.livecomments.typedefs.models_LIVE_COMMENTS} */ this.liveComments;\n  }\n}\n\n\n\n/** @record */\ngws.common.livecomments.controllers.StreamSelectorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwscommonlivecommentscontrollersStreamSelectorControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/livecomments/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/liveresults/showtimes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.showtimes.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.showtimes.controllers.ShowtimesTicketingContentBodyControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.showtimes.controllers.ShowtimesTicketingContentTitleControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.showtimes.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.showtimes.ShowtimesTicketingContentTitleController\x3e} */\ngws.knowledge.verticals.showtimes.controllers.SHOWTIMES_TICKETING_CONTENT_TITLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.showtimes.ShowtimesTicketingContentTitleController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.showtimes.ShowtimesTicketingContentBodyController\x3e} */\ngws.knowledge.verticals.showtimes.controllers.SHOWTIMES_TICKETING_CONTENT_BODY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.showtimes.ShowtimesTicketingContentBodyController\x27));\n\n/** @typedef {!gws.knowledge.verticals.showtimes.ShowtimesTicketingContentBodyController} */\ngws.knowledge.verticals.showtimes.typedefs.controllers_SHOWTIMES_TICKETING_CONTENT_BODY;\n\n/** @record */\ngws.knowledge.verticals.showtimes.controllers.ShowtimesTicketingContentBodyControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.showtimes.ShowtimesTicketingContentTitleController} */\ngws.knowledge.verticals.showtimes.typedefs.controllers_SHOWTIMES_TICKETING_CONTENT_TITLE;\n\n/** @record */\ngws.knowledge.verticals.showtimes.controllers.ShowtimesTicketingContentTitleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/liveresults/showtimes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/localshopping/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.localshopping.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.localshopping.controllers.CarouselControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.localshopping.controllers.PopularItemControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.localshopping.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.localshopping.CarouselController\x3e} */\ngws.common.jslayout.localshopping.controllers.CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.localshopping.CarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.localshopping.PopularItemController\x3e} */\ngws.common.jslayout.localshopping.controllers.POPULAR_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.localshopping.PopularItemController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.common.jslayout.localshopping.controllers.POPULAR_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!gws.common.jslayout.localshopping.CarouselController} */\ngws.common.jslayout.localshopping.typedefs.controllers_CAROUSEL;\n\n/** @record */\ngws.common.jslayout.localshopping.controllers.CarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.jslayout.localshopping.PopularItemController} */\ngws.common.jslayout.localshopping.typedefs.controllers_POPULAR_ITEM;\n\n/** @record */\ngws.common.jslayout.localshopping.controllers.PopularItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/localshopping/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/signinlure/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.signinlure.controllers\x27);\ngoog.provide(\x27gws.signinlure.controllers.SignInLureButtonControllerResponse\x27);\ngoog.provide(\x27gws.signinlure.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.signinlure.SignInLureButtonController\x3e} */\ngws.signinlure.controllers.SIGN_IN_LURE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.signinlure.SignInLureButtonController\x27));\n\n/** @typedef {!gws.signinlure.SignInLureButtonController} */\ngws.signinlure.typedefs.controllers_SIGN_IN_LURE_BUTTON;\n\n/** @record */\ngws.signinlure.controllers.SignInLureButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/signinlure/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/stream/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.stream.controllers\x27);\ngoog.provide(\x27gws.common.stream.controllers.LazyLoadItemControllerResponse\x27);\ngoog.provide(\x27gws.common.stream.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.stream.LazyLoadItemController\x3e} */\ngws.common.stream.controllers.LAZY_LOAD_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.stream.LazyLoadItemController\x27));\n\n/** @typedef {!gws.common.stream.LazyLoadItemController} */\ngws.common.stream.typedefs.controllers_LAZY_LOAD_ITEM;\n\n/** @record */\ngws.common.stream.controllers.LazyLoadItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/stream/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/travel/frontend/common/web/unifiednav/shared/abstract_unified_header_controller_wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.travelfrontendcommon.unifiednav.shared.controllers\x27);\ngoog.provide(\x27boq.travelfrontendcommon.unifiednav.shared.controllers.AbstractUnifiedHeaderControllerResponse\x27);\ngoog.provide(\x27boq.travelfrontendcommon.unifiednav.shared.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.travelfrontendcommon.unifiednav.shared.AbstractUnifiedHeaderController\x3e} */\nboq.travelfrontendcommon.unifiednav.shared.controllers.ABSTRACT_UNIFIED_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.travelfrontendcommon.unifiednav.shared.AbstractUnifiedHeaderController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    boq.travelfrontendcommon.unifiednav.shared.controllers.ABSTRACT_UNIFIED_HEADER,\n    xid(\x27boq.travelfrontendcommon.unifiednav.shared.TabSyncListener\x27));\n\n/** @typedef {!boq.travelfrontendcommon.unifiednav.shared.AbstractUnifiedHeaderController} */\nboq.travelfrontendcommon.unifiednav.shared.typedefs.controllers_ABSTRACT_UNIFIED_HEADER;\n\n/** @record */\nclass boqtravelfrontendcommonunifiednavsharedcontrollersAbstractUnifiedHeaderControllerResponse_nullableJsdata {\n  constructor() {\n    /** @type {?} */ this.header;\n  }\n}\n\n\n\n/** @record */\nboq.travelfrontendcommon.unifiednav.shared.controllers.AbstractUnifiedHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!boqtravelfrontendcommonunifiednavsharedcontrollersAbstractUnifiedHeaderControllerResponse_nullableJsdata} */ this.nullableJsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/travel/frontend/common/web/unifiednav/shared/abstract_unified_header_controller_wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/travel/header/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.common.jslayout.travel.header.controllers\x27);\ngoog.provide(\x27search.common.jslayout.travel.header.controllers.UnifiedNavControllerResponse\x27);\ngoog.provide(\x27search.common.jslayout.travel.header.typedefs\x27);\n\ngoog.require(\x27boq.travelfrontendcommon.unifiednav.shared.controllers\x27);\ngoog.require(\x27boq.travelfrontendcommon.unifiednav.shared.controllers.AbstractUnifiedHeaderControllerResponse\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.travel.frontend.common.web.unifiednav.shared.UnifiedNavHeaderInnerWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.common.jslayout.travel.header.UnifiedNavController\x3e} */\nsearch.common.jslayout.travel.header.controllers.UNIFIED_NAV \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.common.jslayout.travel.header.UnifiedNavController\x27),\n    [boq.travelfrontendcommon.unifiednav.shared.controllers.ABSTRACT_UNIFIED_HEADER]);\nwiz.addPossibleAtInterfaceImplementation(\n    search.common.jslayout.travel.header.controllers.UNIFIED_NAV,\n    xid(\x27searchbox.gws.tier1.embedded.travel.ClientEventHandler\x27));\n\n/** @typedef {!search.common.jslayout.travel.header.UnifiedNavController} */\nsearch.common.jslayout.travel.header.typedefs.controllers_UNIFIED_NAV;\n\n/** @record */\nclass searchcommonjslayouttravelheadercontrollersUnifiedNavControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.travel.frontend.common.web.unifiednav.shared.UnifiedNavHeaderInnerWizProto} */ this.unifiedNavHeaderInnerWizProto;\n  }\n}\n\n\n\n/** @record */\nsearch.common.jslayout.travel.header.controllers.UnifiedNavControllerResponse \x3d class {\n  constructor() {\n    /** @type {!boq.travelfrontendcommon.unifiednav.shared.controllers.AbstractUnifiedHeaderControllerResponse} */ this.superResponse;\n    /** @type {!boq.travelfrontendcommon.unifiednav.shared.controllers.AbstractUnifiedHeaderControllerResponse} */ this.super_response;\n    /** @type {!searchcommonjslayouttravelheadercontrollersUnifiedNavControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/travel/header/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/jslayout/trips/snowman_menu/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.jslayout.trips.snowman_menu.controllers\x27);\ngoog.provide(\x27gws.common.jslayout.trips.snowman_menu.controllers.SnowmanMenuControllerResponse\x27);\ngoog.provide(\x27gws.common.jslayout.trips.snowman_menu.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.jslayout.trips.snowman_menu.SnowmanMenuController\x3e} */\ngws.common.jslayout.trips.snowman_menu.controllers.SNOWMAN_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.jslayout.trips.snowman_menu.SnowmanMenuController\x27));\n\n/** @typedef {!gws.common.jslayout.trips.snowman_menu.SnowmanMenuController} */\ngws.common.jslayout.trips.snowman_menu.typedefs.controllers_SNOWMAN_MENU;\n\n/** @record */\ngws.common.jslayout.trips.snowman_menu.controllers.SnowmanMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/jslayout/trips/snowman_menu/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/common/knowledge/cardheader/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.common.knowledge.cardheader.controllers\x27);\ngoog.provide(\x27gws.common.knowledge.cardheader.controllers.TitleOverflowMenuControllerResponse\x27);\ngoog.provide(\x27gws.common.knowledge.cardheader.controllers.TitleOverflowMenuFeedbackButtonControllerResponse\x27);\ngoog.provide(\x27gws.common.knowledge.cardheader.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.knowledge.cardheader.TitleOverflowMenuController\x3e} */\ngws.common.knowledge.cardheader.controllers.TITLE_OVERFLOW_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.knowledge.cardheader.TitleOverflowMenuController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.common.knowledge.cardheader.TitleOverflowMenuFeedbackButtonController\x3e} */\ngws.common.knowledge.cardheader.controllers.TITLE_OVERFLOW_MENU_FEEDBACK_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.common.knowledge.cardheader.TitleOverflowMenuFeedbackButtonController\x27));\n\n/** @typedef {!gws.common.knowledge.cardheader.TitleOverflowMenuController} */\ngws.common.knowledge.cardheader.typedefs.controllers_TITLE_OVERFLOW_MENU;\n\n/** @record */\ngws.common.knowledge.cardheader.controllers.TitleOverflowMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.common.knowledge.cardheader.TitleOverflowMenuFeedbackButtonController} */\ngws.common.knowledge.cardheader.typedefs.controllers_TITLE_OVERFLOW_MENU_FEEDBACK_BUTTON;\n\n/** @record */\ngws.common.knowledge.cardheader.controllers.TitleOverflowMenuFeedbackButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/knowledge/cardheader/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/products/listing/entityui/ikp/mobile/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.productAds.entityui.ikp.mobile.controllers\x27);\ngoog.provide(\x27gws.productAds.entityui.ikp.mobile.controllers.CommonElementControllerResponse\x27);\ngoog.provide(\x27gws.productAds.entityui.ikp.mobile.controllers.OffersControllerResponse\x27);\ngoog.provide(\x27gws.productAds.entityui.ikp.mobile.controllers.UserReviewsControllerResponse\x27);\ngoog.provide(\x27gws.productAds.entityui.ikp.mobile.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.entityui.ikp.mobile.OffersController\x3e} */\ngws.productAds.entityui.ikp.mobile.controllers.OFFERS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.entityui.ikp.mobile.OffersController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.entityui.ikp.mobile.CommonElementController\x3e} */\ngws.productAds.entityui.ikp.mobile.controllers.COMMON_ELEMENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.entityui.ikp.mobile.CommonElementController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.entityui.ikp.mobile.UserReviewsController\x3e} */\ngws.productAds.entityui.ikp.mobile.controllers.USER_REVIEWS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.entityui.ikp.mobile.UserReviewsController\x27));\n\n/** @typedef {!gws.productAds.entityui.ikp.mobile.CommonElementController} */\ngws.productAds.entityui.ikp.mobile.typedefs.controllers_COMMON_ELEMENT;\n\n/** @record */\ngws.productAds.entityui.ikp.mobile.controllers.CommonElementControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.entityui.ikp.mobile.OffersController} */\ngws.productAds.entityui.ikp.mobile.typedefs.controllers_OFFERS;\n\n/** @record */\ngws.productAds.entityui.ikp.mobile.controllers.OffersControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.entityui.ikp.mobile.UserReviewsController} */\ngws.productAds.entityui.ikp.mobile.typedefs.controllers_USER_REVIEWS;\n\n/** @record */\ngws.productAds.entityui.ikp.mobile.controllers.UserReviewsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/products/listing/entityui/ikp/mobile/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/products/listing/entityui/jackpot/common/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.productAds.entityui.common.controllers\x27);\ngoog.provide(\x27gws.productAds.entityui.common.controllers.ProductDetailsControllerResponse\x27);\ngoog.provide(\x27gws.productAds.entityui.common.typedefs\x27);\ngoog.provide(\x27gws.productAds.entityui.jackpot.common.controllers\x27);\ngoog.provide(\x27gws.productAds.entityui.jackpot.common.controllers.ImageCarouselControllerResponse\x27);\ngoog.provide(\x27gws.productAds.entityui.jackpot.common.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.entityui.common.ProductDetailsController\x3e} */\ngws.productAds.entityui.common.controllers.PRODUCT_DETAILS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.entityui.common.ProductDetailsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.entityui.jackpot.common.ImageCarouselController\x3e} */\ngws.productAds.entityui.jackpot.common.controllers.IMAGE_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.entityui.jackpot.common.ImageCarouselController\x27));\n\n/** @typedef {!gws.productAds.entityui.jackpot.common.ImageCarouselController} */\ngws.productAds.entityui.jackpot.common.typedefs.controllers_IMAGE_CAROUSEL;\n\n/** @record */\ngws.productAds.entityui.jackpot.common.controllers.ImageCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.entityui.common.ProductDetailsController} */\ngws.productAds.entityui.common.typedefs.controllers_PRODUCT_DETAILS;\n\n/** @record */\ngws.productAds.entityui.common.controllers.ProductDetailsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/products/listing/entityui/jackpot/common/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/products/listing/events/mobile/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.product_ads.events.controllers\x27);\ngoog.provide(\x27gws.product_ads.events.controllers.MobileEventsProductGroupControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.events.controllers.MobileEventsProductGroupsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.events.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.events.MobileEventsProductGroupController\x3e} */\ngws.product_ads.events.controllers.MOBILE_EVENTS_PRODUCT_GROUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.events.MobileEventsProductGroupController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.product_ads.events.controllers.MOBILE_EVENTS_PRODUCT_GROUP,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.events.MobileEventsProductGroupsController\x3e} */\ngws.product_ads.events.controllers.MOBILE_EVENTS_PRODUCT_GROUPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.events.MobileEventsProductGroupsController\x27));\n\n/** @typedef {!gws.product_ads.events.MobileEventsProductGroupController} */\ngws.product_ads.events.typedefs.controllers_MOBILE_EVENTS_PRODUCT_GROUP;\n\n/** @record */\ngws.product_ads.events.controllers.MobileEventsProductGroupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.events.MobileEventsProductGroupsController} */\ngws.product_ads.events.typedefs.controllers_MOBILE_EVENTS_PRODUCT_GROUPS;\n\n/** @record */\ngws.product_ads.events.controllers.MobileEventsProductGroupsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/products/listing/events/mobile/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/products/listing/jslayout/showcase/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.productAds.desktopShowcase.controllers\x27);\ngoog.provide(\x27gws.productAds.desktopShowcase.controllers.DesktopShowcaseLightboxControllerResponse\x27);\ngoog.provide(\x27gws.productAds.desktopShowcase.controllers.DesktopShowcaseTilesRhsControllerResponse\x27);\ngoog.provide(\x27gws.productAds.desktopShowcase.controllers.DesktopShowcaseTilesTopControllerResponse\x27);\ngoog.provide(\x27gws.productAds.desktopShowcase.typedefs\x27);\ngoog.provide(\x27gws.productAds.mobileShowcase.controllers\x27);\ngoog.provide(\x27gws.productAds.mobileShowcase.controllers.MobileShowcaseWizTilesControllerResponse\x27);\ngoog.provide(\x27gws.productAds.mobileShowcase.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.desktopShowcase.DesktopShowcaseTilesRhsController\x3e} */\ngws.productAds.desktopShowcase.controllers.DESKTOP_SHOWCASE_TILES_RHS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.desktopShowcase.DesktopShowcaseTilesRhsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.desktopShowcase.DesktopShowcaseLightboxController\x3e} */\ngws.productAds.desktopShowcase.controllers.DESKTOP_SHOWCASE_LIGHTBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.desktopShowcase.DesktopShowcaseLightboxController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.desktopShowcase.DesktopShowcaseTilesTopController\x3e} */\ngws.productAds.desktopShowcase.controllers.DESKTOP_SHOWCASE_TILES_TOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.desktopShowcase.DesktopShowcaseTilesTopController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.productAds.mobileShowcase.MobileShowcaseWizTilesController\x3e} */\ngws.productAds.mobileShowcase.controllers.MOBILE_SHOWCASE_WIZ_TILES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.productAds.mobileShowcase.MobileShowcaseWizTilesController\x27));\n\n/** @typedef {!gws.productAds.desktopShowcase.DesktopShowcaseLightboxController} */\ngws.productAds.desktopShowcase.typedefs.controllers_DESKTOP_SHOWCASE_LIGHTBOX;\n\n/** @record */\ngws.productAds.desktopShowcase.controllers.DesktopShowcaseLightboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.desktopShowcase.DesktopShowcaseTilesRhsController} */\ngws.productAds.desktopShowcase.typedefs.controllers_DESKTOP_SHOWCASE_TILES_RHS;\n\n/** @record */\ngws.productAds.desktopShowcase.controllers.DesktopShowcaseTilesRhsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.desktopShowcase.DesktopShowcaseTilesTopController} */\ngws.productAds.desktopShowcase.typedefs.controllers_DESKTOP_SHOWCASE_TILES_TOP;\n\n/** @record */\ngws.productAds.desktopShowcase.controllers.DesktopShowcaseTilesTopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.productAds.mobileShowcase.MobileShowcaseWizTilesController} */\ngws.productAds.mobileShowcase.typedefs.controllers_MOBILE_SHOWCASE_WIZ_TILES;\n\n/** @record */\ngws.productAds.mobileShowcase.controllers.MobileShowcaseWizTilesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/products/listing/jslayout/showcase/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/products/listing/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.product_ads.controllers\x27);\ngoog.provide(\x27gws.product_ads.controllers.DesktopBoomerangControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.DesktopNpackSuggestedRefinementChipsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.DesktopRefinementChipsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.DesktopTopControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.MobileMembershipPopupControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.MobileNpackSuggestedRefinementChipsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.MobileRichlistControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.MobileRichlistRefinementChipsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.controllers.RefinementChipsControllerResponse\x27);\ngoog.provide(\x27gws.product_ads.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.MobileMembershipPopupController\x3e} */\ngws.product_ads.controllers.MOBILE_MEMBERSHIP_POPUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.MobileMembershipPopupController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.product_ads.controllers.MOBILE_MEMBERSHIP_POPUP,\n    xid(\x27gws.product_ads.MobilePopupControllerInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.MobileRichlistController\x3e} */\ngws.product_ads.controllers.MOBILE_RICHLIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.MobileRichlistController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.DesktopRefinementChipsController\x3e} */\ngws.product_ads.controllers.DESKTOP_REFINEMENT_CHIPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.DesktopRefinementChipsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.DesktopTopController\x3e} */\ngws.product_ads.controllers.DESKTOP_TOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.DesktopTopController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.DesktopBoomerangController\x3e} */\ngws.product_ads.controllers.DESKTOP_BOOMERANG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.DesktopBoomerangController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.RefinementChipsController\x3e} */\ngws.product_ads.controllers.REFINEMENT_CHIPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.RefinementChipsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.DesktopNpackSuggestedRefinementChipsController\x3e} */\ngws.product_ads.controllers.DESKTOP_NPACK_SUGGESTED_REFINEMENT_CHIPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.DesktopNpackSuggestedRefinementChipsController\x27),\n    [gws.product_ads.controllers.DESKTOP_REFINEMENT_CHIPS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.MobileNpackSuggestedRefinementChipsController\x3e} */\ngws.product_ads.controllers.MOBILE_NPACK_SUGGESTED_REFINEMENT_CHIPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.MobileNpackSuggestedRefinementChipsController\x27),\n    [gws.product_ads.controllers.REFINEMENT_CHIPS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.product_ads.MobileRichlistRefinementChipsController\x3e} */\ngws.product_ads.controllers.MOBILE_RICHLIST_REFINEMENT_CHIPS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.product_ads.MobileRichlistRefinementChipsController\x27),\n    [gws.product_ads.controllers.REFINEMENT_CHIPS]);\n\n/** @typedef {!gws.product_ads.DesktopBoomerangController} */\ngws.product_ads.typedefs.controllers_DESKTOP_BOOMERANG;\n\n/** @record */\ngws.product_ads.controllers.DesktopBoomerangControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.DesktopNpackSuggestedRefinementChipsController} */\ngws.product_ads.typedefs.controllers_DESKTOP_NPACK_SUGGESTED_REFINEMENT_CHIPS;\n\n/** @record */\ngws.product_ads.controllers.DesktopNpackSuggestedRefinementChipsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.product_ads.controllers.DesktopRefinementChipsControllerResponse} */ this.superResponse;\n    /** @type {!gws.product_ads.controllers.DesktopRefinementChipsControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.DesktopRefinementChipsController} */\ngws.product_ads.typedefs.controllers_DESKTOP_REFINEMENT_CHIPS;\n\n/** @record */\ngws.product_ads.controllers.DesktopRefinementChipsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.DesktopTopController} */\ngws.product_ads.typedefs.controllers_DESKTOP_TOP;\n\n/** @record */\ngws.product_ads.controllers.DesktopTopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.MobileMembershipPopupController} */\ngws.product_ads.typedefs.controllers_MOBILE_MEMBERSHIP_POPUP;\n\n/** @record */\ngws.product_ads.controllers.MobileMembershipPopupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.MobileNpackSuggestedRefinementChipsController} */\ngws.product_ads.typedefs.controllers_MOBILE_NPACK_SUGGESTED_REFINEMENT_CHIPS;\n\n/** @record */\ngws.product_ads.controllers.MobileNpackSuggestedRefinementChipsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.product_ads.controllers.RefinementChipsControllerResponse} */ this.superResponse;\n    /** @type {!gws.product_ads.controllers.RefinementChipsControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.MobileRichlistController} */\ngws.product_ads.typedefs.controllers_MOBILE_RICHLIST;\n\n/** @record */\nclass gwsproduct_adscontrollersMobileRichlistControllerResponse_controller {\n  constructor() {\n  }\n}\n\n\n\n/** @record */\ngws.product_ads.controllers.MobileRichlistControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsproduct_adscontrollersMobileRichlistControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.MobileRichlistRefinementChipsController} */\ngws.product_ads.typedefs.controllers_MOBILE_RICHLIST_REFINEMENT_CHIPS;\n\n/** @record */\ngws.product_ads.controllers.MobileRichlistRefinementChipsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.product_ads.controllers.RefinementChipsControllerResponse} */ this.superResponse;\n    /** @type {!gws.product_ads.controllers.RefinementChipsControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.product_ads.RefinementChipsController} */\ngws.product_ads.typedefs.controllers_REFINEMENT_CHIPS;\n\n/** @record */\ngws.product_ads.controllers.RefinementChipsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/products/listing/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/utils/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.ads.sab.utils.services\x27);\ngoog.provide(\x27gws.ads.sab.utils.services.MapsApiServiceResponse\x27);\ngoog.provide(\x27gws.ads.sab.utils.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.utils.MapsApiService\x3e} */\ngws.ads.sab.utils.services.MAPS_API \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.utils.MapsApiService\x27));\n\n/** @typedef {!gws.ads.sab.utils.MapsApiService} */\ngws.ads.sab.utils.typedefs.services_MAPS_API;\n\n/** @record */\ngws.ads.sab.utils.services.MapsApiServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/utils/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/mobile/components/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.ExpandingListControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.ExpandingTextControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.FixedHeaderControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.ProviderSelectionMenuControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.ReviewsPanelAsyncControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.controllers.ReviewsPanelControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.components.typedefs\x27);\n\ngoog.require(\x27gws.ads.sab.utils.services\x27);\ngoog.require(\x27gws.ads.sab.utils.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.ExpandingTextController\x3e} */\ngws.ads.sab.mobile.components.controllers.EXPANDING_TEXT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.ExpandingTextController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.ReviewsPanelController\x3e} */\ngws.ads.sab.mobile.components.controllers.REVIEWS_PANEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.ReviewsPanelController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.ProviderSelectionMenuController\x3e} */\ngws.ads.sab.mobile.components.controllers.PROVIDER_SELECTION_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.ProviderSelectionMenuController\x27),\n    [gws.ads.sab.utils.services.MAPS_API]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.ExpandingListController\x3e} */\ngws.ads.sab.mobile.components.controllers.EXPANDING_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.ExpandingListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.FixedHeaderController\x3e} */\ngws.ads.sab.mobile.components.controllers.FIXED_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.FixedHeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.components.ReviewsPanelAsyncController\x3e} */\ngws.ads.sab.mobile.components.controllers.REVIEWS_PANEL_ASYNC \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.components.ReviewsPanelAsyncController\x27));\n\n/** @typedef {!gws.ads.sab.mobile.components.ExpandingListController} */\ngws.ads.sab.mobile.components.typedefs.controllers_EXPANDING_LIST;\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.ExpandingListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.components.ExpandingTextController} */\ngws.ads.sab.mobile.components.typedefs.controllers_EXPANDING_TEXT;\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.ExpandingTextControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.components.FixedHeaderController} */\ngws.ads.sab.mobile.components.typedefs.controllers_FIXED_HEADER;\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.FixedHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.components.ProviderSelectionMenuController} */\ngws.ads.sab.mobile.components.typedefs.controllers_PROVIDER_SELECTION_MENU;\n\n/** @record */\nclass gwsadssabmobilecomponentscontrollersProviderSelectionMenuControllerResponse_service {\n  constructor() {\n    /** @type {!gws.ads.sab.utils.typedefs.services_MAPS_API} */ this.mapsApi;\n  }\n}\n\n\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.ProviderSelectionMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsadssabmobilecomponentscontrollersProviderSelectionMenuControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.components.ReviewsPanelAsyncController} */\ngws.ads.sab.mobile.components.typedefs.controllers_REVIEWS_PANEL_ASYNC;\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.ReviewsPanelAsyncControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.components.ReviewsPanelController} */\ngws.ads.sab.mobile.components.typedefs.controllers_REVIEWS_PANEL;\n\n/** @record */\ngws.ads.sab.mobile.components.controllers.ReviewsPanelControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/mobile/components/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/mobile/containers/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.ads.sab.mobile.containers.controllers\x27);\ngoog.provide(\x27gws.ads.sab.mobile.containers.controllers.PhotosCarouselControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.containers.controllers.PhotosGridControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.containers.controllers.ProfileControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.containers.controllers.ProfileSummaryControllerResponse\x27);\ngoog.provide(\x27gws.ads.sab.mobile.containers.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.containers.ProfileController\x3e} */\ngws.ads.sab.mobile.containers.controllers.PROFILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.containers.ProfileController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.containers.PhotosGridController\x3e} */\ngws.ads.sab.mobile.containers.controllers.PHOTOS_GRID \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.containers.PhotosGridController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.containers.ProfileSummaryController\x3e} */\ngws.ads.sab.mobile.containers.controllers.PROFILE_SUMMARY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.containers.ProfileSummaryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.ads.sab.mobile.containers.PhotosCarouselController\x3e} */\ngws.ads.sab.mobile.containers.controllers.PHOTOS_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.ads.sab.mobile.containers.PhotosCarouselController\x27));\n\n/** @typedef {!gws.ads.sab.mobile.containers.PhotosCarouselController} */\ngws.ads.sab.mobile.containers.typedefs.controllers_PHOTOS_CAROUSEL;\n\n/** @record */\ngws.ads.sab.mobile.containers.controllers.PhotosCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.containers.PhotosGridController} */\ngws.ads.sab.mobile.containers.typedefs.controllers_PHOTOS_GRID;\n\n/** @record */\ngws.ads.sab.mobile.containers.controllers.PhotosGridControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.containers.ProfileController} */\ngws.ads.sab.mobile.containers.typedefs.controllers_PROFILE;\n\n/** @record */\ngws.ads.sab.mobile.containers.controllers.ProfileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.ads.sab.mobile.containers.ProfileSummaryController} */\ngws.ads.sab.mobile.containers.typedefs.controllers_PROFILE_SUMMARY;\n\n/** @record */\ngws.ads.sab.mobile.containers.controllers.ProfileSummaryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/ads/serviceareabusiness/jslayout/mobile/containers/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/agsa/updatepromo/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.agsa.updatepromo.controllers\x27);\ngoog.provide(\x27gws.agsa.updatepromo.controllers.AgsaUpdatePromoControllerResponse\x27);\ngoog.provide(\x27gws.agsa.updatepromo.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.agsa.updatepromo.AgsaUpdatePromoController\x3e} */\ngws.agsa.updatepromo.controllers.AGSA_UPDATE_PROMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.agsa.updatepromo.AgsaUpdatePromoController\x27));\n\n/** @typedef {!gws.agsa.updatepromo.AgsaUpdatePromoController} */\ngws.agsa.updatepromo.typedefs.controllers_AGSA_UPDATE_PROMO;\n\n/** @record */\ngws.agsa.updatepromo.controllers.AgsaUpdatePromoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/agsa/updatepromo/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/common/sharing/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.common.sharing.controllers\x27);\ngoog.provide(\x27gws.askjoe.common.sharing.controllers.NativeShareEntryControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.common.sharing.controllers.ShareDialogControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.common.sharing.controllers.SharePanelControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.common.sharing.controllers.SharePopupControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.common.sharing.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.common.sharing.NativeShareEntryController\x3e} */\ngws.askjoe.common.sharing.controllers.NATIVE_SHARE_ENTRY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.common.sharing.NativeShareEntryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.common.sharing.ShareDialogController\x3e} */\ngws.askjoe.common.sharing.controllers.SHARE_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.common.sharing.ShareDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.common.sharing.SharePopupController\x3e} */\ngws.askjoe.common.sharing.controllers.SHARE_POPUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.common.sharing.SharePopupController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.common.sharing.SharePanelController\x3e} */\ngws.askjoe.common.sharing.controllers.SHARE_PANEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.common.sharing.SharePanelController\x27));\n\n/** @typedef {!gws.askjoe.common.sharing.NativeShareEntryController} */\ngws.askjoe.common.sharing.typedefs.controllers_NATIVE_SHARE_ENTRY;\n\n/** @record */\ngws.askjoe.common.sharing.controllers.NativeShareEntryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.common.sharing.ShareDialogController} */\ngws.askjoe.common.sharing.typedefs.controllers_SHARE_DIALOG;\n\n/** @record */\ngws.askjoe.common.sharing.controllers.ShareDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.common.sharing.SharePanelController} */\ngws.askjoe.common.sharing.typedefs.controllers_SHARE_PANEL;\n\n/** @record */\ngws.askjoe.common.sharing.controllers.SharePanelControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.common.sharing.SharePopupController} */\ngws.askjoe.common.sharing.typedefs.controllers_SHARE_POPUP;\n\n/** @record */\ngws.askjoe.common.sharing.controllers.SharePopupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/common/sharing/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/common/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.common.controllers\x27);\ngoog.provide(\x27gws.askjoe.common.controllers.ProgressBarControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.common.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.common.ProgressBarController\x3e} */\ngws.askjoe.common.controllers.PROGRESS_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.common.ProgressBarController\x27));\n\n/** @typedef {!gws.askjoe.common.ProgressBarController} */\ngws.askjoe.common.typedefs.controllers_PROGRESS_BAR;\n\n/** @record */\ngws.askjoe.common.controllers.ProgressBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/common/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/frameworks/client/data/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27frameworks.client.data.interfaces\x27);\ngoog.provide(\x27frameworks.client.data.services\x27);\ngoog.provide(\x27frameworks.client.data.services.BatchDataServiceResponse\x27);\ngoog.provide(\x27frameworks.client.data.services.GenericDataServiceResponse\x27);\ngoog.provide(\x27frameworks.client.data.services.RetryPolicyServiceResponse\x27);\ngoog.provide(\x27frameworks.client.data.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.GenericTransportInterface\x3e} */\nframeworks.client.data.interfaces.GENERIC_TRANSPORT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.GenericTransportInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.BatchTransportInterface\x3e} */\nframeworks.client.data.interfaces.BATCH_TRANSPORT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.BatchTransportInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.RpcMetadataInterface\x3e} */\nframeworks.client.data.interfaces.RPC_METADATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.RpcMetadataInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.BatchDataInterface\x3e} */\nframeworks.client.data.interfaces.BATCH_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.BatchDataInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.BatchDataService\x3e} */\nframeworks.client.data.services.BATCH_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.BatchDataService\x27),\n    [frameworks.client.data.interfaces.BATCH_TRANSPORT]);\nwiz.addPossibleAtInterfaceImplementation(\n    frameworks.client.data.services.BATCH_DATA,\n    xid(\x27frameworks.client.data.BatchDataInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.RetryPolicyService\x3e} */\nframeworks.client.data.services.RETRY_POLICY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.RetryPolicyService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    frameworks.client.data.services.RETRY_POLICY,\n    xid(\x27frameworks.client.data.RetryPolicyInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.RetryPolicyInterface\x3e} */\nframeworks.client.data.interfaces.RETRY_POLICY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.RetryPolicyInterface\x27),\n    [frameworks.client.data.services.RETRY_POLICY]);\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.GenericDataService\x3e} */\nframeworks.client.data.services.GENERIC_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.GenericDataService\x27),\n    [frameworks.client.data.interfaces.GENERIC_TRANSPORT, frameworks.client.data.interfaces.RETRY_POLICY]);\nwiz.addPossibleAtInterfaceImplementation(\n    frameworks.client.data.services.GENERIC_DATA,\n    xid(\x27frameworks.client.data.GenericDataInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!frameworks.client.data.GenericDataInterface\x3e} */\nframeworks.client.data.interfaces.GENERIC_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27frameworks.client.data.GenericDataInterface\x27),\n    [frameworks.client.data.services.GENERIC_DATA]);\n\n/** @typedef {!frameworks.client.data.BatchDataInterface} */\nframeworks.client.data.typedefs.interfaces_BATCH_DATA;\n\n\n/** @typedef {!frameworks.client.data.BatchDataService} */\nframeworks.client.data.typedefs.services_BATCH_DATA;\n\n/** @record */\nclass frameworksclientdataservicesBatchDataServiceResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_BATCH_TRANSPORT} */ this.batchTransport;\n  }\n}\n\n\n\n/** @record */\nframeworks.client.data.services.BatchDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!frameworksclientdataservicesBatchDataServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!frameworks.client.data.BatchTransportInterface} */\nframeworks.client.data.typedefs.interfaces_BATCH_TRANSPORT;\n\n\n/** @typedef {!frameworks.client.data.GenericDataInterface} */\nframeworks.client.data.typedefs.interfaces_GENERIC_DATA;\n\n\n/** @typedef {!frameworks.client.data.GenericDataService} */\nframeworks.client.data.typedefs.services_GENERIC_DATA;\n\n/** @record */\nclass frameworksclientdataservicesGenericDataServiceResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_TRANSPORT} */ this.genericTransport;\n    /** @type {!frameworks.client.data.typedefs.interfaces_RETRY_POLICY} */ this.retryPolicy;\n  }\n}\n\n\n\n/** @record */\nframeworks.client.data.services.GenericDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!frameworksclientdataservicesGenericDataServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!frameworks.client.data.GenericTransportInterface} */\nframeworks.client.data.typedefs.interfaces_GENERIC_TRANSPORT;\n\n\n/** @typedef {!frameworks.client.data.RetryPolicyInterface} */\nframeworks.client.data.typedefs.interfaces_RETRY_POLICY;\n\n\n/** @typedef {!frameworks.client.data.RetryPolicyService} */\nframeworks.client.data.typedefs.services_RETRY_POLICY;\n\n/** @record */\nframeworks.client.data.services.RetryPolicyServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!frameworks.client.data.RpcMetadataInterface} */\nframeworks.client.data.typedefs.interfaces_RPC_METADATA;\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/immersive/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.immersive.controllers\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.EntryControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.IgsaEntryControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.MainControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.MenuControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.QuestionListControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.controllers.QuestionListItemControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.immersive.typedefs\x27);\n\ngoog.require(\x27frameworks.client.data.interfaces\x27);\ngoog.require(\x27frameworks.client.data.typedefs\x27);\ngoog.require(\x27gws.askjoe.common.controllers\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.askjoe.WatchView\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.QuestionListItemController\x3e} */\ngws.askjoe.immersive.controllers.QUESTION_LIST_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.QuestionListItemController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.immersive.controllers.QUESTION_LIST_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.IgsaEntryController\x3e} */\ngws.askjoe.immersive.controllers.IGSA_ENTRY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.IgsaEntryController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.immersive.controllers.IGSA_ENTRY,\n    xid(\x27gws.askjoe.immersive.EntryControllerInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.MenuController\x3e} */\ngws.askjoe.immersive.controllers.MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.MenuController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.QuestionListController\x3e} */\ngws.askjoe.immersive.controllers.QUESTION_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.QuestionListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.MainController\x3e} */\ngws.askjoe.immersive.controllers.MAIN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.MainController\x27),\n    [gws.askjoe.immersive.controllers.QUESTION_LIST, gws.askjoe.common.controllers.PROGRESS_BAR, frameworks.client.data.interfaces.GENERIC_DATA]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.immersive.EntryController\x3e} */\ngws.askjoe.immersive.controllers.ENTRY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.immersive.EntryController\x27),\n    [gws.askjoe.immersive.controllers.MAIN]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.immersive.controllers.ENTRY,\n    xid(\x27gws.askjoe.immersive.EntryControllerInterface\x27));\n\n/** @typedef {!gws.askjoe.immersive.EntryController} */\ngws.askjoe.immersive.typedefs.controllers_ENTRY;\n\n/** @record */\nclass gwsaskjoeimmersivecontrollersEntryControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.mainController;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.immersive.controllers.EntryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoeimmersivecontrollersEntryControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.immersive.IgsaEntryController} */\ngws.askjoe.immersive.typedefs.controllers_IGSA_ENTRY;\n\n/** @record */\ngws.askjoe.immersive.controllers.IgsaEntryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.immersive.MainController} */\ngws.askjoe.immersive.typedefs.controllers_MAIN;\n\n/** @record */\nclass gwsaskjoeimmersivecontrollersMainControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.askjoe.WatchView} */ this.data;\n  }\n}\n\n\n\n/** @record */\nclass gwsaskjoeimmersivecontrollersMainControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.questionListController;\n    /** @type {?} */ this.progressBarController;\n  }\n}\n\n\n\n/** @record */\nclass gwsaskjoeimmersivecontrollersMainControllerResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_DATA} */ this.genericData;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.immersive.controllers.MainControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoeimmersivecontrollersMainControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwsaskjoeimmersivecontrollersMainControllerResponse_controller} */ this.controller;\n    /** @type {!gwsaskjoeimmersivecontrollersMainControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.immersive.MenuController} */\ngws.askjoe.immersive.typedefs.controllers_MENU;\n\n/** @record */\ngws.askjoe.immersive.controllers.MenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.immersive.QuestionListController} */\ngws.askjoe.immersive.typedefs.controllers_QUESTION_LIST;\n\n/** @record */\ngws.askjoe.immersive.controllers.QuestionListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.immersive.QuestionListItemController} */\ngws.askjoe.immersive.typedefs.controllers_QUESTION_LIST_ITEM;\n\n/** @record */\ngws.askjoe.immersive.controllers.QuestionListItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/immersive/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/preview/video/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.preview.video.controllers\x27);\ngoog.provide(\x27gws.askjoe.preview.video.controllers.VideoAutoplayControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.video.controllers.VideoHoverplayControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.video.typedefs\x27);\n\ngoog.require(\x27frameworks.client.data.interfaces\x27);\ngoog.require(\x27frameworks.client.data.typedefs\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.video.VideoAutoplayController\x3e} */\ngws.askjoe.preview.video.controllers.VIDEO_AUTOPLAY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.video.VideoAutoplayController\x27),\n    [frameworks.client.data.interfaces.GENERIC_DATA]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.preview.video.controllers.VIDEO_AUTOPLAY,\n    xid(\x27gws.askjoe.preview.video.VideoControllerInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.video.VideoHoverplayController\x3e} */\ngws.askjoe.preview.video.controllers.VIDEO_HOVERPLAY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.video.VideoHoverplayController\x27),\n    [frameworks.client.data.interfaces.GENERIC_DATA]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.preview.video.controllers.VIDEO_HOVERPLAY,\n    xid(\x27gws.askjoe.preview.video.VideoControllerInterface\x27));\n\n/** @typedef {!gws.askjoe.preview.video.VideoAutoplayController} */\ngws.askjoe.preview.video.typedefs.controllers_VIDEO_AUTOPLAY;\n\n/** @record */\nclass gwsaskjoepreviewvideocontrollersVideoAutoplayControllerResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_DATA} */ this.genericData;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.video.controllers.VideoAutoplayControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewvideocontrollersVideoAutoplayControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.preview.video.VideoHoverplayController} */\ngws.askjoe.preview.video.typedefs.controllers_VIDEO_HOVERPLAY;\n\n/** @record */\nclass gwsaskjoepreviewvideocontrollersVideoHoverplayControllerResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_DATA} */ this.genericData;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.video.controllers.VideoHoverplayControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewvideocontrollersVideoHoverplayControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/preview/video/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/preview/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.preview.controllers\x27);\ngoog.provide(\x27gws.askjoe.preview.controllers.CarouselControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.controllers.CarouselItemControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.controllers.LazyThumbnailControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.controllers.OneboxControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.controllers.ThumbnailControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.preview.typedefs\x27);\n\ngoog.require(\x27frameworks.client.data.interfaces\x27);\ngoog.require(\x27frameworks.client.data.typedefs\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.LazyThumbnailController\x3e} */\ngws.askjoe.preview.controllers.LAZY_THUMBNAIL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.LazyThumbnailController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.CarouselController\x3e} */\ngws.askjoe.preview.controllers.CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.CarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.ThumbnailController\x3e} */\ngws.askjoe.preview.controllers.THUMBNAIL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.ThumbnailController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.CarouselItemController\x3e} */\ngws.askjoe.preview.controllers.CAROUSEL_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.CarouselItemController\x27),\n    [gws.askjoe.preview.controllers.THUMBNAIL]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.askjoe.preview.controllers.CAROUSEL_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.preview.OneboxController\x3e} */\ngws.askjoe.preview.controllers.ONEBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.preview.OneboxController\x27),\n    [gws.askjoe.preview.controllers.THUMBNAIL, frameworks.client.data.interfaces.GENERIC_DATA]);\n\n/** @typedef {!gws.askjoe.preview.CarouselController} */\ngws.askjoe.preview.typedefs.controllers_CAROUSEL;\n\n/** @record */\nclass gwsaskjoepreviewcontrollersCarouselControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.itemControllers;\n    /** @type {!Array\x3c?\x3e} */ this.entryController;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.controllers.CarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewcontrollersCarouselControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.preview.CarouselItemController} */\ngws.askjoe.preview.typedefs.controllers_CAROUSEL_ITEM;\n\n/** @record */\nclass gwsaskjoepreviewcontrollersCarouselItemControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.thumbnailController;\n  }\n}\n\n\n\n/** @record */\nclass gwsaskjoepreviewcontrollersCarouselItemControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.videoController;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.controllers.CarouselItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewcontrollersCarouselItemControllerResponse_controller} */ this.controller;\n    /** @type {!gwsaskjoepreviewcontrollersCarouselItemControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.preview.LazyThumbnailController} */\ngws.askjoe.preview.typedefs.controllers_LAZY_THUMBNAIL;\n\n/** @record */\ngws.askjoe.preview.controllers.LazyThumbnailControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.preview.OneboxController} */\ngws.askjoe.preview.typedefs.controllers_ONEBOX;\n\n/** @record */\nclass gwsaskjoepreviewcontrollersOneboxControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.thumbnailController;\n  }\n}\n\n\n\n/** @record */\nclass gwsaskjoepreviewcontrollersOneboxControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.entryController;\n  }\n}\n\n\n\n/** @record */\nclass gwsaskjoepreviewcontrollersOneboxControllerResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_DATA} */ this.genericData;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.controllers.OneboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewcontrollersOneboxControllerResponse_controller} */ this.controller;\n    /** @type {!gwsaskjoepreviewcontrollersOneboxControllerResponse_controllers} */ this.controllers;\n    /** @type {!gwsaskjoepreviewcontrollersOneboxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.askjoe.preview.ThumbnailController} */\ngws.askjoe.preview.typedefs.controllers_THUMBNAIL;\n\n/** @record */\nclass gwsaskjoepreviewcontrollersThumbnailControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.lazyThumbnailController;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.preview.controllers.ThumbnailControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoepreviewcontrollersThumbnailControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/preview/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/askjoe/jslayout/standalone/mobile/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.askjoe.standalone.mobile.controllers\x27);\ngoog.provide(\x27gws.askjoe.standalone.mobile.controllers.BasePageControllerResponse\x27);\ngoog.provide(\x27gws.askjoe.standalone.mobile.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.askjoe.standalone.mobile.BasePageController\x3e} */\ngws.askjoe.standalone.mobile.controllers.BASE_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.askjoe.standalone.mobile.BasePageController\x27));\n\n/** @typedef {!gws.askjoe.standalone.mobile.BasePageController} */\ngws.askjoe.standalone.mobile.typedefs.controllers_BASE_PAGE;\n\n/** @record */\nclass gwsaskjoestandalonemobilecontrollersBasePageControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.immersiveController;\n  }\n}\n\n\n\n/** @record */\ngws.askjoe.standalone.mobile.controllers.BasePageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsaskjoestandalonemobilecontrollersBasePageControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/askjoe/jslayout/standalone/mobile/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/breadthfirstsrp/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.breadthfirstsrp.controllers\x27);\ngoog.provide(\x27gws.breadthfirstsrp.controllers.AccordionControllerResponse\x27);\ngoog.provide(\x27gws.breadthfirstsrp.controllers.CarouselControllerResponse\x27);\ngoog.provide(\x27gws.breadthfirstsrp.controllers.TrayControllerResponse\x27);\ngoog.provide(\x27gws.breadthfirstsrp.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.breadthfirstsrp.CarouselController\x3e} */\ngws.breadthfirstsrp.controllers.CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.breadthfirstsrp.CarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.breadthfirstsrp.TrayController\x3e} */\ngws.breadthfirstsrp.controllers.TRAY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.breadthfirstsrp.TrayController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.breadthfirstsrp.AccordionController\x3e} */\ngws.breadthfirstsrp.controllers.ACCORDION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.breadthfirstsrp.AccordionController\x27));\n\n/** @typedef {!gws.breadthfirstsrp.AccordionController} */\ngws.breadthfirstsrp.typedefs.controllers_ACCORDION;\n\n/** @record */\ngws.breadthfirstsrp.controllers.AccordionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.breadthfirstsrp.CarouselController} */\ngws.breadthfirstsrp.typedefs.controllers_CAROUSEL;\n\n/** @record */\ngws.breadthfirstsrp.controllers.CarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.breadthfirstsrp.TrayController} */\ngws.breadthfirstsrp.typedefs.controllers_TRAY;\n\n/** @record */\ngws.breadthfirstsrp.controllers.TrayControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/breadthfirstsrp/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/domainless/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.domainless.controllers\x27);\ngoog.provide(\x27search.domainless.controllers.SyncSettingsControllerResponse\x27);\ngoog.provide(\x27search.domainless.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.api.domainless.SyncSettingsConfig\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.domainless.SyncSettingsController\x3e} */\nsearch.domainless.controllers.SYNC_SETTINGS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.domainless.SyncSettingsController\x27));\n\n/** @typedef {!search.domainless.SyncSettingsController} */\nsearch.domainless.typedefs.controllers_SYNC_SETTINGS;\n\n/** @record */\nclass searchdomainlesscontrollersSyncSettingsControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.api.domainless.SyncSettingsConfig} */ this.configProto;\n  }\n}\n\n\n\n/** @record */\nsearch.domainless.controllers.SyncSettingsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchdomainlesscontrollersSyncSettingsControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/domainless/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/easysignin/jslayout/gws/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.easysignin.controllers\x27);\ngoog.provide(\x27gws.easysignin.controllers.HomePageAndroidChromeControllerResponse\x27);\ngoog.provide(\x27gws.easysignin.controllers.HomePageNoticeControllerResponse\x27);\ngoog.provide(\x27gws.easysignin.controllers.HomePageSamsungBrowserControllerResponse\x27);\ngoog.provide(\x27gws.easysignin.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.easysignin.JsConfig\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.easysignin.HomePageAndroidChromeController\x3e} */\ngws.easysignin.controllers.HOME_PAGE_ANDROID_CHROME \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.easysignin.HomePageAndroidChromeController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.easysignin.HomePageNoticeController\x3e} */\ngws.easysignin.controllers.HOME_PAGE_NOTICE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.easysignin.HomePageNoticeController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.easysignin.HomePageSamsungBrowserController\x3e} */\ngws.easysignin.controllers.HOME_PAGE_SAMSUNG_BROWSER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.easysignin.HomePageSamsungBrowserController\x27));\n\n/** @typedef {!gws.easysignin.HomePageAndroidChromeController} */\ngws.easysignin.typedefs.controllers_HOME_PAGE_ANDROID_CHROME;\n\n/** @record */\nclass gwseasysignincontrollersHomePageAndroidChromeControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.easysignin.JsConfig} */ this.jsConfig;\n  }\n}\n\n\n\n/** @record */\ngws.easysignin.controllers.HomePageAndroidChromeControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwseasysignincontrollersHomePageAndroidChromeControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.easysignin.HomePageNoticeController} */\ngws.easysignin.typedefs.controllers_HOME_PAGE_NOTICE;\n\n/** @record */\ngws.easysignin.controllers.HomePageNoticeControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.easysignin.HomePageSamsungBrowserController} */\ngws.easysignin.typedefs.controllers_HOME_PAGE_SAMSUNG_BROWSER;\n\n/** @record */\nclass gwseasysignincontrollersHomePageSamsungBrowserControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.easysignin.JsConfig} */ this.jsConfig;\n  }\n}\n\n\n\n/** @record */\ngws.easysignin.controllers.HomePageSamsungBrowserControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwseasysignincontrollersHomePageSamsungBrowserControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/easysignin/jslayout/gws/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/explore/hostcluster/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.explore.controllers\x27);\ngoog.provide(\x27gws.explore.controllers.HostResultsCarouselControllerResponse\x27);\ngoog.provide(\x27gws.explore.controllers.HostResultsControllerResponse\x27);\ngoog.provide(\x27gws.explore.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.HostResultsCarouselController\x3e} */\ngws.explore.controllers.HOST_RESULTS_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.HostResultsCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.HostResultsController\x3e} */\ngws.explore.controllers.HOST_RESULTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.HostResultsController\x27));\n\n/** @typedef {!gws.explore.HostResultsCarouselController} */\ngws.explore.typedefs.controllers_HOST_RESULTS_CAROUSEL;\n\n/** @record */\ngws.explore.controllers.HostResultsCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.HostResultsController} */\ngws.explore.typedefs.controllers_HOST_RESULTS;\n\n/** @record */\ngws.explore.controllers.HostResultsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/explore/hostcluster/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/explore/minibar/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.explore.minibar.controllers\x27);\ngoog.provide(\x27gws.explore.minibar.controllers.MiniBarControllerResponse\x27);\ngoog.provide(\x27gws.explore.minibar.controllers.MiniBarEnlargedControllerResponse\x27);\ngoog.provide(\x27gws.explore.minibar.controllers.MiniRichListControllerResponse\x27);\ngoog.provide(\x27gws.explore.minibar.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.minibar.MiniBarEnlargedController\x3e} */\ngws.explore.minibar.controllers.MINI_BAR_ENLARGED \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.minibar.MiniBarEnlargedController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.minibar.MiniBarController\x3e} */\ngws.explore.minibar.controllers.MINI_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.minibar.MiniBarController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.minibar.MiniRichListController\x3e} */\ngws.explore.minibar.controllers.MINI_RICH_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.minibar.MiniRichListController\x27));\n\n/** @typedef {!gws.explore.minibar.MiniRichListController} */\ngws.explore.minibar.typedefs.controllers_MINI_RICH_LIST;\n\n/** @record */\ngws.explore.minibar.controllers.MiniRichListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.minibar.MiniBarController} */\ngws.explore.minibar.typedefs.controllers_MINI_BAR;\n\n/** @record */\ngws.explore.minibar.controllers.MiniBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.minibar.MiniBarEnlargedController} */\ngws.explore.minibar.typedefs.controllers_MINI_BAR_ENLARGED;\n\n/** @record */\ngws.explore.minibar.controllers.MiniBarEnlargedControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/explore/minibar/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/explore/universal/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.explore.universal.jslayout.controllers\x27);\ngoog.provide(\x27gws.plugins.explore.universal.jslayout.controllers.ExploreUniversalControllerResponse\x27);\ngoog.provide(\x27gws.plugins.explore.universal.jslayout.controllers.XPanelControllerResponse\x27);\ngoog.provide(\x27gws.plugins.explore.universal.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.explore.universal.jslayout.XPanelController\x3e} */\ngws.plugins.explore.universal.jslayout.controllers.X_PANEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.explore.universal.jslayout.XPanelController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.explore.universal.jslayout.ExploreUniversalController\x3e} */\ngws.plugins.explore.universal.jslayout.controllers.EXPLORE_UNIVERSAL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.explore.universal.jslayout.ExploreUniversalController\x27));\n\n/** @typedef {!gws.plugins.explore.universal.jslayout.ExploreUniversalController} */\ngws.plugins.explore.universal.jslayout.typedefs.controllers_EXPLORE_UNIVERSAL;\n\n/** @record */\ngws.plugins.explore.universal.jslayout.controllers.ExploreUniversalControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.explore.universal.jslayout.XPanelController} */\ngws.plugins.explore.universal.jslayout.typedefs.controllers_X_PANEL;\n\n/** @record */\ngws.plugins.explore.universal.jslayout.controllers.XPanelControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/explore/universal/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/explore/video/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.explore.video.explorousel.controllers\x27);\ngoog.provide(\x27gws.explore.video.explorousel.controllers.CardControllerResponse\x27);\ngoog.provide(\x27gws.explore.video.explorousel.controllers.CarouselControllerResponse\x27);\ngoog.provide(\x27gws.explore.video.explorousel.controllers.MegaVuControllerResponse\x27);\ngoog.provide(\x27gws.explore.video.explorousel.controllers.VideoTopicPreviewControllerResponse\x27);\ngoog.provide(\x27gws.explore.video.explorousel.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.video.explorousel.VideoTopicPreviewController\x3e} */\ngws.explore.video.explorousel.controllers.VIDEO_TOPIC_PREVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.video.explorousel.VideoTopicPreviewController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.video.explorousel.CarouselController\x3e} */\ngws.explore.video.explorousel.controllers.CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.video.explorousel.CarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.video.explorousel.CardController\x3e} */\ngws.explore.video.explorousel.controllers.CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.video.explorousel.CardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.video.explorousel.MegaVuController\x3e} */\ngws.explore.video.explorousel.controllers.MEGA_VU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.video.explorousel.MegaVuController\x27));\n\n/** @typedef {!gws.explore.video.explorousel.CardController} */\ngws.explore.video.explorousel.typedefs.controllers_CARD;\n\n/** @record */\ngws.explore.video.explorousel.controllers.CardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.video.explorousel.CarouselController} */\ngws.explore.video.explorousel.typedefs.controllers_CAROUSEL;\n\n/** @record */\ngws.explore.video.explorousel.controllers.CarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.video.explorousel.MegaVuController} */\ngws.explore.video.explorousel.typedefs.controllers_MEGA_VU;\n\n/** @record */\ngws.explore.video.explorousel.controllers.MegaVuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.explore.video.explorousel.VideoTopicPreviewController} */\ngws.explore.video.explorousel.typedefs.controllers_VIDEO_TOPIC_PREVIEW;\n\n/** @record */\ngws.explore.video.explorousel.controllers.VideoTopicPreviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/explore/video/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/explore/xpanels/jslayout/pivots/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.explore.xpanel.controllers\x27);\ngoog.provide(\x27gws.explore.xpanel.controllers.PivotRowControllerResponse\x27);\ngoog.provide(\x27gws.explore.xpanel.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.explore.xpanel.PivotRowController\x3e} */\ngws.explore.xpanel.controllers.PIVOT_ROW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.explore.xpanel.PivotRowController\x27));\n\n/** @typedef {!gws.explore.xpanel.PivotRowController} */\ngws.explore.xpanel.typedefs.controllers_PIVOT_ROW;\n\n/** @record */\ngws.explore.xpanel.controllers.PivotRowControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/explore/xpanels/jslayout/pivots/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/health/jslayout/components/browserside/accordion/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.health.browserside.accordion.controllers\x27);\ngoog.provide(\x27gws.health.browserside.accordion.controllers.AccordionControllerResponse\x27);\ngoog.provide(\x27gws.health.browserside.accordion.controllers.AccordionExpanderControllerResponse\x27);\ngoog.provide(\x27gws.health.browserside.accordion.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.browserside.accordion.AccordionExpanderController\x3e} */\ngws.health.browserside.accordion.controllers.ACCORDION_EXPANDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.browserside.accordion.AccordionExpanderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.browserside.accordion.AccordionController\x3e} */\ngws.health.browserside.accordion.controllers.ACCORDION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.browserside.accordion.AccordionController\x27));\n\n/** @typedef {!gws.health.browserside.accordion.AccordionController} */\ngws.health.browserside.accordion.typedefs.controllers_ACCORDION;\n\n/** @record */\ngws.health.browserside.accordion.controllers.AccordionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.browserside.accordion.AccordionExpanderController} */\ngws.health.browserside.accordion.typedefs.controllers_ACCORDION_EXPANDER;\n\n/** @record */\ngws.health.browserside.accordion.controllers.AccordionExpanderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/health/jslayout/components/browserside/accordion/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/health/jslayout/components/browserside/expandable/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.health.browserside.expandable.controllers\x27);\ngoog.provide(\x27gws.health.browserside.expandable.controllers.ExpandableOnceControllerResponse\x27);\ngoog.provide(\x27gws.health.browserside.expandable.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.browserside.expandable.ExpandableOnceController\x3e} */\ngws.health.browserside.expandable.controllers.EXPANDABLE_ONCE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.browserside.expandable.ExpandableOnceController\x27));\n\n/** @typedef {!gws.health.browserside.expandable.ExpandableOnceController} */\ngws.health.browserside.expandable.typedefs.controllers_EXPANDABLE_ONCE;\n\n/** @record */\ngws.health.browserside.expandable.controllers.ExpandableOnceControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/health/jslayout/components/browserside/expandable/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/health/jslayout/triage/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.health.triage.controllers\x27);\ngoog.provide(\x27gws.health.triage.controllers.CollapsedParagraphControllerResponse\x27);\ngoog.provide(\x27gws.health.triage.controllers.TriageHeaderControllerResponse\x27);\ngoog.provide(\x27gws.health.triage.controllers.TriagePageControllerResponse\x27);\ngoog.provide(\x27gws.health.triage.controllers.TriageQuestionControllerResponse\x27);\ngoog.provide(\x27gws.health.triage.controllers.TriageResultsControllerResponse\x27);\ngoog.provide(\x27gws.health.triage.models\x27);\ngoog.provide(\x27gws.health.triage.models.TriageProtocolModelResponse\x27);\ngoog.provide(\x27gws.health.triage.services\x27);\ngoog.provide(\x27gws.health.triage.services.BrowsersideLoggerServiceResponse\x27);\ngoog.provide(\x27gws.health.triage.services.TemplatePoolServiceResponse\x27);\ngoog.provide(\x27gws.health.triage.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.health.triage.TriagePage\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TemplatePoolService\x3e} */\ngws.health.triage.services.TEMPLATE_POOL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TemplatePoolService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TriageProtocolModel\x3e} */\ngws.health.triage.models.TRIAGE_PROTOCOL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TriageProtocolModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TriageResultsController\x3e} */\ngws.health.triage.controllers.TRIAGE_RESULTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TriageResultsController\x27),\n    [gws.health.triage.services.TEMPLATE_POOL]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TriageHeaderController\x3e} */\ngws.health.triage.controllers.TRIAGE_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TriageHeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.BrowsersideLoggerService\x3e} */\ngws.health.triage.services.BROWSERSIDE_LOGGER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.BrowsersideLoggerService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.CollapsedParagraphController\x3e} */\ngws.health.triage.controllers.COLLAPSED_PARAGRAPH \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.CollapsedParagraphController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TriageQuestionController\x3e} */\ngws.health.triage.controllers.TRIAGE_QUESTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TriageQuestionController\x27),\n    [gws.health.triage.models.TRIAGE_PROTOCOL]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.triage.TriagePageController\x3e} */\ngws.health.triage.controllers.TRIAGE_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.triage.TriagePageController\x27),\n    [gws.health.triage.models.TRIAGE_PROTOCOL, gws.health.triage.services.BROWSERSIDE_LOGGER]);\n\n/** @typedef {!gws.health.triage.BrowsersideLoggerService} */\ngws.health.triage.typedefs.services_BROWSERSIDE_LOGGER;\n\n/** @record */\ngws.health.triage.services.BrowsersideLoggerServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.CollapsedParagraphController} */\ngws.health.triage.typedefs.controllers_COLLAPSED_PARAGRAPH;\n\n/** @record */\ngws.health.triage.controllers.CollapsedParagraphControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TemplatePoolService} */\ngws.health.triage.typedefs.services_TEMPLATE_POOL;\n\n/** @record */\ngws.health.triage.services.TemplatePoolServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TriageHeaderController} */\ngws.health.triage.typedefs.controllers_TRIAGE_HEADER;\n\n/** @record */\ngws.health.triage.controllers.TriageHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TriagePageController} */\ngws.health.triage.typedefs.controllers_TRIAGE_PAGE;\n\n/** @record */\nclass gwshealthtriagecontrollersTriagePageControllerResponse_model {\n  constructor() {\n    /** @type {!gws.health.triage.typedefs.models_TRIAGE_PROTOCOL} */ this.protocol;\n  }\n}\n\n\n\n/** @record */\nclass gwshealthtriagecontrollersTriagePageControllerResponse_service {\n  constructor() {\n    /** @type {!gws.health.triage.typedefs.services_BROWSERSIDE_LOGGER} */ this.browsersideLogger;\n  }\n}\n\n\n\n/** @record */\ngws.health.triage.controllers.TriagePageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshealthtriagecontrollersTriagePageControllerResponse_model} */ this.model;\n    /** @type {!gwshealthtriagecontrollersTriagePageControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TriageProtocolModel} */\ngws.health.triage.typedefs.models_TRIAGE_PROTOCOL;\n\n/** @record */\nclass gwshealthtriagemodelsTriageProtocolModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.health.triage.TriagePage} */ this.protocol;\n  }\n}\n\n\n\n/** @record */\ngws.health.triage.models.TriageProtocolModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwshealthtriagemodelsTriageProtocolModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TriageQuestionController} */\ngws.health.triage.typedefs.controllers_TRIAGE_QUESTION;\n\n/** @record */\nclass gwshealthtriagecontrollersTriageQuestionControllerResponse_model {\n  constructor() {\n    /** @type {!gws.health.triage.typedefs.models_TRIAGE_PROTOCOL} */ this.protocol;\n  }\n}\n\n\n\n/** @record */\ngws.health.triage.controllers.TriageQuestionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshealthtriagecontrollersTriageQuestionControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.health.triage.TriageResultsController} */\ngws.health.triage.typedefs.controllers_TRIAGE_RESULTS;\n\n/** @record */\nclass gwshealthtriagecontrollersTriageResultsControllerResponse_service {\n  constructor() {\n    /** @type {!gws.health.triage.typedefs.services_TEMPLATE_POOL} */ this.templatePool;\n  }\n}\n\n\n\n/** @record */\ngws.health.triage.controllers.TriageResultsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshealthtriagecontrollersTriageResultsControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/health/jslayout/triage/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/health/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.health.controllers\x27);\ngoog.provide(\x27gws.health.controllers.InterestButtonControllerResponse\x27);\ngoog.provide(\x27gws.health.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.health.EntityInterestData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.InterestButtonController\x3e} */\ngws.health.controllers.INTEREST_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.InterestButtonController\x27));\n\n/** @typedef {!gws.health.InterestButtonController} */\ngws.health.typedefs.controllers_INTEREST_BUTTON;\n\n/** @record */\nclass gwshealthcontrollersInterestButtonControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.health.EntityInterestData} */ this.entityInterestData;\n  }\n}\n\n\n\n/** @record */\ngws.health.controllers.InterestButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshealthcontrollersInterestButtonControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/health/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/health/osrp/conditionoverview/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.health.osrp.controllers\x27);\ngoog.provide(\x27gws.health.osrp.controllers.ScreeningEntryPointControllerResponse\x27);\ngoog.provide(\x27gws.health.osrp.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.health.osrp.conditionoverview.ScreeningJsData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.health.osrp.ScreeningEntryPointController\x3e} */\ngws.health.osrp.controllers.SCREENING_ENTRY_POINT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.health.osrp.ScreeningEntryPointController\x27));\n\n/** @typedef {!gws.health.osrp.ScreeningEntryPointController} */\ngws.health.osrp.typedefs.controllers_SCREENING_ENTRY_POINT;\n\n/** @record */\nclass gwshealthosrpcontrollersScreeningEntryPointControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.health.osrp.conditionoverview.ScreeningJsData} */ this.ScreeningJsData;\n  }\n}\n\n\n\n/** @record */\ngws.health.osrp.controllers.ScreeningEntryPointControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshealthosrpcontrollersScreeningEntryPointControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/health/osrp/conditionoverview/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/highlight/jslayout/common/images/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.highlight.common.images.controllers\x27);\ngoog.provide(\x27gws.highlight.common.images.controllers.SlideshowControllerResponse\x27);\ngoog.provide(\x27gws.highlight.common.images.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.highlight.common.images.SlideshowData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.highlight.common.images.SlideshowController\x3e} */\ngws.highlight.common.images.controllers.SLIDESHOW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.highlight.common.images.SlideshowController\x27));\n\n/** @typedef {!gws.highlight.common.images.SlideshowController} */\ngws.highlight.common.images.typedefs.controllers_SLIDESHOW;\n\n/** @record */\nclass gwshighlightcommonimagescontrollersSlideshowControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.highlight.common.images.SlideshowData} */ this.content;\n  }\n}\n\n\n\n/** @record */\ngws.highlight.common.images.controllers.SlideshowControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshighlightcommonimagescontrollersSlideshowControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/highlight/jslayout/common/images/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/highlight/jslayout/common/poll/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.highlight.common.poll.controllers\x27);\ngoog.provide(\x27gws.highlight.common.poll.controllers.OptionsPreviewControllerResponse\x27);\ngoog.provide(\x27gws.highlight.common.poll.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.highlight.common.poll.OptionsPreviewController\x3e} */\ngws.highlight.common.poll.controllers.OPTIONS_PREVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.highlight.common.poll.OptionsPreviewController\x27));\n\n/** @typedef {!gws.highlight.common.poll.OptionsPreviewController} */\ngws.highlight.common.poll.typedefs.controllers_OPTIONS_PREVIEW;\n\n/** @record */\ngws.highlight.common.poll.controllers.OptionsPreviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/highlight/jslayout/common/poll/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/horizon/refinements/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.horizon.refinements.controllers\x27);\ngoog.provide(\x27search.horizon.refinements.controllers.RefinementsControllerResponse\x27);\ngoog.provide(\x27search.horizon.refinements.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.horizon.refinements.RefinementsController\x3e} */\nsearch.horizon.refinements.controllers.REFINEMENTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.horizon.refinements.RefinementsController\x27));\n\n/** @typedef {!search.horizon.refinements.RefinementsController} */\nsearch.horizon.refinements.typedefs.controllers_REFINEMENTS;\n\n/** @record */\nsearch.horizon.refinements.controllers.RefinementsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/horizon/refinements/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/horizon/textlists/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.horizon.textlists.controllers\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.EventsChronoControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.EventsHomeCarouselControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.EventsHomeControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ImageCarouselControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ImmersiveDesktopControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ImmersiveDesktopTabControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.InterestedPromoControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ItemDetailEventsControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.LocationRadiusSelectorControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.MilitaryRecommendationSrpPromoControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.MultiSourceControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.RecommendationCarouselControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SaveButtonCommonWizControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SaveButtonWizControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SavedEventsWizControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SerpCardControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SerpCardDesktopControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ShareButtonAgsaControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ShareButtonWebControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ShareDialogContentControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ShareDialogControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SplinterDetailPageControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.SplinterListItemControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.ToggleClassControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.controllers.UniversalSaveListControllerResponse\x27);\ngoog.provide(\x27gws.horizon.textlists.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.ImmersiveDesktopSearchResultWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.MultiSourceWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.SaveButtonCommonWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.SaveButtonWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.SerpCardContentDesktopWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.SerpCardContentMobileWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.ShareButtonAgsaWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.ShareButtonWebWizProto\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.horizon.textlists.jslayout.Tabs\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.MultiSourceController\x3e} */\ngws.horizon.textlists.controllers.MULTI_SOURCE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.MultiSourceController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.EventsHomeCarouselController\x3e} */\ngws.horizon.textlists.controllers.EVENTS_HOME_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.EventsHomeCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.EventsChronoController\x3e} */\ngws.horizon.textlists.controllers.EVENTS_CHRONO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.EventsChronoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.MilitaryRecommendationSrpPromoController\x3e} */\ngws.horizon.textlists.controllers.MILITARY_RECOMMENDATION_SRP_PROMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.MilitaryRecommendationSrpPromoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SaveButtonCommonWizController\x3e} */\ngws.horizon.textlists.controllers.SAVE_BUTTON_COMMON_WIZ \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SaveButtonCommonWizController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ToggleClassController\x3e} */\ngws.horizon.textlists.controllers.TOGGLE_CLASS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ToggleClassController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.EventsHomeController\x3e} */\ngws.horizon.textlists.controllers.EVENTS_HOME \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.EventsHomeController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SavedEventsWizController\x3e} */\ngws.horizon.textlists.controllers.SAVED_EVENTS_WIZ \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SavedEventsWizController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ShareButtonWebController\x3e} */\ngws.horizon.textlists.controllers.SHARE_BUTTON_WEB \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ShareButtonWebController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SplinterDetailPageController\x3e} */\ngws.horizon.textlists.controllers.SPLINTER_DETAIL_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SplinterDetailPageController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.RecommendationCarouselController\x3e} */\ngws.horizon.textlists.controllers.RECOMMENDATION_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.RecommendationCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SerpCardController\x3e} */\ngws.horizon.textlists.controllers.SERP_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SerpCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SplinterListItemController\x3e} */\ngws.horizon.textlists.controllers.SPLINTER_LIST_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SplinterListItemController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ShareDialogController\x3e} */\ngws.horizon.textlists.controllers.SHARE_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ShareDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.InterestedPromoController\x3e} */\ngws.horizon.textlists.controllers.INTERESTED_PROMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.InterestedPromoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ImmersiveDesktopController\x3e} */\ngws.horizon.textlists.controllers.IMMERSIVE_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ImmersiveDesktopController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ImmersiveDesktopTabController\x3e} */\ngws.horizon.textlists.controllers.IMMERSIVE_DESKTOP_TAB \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ImmersiveDesktopTabController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ShareDialogContentController\x3e} */\ngws.horizon.textlists.controllers.SHARE_DIALOG_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ShareDialogContentController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SaveButtonWizController\x3e} */\ngws.horizon.textlists.controllers.SAVE_BUTTON_WIZ \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SaveButtonWizController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ImageCarouselController\x3e} */\ngws.horizon.textlists.controllers.IMAGE_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ImageCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ItemDetailEventsController\x3e} */\ngws.horizon.textlists.controllers.ITEM_DETAIL_EVENTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ItemDetailEventsController\x27),\n    [gws.horizon.textlists.controllers.MULTI_SOURCE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.ShareButtonAgsaController\x3e} */\ngws.horizon.textlists.controllers.SHARE_BUTTON_AGSA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.ShareButtonAgsaController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.UniversalSaveListController\x3e} */\ngws.horizon.textlists.controllers.UNIVERSAL_SAVE_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.UniversalSaveListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.SerpCardDesktopController\x3e} */\ngws.horizon.textlists.controllers.SERP_CARD_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.SerpCardDesktopController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.horizon.textlists.LocationRadiusSelectorController\x3e} */\ngws.horizon.textlists.controllers.LOCATION_RADIUS_SELECTOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.horizon.textlists.LocationRadiusSelectorController\x27));\n\n/** @typedef {!gws.horizon.textlists.EventsChronoController} */\ngws.horizon.textlists.typedefs.controllers_EVENTS_CHRONO;\n\n/** @record */\ngws.horizon.textlists.controllers.EventsChronoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.EventsHomeCarouselController} */\ngws.horizon.textlists.typedefs.controllers_EVENTS_HOME_CAROUSEL;\n\n/** @record */\ngws.horizon.textlists.controllers.EventsHomeCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.EventsHomeController} */\ngws.horizon.textlists.typedefs.controllers_EVENTS_HOME;\n\n/** @record */\ngws.horizon.textlists.controllers.EventsHomeControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ImageCarouselController} */\ngws.horizon.textlists.typedefs.controllers_IMAGE_CAROUSEL;\n\n/** @record */\ngws.horizon.textlists.controllers.ImageCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ImmersiveDesktopController} */\ngws.horizon.textlists.typedefs.controllers_IMMERSIVE_DESKTOP;\n\n/** @record */\nclass gwshorizontextlistscontrollersImmersiveDesktopControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.ImmersiveDesktopSearchResultWizProto} */ this.immersiveDesktopSearchResultWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.ImmersiveDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersImmersiveDesktopControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ImmersiveDesktopTabController} */\ngws.horizon.textlists.typedefs.controllers_IMMERSIVE_DESKTOP_TAB;\n\n/** @record */\nclass gwshorizontextlistscontrollersImmersiveDesktopTabControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.jslayout.Tabs} */ this.tabs;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.ImmersiveDesktopTabControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersImmersiveDesktopTabControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.InterestedPromoController} */\ngws.horizon.textlists.typedefs.controllers_INTERESTED_PROMO;\n\n/** @record */\ngws.horizon.textlists.controllers.InterestedPromoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ItemDetailEventsController} */\ngws.horizon.textlists.typedefs.controllers_ITEM_DETAIL_EVENTS;\n\n/** @record */\nclass gwshorizontextlistscontrollersItemDetailEventsControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.multiSource;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.ItemDetailEventsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersItemDetailEventsControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.LocationRadiusSelectorController} */\ngws.horizon.textlists.typedefs.controllers_LOCATION_RADIUS_SELECTOR;\n\n/** @record */\ngws.horizon.textlists.controllers.LocationRadiusSelectorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.MilitaryRecommendationSrpPromoController} */\ngws.horizon.textlists.typedefs.controllers_MILITARY_RECOMMENDATION_SRP_PROMO;\n\n/** @record */\ngws.horizon.textlists.controllers.MilitaryRecommendationSrpPromoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.MultiSourceController} */\ngws.horizon.textlists.typedefs.controllers_MULTI_SOURCE;\n\n/** @record */\nclass gwshorizontextlistscontrollersMultiSourceControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.MultiSourceWizProto} */ this.multiSourceWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.MultiSourceControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersMultiSourceControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.RecommendationCarouselController} */\ngws.horizon.textlists.typedefs.controllers_RECOMMENDATION_CAROUSEL;\n\n/** @record */\ngws.horizon.textlists.controllers.RecommendationCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SaveButtonCommonWizController} */\ngws.horizon.textlists.typedefs.controllers_SAVE_BUTTON_COMMON_WIZ;\n\n/** @record */\nclass gwshorizontextlistscontrollersSaveButtonCommonWizControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.SaveButtonCommonWizProto} */ this.saveButtonCommonWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.SaveButtonCommonWizControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersSaveButtonCommonWizControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SaveButtonWizController} */\ngws.horizon.textlists.typedefs.controllers_SAVE_BUTTON_WIZ;\n\n/** @record */\nclass gwshorizontextlistscontrollersSaveButtonWizControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.SaveButtonWizProto} */ this.saveButtonWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.SaveButtonWizControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersSaveButtonWizControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SavedEventsWizController} */\ngws.horizon.textlists.typedefs.controllers_SAVED_EVENTS_WIZ;\n\n/** @record */\ngws.horizon.textlists.controllers.SavedEventsWizControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SerpCardController} */\ngws.horizon.textlists.typedefs.controllers_SERP_CARD;\n\n/** @record */\nclass gwshorizontextlistscontrollersSerpCardControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.SerpCardContentMobileWizProto} */ this.serpCardContentMobileWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.SerpCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersSerpCardControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SerpCardDesktopController} */\ngws.horizon.textlists.typedefs.controllers_SERP_CARD_DESKTOP;\n\n/** @record */\nclass gwshorizontextlistscontrollersSerpCardDesktopControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.SerpCardContentDesktopWizProto} */ this.serpCardContentDesktopWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.SerpCardDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersSerpCardDesktopControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ShareButtonAgsaController} */\ngws.horizon.textlists.typedefs.controllers_SHARE_BUTTON_AGSA;\n\n/** @record */\nclass gwshorizontextlistscontrollersShareButtonAgsaControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.ShareButtonAgsaWizProto} */ this.shareButtonAgsaWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.ShareButtonAgsaControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersShareButtonAgsaControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ShareButtonWebController} */\ngws.horizon.textlists.typedefs.controllers_SHARE_BUTTON_WEB;\n\n/** @record */\nclass gwshorizontextlistscontrollersShareButtonWebControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.horizon.textlists.ShareButtonWebWizProto} */ this.shareButtonWebWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.horizon.textlists.controllers.ShareButtonWebControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwshorizontextlistscontrollersShareButtonWebControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ShareDialogContentController} */\ngws.horizon.textlists.typedefs.controllers_SHARE_DIALOG_CONTENT;\n\n/** @record */\ngws.horizon.textlists.controllers.ShareDialogContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ShareDialogController} */\ngws.horizon.textlists.typedefs.controllers_SHARE_DIALOG;\n\n/** @record */\ngws.horizon.textlists.controllers.ShareDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SplinterDetailPageController} */\ngws.horizon.textlists.typedefs.controllers_SPLINTER_DETAIL_PAGE;\n\n/** @record */\ngws.horizon.textlists.controllers.SplinterDetailPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.SplinterListItemController} */\ngws.horizon.textlists.typedefs.controllers_SPLINTER_LIST_ITEM;\n\n/** @record */\ngws.horizon.textlists.controllers.SplinterListItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.ToggleClassController} */\ngws.horizon.textlists.typedefs.controllers_TOGGLE_CLASS;\n\n/** @record */\ngws.horizon.textlists.controllers.ToggleClassControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.horizon.textlists.UniversalSaveListController} */\ngws.horizon.textlists.typedefs.controllers_UNIVERSAL_SAVE_LIST;\n\n/** @record */\ngws.horizon.textlists.controllers.UniversalSaveListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/horizon/textlists/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/images/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.images.controllers\x27);\ngoog.provide(\x27gws.images.controllers.ThumbnailAnimationControllerResponse\x27);\ngoog.provide(\x27gws.images.typedefs\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers.LongPressActionsControllerResponse\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers.PurposefulJourneysPromoControllerResponse\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers.PurposefulJourneysReminderControllerResponse\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers.ScrollupNavbarControllerResponse\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.controllers.StrobeImageSearchResultControllerResponse\x27);\ngoog.provide(\x27gws.plugins.images.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.mendel.AnimatedThumbnails\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.images.jslayout.LongPressActionsController\x3e} */\ngws.plugins.images.jslayout.controllers.LONG_PRESS_ACTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.images.jslayout.LongPressActionsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.images.jslayout.StrobeImageSearchResultController\x3e} */\ngws.plugins.images.jslayout.controllers.STROBE_IMAGE_SEARCH_RESULT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.images.jslayout.StrobeImageSearchResultController\x27),\n    [gws.plugins.images.jslayout.controllers.LONG_PRESS_ACTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.images.jslayout.PurposefulJourneysReminderController\x3e} */\ngws.plugins.images.jslayout.controllers.PURPOSEFUL_JOURNEYS_REMINDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.images.jslayout.PurposefulJourneysReminderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.images.jslayout.ScrollupNavbarController\x3e} */\ngws.plugins.images.jslayout.controllers.SCROLLUP_NAVBAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.images.jslayout.ScrollupNavbarController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.images.jslayout.PurposefulJourneysPromoController\x3e} */\ngws.plugins.images.jslayout.controllers.PURPOSEFUL_JOURNEYS_PROMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.images.jslayout.PurposefulJourneysPromoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.images.ThumbnailAnimationController\x3e} */\ngws.images.controllers.THUMBNAIL_ANIMATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.images.ThumbnailAnimationController\x27));\n\n/** @typedef {!gws.plugins.images.jslayout.LongPressActionsController} */\ngws.plugins.images.jslayout.typedefs.controllers_LONG_PRESS_ACTIONS;\n\n/** @record */\ngws.plugins.images.jslayout.controllers.LongPressActionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.images.jslayout.PurposefulJourneysPromoController} */\ngws.plugins.images.jslayout.typedefs.controllers_PURPOSEFUL_JOURNEYS_PROMO;\n\n/** @record */\ngws.plugins.images.jslayout.controllers.PurposefulJourneysPromoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.images.jslayout.PurposefulJourneysReminderController} */\ngws.plugins.images.jslayout.typedefs.controllers_PURPOSEFUL_JOURNEYS_REMINDER;\n\n/** @record */\ngws.plugins.images.jslayout.controllers.PurposefulJourneysReminderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.images.jslayout.ScrollupNavbarController} */\ngws.plugins.images.jslayout.typedefs.controllers_SCROLLUP_NAVBAR;\n\n/** @record */\ngws.plugins.images.jslayout.controllers.ScrollupNavbarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.images.jslayout.StrobeImageSearchResultController} */\ngws.plugins.images.jslayout.typedefs.controllers_STROBE_IMAGE_SEARCH_RESULT;\n\n/** @record */\ngws.plugins.images.jslayout.controllers.StrobeImageSearchResultControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.images.jslayout.controllers.LongPressActionsControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.images.jslayout.controllers.LongPressActionsControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.images.ThumbnailAnimationController} */\ngws.images.typedefs.controllers_THUMBNAIL_ANIMATION;\n\n/** @record */\nclass gwsimagescontrollersThumbnailAnimationControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.mendel.AnimatedThumbnails} */ this.mendel;\n  }\n}\n\n\n\n/** @record */\ngws.images.controllers.ThumbnailAnimationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsimagescontrollersThumbnailAnimationControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/images/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/alfred/filter/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.alfred.filter.controllers\x27);\ngoog.provide(\x27gws.knowledge.alfred.filter.controllers.AsyncFilterableContainerControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.alfred.filter.controllers.LinearProgressControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.alfred.filter.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.alfred.filter.LinearProgressController\x3e} */\ngws.knowledge.alfred.filter.controllers.LINEAR_PROGRESS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.alfred.filter.LinearProgressController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.alfred.filter.AsyncFilterableContainerController\x3e} */\ngws.knowledge.alfred.filter.controllers.ASYNC_FILTERABLE_CONTAINER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.alfred.filter.AsyncFilterableContainerController\x27));\n\n/** @typedef {!gws.knowledge.alfred.filter.AsyncFilterableContainerController} */\ngws.knowledge.alfred.filter.typedefs.controllers_ASYNC_FILTERABLE_CONTAINER;\n\n/** @record */\ngws.knowledge.alfred.filter.controllers.AsyncFilterableContainerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.alfred.filter.LinearProgressController} */\ngws.knowledge.alfred.filter.typedefs.controllers_LINEAR_PROGRESS;\n\n/** @record */\ngws.knowledge.alfred.filter.controllers.LinearProgressControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/alfred/filter/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/entitypreview/movie/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.entitypreview.movie.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.entitypreview.movie.controllers.MovieCardControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.entitypreview.movie.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.entitypreview.movie.MovieCardController\x3e} */\ngws.plugins.knowledge.entitypreview.movie.controllers.MOVIE_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.entitypreview.movie.MovieCardController\x27));\n\n/** @typedef {!gws.plugins.knowledge.entitypreview.movie.MovieCardController} */\ngws.plugins.knowledge.entitypreview.movie.typedefs.controllers_MOVIE_CARD;\n\n/** @record */\ngws.plugins.knowledge.entitypreview.movie.controllers.MovieCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/entitypreview/movie/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ephemeral/masthead/js/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.controllers\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.controllers.CountdownControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.controllers.VideoBlockControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.models\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.models.CountdownModelResponse\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.services\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.services.TemplatePoolServiceResponse\x27);\ngoog.provide(\x27gws.knowledge.ephemeral.masthead.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ephemeral.masthead.CountdownData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ephemeral.masthead.TemplatePoolService\x3e} */\ngws.knowledge.ephemeral.masthead.services.TEMPLATE_POOL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ephemeral.masthead.TemplatePoolService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ephemeral.masthead.CountdownModel\x3e} */\ngws.knowledge.ephemeral.masthead.models.COUNTDOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ephemeral.masthead.CountdownModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ephemeral.masthead.CountdownController\x3e} */\ngws.knowledge.ephemeral.masthead.controllers.COUNTDOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ephemeral.masthead.CountdownController\x27),\n    [gws.knowledge.ephemeral.masthead.models.COUNTDOWN, gws.knowledge.ephemeral.masthead.services.TEMPLATE_POOL]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ephemeral.masthead.VideoBlockController\x3e} */\ngws.knowledge.ephemeral.masthead.controllers.VIDEO_BLOCK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ephemeral.masthead.VideoBlockController\x27),\n    [gws.knowledge.ephemeral.masthead.models.COUNTDOWN, gws.knowledge.ephemeral.masthead.services.TEMPLATE_POOL]);\n\n/** @typedef {!gws.knowledge.ephemeral.masthead.CountdownController} */\ngws.knowledge.ephemeral.masthead.typedefs.controllers_COUNTDOWN;\n\n/** @record */\nclass gwsknowledgeephemeralmastheadcontrollersCountdownControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ephemeral.masthead.typedefs.models_COUNTDOWN} */ this.countdownModel;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeephemeralmastheadcontrollersCountdownControllerResponse_service {\n  constructor() {\n    /** @type {!gws.knowledge.ephemeral.masthead.typedefs.services_TEMPLATE_POOL} */ this.templatePoolService;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ephemeral.masthead.controllers.CountdownControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeephemeralmastheadcontrollersCountdownControllerResponse_model} */ this.model;\n    /** @type {!gwsknowledgeephemeralmastheadcontrollersCountdownControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ephemeral.masthead.CountdownModel} */\ngws.knowledge.ephemeral.masthead.typedefs.models_COUNTDOWN;\n\n/** @record */\nclass gwsknowledgeephemeralmastheadmodelsCountdownModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ephemeral.masthead.CountdownData} */ this.countdownData;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ephemeral.masthead.models.CountdownModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeephemeralmastheadmodelsCountdownModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ephemeral.masthead.TemplatePoolService} */\ngws.knowledge.ephemeral.masthead.typedefs.services_TEMPLATE_POOL;\n\n/** @record */\ngws.knowledge.ephemeral.masthead.services.TemplatePoolServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ephemeral.masthead.VideoBlockController} */\ngws.knowledge.ephemeral.masthead.typedefs.controllers_VIDEO_BLOCK;\n\n/** @record */\nclass gwsknowledgeephemeralmastheadcontrollersVideoBlockControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ephemeral.masthead.typedefs.models_COUNTDOWN} */ this.countdownModel;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeephemeralmastheadcontrollersVideoBlockControllerResponse_service {\n  constructor() {\n    /** @type {!gws.knowledge.ephemeral.masthead.typedefs.services_TEMPLATE_POOL} */ this.templatePoolService;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ephemeral.masthead.controllers.VideoBlockControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeephemeralmastheadcontrollersVideoBlockControllerResponse_model} */ this.model;\n    /** @type {!gwsknowledgeephemeralmastheadcontrollersVideoBlockControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ephemeral/masthead/js/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.jslayout.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.jslayout.controllers.LyricsResultControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.jslayout.LyricsResultController\x3e} */\ngws.plugins.knowledge.jslayout.controllers.LYRICS_RESULT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.jslayout.LyricsResultController\x27));\n\n/** @typedef {!gws.plugins.knowledge.jslayout.LyricsResultController} */\ngws.plugins.knowledge.jslayout.typedefs.controllers_LYRICS_RESULT;\n\n/** @record */\ngws.plugins.knowledge.jslayout.controllers.LyricsResultControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/thirdpartyfeatures/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.thirdpartyfeatures.controllers\x27);\ngoog.provide(\x27gws.thirdpartyfeatures.controllers.FaqControllerResponse\x27);\ngoog.provide(\x27gws.thirdpartyfeatures.controllers.HelpfulControllerResponse\x27);\ngoog.provide(\x27gws.thirdpartyfeatures.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.thirdpartyfeatures.HelpfulController\x3e} */\ngws.thirdpartyfeatures.controllers.HELPFUL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.thirdpartyfeatures.HelpfulController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.thirdpartyfeatures.FaqController\x3e} */\ngws.thirdpartyfeatures.controllers.FAQ \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.thirdpartyfeatures.FaqController\x27));\n\n/** @typedef {!gws.thirdpartyfeatures.FaqController} */\ngws.thirdpartyfeatures.typedefs.controllers_FAQ;\n\n/** @record */\ngws.thirdpartyfeatures.controllers.FaqControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.thirdpartyfeatures.HelpfulController} */\ngws.thirdpartyfeatures.typedefs.controllers_HELPFUL;\n\n/** @record */\ngws.thirdpartyfeatures.controllers.HelpfulControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/thirdpartyfeatures/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/facts/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.ugc.facts.controllers\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.controllers.MissingFactDialogControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.controllers.UgcFactsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.controllers.VerifyFactCardControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.controllers.VerifyFactModalControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.models\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.models.UgcFactsModelResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.facts.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.facts.Facts\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.facts.UgcFactsModel\x3e} */\ngws.knowledge.ugc.facts.models.UGC_FACTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.facts.UgcFactsModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.facts.MissingFactDialogController\x3e} */\ngws.knowledge.ugc.facts.controllers.MISSING_FACT_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.facts.MissingFactDialogController\x27),\n    [gws.knowledge.ugc.facts.models.UGC_FACTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.facts.VerifyFactCardController\x3e} */\ngws.knowledge.ugc.facts.controllers.VERIFY_FACT_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.facts.VerifyFactCardController\x27),\n    [gws.knowledge.ugc.facts.models.UGC_FACTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.facts.VerifyFactModalController\x3e} */\ngws.knowledge.ugc.facts.controllers.VERIFY_FACT_MODAL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.facts.VerifyFactModalController\x27),\n    [gws.knowledge.ugc.facts.controllers.VERIFY_FACT_CARD, gws.knowledge.ugc.facts.models.UGC_FACTS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.facts.UgcFactsController\x3e} */\ngws.knowledge.ugc.facts.controllers.UGC_FACTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.facts.UgcFactsController\x27),\n    [gws.knowledge.ugc.facts.models.UGC_FACTS]);\n\n/** @typedef {!gws.knowledge.ugc.facts.MissingFactDialogController} */\ngws.knowledge.ugc.facts.typedefs.controllers_MISSING_FACT_DIALOG;\n\n/** @record */\nclass gwsknowledgeugcfactscontrollersMissingFactDialogControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.facts.typedefs.models_UGC_FACTS} */ this.ugcFactsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.facts.controllers.MissingFactDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcfactscontrollersMissingFactDialogControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.facts.UgcFactsController} */\ngws.knowledge.ugc.facts.typedefs.controllers_UGC_FACTS;\n\n/** @record */\nclass gwsknowledgeugcfactscontrollersUgcFactsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.facts.typedefs.models_UGC_FACTS} */ this.ugcFactsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.facts.controllers.UgcFactsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcfactscontrollersUgcFactsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.facts.UgcFactsModel} */\ngws.knowledge.ugc.facts.typedefs.models_UGC_FACTS;\n\n/** @record */\nclass gwsknowledgeugcfactsmodelsUgcFactsModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.facts.Facts} */ this.factsProto;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.facts.models.UgcFactsModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcfactsmodelsUgcFactsModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.facts.VerifyFactCardController} */\ngws.knowledge.ugc.facts.typedefs.controllers_VERIFY_FACT_CARD;\n\n/** @record */\nclass gwsknowledgeugcfactscontrollersVerifyFactCardControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.facts.typedefs.models_UGC_FACTS} */ this.ugcFactsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.facts.controllers.VerifyFactCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcfactscontrollersVerifyFactCardControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.facts.VerifyFactModalController} */\ngws.knowledge.ugc.facts.typedefs.controllers_VERIFY_FACT_MODAL;\n\n/** @record */\nclass gwsknowledgeugcfactscontrollersVerifyFactModalControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.facts.typedefs.models_UGC_FACTS} */ this.ugcFactsModel;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeugcfactscontrollersVerifyFactModalControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.verifyFactCardController;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.facts.controllers.VerifyFactModalControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcfactscontrollersVerifyFactModalControllerResponse_model} */ this.model;\n    /** @type {!gwsknowledgeugcfactscontrollersVerifyFactModalControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/facts/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/nowmovies/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.AsyncCardControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.MovieSelectionControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.NowMoviesControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.TagsCardContentControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.ThankYouCardControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.controllers.ThumbsCardContentControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.models\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.models.NowMoviesModelResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.nowmovies.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.nowmovies.NowMovies\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.NowMoviesModel\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.models.NOW_MOVIES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.NowMoviesModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.AsyncCardController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.ASYNC_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.AsyncCardController\x27),\n    [gws.plugins.knowledge.ugc.nowmovies.models.NOW_MOVIES]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.NowMoviesController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.NOW_MOVIES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.NowMoviesController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.ThumbsCardContentController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.THUMBS_CARD_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.ThumbsCardContentController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.TagsCardContentController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.TAGS_CARD_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.TagsCardContentController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.ThankYouCardController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.THANK_YOU_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.ThankYouCardController\x27),\n    [gws.plugins.knowledge.ugc.nowmovies.models.NOW_MOVIES]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.nowmovies.MovieSelectionController\x3e} */\ngws.plugins.knowledge.ugc.nowmovies.controllers.MOVIE_SELECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.nowmovies.MovieSelectionController\x27),\n    [gws.plugins.knowledge.ugc.nowmovies.models.NOW_MOVIES]);\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.AsyncCardController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_ASYNC_CARD;\n\n/** @record */\nclass gwspluginsknowledgeugcnowmoviescontrollersAsyncCardControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.ugc.nowmovies.typedefs.models_NOW_MOVIES} */ this.nowMoviesModel;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.AsyncCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugcnowmoviescontrollersAsyncCardControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.MovieSelectionController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_MOVIE_SELECTION;\n\n/** @record */\nclass gwspluginsknowledgeugcnowmoviescontrollersMovieSelectionControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.ugc.nowmovies.typedefs.models_NOW_MOVIES} */ this.nowMoviesModel;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.MovieSelectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugcnowmoviescontrollersMovieSelectionControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.NowMoviesController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_NOW_MOVIES;\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.NowMoviesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.NowMoviesModel} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.models_NOW_MOVIES;\n\n/** @record */\nclass gwspluginsknowledgeugcnowmoviesmodelsNowMoviesModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.nowmovies.NowMovies} */ this.nowMovies;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.models.NowMoviesModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugcnowmoviesmodelsNowMoviesModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.TagsCardContentController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_TAGS_CARD_CONTENT;\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.TagsCardContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.ThankYouCardController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_THANK_YOU_CARD;\n\n/** @record */\nclass gwspluginsknowledgeugcnowmoviescontrollersThankYouCardControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.ugc.nowmovies.typedefs.models_NOW_MOVIES} */ this.nowMoviesModel;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.ThankYouCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugcnowmoviescontrollersThankYouCardControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.nowmovies.ThumbsCardContentController} */\ngws.plugins.knowledge.ugc.nowmovies.typedefs.controllers_THUMBS_CARD_CONTENT;\n\n/** @record */\ngws.plugins.knowledge.ugc.nowmovies.controllers.ThumbsCardContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/nowmovies/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/questions/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AllAnswersDesktopControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AllAnswersMobileControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AnswerControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AnswerListControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AnswerQuestionDesktopControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AnswerQuestionMobileControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AskQuestionDesktopControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.AskQuestionMobileControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.FollowControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.MyContributionsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.ThumbsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.controllers.UnansweredQuestionsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.models\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.models.QuestionsModelResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.questions.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.questions.Questions\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AnswerListController\x3e} */\ngws.knowledge.ugc.questions.controllers.ANSWER_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AnswerListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AnswerController\x3e} */\ngws.knowledge.ugc.questions.controllers.ANSWER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AnswerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AskQuestionController\x3e} */\ngws.knowledge.ugc.questions.controllers.ASK_QUESTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AskQuestionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.ThumbsController\x3e} */\ngws.knowledge.ugc.questions.controllers.THUMBS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.ThumbsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AskQuestionMobileController\x3e} */\ngws.knowledge.ugc.questions.controllers.ASK_QUESTION_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AskQuestionMobileController\x27),\n    [gws.knowledge.ugc.questions.controllers.ASK_QUESTION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.FollowController\x3e} */\ngws.knowledge.ugc.questions.controllers.FOLLOW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.FollowController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.QuestionsModel\x3e} */\ngws.knowledge.ugc.questions.models.QUESTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.QuestionsModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AskQuestionDesktopController\x3e} */\ngws.knowledge.ugc.questions.controllers.ASK_QUESTION_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AskQuestionDesktopController\x27),\n    [gws.knowledge.ugc.questions.controllers.ASK_QUESTION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.MyContributionsController\x3e} */\ngws.knowledge.ugc.questions.controllers.MY_CONTRIBUTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.MyContributionsController\x27),\n    [gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AnswerQuestionController\x3e} */\ngws.knowledge.ugc.questions.controllers.ANSWER_QUESTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AnswerQuestionController\x27),\n    [gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.UnansweredQuestionsController\x3e} */\ngws.knowledge.ugc.questions.controllers.UNANSWERED_QUESTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.UnansweredQuestionsController\x27),\n    [gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AnswerQuestionMobileController\x3e} */\ngws.knowledge.ugc.questions.controllers.ANSWER_QUESTION_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AnswerQuestionMobileController\x27),\n    [gws.knowledge.ugc.questions.controllers.ANSWER_QUESTION, gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AllAnswersController\x3e} */\ngws.knowledge.ugc.questions.controllers.ALL_ANSWERS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AllAnswersController\x27),\n    [gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AnswerQuestionDesktopController\x3e} */\ngws.knowledge.ugc.questions.controllers.ANSWER_QUESTION_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AnswerQuestionDesktopController\x27),\n    [gws.knowledge.ugc.questions.controllers.ANSWER_QUESTION, gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AllAnswersDesktopController\x3e} */\ngws.knowledge.ugc.questions.controllers.ALL_ANSWERS_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AllAnswersDesktopController\x27),\n    [gws.knowledge.ugc.questions.controllers.ALL_ANSWERS, gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.questions.AllAnswersMobileController\x3e} */\ngws.knowledge.ugc.questions.controllers.ALL_ANSWERS_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.questions.AllAnswersMobileController\x27),\n    [gws.knowledge.ugc.questions.controllers.ALL_ANSWERS, gws.knowledge.ugc.questions.models.QUESTIONS]);\n\n/** @typedef {!gws.knowledge.ugc.questions.AllAnswersController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ALL_ANSWERS;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAllAnswersControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAllAnswersControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AllAnswersDesktopController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ALL_ANSWERS_DESKTOP;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAllAnswersDesktopControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AllAnswersDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAllAnswersDesktopControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AllAnswersMobileController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ALL_ANSWERS_MOBILE;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAllAnswersMobileControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AllAnswersMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AllAnswersControllerResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAllAnswersMobileControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AnswerController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ANSWER;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AnswerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AnswerListController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ANSWER_LIST;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AnswerListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AnswerQuestionController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ANSWER_QUESTION;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAnswerQuestionControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAnswerQuestionControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AnswerQuestionDesktopController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ANSWER_QUESTION_DESKTOP;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAnswerQuestionDesktopControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AnswerQuestionDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAnswerQuestionDesktopControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AnswerQuestionMobileController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ANSWER_QUESTION_MOBILE;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersAnswerQuestionMobileControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AnswerQuestionMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AnswerQuestionControllerResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersAnswerQuestionMobileControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AskQuestionController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ASK_QUESTION;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AskQuestionDesktopController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ASK_QUESTION_DESKTOP;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AskQuestionDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.AskQuestionMobileController} */\ngws.knowledge.ugc.questions.typedefs.controllers_ASK_QUESTION_MOBILE;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.AskQuestionMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.questions.controllers.AskQuestionControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.FollowController} */\ngws.knowledge.ugc.questions.typedefs.controllers_FOLLOW;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.FollowControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.MyContributionsController} */\ngws.knowledge.ugc.questions.typedefs.controllers_MY_CONTRIBUTIONS;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersMyContributionsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.MyContributionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersMyContributionsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.QuestionsModel} */\ngws.knowledge.ugc.questions.typedefs.models_QUESTIONS;\n\n/** @record */\nclass gwsknowledgeugcquestionsmodelsQuestionsModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.questions.Questions} */ this.questionsProto;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.models.QuestionsModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionsmodelsQuestionsModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.ThumbsController} */\ngws.knowledge.ugc.questions.typedefs.controllers_THUMBS;\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.ThumbsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.questions.UnansweredQuestionsController} */\ngws.knowledge.ugc.questions.typedefs.controllers_UNANSWERED_QUESTIONS;\n\n/** @record */\nclass gwsknowledgeugcquestionscontrollersUnansweredQuestionsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.questions.typedefs.models_QUESTIONS} */ this.questionsModel;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.questions.controllers.UnansweredQuestionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcquestionscontrollersUnansweredQuestionsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/questions/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/reviews/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.ComposerControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.DialogsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.FullPageComposerControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.ProfilePictureControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.SnackbarsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.ThumbsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.UserReviewControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.UserReviewsDesktopControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.UserReviewsMobileControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.controllers.UserReviewsMobileSummaryControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.models\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.models.UserReviewsModelResponse\x27);\ngoog.provide(\x27gws.knowledge.ugc.reviews.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.reviews.ClientData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.UserReviewsModel\x3e} */\ngws.knowledge.ugc.reviews.models.USER_REVIEWS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.UserReviewsModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.SnackbarsController\x3e} */\ngws.knowledge.ugc.reviews.controllers.SNACKBARS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.SnackbarsController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.BaseUserReviewsMobileController\x3e} */\ngws.knowledge.ugc.reviews.controllers.BASE_USER_REVIEWS_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.BaseUserReviewsMobileController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.ThumbsController\x3e} */\ngws.knowledge.ugc.reviews.controllers.THUMBS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.ThumbsController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.FullPageComposerController\x3e} */\ngws.knowledge.ugc.reviews.controllers.FULL_PAGE_COMPOSER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.FullPageComposerController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.UserReviewController\x3e} */\ngws.knowledge.ugc.reviews.controllers.USER_REVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.UserReviewController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.UserReviewsMobileController\x3e} */\ngws.knowledge.ugc.reviews.controllers.USER_REVIEWS_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.UserReviewsMobileController\x27),\n    [gws.knowledge.ugc.reviews.controllers.BASE_USER_REVIEWS_MOBILE, gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.ProfilePictureController\x3e} */\ngws.knowledge.ugc.reviews.controllers.PROFILE_PICTURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.ProfilePictureController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.UserReviewsDesktopController\x3e} */\ngws.knowledge.ugc.reviews.controllers.USER_REVIEWS_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.UserReviewsDesktopController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.ComposerController\x3e} */\ngws.knowledge.ugc.reviews.controllers.COMPOSER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.ComposerController\x27),\n    [gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.UserReviewsMobileSummaryController\x3e} */\ngws.knowledge.ugc.reviews.controllers.USER_REVIEWS_MOBILE_SUMMARY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.UserReviewsMobileSummaryController\x27),\n    [gws.knowledge.ugc.reviews.controllers.BASE_USER_REVIEWS_MOBILE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.ugc.reviews.DialogsController\x3e} */\ngws.knowledge.ugc.reviews.controllers.DIALOGS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.ugc.reviews.DialogsController\x27),\n    [gws.knowledge.ugc.reviews.controllers.COMPOSER, gws.knowledge.ugc.reviews.models.USER_REVIEWS]);\n\n/** @typedef {!gws.knowledge.ugc.reviews.BaseUserReviewsMobileController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_BASE_USER_REVIEWS_MOBILE;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersBaseUserReviewsMobileControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersBaseUserReviewsMobileControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.ComposerController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_COMPOSER;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersComposerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.ComposerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersComposerControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.DialogsController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_DIALOGS;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersDialogsControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.composer;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersDialogsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.DialogsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersDialogsControllerResponse_controller} */ this.controller;\n    /** @type {!gwsknowledgeugcreviewscontrollersDialogsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.FullPageComposerController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_FULL_PAGE_COMPOSER;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersFullPageComposerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.FullPageComposerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersFullPageComposerControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.ProfilePictureController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_PROFILE_PICTURE;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersProfilePictureControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.ProfilePictureControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersProfilePictureControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.UserReviewController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_USER_REVIEW;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersUserReviewControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.UserReviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersUserReviewControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.UserReviewsDesktopController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_USER_REVIEWS_DESKTOP;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersUserReviewsDesktopControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.UserReviewsDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersUserReviewsDesktopControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.UserReviewsMobileController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_USER_REVIEWS_MOBILE;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersUserReviewsMobileControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.UserReviewsMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersUserReviewsMobileControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.UserReviewsMobileSummaryController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_USER_REVIEWS_MOBILE_SUMMARY;\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.UserReviewsMobileSummaryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.ugc.reviews.controllers.BaseUserReviewsMobileControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.UserReviewsModel} */\ngws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS;\n\n/** @record */\nclass gwsknowledgeugcreviewsmodelsUserReviewsModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.reviews.ClientData} */ this.clientData;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.models.UserReviewsModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewsmodelsUserReviewsModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.SnackbarsController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_SNACKBARS;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersSnackbarsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.SnackbarsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersSnackbarsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.ugc.reviews.ThumbsController} */\ngws.knowledge.ugc.reviews.typedefs.controllers_THUMBS;\n\n/** @record */\nclass gwsknowledgeugcreviewscontrollersThumbsControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.ugc.reviews.typedefs.models_USER_REVIEWS} */ this.reviews;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.ugc.reviews.controllers.ThumbsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeugcreviewscontrollersThumbsControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/reviews/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/riddler/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.ugc.riddler.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.riddler.controllers.CardsCarouselControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.riddler.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.riddler.CardsCarouselController\x3e} */\ngws.plugins.knowledge.ugc.riddler.controllers.CARDS_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.riddler.CardsCarouselController\x27));\n\n/** @typedef {!gws.plugins.knowledge.ugc.riddler.CardsCarouselController} */\ngws.plugins.knowledge.ugc.riddler.typedefs.controllers_CARDS_CAROUSEL;\n\n/** @record */\ngws.plugins.knowledge.ugc.riddler.controllers.CardsCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/riddler/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/suggestions/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.ugc.suggestions.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.suggestions.controllers.SuggestionsControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.suggestions.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.suggestions.SuggestionsController\x3e} */\ngws.plugins.knowledge.ugc.suggestions.controllers.SUGGESTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.suggestions.SuggestionsController\x27));\n\n/** @typedef {!gws.plugins.knowledge.ugc.suggestions.SuggestionsController} */\ngws.plugins.knowledge.ugc.suggestions.typedefs.controllers_SUGGESTIONS;\n\n/** @record */\ngws.plugins.knowledge.ugc.suggestions.controllers.SuggestionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/suggestions/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/ugc/tags/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.controllers.ComposerControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.controllers.SelectorControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.controllers.TagsControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.models\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.models.TagsModelResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.ugc.tags.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.tags.EntityTags\x27);\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.ugc.tags.VisualConfig\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.tags.TagsModel\x3e} */\ngws.plugins.knowledge.ugc.tags.models.TAGS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.tags.TagsModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.tags.TagsController\x3e} */\ngws.plugins.knowledge.ugc.tags.controllers.TAGS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.tags.TagsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.tags.ComposerController\x3e} */\ngws.plugins.knowledge.ugc.tags.controllers.COMPOSER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.tags.ComposerController\x27),\n    [gws.plugins.knowledge.ugc.tags.models.TAGS]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.ugc.tags.SelectorController\x3e} */\ngws.plugins.knowledge.ugc.tags.controllers.SELECTOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.ugc.tags.SelectorController\x27),\n    [gws.plugins.knowledge.ugc.tags.models.TAGS]);\n\n/** @typedef {!gws.plugins.knowledge.ugc.tags.ComposerController} */\ngws.plugins.knowledge.ugc.tags.typedefs.controllers_COMPOSER;\n\n/** @record */\nclass gwspluginsknowledgeugctagscontrollersComposerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.ugc.tags.typedefs.models_TAGS} */ this.tagsModel;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.tags.controllers.ComposerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugctagscontrollersComposerControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.tags.SelectorController} */\ngws.plugins.knowledge.ugc.tags.typedefs.controllers_SELECTOR;\n\n/** @record */\nclass gwspluginsknowledgeugctagscontrollersSelectorControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.tags.VisualConfig} */ this.visualConfig;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeugctagscontrollersSelectorControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.ugc.tags.typedefs.models_TAGS} */ this.tagsModel;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.tags.controllers.SelectorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugctagscontrollersSelectorControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwspluginsknowledgeugctagscontrollersSelectorControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.tags.TagsController} */\ngws.plugins.knowledge.ugc.tags.typedefs.controllers_TAGS;\n\n/** @record */\ngws.plugins.knowledge.ugc.tags.controllers.TagsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.ugc.tags.TagsModel} */\ngws.plugins.knowledge.ugc.tags.typedefs.models_TAGS;\n\n/** @record */\nclass gwspluginsknowledgeugctagsmodelsTagsModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.ugc.tags.EntityTags} */ this.tags;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.ugc.tags.models.TagsModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeugctagsmodelsTagsModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/ugc/tags/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/cultural/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.cultural.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.controllers.ChipControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.controllers.LightboxControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.controllers.ListItemControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.controllers.TimeBarControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.models\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.models.EventsListModelResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.cultural.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.cultural.FilterInfo\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.cultural.EventsListModel\x3e} */\ngws.knowledge.verticals.cultural.models.EVENTS_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.cultural.EventsListModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.cultural.ChipController\x3e} */\ngws.knowledge.verticals.cultural.controllers.CHIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.cultural.ChipController\x27),\n    [gws.knowledge.verticals.cultural.models.EVENTS_LIST]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.cultural.LightboxController\x3e} */\ngws.knowledge.verticals.cultural.controllers.LIGHTBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.cultural.LightboxController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.cultural.ListItemController\x3e} */\ngws.knowledge.verticals.cultural.controllers.LIST_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.cultural.ListItemController\x27),\n    [gws.knowledge.verticals.cultural.models.EVENTS_LIST]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.cultural.TimeBarController\x3e} */\ngws.knowledge.verticals.cultural.controllers.TIME_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.cultural.TimeBarController\x27),\n    [gws.knowledge.verticals.cultural.controllers.LIST_ITEM]);\n\n/** @typedef {!gws.knowledge.verticals.cultural.ChipController} */\ngws.knowledge.verticals.cultural.typedefs.controllers_CHIP;\n\n/** @record */\nclass gwsknowledgeverticalsculturalcontrollersChipControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.verticals.cultural.typedefs.models_EVENTS_LIST} */ this.events;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeverticalsculturalcontrollersChipControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.cultural.FilterInfo} */ this.filterInfo;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.verticals.cultural.controllers.ChipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeverticalsculturalcontrollersChipControllerResponse_model} */ this.model;\n    /** @type {!gwsknowledgeverticalsculturalcontrollersChipControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.cultural.EventsListModel} */\ngws.knowledge.verticals.cultural.typedefs.models_EVENTS_LIST;\n\n/** @record */\ngws.knowledge.verticals.cultural.models.EventsListModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.cultural.LightboxController} */\ngws.knowledge.verticals.cultural.typedefs.controllers_LIGHTBOX;\n\n/** @record */\ngws.knowledge.verticals.cultural.controllers.LightboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.cultural.ListItemController} */\ngws.knowledge.verticals.cultural.typedefs.controllers_LIST_ITEM;\n\n/** @record */\nclass gwsknowledgeverticalsculturalcontrollersListItemControllerResponse_model {\n  constructor() {\n    /** @type {!gws.knowledge.verticals.cultural.typedefs.models_EVENTS_LIST} */ this.events;\n  }\n}\n\n\n\n/** @record */\nclass gwsknowledgeverticalsculturalcontrollersListItemControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.cultural.FilterInfo} */ this.filterInfo;\n  }\n}\n\n\n\n/** @record */\ngws.knowledge.verticals.cultural.controllers.ListItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsknowledgeverticalsculturalcontrollersListItemControllerResponse_model} */ this.model;\n    /** @type {!gwsknowledgeverticalsculturalcontrollersListItemControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.cultural.TimeBarController} */\ngws.knowledge.verticals.cultural.typedefs.controllers_TIME_BAR;\n\n/** @record */\ngws.knowledge.verticals.cultural.controllers.TimeBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.knowledge.verticals.cultural.controllers.ListItemControllerResponse} */ this.superResponse;\n    /** @type {!gws.knowledge.verticals.cultural.controllers.ListItemControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/cultural/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/education/attributes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.education.attributes.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.education.attributes.controllers.PracticeProblemsControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.education.attributes.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.education.attributes.PracticeProblemsController\x3e} */\ngws.knowledge.verticals.education.attributes.controllers.PRACTICE_PROBLEMS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.education.attributes.PracticeProblemsController\x27));\n\n/** @typedef {!gws.knowledge.verticals.education.attributes.PracticeProblemsController} */\ngws.knowledge.verticals.education.attributes.typedefs.controllers_PRACTICE_PROBLEMS;\n\n/** @record */\ngws.knowledge.verticals.education.attributes.controllers.PracticeProblemsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/education/attributes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/education/formula/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.education.formula.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.education.formula.controllers.EquationControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.education.formula.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.education.formula.EquationController\x3e} */\ngws.knowledge.verticals.education.formula.controllers.EQUATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.education.formula.EquationController\x27));\n\n/** @typedef {!gws.knowledge.verticals.education.formula.EquationController} */\ngws.knowledge.verticals.education.formula.typedefs.controllers_EQUATION;\n\n/** @record */\ngws.knowledge.verticals.education.formula.controllers.EquationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/education/formula/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/everydaycivics/quotes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.verticals.everydaycivics.quotes.controllers\x27);\ngoog.provide(\x27gws.knowledge.verticals.everydaycivics.quotes.controllers.CarouselQuoteControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.everydaycivics.quotes.controllers.QuotesControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.verticals.everydaycivics.quotes.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.everydaycivics.quotes.CarouselQuoteController\x3e} */\ngws.knowledge.verticals.everydaycivics.quotes.controllers.CAROUSEL_QUOTE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.everydaycivics.quotes.CarouselQuoteController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.knowledge.verticals.everydaycivics.quotes.controllers.CAROUSEL_QUOTE,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.verticals.everydaycivics.quotes.QuotesController\x3e} */\ngws.knowledge.verticals.everydaycivics.quotes.controllers.QUOTES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.verticals.everydaycivics.quotes.QuotesController\x27));\n\n/** @typedef {!gws.knowledge.verticals.everydaycivics.quotes.CarouselQuoteController} */\ngws.knowledge.verticals.everydaycivics.quotes.typedefs.controllers_CAROUSEL_QUOTE;\n\n/** @record */\ngws.knowledge.verticals.everydaycivics.quotes.controllers.CarouselQuoteControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.knowledge.verticals.everydaycivics.quotes.QuotesController} */\ngws.knowledge.verticals.everydaycivics.quotes.typedefs.controllers_QUOTES;\n\n/** @record */\ngws.knowledge.verticals.everydaycivics.quotes.controllers.QuotesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/everydaycivics/quotes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/finance/wholepage/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.verticals.finance.wholepage.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioDownloadControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioEditControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioListControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.finance.wholepage.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioDownloadController\x3e} */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PORTFOLIO_DOWNLOAD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.finance.wholepage.PortfolioDownloadController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioListController\x3e} */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PORTFOLIO_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.finance.wholepage.PortfolioListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioEditController\x3e} */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PORTFOLIO_EDIT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.finance.wholepage.PortfolioEditController\x27));\n\n/** @typedef {!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioDownloadController} */\ngws.plugins.knowledge.verticals.finance.wholepage.typedefs.controllers_PORTFOLIO_DOWNLOAD;\n\n/** @record */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioDownloadControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioEditController} */\ngws.plugins.knowledge.verticals.finance.wholepage.typedefs.controllers_PORTFOLIO_EDIT;\n\n/** @record */\nclass gwspluginsknowledgeverticalsfinancewholepagecontrollersPortfolioEditControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.checkboxControllers;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioEditControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsfinancewholepagecontrollersPortfolioEditControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.finance.wholepage.PortfolioListController} */\ngws.plugins.knowledge.verticals.finance.wholepage.typedefs.controllers_PORTFOLIO_LIST;\n\n/** @record */\nclass gwspluginsknowledgeverticalsfinancewholepagecontrollersPortfolioListControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.checkboxControllers;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.finance.wholepage.controllers.PortfolioListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsfinancewholepagecontrollersPortfolioListControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/finance/wholepage/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/preview/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.preview.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.preview.controllers.ProfilePreviewFullpageControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.preview.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.preview.ProfilePreviewFullpageController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.preview.controllers.PROFILE_PREVIEW_FULLPAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.preview.ProfilePreviewFullpageController\x27));\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.preview.ProfilePreviewFullpageController} */\ngws.plugins.knowledge.verticals.people.janata.preview.typedefs.controllers_PROFILE_PREVIEW_FULLPAGE;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.preview.controllers.ProfilePreviewFullpageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/preview/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/profile_editor/input/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.controllers.EntityValueControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.models\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.models.EntityValueModelResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.people.janata.NamedEntity\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueModel\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.models.ENTITY_VALUE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.controllers.ENTITY_VALUE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueController\x27),\n    [gws.plugins.knowledge.verticals.people.janata.profileEditor.input.models.ENTITY_VALUE]);\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.typedefs.controllers_ENTITY_VALUE;\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditorinputcontrollersEntityValueControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.input.typedefs.models_ENTITY_VALUE} */ this.entityValue;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.controllers.EntityValueControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditorinputcontrollersEntityValueControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.input.EntityValueModel} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.typedefs.models_ENTITY_VALUE;\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditorinputmodelsEntityValueModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.people.janata.NamedEntity} */ this.entity;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.input.models.EntityValueModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditorinputmodelsEntityValueModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/profile_editor/input/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/profile_editor/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.LocationInputControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ProfileEditorControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ProfileEditorFullpageControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.SingleValueEntityInputControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.models\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.models.ProfileEditorModelResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs\x27);\n\ngoog.require(\x27frameworks.client.data.interfaces\x27);\ngoog.require(\x27frameworks.client.data.typedefs\x27);\ngoog.require(\x27gws.plugins.knowledge.verticals.people.janata.preview.controllers\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.people.janata.ProfileEditor\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorFullpageController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.PROFILE_EDITOR_FULLPAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorFullpageController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputBaseController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ENTITY_INPUT_BASE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputBaseController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorModel\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.models.PROFILE_EDITOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.LocationInputController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.LOCATION_INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.LocationInputController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ENTITY_INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputController\x27),\n    [gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ENTITY_INPUT_BASE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.PROFILE_EDITOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorController\x27),\n    [gws.plugins.knowledge.verticals.people.janata.preview.controllers.PROFILE_PREVIEW_FULLPAGE, gws.plugins.knowledge.verticals.people.janata.profileEditor.models.PROFILE_EDITOR, frameworks.client.data.interfaces.GENERIC_DATA]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.people.janata.profileEditor.SingleValueEntityInputController\x3e} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.SINGLE_VALUE_ENTITY_INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.people.janata.profileEditor.SingleValueEntityInputController\x27),\n    [gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ENTITY_INPUT_BASE]);\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputBaseController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_ENTITY_INPUT_BASE;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.EntityInputController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_ENTITY_INPUT;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.LocationInputController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_LOCATION_INPUT;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.LocationInputControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_PROFILE_EDITOR;\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.occupationInput;\n    /** @type {?} */ this.workplaceInput;\n    /** @type {?} */ this.educationInput;\n    /** @type {?} */ this.hometownInput;\n    /** @type {?} */ this.previewFullpage;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.models_PROFILE_EDITOR} */ this.profileEditor;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_service {\n  constructor() {\n    /** @type {!frameworks.client.data.typedefs.interfaces_GENERIC_DATA} */ this.genericData;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ProfileEditorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_controller} */ this.controller;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditorcontrollersProfileEditorControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorFullpageController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_PROFILE_EDITOR_FULLPAGE;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.ProfileEditorFullpageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.ProfileEditorModel} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.models_PROFILE_EDITOR;\n\n/** @record */\nclass gwspluginsknowledgeverticalspeoplejanataprofileEditormodelsProfileEditorModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.people.janata.ProfileEditor} */ this.profileEditor;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.models.ProfileEditorModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalspeoplejanataprofileEditormodelsProfileEditorModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.people.janata.profileEditor.SingleValueEntityInputController} */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.typedefs.controllers_SINGLE_VALUE_ENTITY_INPUT;\n\n/** @record */\ngws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.SingleValueEntityInputControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.knowledge.verticals.people.janata.profileEditor.controllers.EntityInputBaseControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/people/janata/layout/profile_editor/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/showtimes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.CheckboxFilterControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.ClearFilterButtonControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.EntityPreviewShowtimesTabControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.FilterContainerControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.LoadMoreButtonControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.MultiRadioButtonFilterControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.RadioButtonFilterControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.RichShowtimesControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.RichShowtimesTabControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.SelectDateButtonControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.TheaterCardControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.controllers.UpdatableContainerControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.models\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.models.RichShowtimesUserContextModelResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.services\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.services.HistoryStateServiceResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.services.LoggingServiceResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.verticals.showtimes.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContext\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.FilterController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.FilterController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.EntityPreviewShowtimesTabController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.ENTITY_PREVIEW_SHOWTIMES_TAB \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.EntityPreviewShowtimesTabController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.LoggingService\x3e} */\ngws.plugins.knowledge.verticals.showtimes.services.LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.LoggingService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.LoadMoreButtonController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.LOAD_MORE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.LoadMoreButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContextModel\x3e} */\ngws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContextModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.UpdatableContainerController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.UPDATABLE_CONTAINER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.UpdatableContainerController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT, gws.plugins.knowledge.verticals.showtimes.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.CheckboxFilterController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.CHECKBOX_FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.CheckboxFilterController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.controllers.FILTER]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.MultiRadioButtonFilterController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.MULTI_RADIO_BUTTON_FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.MultiRadioButtonFilterController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.controllers.FILTER]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.SelectDateButtonController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.SELECT_DATE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.SelectDateButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.HistoryStateService\x3e} */\ngws.plugins.knowledge.verticals.showtimes.services.HISTORY_STATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.HistoryStateService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.RichShowtimesTabController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.RICH_SHOWTIMES_TAB \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.RichShowtimesTabController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT, gws.plugins.knowledge.verticals.showtimes.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.ClearFilterButtonController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.CLEAR_FILTER_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.ClearFilterButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.RadioButtonFilterController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.RADIO_BUTTON_FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.RadioButtonFilterController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.controllers.FILTER]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.RichShowtimesController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.RICH_SHOWTIMES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.RichShowtimesController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.controllers.RICH_SHOWTIMES_TAB, gws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT, gws.plugins.knowledge.verticals.showtimes.services.HISTORY_STATE, gws.plugins.knowledge.verticals.showtimes.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.FilterContainerController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.FILTER_CONTAINER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.FilterContainerController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT, gws.plugins.knowledge.verticals.showtimes.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.verticals.showtimes.TheaterCardController\x3e} */\ngws.plugins.knowledge.verticals.showtimes.controllers.THEATER_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.verticals.showtimes.TheaterCardController\x27),\n    [gws.plugins.knowledge.verticals.showtimes.models.RICH_SHOWTIMES_USER_CONTEXT, gws.plugins.knowledge.verticals.showtimes.services.LOGGING]);\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.CheckboxFilterController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_CHECKBOX_FILTER;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.CheckboxFilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.ClearFilterButtonController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_CLEAR_FILTER_BUTTON;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.ClearFilterButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.EntityPreviewShowtimesTabController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_ENTITY_PREVIEW_SHOWTIMES_TAB;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersEntityPreviewShowtimesTabControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContext} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.EntityPreviewShowtimesTabControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersEntityPreviewShowtimesTabControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.FilterContainerController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_FILTER_CONTAINER;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.filterControllers;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_service {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING} */ this.loggingService;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.FilterContainerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_controllers} */ this.controllers;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersFilterContainerControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.FilterController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_FILTER;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.HistoryStateService} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.services_HISTORY_STATE;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.services.HistoryStateServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.LoadMoreButtonController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_LOAD_MORE_BUTTON;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.LoadMoreButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.LoggingService} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.services.LoggingServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.MultiRadioButtonFilterController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_MULTI_RADIO_BUTTON_FILTER;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.MultiRadioButtonFilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.RadioButtonFilterController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_RADIO_BUTTON_FILTER;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.RadioButtonFilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.superResponse;\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.controllers.FilterControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.RichShowtimesController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_RICH_SHOWTIMES;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.moviesTab;\n    /** @type {?} */ this.theatersTab;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_service {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_HISTORY_STATE} */ this.historyStateService;\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING} */ this.loggingService;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.RichShowtimesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_controller} */ this.controller;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.RichShowtimesTabController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_RICH_SHOWTIMES_TAB;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesTabControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesTabControllerResponse_service {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING} */ this.loggingService;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.RichShowtimesTabControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesTabControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersRichShowtimesTabControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContextModel} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimesmodelsRichShowtimesUserContextModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.showtimes.RichShowtimesUserContext} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.models.RichShowtimesUserContextModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimesmodelsRichShowtimesUserContextModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.SelectDateButtonController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_SELECT_DATE_BUTTON;\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.SelectDateButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.TheaterCardController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_THEATER_CARD;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersTheaterCardControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersTheaterCardControllerResponse_service {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING} */ this.loggingService;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.TheaterCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersTheaterCardControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersTheaterCardControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.knowledge.verticals.showtimes.UpdatableContainerController} */\ngws.plugins.knowledge.verticals.showtimes.typedefs.controllers_UPDATABLE_CONTAINER;\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersUpdatableContainerControllerResponse_model {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.models_RICH_SHOWTIMES_USER_CONTEXT} */ this.userContext;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginsknowledgeverticalsshowtimescontrollersUpdatableContainerControllerResponse_service {\n  constructor() {\n    /** @type {!gws.plugins.knowledge.verticals.showtimes.typedefs.services_LOGGING} */ this.loggingService;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.knowledge.verticals.showtimes.controllers.UpdatableContainerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersUpdatableContainerControllerResponse_model} */ this.model;\n    /** @type {!gwspluginsknowledgeverticalsshowtimescontrollersUpdatableContainerControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/showtimes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/sos/translations/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.sos.translations.controllers\x27);\ngoog.provide(\x27search.sos.translations.controllers.TranslationsControllerResponse\x27);\ngoog.provide(\x27search.sos.translations.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.sos.translations.TranslationsController\x3e} */\nsearch.sos.translations.controllers.TRANSLATIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.sos.translations.TranslationsController\x27));\n\n/** @typedef {!search.sos.translations.TranslationsController} */\nsearch.sos.translations.typedefs.controllers_TRANSLATIONS;\n\n/** @record */\nsearch.sos.translations.controllers.TranslationsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/sos/translations/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/verticals/whenis/prayertimes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.whenis.prayertimes.controllers\x27);\ngoog.provide(\x27gws.whenis.prayertimes.controllers.PrayerTimesControllerResponse\x27);\ngoog.provide(\x27gws.whenis.prayertimes.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.knowledge.verticals.whenis.prayertimes.PrayerTimesOnebox\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.whenis.prayertimes.PrayerTimesController\x3e} */\ngws.whenis.prayertimes.controllers.PRAYER_TIMES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.whenis.prayertimes.PrayerTimesController\x27));\n\n/** @typedef {!gws.whenis.prayertimes.PrayerTimesController} */\ngws.whenis.prayertimes.typedefs.controllers_PRAYER_TIMES;\n\n/** @record */\nclass gwswhenisprayertimescontrollersPrayerTimesControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.knowledge.verticals.whenis.prayertimes.PrayerTimesOnebox} */ this.prayerTimesOnebox;\n  }\n}\n\n\n\n/** @record */\ngws.whenis.prayertimes.controllers.PrayerTimesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwswhenisprayertimescontrollersPrayerTimesControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/verticals/whenis/prayertimes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/webanswers/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.answerpanel.controllers\x27);\ngoog.provide(\x27gws.answerpanel.controllers.AnswerPanelExpandoControllerResponse\x27);\ngoog.provide(\x27gws.answerpanel.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.answerpanel.AnswerPanelExpandoController\x3e} */\ngws.answerpanel.controllers.ANSWER_PANEL_EXPANDO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.answerpanel.AnswerPanelExpandoController\x27));\n\n/** @typedef {!gws.answerpanel.AnswerPanelExpandoController} */\ngws.answerpanel.typedefs.controllers_ANSWER_PANEL_EXPANDO;\n\n/** @record */\ngws.answerpanel.controllers.AnswerPanelExpandoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/webanswers/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/wholepage/grid/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.knowledge.wholepage.grid.controllers\x27);\ngoog.provide(\x27gws.knowledge.wholepage.grid.controllers.GridViewContainerControllerResponse\x27);\ngoog.provide(\x27gws.knowledge.wholepage.grid.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.knowledge.wholepage.grid.GridViewContainerController\x3e} */\ngws.knowledge.wholepage.grid.controllers.GRID_VIEW_CONTAINER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.knowledge.wholepage.grid.GridViewContainerController\x27));\n\n/** @typedef {!gws.knowledge.wholepage.grid.GridViewContainerController} */\ngws.knowledge.wholepage.grid.typedefs.controllers_GRID_VIEW_CONTAINER;\n\n/** @record */\ngws.knowledge.wholepage.grid.controllers.GridViewContainerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/wholepage/grid/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/knowledge/wholepage/tab/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.knowledge.wholepage.tab.controllers\x27);\ngoog.provide(\x27gws.plugins.knowledge.wholepage.tab.controllers.TabsAwarenessTooltipControllerResponse\x27);\ngoog.provide(\x27gws.plugins.knowledge.wholepage.tab.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.knowledge.wholepage.tab.TabsAwarenessTooltipController\x3e} */\ngws.plugins.knowledge.wholepage.tab.controllers.TABS_AWARENESS_TOOLTIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.knowledge.wholepage.tab.TabsAwarenessTooltipController\x27));\n\n/** @typedef {!gws.plugins.knowledge.wholepage.tab.TabsAwarenessTooltipController} */\ngws.plugins.knowledge.wholepage.tab.typedefs.controllers_TABS_AWARENESS_TOOLTIP;\n\n/** @record */\ngws.plugins.knowledge.wholepage.tab.controllers.TabsAwarenessTooltipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/knowledge/wholepage/tab/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/liveresults/features/airquality/templates/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.liveResults.airquality.controllers\x27);\ngoog.provide(\x27gws.liveResults.airquality.controllers.InterestButtonControllerResponse\x27);\ngoog.provide(\x27gws.liveResults.airquality.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.live_result.features.airquality.visualprotos.NotificationOptInData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.liveResults.airquality.InterestButtonController\x3e} */\ngws.liveResults.airquality.controllers.INTEREST_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.liveResults.airquality.InterestButtonController\x27));\n\n/** @typedef {!gws.liveResults.airquality.InterestButtonController} */\ngws.liveResults.airquality.typedefs.controllers_INTEREST_BUTTON;\n\n/** @record */\nclass gwsliveResultsairqualitycontrollersInterestButtonControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.live_result.features.airquality.visualprotos.NotificationOptInData} */ this.notificationOptInData;\n  }\n}\n\n\n\n/** @record */\ngws.liveResults.airquality.controllers.InterestButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwsliveResultsairqualitycontrollersInterestButtonControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/liveresults/features/airquality/templates/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/liveresults/features/dictionary/bilingual/templates/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.liveResult.dictionary.bilingual.controllers\x27);\ngoog.provide(\x27search.liveResult.dictionary.bilingual.controllers.HeadwordControllerResponse\x27);\ngoog.provide(\x27search.liveResult.dictionary.bilingual.controllers.UsageExampleControllerResponse\x27);\ngoog.provide(\x27search.liveResult.dictionary.bilingual.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.dictionary.bilingual.UsageExampleController\x3e} */\nsearch.liveResult.dictionary.bilingual.controllers.USAGE_EXAMPLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.dictionary.bilingual.UsageExampleController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.dictionary.bilingual.HeadwordController\x3e} */\nsearch.liveResult.dictionary.bilingual.controllers.HEADWORD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.dictionary.bilingual.HeadwordController\x27));\n\n/** @typedef {!search.liveResult.dictionary.bilingual.HeadwordController} */\nsearch.liveResult.dictionary.bilingual.typedefs.controllers_HEADWORD;\n\n/** @record */\nsearch.liveResult.dictionary.bilingual.controllers.HeadwordControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.dictionary.bilingual.UsageExampleController} */\nsearch.liveResult.dictionary.bilingual.typedefs.controllers_USAGE_EXAMPLE;\n\n/** @record */\nsearch.liveResult.dictionary.bilingual.controllers.UsageExampleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/liveresults/features/dictionary/bilingual/templates/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/liveresults/features/dictionary/thesaurus/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.liveresults.features.dictionary.thesaurus.controllers\x27);\ngoog.provide(\x27gws.plugins.liveresults.features.dictionary.thesaurus.controllers.ChipListControllerResponse\x27);\ngoog.provide(\x27gws.plugins.liveresults.features.dictionary.thesaurus.controllers.ThesaurusControllerResponse\x27);\ngoog.provide(\x27gws.plugins.liveresults.features.dictionary.thesaurus.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.liveresults.features.dictionary.thesaurus.ThesaurusController\x3e} */\ngws.plugins.liveresults.features.dictionary.thesaurus.controllers.THESAURUS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.liveresults.features.dictionary.thesaurus.ThesaurusController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.liveresults.features.dictionary.thesaurus.ChipListController\x3e} */\ngws.plugins.liveresults.features.dictionary.thesaurus.controllers.CHIP_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.liveresults.features.dictionary.thesaurus.ChipListController\x27));\n\n/** @typedef {!gws.plugins.liveresults.features.dictionary.thesaurus.ChipListController} */\ngws.plugins.liveresults.features.dictionary.thesaurus.typedefs.controllers_CHIP_LIST;\n\n/** @record */\ngws.plugins.liveresults.features.dictionary.thesaurus.controllers.ChipListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.liveresults.features.dictionary.thesaurus.ThesaurusController} */\ngws.plugins.liveresults.features.dictionary.thesaurus.typedefs.controllers_THESAURUS;\n\n/** @record */\ngws.plugins.liveresults.features.dictionary.thesaurus.controllers.ThesaurusControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/liveresults/features/dictionary/thesaurus/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/liveresults/features/dictionary/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.liveResult.dictionary.controllers\x27);\ngoog.provide(\x27search.liveResult.dictionary.controllers.CorpusSelectorControllerResponse\x27);\ngoog.provide(\x27search.liveResult.dictionary.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.dictionary.CorpusSelectorController\x3e} */\nsearch.liveResult.dictionary.controllers.CORPUS_SELECTOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.dictionary.CorpusSelectorController\x27));\n\n/** @typedef {!search.liveResult.dictionary.CorpusSelectorController} */\nsearch.liveResult.dictionary.typedefs.controllers_CORPUS_SELECTOR;\n\n/** @record */\nsearch.liveResult.dictionary.controllers.CorpusSelectorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/liveresults/features/dictionary/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/liveresults/features/knowledgegame/templates/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.BubbleControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.HeaderControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.InterstitialControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.KnowledgeGameControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.MultiAnswerQuestionControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.ProgressIndicatorControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.controllers.SummaryControllerResponse\x27);\ngoog.provide(\x27search.liveResult.knowledgeGame.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.live_result.features.knowledgegame.visualprotos.KnowledgeGameCard\x27);\ngoog.forwardDeclare(\x27proto.live_result.features.knowledgegame.visualprotos.Screen\x27);\ngoog.forwardDeclare(\x27proto.live_result.features.knowledgegame.visualprotos.Summary\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.BubbleController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.BUBBLE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.BubbleController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.KnowledgeGameController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.KNOWLEDGE_GAME \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.KnowledgeGameController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.SummaryController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.SUMMARY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.SummaryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.ProgressIndicatorController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.PROGRESS_INDICATOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.ProgressIndicatorController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.MultiAnswerQuestionController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.MULTI_ANSWER_QUESTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.MultiAnswerQuestionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.HeaderController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.HeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.liveResult.knowledgeGame.InterstitialController\x3e} */\nsearch.liveResult.knowledgeGame.controllers.INTERSTITIAL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.liveResult.knowledgeGame.InterstitialController\x27));\n\n/** @typedef {!search.liveResult.knowledgeGame.BubbleController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_BUBBLE;\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.BubbleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.HeaderController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_HEADER;\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.HeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.InterstitialController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_INTERSTITIAL;\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.InterstitialControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.KnowledgeGameController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_KNOWLEDGE_GAME;\n\n/** @record */\nclass searchliveResultknowledgeGamecontrollersKnowledgeGameControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.live_result.features.knowledgegame.visualprotos.KnowledgeGameCard} */ this.card;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.KnowledgeGameControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchliveResultknowledgeGamecontrollersKnowledgeGameControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.MultiAnswerQuestionController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_MULTI_ANSWER_QUESTION;\n\n/** @record */\nclass searchliveResultknowledgeGamecontrollersMultiAnswerQuestionControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.live_result.features.knowledgegame.visualprotos.Screen} */ this.screen;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.MultiAnswerQuestionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchliveResultknowledgeGamecontrollersMultiAnswerQuestionControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.ProgressIndicatorController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_PROGRESS_INDICATOR;\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.ProgressIndicatorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.liveResult.knowledgeGame.SummaryController} */\nsearch.liveResult.knowledgeGame.typedefs.controllers_SUMMARY;\n\n/** @record */\nclass searchliveResultknowledgeGamecontrollersSummaryControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.live_result.features.knowledgegame.visualprotos.Summary} */ this.summary;\n  }\n}\n\n\n\n/** @record */\nsearch.liveResult.knowledgeGame.controllers.SummaryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchliveResultknowledgeGamecontrollersSummaryControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/liveresults/features/knowledgegame/templates/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/actions/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.local.actions.jslayout.controllers\x27);\ngoog.provide(\x27gws.plugins.local.actions.jslayout.controllers.DfThirdPartyRedirectionControllerResponse\x27);\ngoog.provide(\x27gws.plugins.local.actions.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.local.actions.jslayout.DfThirdPartyRedirectionController\x3e} */\ngws.plugins.local.actions.jslayout.controllers.DF_THIRD_PARTY_REDIRECTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.local.actions.jslayout.DfThirdPartyRedirectionController\x27));\n\n/** @typedef {!gws.plugins.local.actions.jslayout.DfThirdPartyRedirectionController} */\ngws.plugins.local.actions.jslayout.typedefs.controllers_DF_THIRD_PARTY_REDIRECTION;\n\n/** @record */\ngws.plugins.local.actions.jslayout.controllers.DfThirdPartyRedirectionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/actions/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/businessdirectory/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.businessdirectory.controllers\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.AsyncListingsLoaderControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.AsyncStaticListingsLoaderControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.DirectoryControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.OverviewControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.PivotPanelControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.controllers.SearchboxControllerResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.services\x27);\ngoog.provide(\x27gws.local.businessdirectory.services.BusinessDirectoryServiceResponse\x27);\ngoog.provide(\x27gws.local.businessdirectory.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.local.businessdirectory.BusinessDirectoryProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.BusinessDirectoryService\x3e} */\ngws.local.businessdirectory.services.BUSINESS_DIRECTORY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.BusinessDirectoryService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.AsyncStaticListingsLoaderController\x3e} */\ngws.local.businessdirectory.controllers.ASYNC_STATIC_LISTINGS_LOADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.AsyncStaticListingsLoaderController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.businessdirectory.controllers.ASYNC_STATIC_LISTINGS_LOADER,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.AsyncListingsLoaderController\x3e} */\ngws.local.businessdirectory.controllers.ASYNC_LISTINGS_LOADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.AsyncListingsLoaderController\x27),\n    [gws.local.businessdirectory.services.BUSINESS_DIRECTORY]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.SearchboxController\x3e} */\ngws.local.businessdirectory.controllers.SEARCHBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.SearchboxController\x27),\n    [gws.local.businessdirectory.services.BUSINESS_DIRECTORY]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.PivotPanelController\x3e} */\ngws.local.businessdirectory.controllers.PIVOT_PANEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.PivotPanelController\x27),\n    [gws.local.businessdirectory.services.BUSINESS_DIRECTORY]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.DirectoryController\x3e} */\ngws.local.businessdirectory.controllers.DIRECTORY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.DirectoryController\x27),\n    [gws.local.businessdirectory.controllers.PIVOT_PANEL, gws.local.businessdirectory.controllers.ASYNC_LISTINGS_LOADER, gws.local.businessdirectory.controllers.SEARCHBOX, gws.local.businessdirectory.services.BUSINESS_DIRECTORY]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.businessdirectory.controllers.DIRECTORY,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.businessdirectory.OverviewController\x3e} */\ngws.local.businessdirectory.controllers.OVERVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.businessdirectory.OverviewController\x27),\n    [gws.local.businessdirectory.controllers.PIVOT_PANEL, gws.local.businessdirectory.controllers.SEARCHBOX, gws.local.businessdirectory.services.BUSINESS_DIRECTORY]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.businessdirectory.controllers.OVERVIEW,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!gws.local.businessdirectory.AsyncListingsLoaderController} */\ngws.local.businessdirectory.typedefs.controllers_ASYNC_LISTINGS_LOADER;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersAsyncListingsLoaderControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.businessdirectory.BusinessDirectoryProto} */ this.businessDirectoryProto;\n  }\n}\n\n\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersAsyncListingsLoaderControllerResponse_service {\n  constructor() {\n    /** @type {!gws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY} */ this.businessDirectoryService;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.AsyncListingsLoaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersAsyncListingsLoaderControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwslocalbusinessdirectorycontrollersAsyncListingsLoaderControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.AsyncStaticListingsLoaderController} */\ngws.local.businessdirectory.typedefs.controllers_ASYNC_STATIC_LISTINGS_LOADER;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersAsyncStaticListingsLoaderControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.businessdirectory.BusinessDirectoryProto} */ this.businessDirectoryProto;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.AsyncStaticListingsLoaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersAsyncStaticListingsLoaderControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.BusinessDirectoryService} */\ngws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY;\n\n/** @record */\ngws.local.businessdirectory.services.BusinessDirectoryServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.DirectoryController} */\ngws.local.businessdirectory.typedefs.controllers_DIRECTORY;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersDirectoryControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.asyncListingsLoaderController;\n    /** @type {?} */ this.pivotPanelController;\n    /** @type {?} */ this.searchboxController;\n  }\n}\n\n\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersDirectoryControllerResponse_service {\n  constructor() {\n    /** @type {!gws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY} */ this.businessDirectoryService;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.DirectoryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersDirectoryControllerResponse_controller} */ this.controller;\n    /** @type {!gwslocalbusinessdirectorycontrollersDirectoryControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.OverviewController} */\ngws.local.businessdirectory.typedefs.controllers_OVERVIEW;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersOverviewControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.pivotPanelController;\n    /** @type {?} */ this.searchboxController;\n  }\n}\n\n\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersOverviewControllerResponse_service {\n  constructor() {\n    /** @type {!gws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY} */ this.businessDirectoryService;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.OverviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersOverviewControllerResponse_controller} */ this.controller;\n    /** @type {!gwslocalbusinessdirectorycontrollersOverviewControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.PivotPanelController} */\ngws.local.businessdirectory.typedefs.controllers_PIVOT_PANEL;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersPivotPanelControllerResponse_service {\n  constructor() {\n    /** @type {!gws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY} */ this.businessDirectoryService;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.PivotPanelControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersPivotPanelControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.businessdirectory.SearchboxController} */\ngws.local.businessdirectory.typedefs.controllers_SEARCHBOX;\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersSearchboxControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.businessdirectory.BusinessDirectoryProto} */ this.businessDirectoryProto;\n  }\n}\n\n\n\n/** @record */\nclass gwslocalbusinessdirectorycontrollersSearchboxControllerResponse_service {\n  constructor() {\n    /** @type {!gws.local.businessdirectory.typedefs.services_BUSINESS_DIRECTORY} */ this.businessDirectoryService;\n  }\n}\n\n\n\n/** @record */\ngws.local.businessdirectory.controllers.SearchboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalbusinessdirectorycontrollersSearchboxControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwslocalbusinessdirectorycontrollersSearchboxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/businessdirectory/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/busyness/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.local.busyness.controllers\x27);\ngoog.provide(\x27search.local.busyness.controllers.WaitTimesControllerResponse\x27);\ngoog.provide(\x27search.local.busyness.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.busyness.WaitTimesController\x3e} */\nsearch.local.busyness.controllers.WAIT_TIMES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.busyness.WaitTimesController\x27));\n\n/** @typedef {!search.local.busyness.WaitTimesController} */\nsearch.local.busyness.typedefs.controllers_WAIT_TIMES;\n\n/** @record */\nsearch.local.busyness.controllers.WaitTimesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/busyness/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/actions/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.controllers\x27);\ngoog.provide(\x27gws.local.categorical.controllers.PlaceActionButtonControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.PlaceActionButtonController\x3e} */\ngws.local.categorical.controllers.PLACE_ACTION_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.PlaceActionButtonController\x27));\n\n/** @typedef {!gws.local.categorical.PlaceActionButtonController} */\ngws.local.categorical.typedefs.controllers_PLACE_ACTION_BUTTON;\n\n/** @record */\ngws.local.categorical.controllers.PlaceActionButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/actions/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/header/hotels/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.header.hotels.controllers\x27);\ngoog.provide(\x27gws.local.categorical.header.hotels.controllers.FixedHeaderControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.header.hotels.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.header.hotels.FixedHeaderController\x3e} */\ngws.local.categorical.header.hotels.controllers.FIXED_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.header.hotels.FixedHeaderController\x27));\n\n/** @typedef {!gws.local.categorical.header.hotels.FixedHeaderController} */\ngws.local.categorical.header.hotels.typedefs.controllers_FIXED_HEADER;\n\n/** @record */\ngws.local.categorical.header.hotels.controllers.FixedHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/header/hotels/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/header/showtimes/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.header.showtimes.controllers\x27);\ngoog.provide(\x27gws.local.categorical.header.showtimes.controllers.ShowtimesHeaderControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.header.showtimes.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.header.showtimes.ShowtimesHeaderController\x3e} */\ngws.local.categorical.header.showtimes.controllers.SHOWTIMES_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.header.showtimes.ShowtimesHeaderController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.categorical.header.showtimes.controllers.SHOWTIMES_HEADER,\n    xid(\x27gws.local.categorical.header.HeaderInterface\x27));\n\n/** @typedef {!gws.local.categorical.header.showtimes.ShowtimesHeaderController} */\ngws.local.categorical.header.showtimes.typedefs.controllers_SHOWTIMES_HEADER;\n\n/** @record */\ngws.local.categorical.header.showtimes.controllers.ShowtimesHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/header/showtimes/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/header/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.header.controllers\x27);\ngoog.provide(\x27gws.local.categorical.header.controllers.HeaderDispatcherResponse\x27);\ngoog.provide(\x27gws.local.categorical.header.controllers.QueryHeaderControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.header.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.header.HeaderDispatcher\x3e} */\ngws.local.categorical.header.controllers.HEADER_DISPATCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.header.HeaderDispatcher\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.categorical.header.controllers.HEADER_DISPATCHER,\n    xid(\x27gws.local.categorical.header.HeaderInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.header.QueryHeaderController\x3e} */\ngws.local.categorical.header.controllers.QUERY_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.header.QueryHeaderController\x27));\n\n/** @typedef {!gws.local.categorical.header.HeaderDispatcher} */\ngws.local.categorical.header.typedefs.controllers_HEADER_DISPATCHER;\n\n/** @record */\ngws.local.categorical.header.controllers.HeaderDispatcherResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.categorical.header.QueryHeaderController} */\ngws.local.categorical.header.typedefs.controllers_QUERY_HEADER;\n\n/** @record */\ngws.local.categorical.header.controllers.QueryHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/header/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/hotels/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.hotels.controllers\x27);\ngoog.provide(\x27gws.local.categorical.hotels.controllers.FormHeaderControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.hotels.controllers.GenericDropdownFilterControllerResponse\x27);\ngoog.provide(\x27gws.local.categorical.hotels.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.hotels.GenericDropdownFilterController\x3e} */\ngws.local.categorical.hotels.controllers.GENERIC_DROPDOWN_FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.hotels.GenericDropdownFilterController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.hotels.FormHeaderController\x3e} */\ngws.local.categorical.hotels.controllers.FORM_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.hotels.FormHeaderController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.categorical.hotels.controllers.FORM_HEADER,\n    xid(\x27gws.local.categorical.header.HeaderInterface\x27));\n\n/** @typedef {!gws.local.categorical.hotels.FormHeaderController} */\ngws.local.categorical.hotels.typedefs.controllers_FORM_HEADER;\n\n/** @record */\ngws.local.categorical.hotels.controllers.FormHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.categorical.hotels.GenericDropdownFilterController} */\ngws.local.categorical.hotels.typedefs.controllers_GENERIC_DROPDOWN_FILTER;\n\n/** @record */\ngws.local.categorical.hotels.controllers.GenericDropdownFilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/hotels/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/categorical/client/image/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.categorical.image.controllers\x27);\ngoog.provide(\x27gws.local.categorical.image.controllers.TileThumbnailResponse\x27);\ngoog.provide(\x27gws.local.categorical.image.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.categorical.image.TileThumbnail\x3e} */\ngws.local.categorical.image.controllers.TILE_THUMBNAIL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.categorical.image.TileThumbnail\x27));\n\n/** @typedef {!gws.local.categorical.image.TileThumbnail} */\ngws.local.categorical.image.typedefs.controllers_TILE_THUMBNAIL;\n\n/** @record */\ngws.local.categorical.image.controllers.TileThumbnailResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/categorical/client/image/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/alternativehotels/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.hotels.alternativehotels.controllers\x27);\ngoog.provide(\x27gws.local.hotels.alternativehotels.controllers.AlternativeHotelsControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.alternativehotels.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.alternativehotels.AlternativeHotelsController\x3e} */\ngws.local.hotels.alternativehotels.controllers.ALTERNATIVE_HOTELS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.alternativehotels.AlternativeHotelsController\x27));\n\n/** @typedef {!gws.local.hotels.alternativehotels.AlternativeHotelsController} */\ngws.local.hotels.alternativehotels.typedefs.controllers_ALTERNATIVE_HOTELS;\n\n/** @record */\ngws.local.hotels.alternativehotels.controllers.AlternativeHotelsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/alternativehotels/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/jslayout/hotel_action/mobile/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.hotels.action.mobile.controllers\x27);\ngoog.provide(\x27gws.local.hotels.action.mobile.controllers.HotelActionMobileControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.action.mobile.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.action.mobile.HotelActionMobileController\x3e} */\ngws.local.hotels.action.mobile.controllers.HOTEL_ACTION_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.action.mobile.HotelActionMobileController\x27));\n\n/** @typedef {!gws.local.hotels.action.mobile.HotelActionMobileController} */\ngws.local.hotels.action.mobile.typedefs.controllers_HOTEL_ACTION_MOBILE;\n\n/** @record */\ngws.local.hotels.action.mobile.controllers.HotelActionMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/jslayout/hotel_action/mobile/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/jslayout/hotel_action/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.hotels.controllers\x27);\ngoog.provide(\x27gws.local.hotels.controllers.HotelActionControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.controllers.HotelActionUpdateControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.HotelActionUpdateController\x3e} */\ngws.local.hotels.controllers.HOTEL_ACTION_UPDATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.HotelActionUpdateController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.HotelActionController\x3e} */\ngws.local.hotels.controllers.HOTEL_ACTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.HotelActionController\x27));\n\n/** @typedef {!gws.local.hotels.HotelActionController} */\ngws.local.hotels.typedefs.controllers_HOTEL_ACTION;\n\n/** @record */\ngws.local.hotels.controllers.HotelActionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.hotels.HotelActionUpdateController} */\ngws.local.hotels.typedefs.controllers_HOTEL_ACTION_UPDATE;\n\n/** @record */\ngws.local.hotels.controllers.HotelActionUpdateControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/jslayout/hotel_action/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/jslayout/hoteltip/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.localuniversal.hotels.controllers\x27);\ngoog.provide(\x27gws.localuniversal.hotels.controllers.DesktopHotelRateFilterTipControllerResponse\x27);\ngoog.provide(\x27gws.localuniversal.hotels.controllers.MobileHotelRateFilterTipControllerResponse\x27);\ngoog.provide(\x27gws.localuniversal.hotels.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.localuniversal.hotels.MobileHotelRateFilterTipController\x3e} */\ngws.localuniversal.hotels.controllers.MOBILE_HOTEL_RATE_FILTER_TIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.localuniversal.hotels.MobileHotelRateFilterTipController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.localuniversal.hotels.DesktopHotelRateFilterTipController\x3e} */\ngws.localuniversal.hotels.controllers.DESKTOP_HOTEL_RATE_FILTER_TIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.localuniversal.hotels.DesktopHotelRateFilterTipController\x27));\n\n/** @typedef {!gws.localuniversal.hotels.DesktopHotelRateFilterTipController} */\ngws.localuniversal.hotels.typedefs.controllers_DESKTOP_HOTEL_RATE_FILTER_TIP;\n\n/** @record */\ngws.localuniversal.hotels.controllers.DesktopHotelRateFilterTipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.localuniversal.hotels.MobileHotelRateFilterTipController} */\ngws.localuniversal.hotels.typedefs.controllers_MOBILE_HOTEL_RATE_FILTER_TIP;\n\n/** @record */\ngws.localuniversal.hotels.controllers.MobileHotelRateFilterTipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/jslayout/hoteltip/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/jslayout/occupancydropdown/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.hotels.occupancydropdown.controllers\x27);\ngoog.provide(\x27gws.local.hotels.occupancydropdown.controllers.OccupancyDropdownControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.occupancydropdown.controllers.OccupancyDropdownPresenterControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.occupancydropdown.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.occupancydropdown.OccupancyDropdownController\x3e} */\ngws.local.hotels.occupancydropdown.controllers.OCCUPANCY_DROPDOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.occupancydropdown.OccupancyDropdownController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.occupancydropdown.OccupancyDropdownPresenterController\x3e} */\ngws.local.hotels.occupancydropdown.controllers.OCCUPANCY_DROPDOWN_PRESENTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.occupancydropdown.OccupancyDropdownPresenterController\x27));\n\n/** @typedef {!gws.local.hotels.occupancydropdown.OccupancyDropdownController} */\ngws.local.hotels.occupancydropdown.typedefs.controllers_OCCUPANCY_DROPDOWN;\n\n/** @record */\ngws.local.hotels.occupancydropdown.controllers.OccupancyDropdownControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.hotels.occupancydropdown.OccupancyDropdownPresenterController} */\ngws.local.hotels.occupancydropdown.typedefs.controllers_OCCUPANCY_DROPDOWN_PRESENTER;\n\n/** @record */\ngws.local.hotels.occupancydropdown.controllers.OccupancyDropdownPresenterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/jslayout/occupancydropdown/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/jslayout/sets/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.hotels.sets.listItem.controllers\x27);\ngoog.provide(\x27gws.local.hotels.sets.listItem.controllers.HotelSetsControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.sets.listItem.controllers.HotelSetsListItemControllerResponse\x27);\ngoog.provide(\x27gws.local.hotels.sets.listItem.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.hotels.HotelSetLocalizedData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.sets.listItem.HotelSetsController\x3e} */\ngws.local.hotels.sets.listItem.controllers.HOTEL_SETS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.sets.listItem.HotelSetsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.hotels.sets.listItem.HotelSetsListItemController\x3e} */\ngws.local.hotels.sets.listItem.controllers.HOTEL_SETS_LIST_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.hotels.sets.listItem.HotelSetsListItemController\x27));\n\n/** @typedef {!gws.local.hotels.sets.listItem.HotelSetsController} */\ngws.local.hotels.sets.listItem.typedefs.controllers_HOTEL_SETS;\n\n/** @record */\ngws.local.hotels.sets.listItem.controllers.HotelSetsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.hotels.sets.listItem.HotelSetsListItemController} */\ngws.local.hotels.sets.listItem.typedefs.controllers_HOTEL_SETS_LIST_ITEM;\n\n/** @record */\nclass gwslocalhotelssetslistItemcontrollersHotelSetsListItemControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.hotels.HotelSetLocalizedData} */ this.hotelSetLocalizedData;\n  }\n}\n\n\n\n/** @record */\ngws.local.hotels.sets.listItem.controllers.HotelSetsListItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalhotelssetslistItemcontrollersHotelSetsListItemControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/jslayout/sets/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/hotels/roombooking/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.local.hotels.roombooking.controllers\x27);\ngoog.provide(\x27search.local.hotels.roombooking.controllers.RoomCardControllerResponse\x27);\ngoog.provide(\x27search.local.hotels.roombooking.controllers.RoomsControllerResponse\x27);\ngoog.provide(\x27search.local.hotels.roombooking.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.hotels.roombooking.RoomCardController\x3e} */\nsearch.local.hotels.roombooking.controllers.ROOM_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.hotels.roombooking.RoomCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.hotels.roombooking.RoomsController\x3e} */\nsearch.local.hotels.roombooking.controllers.ROOMS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.hotels.roombooking.RoomsController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.local.hotels.roombooking.controllers.ROOMS,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!search.local.hotels.roombooking.RoomCardController} */\nsearch.local.hotels.roombooking.typedefs.controllers_ROOM_CARD;\n\n/** @record */\nsearch.local.hotels.roombooking.controllers.RoomCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.hotels.roombooking.RoomsController} */\nsearch.local.hotels.roombooking.typedefs.controllers_ROOMS;\n\n/** @record */\nsearch.local.hotels.roombooking.controllers.RoomsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/hotels/roombooking/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.jslayout.controllers\x27);\ngoog.provide(\x27gws.local.jslayout.controllers.AboveTheFoldThumbnailImageControllerResponse\x27);\ngoog.provide(\x27gws.local.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.jslayout.AboveTheFoldThumbnailImageController\x3e} */\ngws.local.jslayout.controllers.ABOVE_THE_FOLD_THUMBNAIL_IMAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.jslayout.AboveTheFoldThumbnailImageController\x27));\n\n/** @typedef {!gws.local.jslayout.AboveTheFoldThumbnailImageController} */\ngws.local.jslayout.typedefs.controllers_ABOVE_THE_FOLD_THUMBNAIL_IMAGE;\n\n/** @record */\ngws.local.jslayout.controllers.AboveTheFoldThumbnailImageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/social/analysis/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27social.analysis.services\x27);\ngoog.provide(\x27social.analysis.services.EventLoggingResponse\x27);\ngoog.provide(\x27social.analysis.services.LoggerConfigureServiceResponse\x27);\ngoog.provide(\x27social.analysis.services.LoggingServiceResponse\x27);\ngoog.provide(\x27social.analysis.services.ProcessorServiceResponse\x27);\ngoog.provide(\x27social.analysis.services.ValidatorResponse\x27);\ngoog.provide(\x27social.analysis.typedefs\x27);\n\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!social.analysis.Validator\x3e} */\nsocial.analysis.services.VALIDATOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27social.analysis.Validator\x27),\n    [fava.services.DOM]);\n\n\n/** @const {!fava.services.ServiceId\x3c!social.analysis.LoggerConfigureService\x3e} */\nsocial.analysis.services.LOGGER_CONFIGURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27social.analysis.LoggerConfigureService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!social.analysis.EventLogging\x3e} */\nsocial.analysis.services.EVENT_LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27social.analysis.EventLogging\x27),\n    [fava.services.DOM, social.analysis.services.LOGGER_CONFIGURE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!social.analysis.ProcessorService\x3e} */\nsocial.analysis.services.PROCESSOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27social.analysis.ProcessorService\x27),\n    [social.analysis.services.EVENT_LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!social.analysis.LoggingService\x3e} */\nsocial.analysis.services.LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27social.analysis.LoggingService\x27),\n    [fava.services.SOY_RENDERER, fava.services.DOM, social.analysis.services.EVENT_LOGGING, social.analysis.services.LOGGER_CONFIGURE]);\n\n/** @typedef {!social.analysis.LoggerConfigureService} */\nsocial.analysis.typedefs.services_LOGGER_CONFIGURE;\n\n/** @record */\nsocial.analysis.services.LoggerConfigureServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!social.analysis.EventLogging} */\nsocial.analysis.typedefs.services_EVENT_LOGGING;\n\n/** @record */\nclass socialanalysisservicesEventLoggingResponse_appContext {\n  constructor() {\n    /** @type {!fava.component.DomServices} */ this.dom;\n  }\n}\n\n\n\n/** @record */\nclass socialanalysisservicesEventLoggingResponse_service {\n  constructor() {\n    /** @type {!social.analysis.typedefs.services_LOGGER_CONFIGURE} */ this.configuration;\n  }\n}\n\n\n\n/** @record */\nsocial.analysis.services.EventLoggingResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!socialanalysisservicesEventLoggingResponse_appContext} */ this.appContext;\n    /** @type {!socialanalysisservicesEventLoggingResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!social.analysis.LoggingService} */\nsocial.analysis.typedefs.services_LOGGING;\n\n/** @record */\nclass socialanalysisservicesLoggingServiceResponse_appContext {\n  constructor() {\n    /** @type {!fava.dom.SoyRenderer} */ this.soy;\n    /** @type {!fava.component.DomServices} */ this.dom;\n  }\n}\n\n\n\n/** @record */\nclass socialanalysisservicesLoggingServiceResponse_service {\n  constructor() {\n    /** @type {!social.analysis.typedefs.services_EVENT_LOGGING} */ this.eventLoggerService;\n    /** @type {!social.analysis.typedefs.services_LOGGER_CONFIGURE} */ this.configuration;\n  }\n}\n\n\n\n/** @record */\nsocial.analysis.services.LoggingServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!socialanalysisservicesLoggingServiceResponse_appContext} */ this.appContext;\n    /** @type {!socialanalysisservicesLoggingServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!social.analysis.ProcessorService} */\nsocial.analysis.typedefs.services_PROCESSOR;\n\n/** @record */\nclass socialanalysisservicesProcessorServiceResponse_service {\n  constructor() {\n    /** @type {!social.analysis.typedefs.services_EVENT_LOGGING} */ this.eventLogging;\n  }\n}\n\n\n\n/** @record */\nsocial.analysis.services.ProcessorServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ProcessorBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ProcessorBaseResponse} */ this.super_response;\n    /** @type {!socialanalysisservicesProcessorServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!social.analysis.Validator} */\nsocial.analysis.typedefs.services_VALIDATOR;\n\n/** @record */\nclass socialanalysisservicesValidatorResponse_appContext {\n  constructor() {\n    /** @type {!fava.component.DomServices} */ this.dom;\n  }\n}\n\n\n\n/** @record */\nsocial.analysis.services.ValidatorResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!socialanalysisservicesValidatorResponse_appContext} */ this.appContext;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/social/analysis/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/search/boq/logging/web/soyveweb/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.searchloggingsoyve.services\x27);\ngoog.provide(\x27boq.searchloggingsoyve.services.SearchSoyLoggingServiceResponse\x27);\ngoog.provide(\x27boq.searchloggingsoyve.typedefs\x27);\n\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27social.analysis.services\x27);\ngoog.require(\x27social.analysis.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchloggingsoyve.SearchSoyLoggingService\x3e} */\nboq.searchloggingsoyve.services.SEARCH_SOY_LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchloggingsoyve.SearchSoyLoggingService\x27),\n    [fava.services.SOY_RENDERER, social.analysis.services.EVENT_LOGGING]);\n\n/** @typedef {!boq.searchloggingsoyve.SearchSoyLoggingService} */\nboq.searchloggingsoyve.typedefs.services_SEARCH_SOY_LOGGING;\n\n/** @record */\nclass boqsearchloggingsoyveservicesSearchSoyLoggingServiceResponse_appContext {\n  constructor() {\n    /** @type {!fava.dom.SoyRenderer} */ this.soy;\n  }\n}\n\n\n\n/** @record */\nclass boqsearchloggingsoyveservicesSearchSoyLoggingServiceResponse_service {\n  constructor() {\n    /** @type {!social.analysis.typedefs.services_EVENT_LOGGING} */ this.eventLogging;\n  }\n}\n\n\n\n/** @record */\nboq.searchloggingsoyve.services.SearchSoyLoggingServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!boqsearchloggingsoyveservicesSearchSoyLoggingServiceResponse_appContext} */ this.appContext;\n    /** @type {!boqsearchloggingsoyveservicesSearchSoyLoggingServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/search/boq/logging/web/soyveweb/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/justificationbar/jslayout/boq/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.local.justificationbar.jslayout.boq.controllers\x27);\ngoog.provide(\x27gws.plugins.local.justificationbar.jslayout.boq.controllers.JustificationsControllerResponse\x27);\ngoog.provide(\x27gws.plugins.local.justificationbar.jslayout.boq.typedefs\x27);\n\ngoog.require(\x27boq.searchloggingsoyve.services\x27);\ngoog.require(\x27boq.searchloggingsoyve.typedefs\x27);\ngoog.require(\x27wiz.component.services\x27);\ngoog.require(\x27wiz.component.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.geo.search.justifications.Justifications\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.local.justificationbar.jslayout.boq.JustificationsController\x3e} */\ngws.plugins.local.justificationbar.jslayout.boq.controllers.JUSTIFICATIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.local.justificationbar.jslayout.boq.JustificationsController\x27),\n    [wiz.component.services.COMPONENT, boq.searchloggingsoyve.services.SEARCH_SOY_LOGGING]);\n\n/** @typedef {!gws.plugins.local.justificationbar.jslayout.boq.JustificationsController} */\ngws.plugins.local.justificationbar.jslayout.boq.typedefs.controllers_JUSTIFICATIONS;\n\n/** @record */\nclass gwspluginslocaljustificationbarjslayoutboqcontrollersJustificationsControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.geo.search.justifications.Justifications} */ this.justifications;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginslocaljustificationbarjslayoutboqcontrollersJustificationsControllerResponse_service {\n  constructor() {\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n    /** @type {!boq.searchloggingsoyve.typedefs.services_SEARCH_SOY_LOGGING} */ this.searchSoyLogging;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.local.justificationbar.jslayout.boq.controllers.JustificationsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginslocaljustificationbarjslayoutboqcontrollersJustificationsControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwspluginslocaljustificationbarjslayoutboqcontrollersJustificationsControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/justificationbar/jslayout/boq/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/locationprompt/client/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.locationPrompt.controllers\x27);\ngoog.provide(\x27gws.locationPrompt.controllers.IosSafariPermissionPromoControllerResponse\x27);\ngoog.provide(\x27gws.locationPrompt.controllers.LocationPromptControllerResponse\x27);\ngoog.provide(\x27gws.locationPrompt.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.locationPrompt.IosSafariPermissionPromoController\x3e} */\ngws.locationPrompt.controllers.IOS_SAFARI_PERMISSION_PROMO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.locationPrompt.IosSafariPermissionPromoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.locationPrompt.LocationPromptController\x3e} */\ngws.locationPrompt.controllers.LOCATION_PROMPT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.locationPrompt.LocationPromptController\x27));\n\n/** @typedef {!gws.locationPrompt.IosSafariPermissionPromoController} */\ngws.locationPrompt.typedefs.controllers_IOS_SAFARI_PERMISSION_PROMO;\n\n/** @record */\ngws.locationPrompt.controllers.IosSafariPermissionPromoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.locationPrompt.LocationPromptController} */\ngws.locationPrompt.typedefs.controllers_LOCATION_PROMPT;\n\n/** @record */\ngws.locationPrompt.controllers.LocationPromptControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/locationprompt/client/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/media/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.media.controllers\x27);\ngoog.provide(\x27gws.local.media.controllers.PhotoCarouselControllerResponse\x27);\ngoog.provide(\x27gws.local.media.controllers.PhotoCarouselItemControllerResponse\x27);\ngoog.provide(\x27gws.local.media.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.media.PhotoCarouselController\x3e} */\ngws.local.media.controllers.PHOTO_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.media.PhotoCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.media.PhotoCarouselItemController\x3e} */\ngws.local.media.controllers.PHOTO_CAROUSEL_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.media.PhotoCarouselItemController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.media.controllers.PHOTO_CAROUSEL_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!gws.local.media.PhotoCarouselController} */\ngws.local.media.typedefs.controllers_PHOTO_CAROUSEL;\n\n/** @record */\ngws.local.media.controllers.PhotoCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.media.PhotoCarouselItemController} */\ngws.local.media.typedefs.controllers_PHOTO_CAROUSEL_ITEM;\n\n/** @record */\ngws.local.media.controllers.PhotoCarouselItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/media/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/menu/client/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.localmenulist.controllers\x27);\ngoog.provide(\x27gws.localmenulist.controllers.MenuTabBarControllerResponse\x27);\ngoog.provide(\x27gws.localmenulist.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.localmenulist.MenuTabBarController\x3e} */\ngws.localmenulist.controllers.MENU_TAB_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.localmenulist.MenuTabBarController\x27));\n\n/** @typedef {!gws.localmenulist.MenuTabBarController} */\ngws.localmenulist.typedefs.controllers_MENU_TAB_BAR;\n\n/** @record */\ngws.localmenulist.controllers.MenuTabBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/menu/client/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/merchant/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.merchant.controllers\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AddWebsiteTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AggregateNewReviewTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AggregateTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AsyncTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AwxIssueTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.AwxPromotionTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.CreatePostTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.EditInfoActionControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.EditInfoTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.ExceptionHoursTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.InsightsTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.ModerationVoteTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.NewPhotoAsyncTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.NewPhotoTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.NewQuestionTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.NewReviewTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.NotificationsLandingPageControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.PanelHeaderControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.PhotoUploadTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.TaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.TaskImmersiveControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.TodoListControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.controllers.UnsupportedTaskControllerResponse\x27);\ngoog.provide(\x27gws.local.merchant.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.local.merchant.TaskImmersive\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.PanelHeaderController\x3e} */\ngws.local.merchant.controllers.PANEL_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.PanelHeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.UnsupportedTaskController\x3e} */\ngws.local.merchant.controllers.UNSUPPORTED_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.UnsupportedTaskController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.NotificationsLandingPageController\x3e} */\ngws.local.merchant.controllers.NOTIFICATIONS_LANDING_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.NotificationsLandingPageController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.TodoListController\x3e} */\ngws.local.merchant.controllers.TODO_LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.TodoListController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.TaskController\x3e} */\ngws.local.merchant.controllers.TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.TaskController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.merchant.controllers.TASK,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AggregateTaskController\x3e} */\ngws.local.merchant.controllers.AGGREGATE_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AggregateTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AsyncTaskController\x3e} */\ngws.local.merchant.controllers.ASYNC_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AsyncTaskController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.CreatePostTaskController\x3e} */\ngws.local.merchant.controllers.CREATE_POST_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.CreatePostTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.EditInfoActionController\x3e} */\ngws.local.merchant.controllers.EDIT_INFO_ACTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.EditInfoActionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.TaskImmersiveController\x3e} */\ngws.local.merchant.controllers.TASK_IMMERSIVE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.TaskImmersiveController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.EditInfoTaskController\x3e} */\ngws.local.merchant.controllers.EDIT_INFO_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.EditInfoTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AwxPromotionTaskController\x3e} */\ngws.local.merchant.controllers.AWX_PROMOTION_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AwxPromotionTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.NewReviewTaskController\x3e} */\ngws.local.merchant.controllers.NEW_REVIEW_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.NewReviewTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.NewQuestionTaskController\x3e} */\ngws.local.merchant.controllers.NEW_QUESTION_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.NewQuestionTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.ModerationVoteTaskController\x3e} */\ngws.local.merchant.controllers.MODERATION_VOTE_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.ModerationVoteTaskController\x27),\n    [gws.local.merchant.controllers.EDIT_INFO_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.PhotoUploadTaskController\x3e} */\ngws.local.merchant.controllers.PHOTO_UPLOAD_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.PhotoUploadTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AddWebsiteTaskController\x3e} */\ngws.local.merchant.controllers.ADD_WEBSITE_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AddWebsiteTaskController\x27),\n    [gws.local.merchant.controllers.EDIT_INFO_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AwxIssueTaskController\x3e} */\ngws.local.merchant.controllers.AWX_ISSUE_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AwxIssueTaskController\x27),\n    [gws.local.merchant.controllers.TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.InsightsTaskController\x3e} */\ngws.local.merchant.controllers.INSIGHTS_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.InsightsTaskController\x27),\n    [gws.local.merchant.controllers.AGGREGATE_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.AggregateNewReviewTaskController\x3e} */\ngws.local.merchant.controllers.AGGREGATE_NEW_REVIEW_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.AggregateNewReviewTaskController\x27),\n    [gws.local.merchant.controllers.AGGREGATE_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.NewPhotoTaskController\x3e} */\ngws.local.merchant.controllers.NEW_PHOTO_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.NewPhotoTaskController\x27),\n    [gws.local.merchant.controllers.AGGREGATE_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.ExceptionHoursTaskController\x3e} */\ngws.local.merchant.controllers.EXCEPTION_HOURS_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.ExceptionHoursTaskController\x27),\n    [gws.local.merchant.controllers.EDIT_INFO_TASK]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchant.NewPhotoAsyncTaskController\x3e} */\ngws.local.merchant.controllers.NEW_PHOTO_ASYNC_TASK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchant.NewPhotoAsyncTaskController\x27),\n    [gws.local.merchant.controllers.ASYNC_TASK]);\n\n/** @typedef {!gws.local.merchant.AddWebsiteTaskController} */\ngws.local.merchant.typedefs.controllers_ADD_WEBSITE_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AddWebsiteTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.AggregateNewReviewTaskController} */\ngws.local.merchant.typedefs.controllers_AGGREGATE_NEW_REVIEW_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AggregateNewReviewTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.AggregateTaskController} */\ngws.local.merchant.typedefs.controllers_AGGREGATE_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AggregateTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.AsyncTaskController} */\ngws.local.merchant.typedefs.controllers_ASYNC_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AsyncTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.AwxIssueTaskController} */\ngws.local.merchant.typedefs.controllers_AWX_ISSUE_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AwxIssueTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.AwxPromotionTaskController} */\ngws.local.merchant.typedefs.controllers_AWX_PROMOTION_TASK;\n\n/** @record */\ngws.local.merchant.controllers.AwxPromotionTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.CreatePostTaskController} */\ngws.local.merchant.typedefs.controllers_CREATE_POST_TASK;\n\n/** @record */\ngws.local.merchant.controllers.CreatePostTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.EditInfoActionController} */\ngws.local.merchant.typedefs.controllers_EDIT_INFO_ACTION;\n\n/** @record */\ngws.local.merchant.controllers.EditInfoActionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.EditInfoTaskController} */\ngws.local.merchant.typedefs.controllers_EDIT_INFO_TASK;\n\n/** @record */\ngws.local.merchant.controllers.EditInfoTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.ExceptionHoursTaskController} */\ngws.local.merchant.typedefs.controllers_EXCEPTION_HOURS_TASK;\n\n/** @record */\ngws.local.merchant.controllers.ExceptionHoursTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.InsightsTaskController} */\ngws.local.merchant.typedefs.controllers_INSIGHTS_TASK;\n\n/** @record */\ngws.local.merchant.controllers.InsightsTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.ModerationVoteTaskController} */\ngws.local.merchant.typedefs.controllers_MODERATION_VOTE_TASK;\n\n/** @record */\ngws.local.merchant.controllers.ModerationVoteTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.EditInfoTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.NewPhotoAsyncTaskController} */\ngws.local.merchant.typedefs.controllers_NEW_PHOTO_ASYNC_TASK;\n\n/** @record */\ngws.local.merchant.controllers.NewPhotoAsyncTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.AsyncTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.AsyncTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.NewPhotoTaskController} */\ngws.local.merchant.typedefs.controllers_NEW_PHOTO_TASK;\n\n/** @record */\ngws.local.merchant.controllers.NewPhotoTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.AggregateTaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.NewQuestionTaskController} */\ngws.local.merchant.typedefs.controllers_NEW_QUESTION_TASK;\n\n/** @record */\ngws.local.merchant.controllers.NewQuestionTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.NewReviewTaskController} */\ngws.local.merchant.typedefs.controllers_NEW_REVIEW_TASK;\n\n/** @record */\ngws.local.merchant.controllers.NewReviewTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.NotificationsLandingPageController} */\ngws.local.merchant.typedefs.controllers_NOTIFICATIONS_LANDING_PAGE;\n\n/** @record */\ngws.local.merchant.controllers.NotificationsLandingPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.PanelHeaderController} */\ngws.local.merchant.typedefs.controllers_PANEL_HEADER;\n\n/** @record */\ngws.local.merchant.controllers.PanelHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.PhotoUploadTaskController} */\ngws.local.merchant.typedefs.controllers_PHOTO_UPLOAD_TASK;\n\n/** @record */\ngws.local.merchant.controllers.PhotoUploadTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.superResponse;\n    /** @type {!gws.local.merchant.controllers.TaskControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.TaskController} */\ngws.local.merchant.typedefs.controllers_TASK;\n\n/** @record */\ngws.local.merchant.controllers.TaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.TaskImmersiveController} */\ngws.local.merchant.typedefs.controllers_TASK_IMMERSIVE;\n\n/** @record */\nclass gwslocalmerchantcontrollersTaskImmersiveControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.merchant.TaskImmersive} */ this.data;\n  }\n}\n\n\n\n/** @record */\ngws.local.merchant.controllers.TaskImmersiveControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalmerchantcontrollersTaskImmersiveControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.TodoListController} */\ngws.local.merchant.typedefs.controllers_TODO_LIST;\n\n/** @record */\ngws.local.merchant.controllers.TodoListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.merchant.UnsupportedTaskController} */\ngws.local.merchant.typedefs.controllers_UNSUPPORTED_TASK;\n\n/** @record */\ngws.local.merchant.controllers.UnsupportedTaskControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/merchant/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/merchantdescription/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.merchantdescription.controllers\x27);\ngoog.provide(\x27gws.local.merchantdescription.controllers.MerchantDescriptionResponse\x27);\ngoog.provide(\x27gws.local.merchantdescription.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.merchantdescription.MerchantDescription\x3e} */\ngws.local.merchantdescription.controllers.MERCHANT_DESCRIPTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.merchantdescription.MerchantDescription\x27));\n\n/** @typedef {!gws.local.merchantdescription.MerchantDescription} */\ngws.local.merchantdescription.typedefs.controllers_MERCHANT_DESCRIPTION;\n\n/** @record */\ngws.local.merchantdescription.controllers.MerchantDescriptionResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/merchantdescription/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/page/localkp/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.page.localkp.controllers\x27);\ngoog.provide(\x27gws.local.page.localkp.controllers.LocalKpPageControllerResponse\x27);\ngoog.provide(\x27gws.local.page.localkp.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.page.localkp.LocalKpPageController\x3e} */\ngws.local.page.localkp.controllers.LOCAL_KP_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.page.localkp.LocalKpPageController\x27));\n\n/** @typedef {!gws.local.page.localkp.LocalKpPageController} */\ngws.local.page.localkp.typedefs.controllers_LOCAL_KP_PAGE;\n\n/** @record */\ngws.local.page.localkp.controllers.LocalKpPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/page/localkp/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/personalloyaltycard/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.personalloyaltycard.controllers\x27);\ngoog.provide(\x27gws.local.personalloyaltycard.controllers.OverflowMenuControllerResponse\x27);\ngoog.provide(\x27gws.local.personalloyaltycard.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.local.personalloyaltycard.OverflowMenuWizProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.personalloyaltycard.OverflowMenuController\x3e} */\ngws.local.personalloyaltycard.controllers.OVERFLOW_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.personalloyaltycard.OverflowMenuController\x27));\n\n/** @typedef {!gws.local.personalloyaltycard.OverflowMenuController} */\ngws.local.personalloyaltycard.typedefs.controllers_OVERFLOW_MENU;\n\n/** @record */\nclass gwslocalpersonalloyaltycardcontrollersOverflowMenuControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.local.personalloyaltycard.OverflowMenuWizProto} */ this.overflowMenuWizProto;\n  }\n}\n\n\n\n/** @record */\ngws.local.personalloyaltycard.controllers.OverflowMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalpersonalloyaltycardcontrollersOverflowMenuControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/personalloyaltycard/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/placeactions/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.placeactions.controllers\x27);\ngoog.provide(\x27gws.local.placeactions.controllers.PlaceActionLinkControllerResponse\x27);\ngoog.provide(\x27gws.local.placeactions.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.placeactions.PlaceActionLinkController\x3e} */\ngws.local.placeactions.controllers.PLACE_ACTION_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.placeactions.PlaceActionLinkController\x27));\n\n/** @typedef {!gws.local.placeactions.PlaceActionLinkController} */\ngws.local.placeactions.typedefs.controllers_PLACE_ACTION_LINK;\n\n/** @record */\ngws.local.placeactions.controllers.PlaceActionLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/placeactions/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/placeqa/jslayout/common/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.placeqa.common.controllers\x27);\ngoog.provide(\x27gws.local.placeqa.common.controllers.ErrorDialogControllerResponse\x27);\ngoog.provide(\x27gws.local.placeqa.common.controllers.ReportAbuseControllerResponse\x27);\ngoog.provide(\x27gws.local.placeqa.common.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.placeqa.common.ErrorDialogController\x3e} */\ngws.local.placeqa.common.controllers.ERROR_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.placeqa.common.ErrorDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.placeqa.common.ReportAbuseController\x3e} */\ngws.local.placeqa.common.controllers.REPORT_ABUSE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.placeqa.common.ReportAbuseController\x27));\n\n/** @typedef {!gws.local.placeqa.common.ErrorDialogController} */\ngws.local.placeqa.common.typedefs.controllers_ERROR_DIALOG;\n\n/** @record */\ngws.local.placeqa.common.controllers.ErrorDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.placeqa.common.ReportAbuseController} */\ngws.local.placeqa.common.typedefs.controllers_REPORT_ABUSE;\n\n/** @record */\ngws.local.placeqa.common.controllers.ReportAbuseControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/placeqa/jslayout/common/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/posts/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.posts.controllers\x27);\ngoog.provide(\x27gws.local.posts.controllers.AsyncPostsOverviewLoaderControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.CarouselMoreButtonControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.ContainerItemControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.DesktopHistoryEntryControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.DropdownMenuControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.HistoryScrollControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.InlineOfferDetailsControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.LightboxControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.NoPropagationLinkControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.OfferCtaControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.OverviewControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.PostSnippetControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.PostSummaryControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.PostTranslationControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.ReportAbuseControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.TermsAndConditionsControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.ThumbnailImageControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.VideoControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.controllers.VideoThumbnailControllerResponse\x27);\ngoog.provide(\x27gws.local.posts.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.NoPropagationLinkController\x3e} */\ngws.local.posts.controllers.NO_PROPAGATION_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.NoPropagationLinkController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.VideoController\x3e} */\ngws.local.posts.controllers.VIDEO \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.VideoController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.LightboxController\x3e} */\ngws.local.posts.controllers.LIGHTBOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.LightboxController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.DropdownMenuController\x3e} */\ngws.local.posts.controllers.DROPDOWN_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.DropdownMenuController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.DesktopHistoryEntryController\x3e} */\ngws.local.posts.controllers.DESKTOP_HISTORY_ENTRY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.DesktopHistoryEntryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.OverviewController\x3e} */\ngws.local.posts.controllers.OVERVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.OverviewController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.OfferCtaController\x3e} */\ngws.local.posts.controllers.OFFER_CTA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.OfferCtaController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.ThumbnailImageController\x3e} */\ngws.local.posts.controllers.THUMBNAIL_IMAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.ThumbnailImageController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.ContainerItemController\x3e} */\ngws.local.posts.controllers.CONTAINER_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.ContainerItemController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.posts.controllers.CONTAINER_ITEM,\n    xid(\x27gws.local.localposts.InfiniteScrollItem\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.posts.controllers.CONTAINER_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.PostSnippetController\x3e} */\ngws.local.posts.controllers.POST_SNIPPET \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.PostSnippetController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.VideoThumbnailController\x3e} */\ngws.local.posts.controllers.VIDEO_THUMBNAIL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.VideoThumbnailController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.PostSummaryController\x3e} */\ngws.local.posts.controllers.POST_SUMMARY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.PostSummaryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.ReportAbuseController\x3e} */\ngws.local.posts.controllers.REPORT_ABUSE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.ReportAbuseController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.PostTranslationController\x3e} */\ngws.local.posts.controllers.POST_TRANSLATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.PostTranslationController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.AsyncPostsOverviewLoaderController\x3e} */\ngws.local.posts.controllers.ASYNC_POSTS_OVERVIEW_LOADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.AsyncPostsOverviewLoaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.HistoryScrollController\x3e} */\ngws.local.posts.controllers.HISTORY_SCROLL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.HistoryScrollController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.posts.controllers.HISTORY_SCROLL,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.posts.controllers.HISTORY_SCROLL,\n    xid(\x27gws.suit.fullPageView.FullPageViewItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.TermsAndConditionsController\x3e} */\ngws.local.posts.controllers.TERMS_AND_CONDITIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.TermsAndConditionsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.CarouselMoreButtonController\x3e} */\ngws.local.posts.controllers.CAROUSEL_MORE_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.CarouselMoreButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.posts.InlineOfferDetailsController\x3e} */\ngws.local.posts.controllers.INLINE_OFFER_DETAILS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.posts.InlineOfferDetailsController\x27));\n\n/** @typedef {!gws.local.posts.AsyncPostsOverviewLoaderController} */\ngws.local.posts.typedefs.controllers_ASYNC_POSTS_OVERVIEW_LOADER;\n\n/** @record */\ngws.local.posts.controllers.AsyncPostsOverviewLoaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.CarouselMoreButtonController} */\ngws.local.posts.typedefs.controllers_CAROUSEL_MORE_BUTTON;\n\n/** @record */\ngws.local.posts.controllers.CarouselMoreButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.ContainerItemController} */\ngws.local.posts.typedefs.controllers_CONTAINER_ITEM;\n\n/** @record */\ngws.local.posts.controllers.ContainerItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.DesktopHistoryEntryController} */\ngws.local.posts.typedefs.controllers_DESKTOP_HISTORY_ENTRY;\n\n/** @record */\ngws.local.posts.controllers.DesktopHistoryEntryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.DropdownMenuController} */\ngws.local.posts.typedefs.controllers_DROPDOWN_MENU;\n\n/** @record */\ngws.local.posts.controllers.DropdownMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.HistoryScrollController} */\ngws.local.posts.typedefs.controllers_HISTORY_SCROLL;\n\n/** @record */\ngws.local.posts.controllers.HistoryScrollControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.InlineOfferDetailsController} */\ngws.local.posts.typedefs.controllers_INLINE_OFFER_DETAILS;\n\n/** @record */\ngws.local.posts.controllers.InlineOfferDetailsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.LightboxController} */\ngws.local.posts.typedefs.controllers_LIGHTBOX;\n\n/** @record */\ngws.local.posts.controllers.LightboxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.NoPropagationLinkController} */\ngws.local.posts.typedefs.controllers_NO_PROPAGATION_LINK;\n\n/** @record */\ngws.local.posts.controllers.NoPropagationLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.OfferCtaController} */\ngws.local.posts.typedefs.controllers_OFFER_CTA;\n\n/** @record */\ngws.local.posts.controllers.OfferCtaControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.OverviewController} */\ngws.local.posts.typedefs.controllers_OVERVIEW;\n\n/** @record */\ngws.local.posts.controllers.OverviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.PostSnippetController} */\ngws.local.posts.typedefs.controllers_POST_SNIPPET;\n\n/** @record */\ngws.local.posts.controllers.PostSnippetControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.PostSummaryController} */\ngws.local.posts.typedefs.controllers_POST_SUMMARY;\n\n/** @record */\ngws.local.posts.controllers.PostSummaryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.PostTranslationController} */\ngws.local.posts.typedefs.controllers_POST_TRANSLATION;\n\n/** @record */\ngws.local.posts.controllers.PostTranslationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.ReportAbuseController} */\ngws.local.posts.typedefs.controllers_REPORT_ABUSE;\n\n/** @record */\ngws.local.posts.controllers.ReportAbuseControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.TermsAndConditionsController} */\ngws.local.posts.typedefs.controllers_TERMS_AND_CONDITIONS;\n\n/** @record */\ngws.local.posts.controllers.TermsAndConditionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.ThumbnailImageController} */\ngws.local.posts.typedefs.controllers_THUMBNAIL_IMAGE;\n\n/** @record */\ngws.local.posts.controllers.ThumbnailImageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.VideoController} */\ngws.local.posts.typedefs.controllers_VIDEO;\n\n/** @record */\ngws.local.posts.controllers.VideoControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.local.posts.VideoThumbnailController} */\ngws.local.posts.typedefs.controllers_VIDEO_THUMBNAIL;\n\n/** @record */\ngws.local.posts.controllers.VideoThumbnailControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/posts/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/products/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.products.controllers\x27);\ngoog.provide(\x27gws.local.products.controllers.ProductsScrollControllerResponse\x27);\ngoog.provide(\x27gws.local.products.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.products.ProductsScrollController\x3e} */\ngws.local.products.controllers.PRODUCTS_SCROLL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.products.ProductsScrollController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.local.products.controllers.PRODUCTS_SCROLL,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!gws.local.products.ProductsScrollController} */\ngws.local.products.typedefs.controllers_PRODUCTS_SCROLL;\n\n/** @record */\ngws.local.products.controllers.ProductsScrollControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/products/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/reviews/client/tier1/replytoreview/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.localreviews.controllers\x27);\ngoog.provide(\x27gws.localreviews.controllers.ReplyToReviewControllerResponse\x27);\ngoog.provide(\x27gws.localreviews.typedefs\x27);\n\ngoog.require(\x27gws.common.local.merchant.controllers\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.localreviews.ReplyToReviewController\x3e} */\ngws.localreviews.controllers.REPLY_TO_REVIEW \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.localreviews.ReplyToReviewController\x27),\n    [gws.common.local.merchant.controllers.TASK_IMMERSIVE_PLACEHOLDER]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.localreviews.controllers.REPLY_TO_REVIEW,\n    xid(\x27gws.localreviews.ReplyToReviewInterface\x27));\n\n/** @typedef {!gws.localreviews.ReplyToReviewController} */\ngws.localreviews.typedefs.controllers_REPLY_TO_REVIEW;\n\n/** @record */\nclass gwslocalreviewscontrollersReplyToReviewControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.placeholder;\n  }\n}\n\n\n\n/** @record */\ngws.localreviews.controllers.ReplyToReviewControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwslocalreviewscontrollersReplyToReviewControllerResponse_controller} */ this.controller;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/reviews/client/tier1/replytoreview/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/riddler/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.local.riddler.controllers\x27);\ngoog.provide(\x27search.local.riddler.controllers.MoreChoicesAnswerControllerResponse\x27);\ngoog.provide(\x27search.local.riddler.controllers.MoreChoicesAnswersControllerResponse\x27);\ngoog.provide(\x27search.local.riddler.controllers.NoQuestionsInterstitialWidgetControllerResponse\x27);\ngoog.provide(\x27search.local.riddler.controllers.PhotoComparisonAnswerControllerResponse\x27);\ngoog.provide(\x27search.local.riddler.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.riddler.MoreChoicesAnswersController\x3e} */\nsearch.local.riddler.controllers.MORE_CHOICES_ANSWERS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.riddler.MoreChoicesAnswersController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.riddler.PhotoComparisonAnswerController\x3e} */\nsearch.local.riddler.controllers.PHOTO_COMPARISON_ANSWER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.riddler.PhotoComparisonAnswerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.riddler.MoreChoicesAnswerController\x3e} */\nsearch.local.riddler.controllers.MORE_CHOICES_ANSWER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.riddler.MoreChoicesAnswerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.local.riddler.NoQuestionsInterstitialWidgetController\x3e} */\nsearch.local.riddler.controllers.NO_QUESTIONS_INTERSTITIAL_WIDGET \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.local.riddler.NoQuestionsInterstitialWidgetController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.local.riddler.controllers.NO_QUESTIONS_INTERSTITIAL_WIDGET,\n    xid(\x27gws.local.riddler.InterstitialWidget\x27));\n\n/** @typedef {!search.local.riddler.MoreChoicesAnswerController} */\nsearch.local.riddler.typedefs.controllers_MORE_CHOICES_ANSWER;\n\n/** @record */\nsearch.local.riddler.controllers.MoreChoicesAnswerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.riddler.MoreChoicesAnswersController} */\nsearch.local.riddler.typedefs.controllers_MORE_CHOICES_ANSWERS;\n\n/** @record */\nsearch.local.riddler.controllers.MoreChoicesAnswersControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.riddler.NoQuestionsInterstitialWidgetController} */\nsearch.local.riddler.typedefs.controllers_NO_QUESTIONS_INTERSTITIAL_WIDGET;\n\n/** @record */\nsearch.local.riddler.controllers.NoQuestionsInterstitialWidgetControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.local.riddler.PhotoComparisonAnswerController} */\nsearch.local.riddler.typedefs.controllers_PHOTO_COMPARISON_ANSWER;\n\n/** @record */\nsearch.local.riddler.controllers.PhotoComparisonAnswerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/riddler/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/shopping/popularproducts/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.local.shopping.popularproducts.controllers\x27);\ngoog.provide(\x27gws.local.shopping.popularproducts.controllers.RecentlyViewedControllerResponse\x27);\ngoog.provide(\x27gws.local.shopping.popularproducts.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.local.shopping.popularproducts.RecentlyViewedController\x3e} */\ngws.local.shopping.popularproducts.controllers.RECENTLY_VIEWED \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.local.shopping.popularproducts.RecentlyViewedController\x27));\n\n/** @typedef {!gws.local.shopping.popularproducts.RecentlyViewedController} */\ngws.local.shopping.popularproducts.typedefs.controllers_RECENTLY_VIEWED;\n\n/** @record */\ngws.local.shopping.popularproducts.controllers.RecentlyViewedControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/shopping/popularproducts/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/local/tabs/jslayout/boq/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.local.tab.jslayout.boq.controllers\x27);\ngoog.provide(\x27gws.plugins.local.tab.jslayout.boq.controllers.TabSoyWizControllerResponse\x27);\ngoog.provide(\x27gws.plugins.local.tab.jslayout.boq.typedefs\x27);\n\ngoog.require(\x27boq.searchloggingsoyve.services\x27);\ngoog.require(\x27boq.searchloggingsoyve.typedefs\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.component.services\x27);\ngoog.require(\x27wiz.component.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.jslayout.geo.tabs.LocalTabSoyJsdata\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.local.tab.jslayout.boq.TabSoyWizController\x3e} */\ngws.plugins.local.tab.jslayout.boq.controllers.TAB_SOY_WIZ \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.local.tab.jslayout.boq.TabSoyWizController\x27),\n    [wiz.component.services.COMPONENT, boq.searchloggingsoyve.services.SEARCH_SOY_LOGGING]);\nwiz.addPossibleAtInterfaceImplementation(\n    gws.plugins.local.tab.jslayout.boq.controllers.TAB_SOY_WIZ,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n/** @typedef {!gws.plugins.local.tab.jslayout.boq.TabSoyWizController} */\ngws.plugins.local.tab.jslayout.boq.typedefs.controllers_TAB_SOY_WIZ;\n\n/** @record */\nclass gwspluginslocaltabjslayoutboqcontrollersTabSoyWizControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.jslayout.geo.tabs.LocalTabSoyJsdata} */ this.localTabSoyJsdata;\n  }\n}\n\n\n\n/** @record */\nclass gwspluginslocaltabjslayoutboqcontrollersTabSoyWizControllerResponse_service {\n  constructor() {\n    /** @type {!wiz.component.typedefs.services_COMPONENT} */ this.component;\n    /** @type {!boq.searchloggingsoyve.typedefs.services_SEARCH_SOY_LOGGING} */ this.searchSoyLogging;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.local.tab.jslayout.boq.controllers.TabSoyWizControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginslocaltabjslayoutboqcontrollersTabSoyWizControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwspluginslocaltabjslayoutboqcontrollersTabSoyWizControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/local/tabs/jslayout/boq/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/shortcuts/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.shortcuts.jslayout.controllers\x27);\ngoog.provide(\x27gws.plugins.shortcuts.jslayout.controllers.ShortcutsPopupControllerResponse\x27);\ngoog.provide(\x27gws.plugins.shortcuts.jslayout.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.shortcuts.jslayout.ShortcutsPopupController\x3e} */\ngws.plugins.shortcuts.jslayout.controllers.SHORTCUTS_POPUP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.shortcuts.jslayout.ShortcutsPopupController\x27));\n\n/** @typedef {!gws.plugins.shortcuts.jslayout.ShortcutsPopupController} */\ngws.plugins.shortcuts.jslayout.typedefs.controllers_SHORTCUTS_POPUP;\n\n/** @record */\ngws.plugins.shortcuts.jslayout.controllers.ShortcutsPopupControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/shortcuts/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/stream/jslayout/sourcerefinements/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.sourcerefinements.controllers\x27);\ngoog.provide(\x27gws.sourcerefinements.controllers.SourceRefinementsChipControllerResponse\x27);\ngoog.provide(\x27gws.sourcerefinements.controllers.SourceRefinementsGroupDesktopControllerResponse\x27);\ngoog.provide(\x27gws.sourcerefinements.controllers.SourceRefinementsGroupMobileCollapsedControllerResponse\x27);\ngoog.provide(\x27gws.sourcerefinements.controllers.SourceRefinementsGroupMobileControllerResponse\x27);\ngoog.provide(\x27gws.sourcerefinements.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.sourcerefinements.SourceRefinementsGroupMobileController\x3e} */\ngws.sourcerefinements.controllers.SOURCE_REFINEMENTS_GROUP_MOBILE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.sourcerefinements.SourceRefinementsGroupMobileController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.sourcerefinements.SourceRefinementsChipController\x3e} */\ngws.sourcerefinements.controllers.SOURCE_REFINEMENTS_CHIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.sourcerefinements.SourceRefinementsChipController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    gws.sourcerefinements.controllers.SOURCE_REFINEMENTS_CHIP,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.sourcerefinements.SourceRefinementsGroupMobileCollapsedController\x3e} */\ngws.sourcerefinements.controllers.SOURCE_REFINEMENTS_GROUP_MOBILE_COLLAPSED \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.sourcerefinements.SourceRefinementsGroupMobileCollapsedController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.sourcerefinements.SourceRefinementsGroupDesktopController\x3e} */\ngws.sourcerefinements.controllers.SOURCE_REFINEMENTS_GROUP_DESKTOP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.sourcerefinements.SourceRefinementsGroupDesktopController\x27));\n\n/** @typedef {!gws.sourcerefinements.SourceRefinementsChipController} */\ngws.sourcerefinements.typedefs.controllers_SOURCE_REFINEMENTS_CHIP;\n\n/** @record */\ngws.sourcerefinements.controllers.SourceRefinementsChipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.sourcerefinements.SourceRefinementsGroupDesktopController} */\ngws.sourcerefinements.typedefs.controllers_SOURCE_REFINEMENTS_GROUP_DESKTOP;\n\n/** @record */\nclass gwssourcerefinementscontrollersSourceRefinementsGroupDesktopControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.childControllers;\n  }\n}\n\n\n\n/** @record */\ngws.sourcerefinements.controllers.SourceRefinementsGroupDesktopControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwssourcerefinementscontrollersSourceRefinementsGroupDesktopControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n\n/** @typedef {!gws.sourcerefinements.SourceRefinementsGroupMobileCollapsedController} */\ngws.sourcerefinements.typedefs.controllers_SOURCE_REFINEMENTS_GROUP_MOBILE_COLLAPSED;\n\n/** @record */\ngws.sourcerefinements.controllers.SourceRefinementsGroupMobileCollapsedControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.sourcerefinements.SourceRefinementsGroupMobileController} */\ngws.sourcerefinements.typedefs.controllers_SOURCE_REFINEMENTS_GROUP_MOBILE;\n\n/** @record */\nclass gwssourcerefinementscontrollersSourceRefinementsGroupMobileControllerResponse_controllers {\n  constructor() {\n    /** @type {!Array\x3c?\x3e} */ this.childControllers;\n  }\n}\n\n\n\n/** @record */\ngws.sourcerefinements.controllers.SourceRefinementsGroupMobileControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwssourcerefinementscontrollersSourceRefinementsGroupMobileControllerResponse_controllers} */ this.controllers;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/stream/jslayout/sourcerefinements/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/stream/jslayout/topicfeed/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.topicfeed2.controllers\x27);\ngoog.provide(\x27gws.topicfeed2.controllers.SilkPaneEntryControllerResponse\x27);\ngoog.provide(\x27gws.topicfeed2.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.topicfeed2.SilkPaneEntryController\x3e} */\ngws.topicfeed2.controllers.SILK_PANE_ENTRY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.topicfeed2.SilkPaneEntryController\x27));\n\n/** @typedef {!gws.topicfeed2.SilkPaneEntryController} */\ngws.topicfeed2.typedefs.controllers_SILK_PANE_ENTRY;\n\n/** @record */\ngws.topicfeed2.controllers.SilkPaneEntryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/stream/jslayout/topicfeed/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/stream/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.stream2.controllers\x27);\ngoog.provide(\x27gws.stream2.controllers.StreamDebugControllerResponse\x27);\ngoog.provide(\x27gws.stream2.controllers.SummariesControllerResponse\x27);\ngoog.provide(\x27gws.stream2.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.stream2.StreamDebugController\x3e} */\ngws.stream2.controllers.STREAM_DEBUG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.stream2.StreamDebugController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.stream2.SummariesController\x3e} */\ngws.stream2.controllers.SUMMARIES \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.stream2.SummariesController\x27));\n\n/** @typedef {!gws.stream2.StreamDebugController} */\ngws.stream2.typedefs.controllers_STREAM_DEBUG;\n\n/** @record */\ngws.stream2.controllers.StreamDebugControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.stream2.SummariesController} */\ngws.stream2.typedefs.controllers_SUMMARIES;\n\n/** @record */\ngws.stream2.controllers.SummariesControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/stream/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/stream/stories/ibp/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.topicfeed.controllers\x27);\ngoog.provide(\x27gws.topicfeed.controllers.HeaderOverflowMenuControllerResponse\x27);\ngoog.provide(\x27gws.topicfeed.controllers.SearchNavigationControllerResponse\x27);\ngoog.provide(\x27gws.topicfeed.controllers.StoriesBasePageThumbnailHeaderControllerResponse\x27);\ngoog.provide(\x27gws.topicfeed.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.topicfeed.StoriesBasePageThumbnailHeaderController\x3e} */\ngws.topicfeed.controllers.STORIES_BASE_PAGE_THUMBNAIL_HEADER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.topicfeed.StoriesBasePageThumbnailHeaderController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.topicfeed.HeaderOverflowMenuController\x3e} */\ngws.topicfeed.controllers.HEADER_OVERFLOW_MENU \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.topicfeed.HeaderOverflowMenuController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.topicfeed.SearchNavigationController\x3e} */\ngws.topicfeed.controllers.SEARCH_NAVIGATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.topicfeed.SearchNavigationController\x27));\n\n/** @typedef {!gws.topicfeed.HeaderOverflowMenuController} */\ngws.topicfeed.typedefs.controllers_HEADER_OVERFLOW_MENU;\n\n/** @record */\ngws.topicfeed.controllers.HeaderOverflowMenuControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.topicfeed.SearchNavigationController} */\ngws.topicfeed.typedefs.controllers_SEARCH_NAVIGATION;\n\n/** @record */\ngws.topicfeed.controllers.SearchNavigationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.topicfeed.StoriesBasePageThumbnailHeaderController} */\ngws.topicfeed.typedefs.controllers_STORIES_BASE_PAGE_THUMBNAIL_HEADER;\n\n/** @record */\ngws.topicfeed.controllers.StoriesBasePageThumbnailHeaderControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/stream/stories/ibp/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/components/dropdown/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.controllers\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.controllers.DropdownControllerResponse\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.knowledge.saaap.EventHandler\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.DropdownController\x3e} */\ngws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.controllers.DROPDOWN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.DropdownController\x27));\n\n/** @typedef {!gws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.DropdownController} */\ngws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.typedefs.controllers_DROPDOWN;\n\n/** @record */\nclass gwspluginsthirdpartysearchappsnippetcardscomponentsdropdowncontrollersDropdownControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.knowledge.saaap.EventHandler} */ this.eventHandler;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.thirdpartysearchappsnippet.cards.components.dropdown.controllers.DropdownControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsthirdpartysearchappsnippetcardscomponentsdropdowncontrollersDropdownControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/components/dropdown/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/components/textinput/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.controllers\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.controllers.TextInputControllerResponse\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.TextInputController\x3e} */\ngws.plugins.thirdpartysearchappsnippet.cards.components.textInput.controllers.TEXT_INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.TextInputController\x27));\n\n/** @typedef {!gws.plugins.thirdpartysearchappsnippet.cards.components.textInput.TextInputController} */\ngws.plugins.thirdpartysearchappsnippet.cards.components.textInput.typedefs.controllers_TEXT_INPUT;\n\n/** @record */\ngws.plugins.thirdpartysearchappsnippet.cards.components.textInput.controllers.TextInputControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/components/textinput/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/web/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.controllers\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.controllers.ThirdPartyCardControllerResponse\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.controllers.ThirdPartyComponentControllerResponse\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.models\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.models.InputModelResponse\x27);\ngoog.provide(\x27gws.plugins.thirdpartysearchappsnippet.cards.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.thirdpartysearchappsnippet.cards.JsData\x27);\ngoog.forwardDeclare(\x27proto.knowledge.saaap.EventHandler\x27);\ngoog.forwardDeclare(\x27proto.knowledge.saaap.IntentArgument\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.thirdpartysearchappsnippet.cards.InputModel\x3e} */\ngws.plugins.thirdpartysearchappsnippet.cards.models.INPUT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.thirdpartysearchappsnippet.cards.InputModel\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyCardController\x3e} */\ngws.plugins.thirdpartysearchappsnippet.cards.controllers.THIRD_PARTY_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyComponentController\x3e} */\ngws.plugins.thirdpartysearchappsnippet.cards.controllers.THIRD_PARTY_COMPONENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyComponentController\x27));\n\n/** @typedef {!gws.plugins.thirdpartysearchappsnippet.cards.InputModel} */\ngws.plugins.thirdpartysearchappsnippet.cards.typedefs.models_INPUT;\n\n/** @record */\nclass gwspluginsthirdpartysearchappsnippetcardsmodelsInputModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.knowledge.saaap.IntentArgument} */ this.intentArgument;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.thirdpartysearchappsnippet.cards.models.InputModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsthirdpartysearchappsnippetcardsmodelsInputModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyCardController} */\ngws.plugins.thirdpartysearchappsnippet.cards.typedefs.controllers_THIRD_PARTY_CARD;\n\n/** @record */\nclass gwspluginsthirdpartysearchappsnippetcardscontrollersThirdPartyCardControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.thirdpartysearchappsnippet.cards.JsData} */ this.data;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.thirdpartysearchappsnippet.cards.controllers.ThirdPartyCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsthirdpartysearchappsnippetcardscontrollersThirdPartyCardControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.plugins.thirdpartysearchappsnippet.cards.ThirdPartyComponentController} */\ngws.plugins.thirdpartysearchappsnippet.cards.typedefs.controllers_THIRD_PARTY_COMPONENT;\n\n/** @record */\nclass gwspluginsthirdpartysearchappsnippetcardscontrollersThirdPartyComponentControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.knowledge.saaap.EventHandler} */ this.eventHandler;\n  }\n}\n\n\n\n/** @record */\ngws.plugins.thirdpartysearchappsnippet.cards.controllers.ThirdPartyComponentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwspluginsthirdpartysearchappsnippetcardscontrollersThirdPartyComponentControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/thirdpartysearchappsnippet/cards/web/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/trips/jslayout/common/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.trips.tau.controllers\x27);\ngoog.provide(\x27gws.trips.tau.controllers.TaskAssistanceUnitControllerResponse\x27);\ngoog.provide(\x27gws.trips.tau.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.trips.tau.TaskAssistanceUnitController\x3e} */\ngws.trips.tau.controllers.TASK_ASSISTANCE_UNIT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.trips.tau.TaskAssistanceUnitController\x27));\n\n/** @typedef {!gws.trips.tau.TaskAssistanceUnitController} */\ngws.trips.tau.typedefs.controllers_TASK_ASSISTANCE_UNIT;\n\n/** @record */\ngws.trips.tau.controllers.TaskAssistanceUnitControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/trips/jslayout/common/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/trips/jslayout/modules/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27search.trips.modules.controllers\x27);\ngoog.provide(\x27search.trips.modules.controllers.CardCarouselControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.ComparatorLeafControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.DestinationsNavigationControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.GtaBannerControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.HeroCarouselControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.InterestCategoryControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.ItineraryDetailsPageControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.ItineraryListPageControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.LazyImageCarouselItemControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.LeafStateControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.ListControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.PlanTripLeafControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.PlanTripLureControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.SearchLinkControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TopSightDetailsStateControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TopSightsListPageControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TravelGuideLureControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TravelHomepageLureControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TravelSearchLeafControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TravelSubscriptionControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripDetailsLeafControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripDetailsModuleControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripPivotsControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripSummaryCardControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripSummaryV2CardControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.TripsOptInControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.UrlNavigationControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.UserSignInPromptControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.VariableSizedMapControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.WeekendGetawaysDateFilterControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.WizScrollingCarouselControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.controllers.YourUpcomingTripsLureControllerResponse\x27);\ngoog.provide(\x27search.trips.modules.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.trips.modules.HeroCarouselControllerData\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripsOptInController\x3e} */\nsearch.trips.modules.controllers.TRIPS_OPT_IN \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripsOptInController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripDetailsModuleController\x3e} */\nsearch.trips.modules.controllers.TRIP_DETAILS_MODULE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripDetailsModuleController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.LazyImageCarouselItemController\x3e} */\nsearch.trips.modules.controllers.LAZY_IMAGE_CAROUSEL_ITEM \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.LazyImageCarouselItemController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.trips.modules.controllers.LAZY_IMAGE_CAROUSEL_ITEM,\n    xid(\x27gws.suit.carousel.CarouselItem\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.trips.modules.controllers.LAZY_IMAGE_CAROUSEL_ITEM,\n    xid(\x27search.trips.modules.WizCarouselItem\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.CardCarouselController\x3e} */\nsearch.trips.modules.controllers.CARD_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.CardCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TravelSubscriptionController\x3e} */\nsearch.trips.modules.controllers.TRAVEL_SUBSCRIPTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TravelSubscriptionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.UserSignInPromptController\x3e} */\nsearch.trips.modules.controllers.USER_SIGN_IN_PROMPT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.UserSignInPromptController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.GtaBannerController\x3e} */\nsearch.trips.modules.controllers.GTA_BANNER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.GtaBannerController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.WeekendGetawaysDateFilterController\x3e} */\nsearch.trips.modules.controllers.WEEKEND_GETAWAYS_DATE_FILTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.WeekendGetawaysDateFilterController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TravelGuideLureController\x3e} */\nsearch.trips.modules.controllers.TRAVEL_GUIDE_LURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TravelGuideLureController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.LeafStateController\x3e} */\nsearch.trips.modules.controllers.LEAF_STATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.LeafStateController\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    search.trips.modules.controllers.LEAF_STATE,\n    xid(\x27gws.trips.jscontrollerifc.LeafStateControllerIfc\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TopSightDetailsStateController\x3e} */\nsearch.trips.modules.controllers.TOP_SIGHT_DETAILS_STATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TopSightDetailsStateController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.UrlNavigationController\x3e} */\nsearch.trips.modules.controllers.URL_NAVIGATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.UrlNavigationController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripSummaryV2CardController\x3e} */\nsearch.trips.modules.controllers.TRIP_SUMMARY_V2_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripSummaryV2CardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.ComparatorLeafController\x3e} */\nsearch.trips.modules.controllers.COMPARATOR_LEAF \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.ComparatorLeafController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.ListController\x3e} */\nsearch.trips.modules.controllers.LIST \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.ListController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.PlanTripLureController\x3e} */\nsearch.trips.modules.controllers.PLAN_TRIP_LURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.PlanTripLureController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.DestinationsNavigationController\x3e} */\nsearch.trips.modules.controllers.DESTINATIONS_NAVIGATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.DestinationsNavigationController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.ItineraryListPageController\x3e} */\nsearch.trips.modules.controllers.ITINERARY_LIST_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.ItineraryListPageController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.InterestCategoryController\x3e} */\nsearch.trips.modules.controllers.INTEREST_CATEGORY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.InterestCategoryController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.VariableSizedMapController\x3e} */\nsearch.trips.modules.controllers.VARIABLE_SIZED_MAP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.VariableSizedMapController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TravelHomepageLureController\x3e} */\nsearch.trips.modules.controllers.TRAVEL_HOMEPAGE_LURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TravelHomepageLureController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripPivotsController\x3e} */\nsearch.trips.modules.controllers.TRIP_PIVOTS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripPivotsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.YourUpcomingTripsLureController\x3e} */\nsearch.trips.modules.controllers.YOUR_UPCOMING_TRIPS_LURE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.YourUpcomingTripsLureController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.HeroCarouselController\x3e} */\nsearch.trips.modules.controllers.HERO_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.HeroCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripDetailsLeafController\x3e} */\nsearch.trips.modules.controllers.TRIP_DETAILS_LEAF \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripDetailsLeafController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TripSummaryCardController\x3e} */\nsearch.trips.modules.controllers.TRIP_SUMMARY_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TripSummaryCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.SearchLinkController\x3e} */\nsearch.trips.modules.controllers.SEARCH_LINK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.SearchLinkController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.ItineraryDetailsPageController\x3e} */\nsearch.trips.modules.controllers.ITINERARY_DETAILS_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.ItineraryDetailsPageController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TopSightsListPageController\x3e} */\nsearch.trips.modules.controllers.TOP_SIGHTS_LIST_PAGE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TopSightsListPageController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.WizScrollingCarouselController\x3e} */\nsearch.trips.modules.controllers.WIZ_SCROLLING_CAROUSEL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.WizScrollingCarouselController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.PlanTripLeafController\x3e} */\nsearch.trips.modules.controllers.PLAN_TRIP_LEAF \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.PlanTripLeafController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n\n/** @const {!fava.services.ServiceId\x3c!search.trips.modules.TravelSearchLeafController\x3e} */\nsearch.trips.modules.controllers.TRAVEL_SEARCH_LEAF \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27search.trips.modules.TravelSearchLeafController\x27),\n    [search.trips.modules.controllers.LEAF_STATE]);\n\n/** @typedef {!search.trips.modules.CardCarouselController} */\nsearch.trips.modules.typedefs.controllers_CARD_CAROUSEL;\n\n/** @record */\nsearch.trips.modules.controllers.CardCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.ComparatorLeafController} */\nsearch.trips.modules.typedefs.controllers_COMPARATOR_LEAF;\n\n/** @record */\nsearch.trips.modules.controllers.ComparatorLeafControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.DestinationsNavigationController} */\nsearch.trips.modules.typedefs.controllers_DESTINATIONS_NAVIGATION;\n\n/** @record */\nsearch.trips.modules.controllers.DestinationsNavigationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.GtaBannerController} */\nsearch.trips.modules.typedefs.controllers_GTA_BANNER;\n\n/** @record */\nsearch.trips.modules.controllers.GtaBannerControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.HeroCarouselController} */\nsearch.trips.modules.typedefs.controllers_HERO_CAROUSEL;\n\n/** @record */\nclass searchtripsmodulescontrollersHeroCarouselControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.trips.modules.HeroCarouselControllerData} */ this.carouselData;\n  }\n}\n\n\n\n/** @record */\nsearch.trips.modules.controllers.HeroCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchtripsmodulescontrollersHeroCarouselControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.InterestCategoryController} */\nsearch.trips.modules.typedefs.controllers_INTEREST_CATEGORY;\n\n/** @record */\nsearch.trips.modules.controllers.InterestCategoryControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.ItineraryDetailsPageController} */\nsearch.trips.modules.typedefs.controllers_ITINERARY_DETAILS_PAGE;\n\n/** @record */\nsearch.trips.modules.controllers.ItineraryDetailsPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.ItineraryListPageController} */\nsearch.trips.modules.typedefs.controllers_ITINERARY_LIST_PAGE;\n\n/** @record */\nsearch.trips.modules.controllers.ItineraryListPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.LazyImageCarouselItemController} */\nsearch.trips.modules.typedefs.controllers_LAZY_IMAGE_CAROUSEL_ITEM;\n\n/** @record */\nsearch.trips.modules.controllers.LazyImageCarouselItemControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.LeafStateController} */\nsearch.trips.modules.typedefs.controllers_LEAF_STATE;\n\n/** @record */\nsearch.trips.modules.controllers.LeafStateControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.ListController} */\nsearch.trips.modules.typedefs.controllers_LIST;\n\n/** @record */\nsearch.trips.modules.controllers.ListControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.UrlNavigationController} */\nsearch.trips.modules.typedefs.controllers_URL_NAVIGATION;\n\n/** @record */\nsearch.trips.modules.controllers.UrlNavigationControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.PlanTripLeafController} */\nsearch.trips.modules.typedefs.controllers_PLAN_TRIP_LEAF;\n\n/** @record */\nsearch.trips.modules.controllers.PlanTripLeafControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.PlanTripLureController} */\nsearch.trips.modules.typedefs.controllers_PLAN_TRIP_LURE;\n\n/** @record */\nsearch.trips.modules.controllers.PlanTripLureControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.SearchLinkController} */\nsearch.trips.modules.typedefs.controllers_SEARCH_LINK;\n\n/** @record */\nsearch.trips.modules.controllers.SearchLinkControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TopSightDetailsStateController} */\nsearch.trips.modules.typedefs.controllers_TOP_SIGHT_DETAILS_STATE;\n\n/** @record */\nsearch.trips.modules.controllers.TopSightDetailsStateControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TopSightsListPageController} */\nsearch.trips.modules.typedefs.controllers_TOP_SIGHTS_LIST_PAGE;\n\n/** @record */\nsearch.trips.modules.controllers.TopSightsListPageControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TravelGuideLureController} */\nsearch.trips.modules.typedefs.controllers_TRAVEL_GUIDE_LURE;\n\n/** @record */\nsearch.trips.modules.controllers.TravelGuideLureControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TravelHomepageLureController} */\nsearch.trips.modules.typedefs.controllers_TRAVEL_HOMEPAGE_LURE;\n\n/** @record */\nsearch.trips.modules.controllers.TravelHomepageLureControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TravelSearchLeafController} */\nsearch.trips.modules.typedefs.controllers_TRAVEL_SEARCH_LEAF;\n\n/** @record */\nsearch.trips.modules.controllers.TravelSearchLeafControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TravelSubscriptionController} */\nsearch.trips.modules.typedefs.controllers_TRAVEL_SUBSCRIPTION;\n\n/** @record */\nsearch.trips.modules.controllers.TravelSubscriptionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripDetailsLeafController} */\nsearch.trips.modules.typedefs.controllers_TRIP_DETAILS_LEAF;\n\n/** @record */\nsearch.trips.modules.controllers.TripDetailsLeafControllerResponse \x3d class {\n  constructor() {\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.superResponse;\n    /** @type {!search.trips.modules.controllers.LeafStateControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripDetailsModuleController} */\nsearch.trips.modules.typedefs.controllers_TRIP_DETAILS_MODULE;\n\n/** @record */\nsearch.trips.modules.controllers.TripDetailsModuleControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripPivotsController} */\nsearch.trips.modules.typedefs.controllers_TRIP_PIVOTS;\n\n/** @record */\nsearch.trips.modules.controllers.TripPivotsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripSummaryCardController} */\nsearch.trips.modules.typedefs.controllers_TRIP_SUMMARY_CARD;\n\n/** @record */\nsearch.trips.modules.controllers.TripSummaryCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripSummaryV2CardController} */\nsearch.trips.modules.typedefs.controllers_TRIP_SUMMARY_V2_CARD;\n\n/** @record */\nsearch.trips.modules.controllers.TripSummaryV2CardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.TripsOptInController} */\nsearch.trips.modules.typedefs.controllers_TRIPS_OPT_IN;\n\n/** @record */\nsearch.trips.modules.controllers.TripsOptInControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.UserSignInPromptController} */\nsearch.trips.modules.typedefs.controllers_USER_SIGN_IN_PROMPT;\n\n/** @record */\nsearch.trips.modules.controllers.UserSignInPromptControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.VariableSizedMapController} */\nsearch.trips.modules.typedefs.controllers_VARIABLE_SIZED_MAP;\n\n/** @record */\nsearch.trips.modules.controllers.VariableSizedMapControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.WeekendGetawaysDateFilterController} */\nsearch.trips.modules.typedefs.controllers_WEEKEND_GETAWAYS_DATE_FILTER;\n\n/** @record */\nsearch.trips.modules.controllers.WeekendGetawaysDateFilterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.WizScrollingCarouselController} */\nsearch.trips.modules.typedefs.controllers_WIZ_SCROLLING_CAROUSEL;\n\n/** @record */\nsearch.trips.modules.controllers.WizScrollingCarouselControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!search.trips.modules.YourUpcomingTripsLureController} */\nsearch.trips.modules.typedefs.controllers_YOUR_UPCOMING_TRIPS_LURE;\n\n/** @record */\nsearch.trips.modules.controllers.YourUpcomingTripsLureControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/trips/jslayout/modules/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/nav/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.nav.services\x27);\ngoog.provide(\x27gws.tweed.nav.services.TweedNavigationServiceResponse\x27);\ngoog.provide(\x27gws.tweed.nav.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.nav.TweedNavigationService\x3e} */\ngws.tweed.nav.services.TWEED_NAVIGATION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.nav.TweedNavigationService\x27));\n\n/** @typedef {!gws.tweed.nav.TweedNavigationService} */\ngws.tweed.nav.typedefs.services_TWEED_NAVIGATION;\n\n/** @record */\ngws.tweed.nav.services.TweedNavigationServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/nav/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/card_actions/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.card_actions.controllers\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.CardActionsBottomSheetControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.CardActionsDialogControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.GenericActionControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.LamsControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.ParentActionControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.RecordUserActionsControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.controllers.SendFeedbackControllerResponse\x27);\ngoog.provide(\x27gws.tweed.card_actions.typedefs\x27);\n\ngoog.require(\x27gws.tweed.nav.services\x27);\ngoog.require(\x27gws.tweed.nav.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.CardActionsBottomSheetController\x3e} */\ngws.tweed.card_actions.controllers.CARD_ACTIONS_BOTTOM_SHEET \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.CardActionsBottomSheetController\x27),\n    [gws.tweed.nav.services.TWEED_NAVIGATION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.GenericActionController\x3e} */\ngws.tweed.card_actions.controllers.GENERIC_ACTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.GenericActionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.ParentActionController\x3e} */\ngws.tweed.card_actions.controllers.PARENT_ACTION \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.ParentActionController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.CardActionsDialogController\x3e} */\ngws.tweed.card_actions.controllers.CARD_ACTIONS_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.CardActionsDialogController\x27),\n    [gws.tweed.nav.services.TWEED_NAVIGATION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.RecordUserActionsController\x3e} */\ngws.tweed.card_actions.controllers.RECORD_USER_ACTIONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.RecordUserActionsController\x27),\n    [gws.tweed.card_actions.controllers.PARENT_ACTION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.SendFeedbackController\x3e} */\ngws.tweed.card_actions.controllers.SEND_FEEDBACK \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.SendFeedbackController\x27),\n    [gws.tweed.card_actions.controllers.PARENT_ACTION, gws.tweed.nav.services.TWEED_NAVIGATION]);\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.card_actions.LamsController\x3e} */\ngws.tweed.card_actions.controllers.LAMS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.card_actions.LamsController\x27),\n    [gws.tweed.card_actions.controllers.PARENT_ACTION]);\n\n/** @typedef {!gws.tweed.card_actions.CardActionsBottomSheetController} */\ngws.tweed.card_actions.typedefs.controllers_CARD_ACTIONS_BOTTOM_SHEET;\n\n/** @record */\nclass gwstweedcard_actionscontrollersCardActionsBottomSheetControllerResponse_service {\n  constructor() {\n    /** @type {!gws.tweed.nav.typedefs.services_TWEED_NAVIGATION} */ this.nav;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.card_actions.controllers.CardActionsBottomSheetControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwstweedcard_actionscontrollersCardActionsBottomSheetControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.CardActionsDialogController} */\ngws.tweed.card_actions.typedefs.controllers_CARD_ACTIONS_DIALOG;\n\n/** @record */\nclass gwstweedcard_actionscontrollersCardActionsDialogControllerResponse_service {\n  constructor() {\n    /** @type {!gws.tweed.nav.typedefs.services_TWEED_NAVIGATION} */ this.nav;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.card_actions.controllers.CardActionsDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwstweedcard_actionscontrollersCardActionsDialogControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.GenericActionController} */\ngws.tweed.card_actions.typedefs.controllers_GENERIC_ACTION;\n\n/** @record */\ngws.tweed.card_actions.controllers.GenericActionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.LamsController} */\ngws.tweed.card_actions.typedefs.controllers_LAMS;\n\n/** @record */\ngws.tweed.card_actions.controllers.LamsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.superResponse;\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.ParentActionController} */\ngws.tweed.card_actions.typedefs.controllers_PARENT_ACTION;\n\n/** @record */\ngws.tweed.card_actions.controllers.ParentActionControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.RecordUserActionsController} */\ngws.tweed.card_actions.typedefs.controllers_RECORD_USER_ACTIONS;\n\n/** @record */\ngws.tweed.card_actions.controllers.RecordUserActionsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.superResponse;\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.card_actions.SendFeedbackController} */\ngws.tweed.card_actions.typedefs.controllers_SEND_FEEDBACK;\n\n/** @record */\nclass gwstweedcard_actionscontrollersSendFeedbackControllerResponse_service {\n  constructor() {\n    /** @type {!gws.tweed.nav.typedefs.services_TWEED_NAVIGATION} */ this.nav;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.card_actions.controllers.SendFeedbackControllerResponse \x3d class {\n  constructor() {\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.superResponse;\n    /** @type {!gws.tweed.card_actions.controllers.ParentActionControllerResponse} */ this.super_response;\n    /** @type {!gwstweedcard_actionscontrollersSendFeedbackControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/card_actions/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/grid_card/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.grid_card.controllers\x27);\ngoog.provide(\x27gws.tweed.grid_card.controllers.GridCardControllerResponse\x27);\ngoog.provide(\x27gws.tweed.grid_card.services\x27);\ngoog.provide(\x27gws.tweed.grid_card.services.SportsUpdateServiceResponse\x27);\ngoog.provide(\x27gws.tweed.grid_card.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.tweed.jslayout.gridcard.GridCardControllerProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.grid_card.SportsUpdateService\x3e} */\ngws.tweed.grid_card.services.SPORTS_UPDATE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.grid_card.SportsUpdateService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.grid_card.GridCardController\x3e} */\ngws.tweed.grid_card.controllers.GRID_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.grid_card.GridCardController\x27),\n    [gws.tweed.grid_card.services.SPORTS_UPDATE]);\n\n/** @typedef {!gws.tweed.grid_card.GridCardController} */\ngws.tweed.grid_card.typedefs.controllers_GRID_CARD;\n\n/** @record */\nclass gwstweedgrid_cardcontrollersGridCardControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.tweed.jslayout.gridcard.GridCardControllerProto} */ this.proto;\n  }\n}\n\n\n\n/** @record */\nclass gwstweedgrid_cardcontrollersGridCardControllerResponse_service {\n  constructor() {\n    /** @type {!gws.tweed.grid_card.typedefs.services_SPORTS_UPDATE} */ this.sports_update;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.grid_card.controllers.GridCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwstweedgrid_cardcontrollersGridCardControllerResponse_jsdata} */ this.jsdata;\n    /** @type {!gwstweedgrid_cardcontrollersGridCardControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.grid_card.SportsUpdateService} */\ngws.tweed.grid_card.typedefs.services_SPORTS_UPDATE;\n\n/** @record */\ngws.tweed.grid_card.services.SportsUpdateServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/grid_card/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/overflow_button/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.overflow_button.controllers\x27);\ngoog.provide(\x27gws.tweed.overflow_button.controllers.OverflowButtonControllerResponse\x27);\ngoog.provide(\x27gws.tweed.overflow_button.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.overflow_button.OverflowButtonController\x3e} */\ngws.tweed.overflow_button.controllers.OVERFLOW_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.overflow_button.OverflowButtonController\x27));\n\n/** @typedef {!gws.tweed.overflow_button.OverflowButtonController} */\ngws.tweed.overflow_button.typedefs.controllers_OVERFLOW_BUTTON;\n\n/** @record */\ngws.tweed.overflow_button.controllers.OverflowButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/overflow_button/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/promo_card/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.promo_card.controllers\x27);\ngoog.provide(\x27gws.tweed.promo_card.controllers.PromoCardControllerResponse\x27);\ngoog.provide(\x27gws.tweed.promo_card.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.promo_card.PromoCardController\x3e} */\ngws.tweed.promo_card.controllers.PROMO_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.promo_card.PromoCardController\x27));\n\n/** @typedef {!gws.tweed.promo_card.PromoCardController} */\ngws.tweed.promo_card.typedefs.controllers_PROMO_CARD;\n\n/** @record */\ngws.tweed.promo_card.controllers.PromoCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/promo_card/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/gws/plugins/tweed/jslayout/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27gws.tweed.controllers\x27);\ngoog.provide(\x27gws.tweed.controllers.TweedArcContentControllerResponse\x27);\ngoog.provide(\x27gws.tweed.controllers.TweedCardControllerResponse\x27);\ngoog.provide(\x27gws.tweed.controllers.TweedContentControllerResponse\x27);\ngoog.provide(\x27gws.tweed.controllers.TweedLoadingControllerResponse\x27);\ngoog.provide(\x27gws.tweed.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.plugins.tweed.jslayout.TweedContentControllerProto\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.TweedCardController\x3e} */\ngws.tweed.controllers.TWEED_CARD \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.TweedCardController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.TweedContentController\x3e} */\ngws.tweed.controllers.TWEED_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.TweedContentController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.TweedLoadingController\x3e} */\ngws.tweed.controllers.TWEED_LOADING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.TweedLoadingController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!gws.tweed.TweedArcContentController\x3e} */\ngws.tweed.controllers.TWEED_ARC_CONTENT \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27gws.tweed.TweedArcContentController\x27));\n\n/** @typedef {!gws.tweed.TweedArcContentController} */\ngws.tweed.typedefs.controllers_TWEED_ARC_CONTENT;\n\n/** @record */\nclass gwstweedcontrollersTweedArcContentControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.tweed.jslayout.TweedContentControllerProto} */ this.proto;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.controllers.TweedArcContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwstweedcontrollersTweedArcContentControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.TweedCardController} */\ngws.tweed.typedefs.controllers_TWEED_CARD;\n\n/** @record */\ngws.tweed.controllers.TweedCardControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.TweedContentController} */\ngws.tweed.typedefs.controllers_TWEED_CONTENT;\n\n/** @record */\nclass gwstweedcontrollersTweedContentControllerResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.plugins.tweed.jslayout.TweedContentControllerProto} */ this.proto;\n  }\n}\n\n\n\n/** @record */\ngws.tweed.controllers.TweedContentControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!gwstweedcontrollersTweedContentControllerResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n\n/** @typedef {!gws.tweed.TweedLoadingController} */\ngws.tweed.typedefs.controllers_TWEED_LOADING;\n\n/** @record */\ngws.tweed.controllers.TweedLoadingControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/plugins/tweed/jslayout/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/search/boq/localtoplistsweb/toplists/rendererids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.searchlocaltoplists.toplists.component.renderers\x27);\ngoog.provide(\x27boq.searchlocaltoplists.toplists.component.renderers.RenderRendererResponse\x27);\ngoog.provide(\x27boq.searchlocaltoplists.toplists.component.typedefs\x27);\n\ngoog.require(\x27wiz.component.renderers\x27);\ngoog.require(\x27wiz.component.renderers.ComponentRendererResponse\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchlocaltoplists.toplists.RenderRenderer\x3e} */\nboq.searchlocaltoplists.toplists.component.renderers.RENDER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchlocaltoplists.toplists.RenderRenderer\x27),\n    [wiz.component.renderers.COMPONENT]);\n\n/** @typedef {!boq.searchlocaltoplists.toplists.RenderRenderer} */\nboq.searchlocaltoplists.toplists.component.typedefs.renderers_RENDER;\n\n/** @record */\nboq.searchlocaltoplists.toplists.component.renderers.RenderRendererResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.superResponse;\n    /** @type {!wiz.component.renderers.ComponentRendererResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/search/boq/localtoplistsweb/toplists/rendererids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/search/boq/localtoplistsweb/toplists/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.searchlocaltoplists.toplists.controllers\x27);\ngoog.provide(\x27boq.searchlocaltoplists.toplists.controllers.BackButtonControllerResponse\x27);\ngoog.provide(\x27boq.searchlocaltoplists.toplists.controllers.NoOpControllerResponse\x27);\ngoog.provide(\x27boq.searchlocaltoplists.toplists.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchlocaltoplists.toplists.NoOpController\x3e} */\nboq.searchlocaltoplists.toplists.controllers.NO_OP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchlocaltoplists.toplists.NoOpController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchlocaltoplists.toplists.BackButtonController\x3e} */\nboq.searchlocaltoplists.toplists.controllers.BACK_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchlocaltoplists.toplists.BackButtonController\x27));\n\n/** @typedef {!boq.searchlocaltoplists.toplists.BackButtonController} */\nboq.searchlocaltoplists.toplists.typedefs.controllers_BACK_BUTTON;\n\n/** @record */\nboq.searchlocaltoplists.toplists.controllers.BackButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!boq.searchlocaltoplists.toplists.NoOpController} */\nboq.searchlocaltoplists.toplists.typedefs.controllers_NO_OP;\n\n/** @record */\nboq.searchlocaltoplists.toplists.controllers.NoOpControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/search/boq/localtoplistsweb/toplists/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/search/boq/logging/web/loggerweb/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27boq.searchlogginglogger.clicktracking.controllers\x27);\ngoog.provide(\x27boq.searchlogginglogger.clicktracking.controllers.ClickTrackingControllerResponse\x27);\ngoog.provide(\x27boq.searchlogginglogger.clicktracking.typedefs\x27);\ngoog.provide(\x27boq.searchlogginglogger.services\x27);\ngoog.provide(\x27boq.searchlogginglogger.services.SearchLoggingServiceResponse\x27);\ngoog.provide(\x27boq.searchlogginglogger.typedefs\x27);\n\ngoog.require(\x27social.analysis.services\x27);\ngoog.require(\x27social.analysis.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchlogginglogger.SearchLoggingService\x3e} */\nboq.searchlogginglogger.services.SEARCH_LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchlogginglogger.SearchLoggingService\x27),\n    [social.analysis.services.EVENT_LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!boq.searchlogginglogger.clicktracking.ClickTrackingController\x3e} */\nboq.searchlogginglogger.clicktracking.controllers.CLICK_TRACKING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27boq.searchlogginglogger.clicktracking.ClickTrackingController\x27),\n    [boq.searchlogginglogger.services.SEARCH_LOGGING]);\n\n/** @typedef {!boq.searchlogginglogger.clicktracking.ClickTrackingController} */\nboq.searchlogginglogger.clicktracking.typedefs.controllers_CLICK_TRACKING;\n\n/** @record */\nclass boqsearchloggingloggerclicktrackingcontrollersClickTrackingControllerResponse_service {\n  constructor() {\n    /** @type {!boq.searchlogginglogger.typedefs.services_SEARCH_LOGGING} */ this.searchLogging;\n  }\n}\n\n\n\n/** @record */\nboq.searchlogginglogger.clicktracking.controllers.ClickTrackingControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!boqsearchloggingloggerclicktrackingcontrollersClickTrackingControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!boq.searchlogginglogger.SearchLoggingService} */\nboq.searchlogginglogger.typedefs.services_SEARCH_LOGGING;\n\n/** @record */\nclass boqsearchloggingloggerservicesSearchLoggingServiceResponse_service {\n  constructor() {\n    /** @type {!social.analysis.typedefs.services_EVENT_LOGGING} */ this.eventLogging;\n  }\n}\n\n\n\n/** @record */\nboq.searchlogginglogger.services.SearchLoggingServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!boqsearchloggingloggerservicesSearchLoggingServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/search/boq/logging/web/loggerweb/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.data.interfaces\x27);\ngoog.provide(\x27wiz.data.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.InitialDataInterface\x3e} */\nwiz.data.interfaces.INITIAL_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.InitialDataInterface\x27));\n\n/** @typedef {!wiz.data.InitialDataInterface} */\nwiz.data.typedefs.interfaces_INITIAL_DATA;\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/appsframework/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.data.clients.appsframework.services\x27);\ngoog.provide(\x27wiz.data.clients.appsframework.services.AfDataFetcherServiceResponse\x27);\ngoog.provide(\x27wiz.data.clients.appsframework.services.InitialDataServiceResponse\x27);\ngoog.provide(\x27wiz.data.clients.appsframework.services.MaterializeInitialDataServiceResponse\x27);\ngoog.provide(\x27wiz.data.clients.appsframework.services.ResolverResponse\x27);\ngoog.provide(\x27wiz.data.clients.appsframework.typedefs\x27);\n\ngoog.require(\x27af.data.batchservices\x27);\ngoog.require(\x27af.data.cache.services\x27);\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.data.interfaces\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.appsframework.Resolver\x3e} */\nwiz.data.clients.appsframework.services.RESOLVER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.appsframework.Resolver\x27),\n    [wiz.data.interfaces.INITIAL_DATA]);\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.appsframework.InitialDataService\x3e} */\nwiz.data.clients.appsframework.services.INITIAL_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.appsframework.InitialDataService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.data.clients.appsframework.services.INITIAL_DATA,\n    xid(\x27wiz.data.InitialDataInterface\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.appsframework.MaterializeInitialDataService\x3e} */\nwiz.data.clients.appsframework.services.MATERIALIZE_INITIAL_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.appsframework.MaterializeInitialDataService\x27),\n    [af.data.cache.services.CACHE]);\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.data.clients.appsframework.services.MATERIALIZE_INITIAL_DATA,\n    xid(\x27wiz.data.clients.DataFetcher\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.appsframework.AfDataFetcherService\x3e} */\nwiz.data.clients.appsframework.services.AF_DATA_FETCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.appsframework.AfDataFetcherService\x27),\n    [af.data.batchservices.BATCH_FETCH, wiz.data.clients.appsframework.services.MATERIALIZE_INITIAL_DATA]);\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.data.clients.appsframework.services.AF_DATA_FETCHER,\n    xid(\x27wiz.data.clients.DataFetcher\x27));\n\n/** @typedef {!wiz.data.clients.appsframework.AfDataFetcherService} */\nwiz.data.clients.appsframework.typedefs.services_AF_DATA_FETCHER;\n\n/** @record */\nclass wizdataclientsappsframeworkservicesAfDataFetcherServiceResponse_appContext {\n  constructor() {\n    /** @type {!af.data.BatchFetchService} */ this.batchFetch;\n  }\n}\n\n\n\n/** @record */\nclass wizdataclientsappsframeworkservicesAfDataFetcherServiceResponse_preload {\n  constructor() {\n    /** @type {?} */ this.materializeInitialData;\n  }\n}\n\n\n\n/** @record */\nwiz.data.clients.appsframework.services.AfDataFetcherServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizdataclientsappsframeworkservicesAfDataFetcherServiceResponse_appContext} */ this.appContext;\n    /** @type {!wizdataclientsappsframeworkservicesAfDataFetcherServiceResponse_preload} */ this.preload;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.data.clients.appsframework.InitialDataService} */\nwiz.data.clients.appsframework.typedefs.services_INITIAL_DATA;\n\n/** @record */\nclass wizdataclientsappsframeworkservicesInitialDataServiceResponse_appContext {\n  constructor() {\n  }\n}\n\n\n\n/** @record */\nwiz.data.clients.appsframework.services.InitialDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizdataclientsappsframeworkservicesInitialDataServiceResponse_appContext} */ this.appContext;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.data.clients.appsframework.MaterializeInitialDataService} */\nwiz.data.clients.appsframework.typedefs.services_MATERIALIZE_INITIAL_DATA;\n\n/** @record */\nclass wizdataclientsappsframeworkservicesMaterializeInitialDataServiceResponse_appContext {\n  constructor() {\n    /** @type {!af.data.cache.CacheService} */ this.cache;\n  }\n}\n\n\n\n/** @record */\nwiz.data.clients.appsframework.services.MaterializeInitialDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizdataclientsappsframeworkservicesMaterializeInitialDataServiceResponse_appContext} */ this.appContext;\n  }\n};\n\n\n\n\n/** @typedef {!wiz.data.clients.appsframework.Resolver} */\nwiz.data.clients.appsframework.typedefs.services_RESOLVER;\n\n/** @record */\nclass wizdataclientsappsframeworkservicesResolverResponse_service {\n  constructor() {\n    /** @type {!wiz.data.InitialDataInterface} */ this.initialData;\n  }\n}\n\n\n\n/** @record */\nwiz.data.clients.appsframework.services.ResolverResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!wizdataclientsappsframeworkservicesResolverResponse_service} */ this.service;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/appsframework/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/gws/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.data.clients.gws.services\x27);\ngoog.provide(\x27wiz.data.clients.gws.services.InitialDataServiceResponse\x27);\ngoog.provide(\x27wiz.data.clients.gws.typedefs\x27);\n\ngoog.require(\x27wiz.addPossibleAtInterfaceImplementation\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.gws.InitialDataService\x3e} */\nwiz.data.clients.gws.services.INITIAL_DATA \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.gws.InitialDataService\x27));\nwiz.addPossibleAtInterfaceImplementation(\n    wiz.data.clients.gws.services.INITIAL_DATA,\n    xid(\x27wiz.data.InitialDataInterface\x27));\n\n/** @typedef {!wiz.data.clients.gws.InitialDataService} */\nwiz.data.clients.gws.typedefs.services_INITIAL_DATA;\n\n/** @record */\nwiz.data.clients.gws.services.InitialDataServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/gws/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/ids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27wiz.data.clients.interfaces\x27);\ngoog.provide(\x27wiz.data.clients.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!wiz.data.clients.DataFetcher\x3e} */\nwiz.data.clients.interfaces.DATA_FETCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27wiz.data.clients.DataFetcher\x27));\n\n/** @typedef {!wiz.data.clients.DataFetcher} */\nwiz.data.clients.typedefs.interfaces_DATA_FETCHER;\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/ids.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/library/models/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27searchbox.wiz.models.models\x27);\ngoog.provide(\x27searchbox.wiz.models.models.SearchboxConfigModelResponse\x27);\ngoog.provide(\x27searchbox.wiz.models.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.models.SearchboxConfigModel\x3e} */\nsearchbox.wiz.models.models.SEARCHBOX_CONFIG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.models.SearchboxConfigModel\x27));\n\n/** @typedef {!searchbox.wiz.models.SearchboxConfigModel} */\nsearchbox.wiz.models.typedefs.models_SEARCHBOX_CONFIG;\n\n/** @record */\nclass searchboxwizmodelsmodelsSearchboxConfigModelResponse_jsdata {\n  constructor() {\n    /** @type {!proto.gws.common.searchbox.protos.SearchboxConfig} */ this.searchboxConfig;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.models.models.SearchboxConfigModelResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ModelBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ModelBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizmodelsmodelsSearchboxConfigModelResponse_jsdata} */ this.jsdata;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/models/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/library/services/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27searchbox.wiz.services.services\x27);\ngoog.provide(\x27searchbox.wiz.services.services.DeviceHistoryServiceResponse\x27);\ngoog.provide(\x27searchbox.wiz.services.services.LoggingServiceResponse\x27);\ngoog.provide(\x27searchbox.wiz.services.services.SuggestionDialogServiceResponse\x27);\ngoog.provide(\x27searchbox.wiz.services.services.SuggestionsFetcherServiceResponse\x27);\ngoog.provide(\x27searchbox.wiz.services.services.ZeroPrefixCacheServiceResponse\x27);\ngoog.provide(\x27searchbox.wiz.services.typedefs\x27);\n\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.services.SuggestionDialogService\x3e} */\nsearchbox.wiz.services.services.SUGGESTION_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.services.SuggestionDialogService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.services.DeviceHistoryService\x3e} */\nsearchbox.wiz.services.services.DEVICE_HISTORY \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.services.DeviceHistoryService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.services.LoggingService\x3e} */\nsearchbox.wiz.services.services.LOGGING \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.services.LoggingService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.services.ZeroPrefixCacheService\x3e} */\nsearchbox.wiz.services.services.ZERO_PREFIX_CACHE \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.services.ZeroPrefixCacheService\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.services.SuggestionsFetcherService\x3e} */\nsearchbox.wiz.services.services.SUGGESTIONS_FETCHER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.services.SuggestionsFetcherService\x27),\n    [searchbox.wiz.services.services.DEVICE_HISTORY, searchbox.wiz.services.services.LOGGING, searchbox.wiz.services.services.ZERO_PREFIX_CACHE]);\n\n/** @typedef {!searchbox.wiz.services.DeviceHistoryService} */\nsearchbox.wiz.services.typedefs.services_DEVICE_HISTORY;\n\n/** @record */\nsearchbox.wiz.services.services.DeviceHistoryServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.services.LoggingService} */\nsearchbox.wiz.services.typedefs.services_LOGGING;\n\n/** @record */\nsearchbox.wiz.services.services.LoggingServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.services.SuggestionDialogService} */\nsearchbox.wiz.services.typedefs.services_SUGGESTION_DIALOG;\n\n/** @record */\nsearchbox.wiz.services.services.SuggestionDialogServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.services.SuggestionsFetcherService} */\nsearchbox.wiz.services.typedefs.services_SUGGESTIONS_FETCHER;\n\n/** @record */\nclass searchboxwizservicesservicesSuggestionsFetcherServiceResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_DEVICE_HISTORY} */ this.deviceHistory;\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n    /** @type {!searchbox.wiz.services.typedefs.services_ZERO_PREFIX_CACHE} */ this.zeroPrefixCache;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.services.services.SuggestionsFetcherServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizservicesservicesSuggestionsFetcherServiceResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.services.ZeroPrefixCacheService} */\nsearchbox.wiz.services.typedefs.services_ZERO_PREFIX_CACHE;\n\n/** @record */\nsearchbox.wiz.services.services.ZeroPrefixCacheServiceResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ObjectBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ObjectBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/clients/gws/desktop/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.ChipControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.ClientAdapterControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.InputBoxControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.SearchByImageToolControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.SuggestionsBoxControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.controllers.ZeroPrefixInitiatorControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.desktop.typedefs\x27);\n\ngoog.require(\x27searchbox.wiz.models.models\x27);\ngoog.require(\x27searchbox.wiz.models.typedefs\x27);\ngoog.require(\x27searchbox.wiz.services.services\x27);\ngoog.require(\x27searchbox.wiz.services.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.ZeroPrefixInitiatorController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.ZERO_PREFIX_INITIATOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.ZeroPrefixInitiatorController\x27),\n    [searchbox.wiz.services.services.SUGGESTIONS_FETCHER, searchbox.wiz.models.models.SEARCHBOX_CONFIG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.SuggestionsBoxController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.SUGGESTIONS_BOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.SuggestionsBoxController\x27),\n    [searchbox.wiz.services.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.InputBoxController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.INPUT_BOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.InputBoxController\x27),\n    [searchbox.wiz.services.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.SearchByImageToolController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.SEARCH_BY_IMAGE_TOOL \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.SearchByImageToolController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.ClientAdapterController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.CLIENT_ADAPTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.ClientAdapterController\x27),\n    [searchbox.wiz.gws.desktop.controllers.INPUT_BOX, searchbox.wiz.gws.desktop.controllers.SUGGESTIONS_BOX, searchbox.wiz.services.services.DEVICE_HISTORY, searchbox.wiz.services.services.LOGGING, searchbox.wiz.services.services.SUGGESTIONS_FETCHER, searchbox.wiz.models.models.SEARCHBOX_CONFIG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.desktop.ChipController\x3e} */\nsearchbox.wiz.gws.desktop.controllers.CHIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.desktop.ChipController\x27));\n\n/** @typedef {!searchbox.wiz.gws.desktop.ChipController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_CHIP;\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.ChipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.desktop.ClientAdapterController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_CLIENT_ADAPTER;\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_preload {\n  constructor() {\n    /** @type {?} */ this.inputBox;\n    /** @type {?} */ this.suggestionsBox;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_DEVICE_HISTORY} */ this.deviceHistory;\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n    /** @type {!searchbox.wiz.services.typedefs.services_SUGGESTIONS_FETCHER} */ this.suggestionsFetcher;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.inputBox;\n    /** @type {?} */ this.suggestionsBox;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_model {\n  constructor() {\n    /** @type {!searchbox.wiz.models.typedefs.models_SEARCHBOX_CONFIG} */ this.searchboxConfig;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.ClientAdapterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_preload} */ this.preload;\n    /** @type {!searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_service} */ this.service;\n    /** @type {!searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_controller} */ this.controller;\n    /** @type {!searchboxwizgwsdesktopcontrollersClientAdapterControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.desktop.InputBoxController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_INPUT_BOX;\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersInputBoxControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.InputBoxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsdesktopcontrollersInputBoxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.desktop.SearchByImageToolController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_SEARCH_BY_IMAGE_TOOL;\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.SearchByImageToolControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.desktop.SuggestionsBoxController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_SUGGESTIONS_BOX;\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersSuggestionsBoxControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.SuggestionsBoxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsdesktopcontrollersSuggestionsBoxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.desktop.ZeroPrefixInitiatorController} */\nsearchbox.wiz.gws.desktop.typedefs.controllers_ZERO_PREFIX_INITIATOR;\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersZeroPrefixInitiatorControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_SUGGESTIONS_FETCHER} */ this.suggestionsFetcher;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsdesktopcontrollersZeroPrefixInitiatorControllerResponse_model {\n  constructor() {\n    /** @type {!searchbox.wiz.models.typedefs.models_SEARCHBOX_CONFIG} */ this.searchboxConfig;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.desktop.controllers.ZeroPrefixInitiatorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsdesktopcontrollersZeroPrefixInitiatorControllerResponse_service} */ this.service;\n    /** @type {!searchboxwizgwsdesktopcontrollersZeroPrefixInitiatorControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/desktop/wizids.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/clients/gws/mobile/wizids.js";
eval("/**\n * @fileoverview Generated by java/com/google/apps/wiz/tools/WizIdGenerator.java\n * -- Do not edit!\n * For details see: http://go/wizids\n * @enhance {wiz.inject.Registry}\n * @public\n */\n\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.ChipControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.ClearButtonControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.ClientAdapterControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.DragonflyButtonsControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.InputBoxControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.SnackBarControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.SuggestionDialogControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.SuggestionsBoxControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.controllers.ZeroPrefixInitiatorControllerResponse\x27);\ngoog.provide(\x27searchbox.wiz.gws.mobile.typedefs\x27);\n\ngoog.require(\x27gws.fruit.dialog.controllers\x27);\ngoog.require(\x27searchbox.wiz.models.models\x27);\ngoog.require(\x27searchbox.wiz.models.typedefs\x27);\ngoog.require(\x27searchbox.wiz.services.services\x27);\ngoog.require(\x27searchbox.wiz.services.typedefs\x27);\ngoog.require(\x27wiz.objectIdWithAutoRegistration\x27);\ngoog.require(\x27xid\x27);\n\ngoog.scope(() \x3d\x3e {\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.ZeroPrefixInitiatorController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.ZERO_PREFIX_INITIATOR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.ZeroPrefixInitiatorController\x27),\n    [searchbox.wiz.services.services.DEVICE_HISTORY, searchbox.wiz.services.services.SUGGESTIONS_FETCHER, searchbox.wiz.models.models.SEARCHBOX_CONFIG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.SuggestionDialogController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.SUGGESTION_DIALOG \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.SuggestionDialogController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.SnackBarController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.SNACK_BAR \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.SnackBarController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.SuggestionsBoxController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.SUGGESTIONS_BOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.SuggestionsBoxController\x27),\n    [gws.fruit.dialog.controllers.DIALOG, searchbox.wiz.services.services.LOGGING, searchbox.wiz.services.services.SUGGESTION_DIALOG]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.DragonflyButtonsController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.DRAGONFLY_BUTTONS \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.DragonflyButtonsController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.ChipController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.CHIP \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.ChipController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.ClearButtonController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.CLEAR_BUTTON \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.ClearButtonController\x27));\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.InputBoxController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.INPUT_BOX \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.InputBoxController\x27),\n    [searchbox.wiz.services.services.LOGGING]);\n\n\n/** @const {!fava.services.ServiceId\x3c!searchbox.wiz.gws.mobile.ClientAdapterController\x3e} */\nsearchbox.wiz.gws.mobile.controllers.CLIENT_ADAPTER \x3d wiz.objectIdWithAutoRegistration(\n    xid(\x27searchbox.wiz.gws.mobile.ClientAdapterController\x27),\n    [searchbox.wiz.gws.mobile.controllers.CLEAR_BUTTON, searchbox.wiz.gws.mobile.controllers.INPUT_BOX, searchbox.wiz.gws.mobile.controllers.SUGGESTIONS_BOX, searchbox.wiz.services.services.DEVICE_HISTORY, searchbox.wiz.services.services.LOGGING, searchbox.wiz.services.services.SUGGESTIONS_FETCHER, searchbox.wiz.models.models.SEARCHBOX_CONFIG]);\n\n/** @typedef {!searchbox.wiz.gws.mobile.ChipController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_CHIP;\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.ChipControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.ClearButtonController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_CLEAR_BUTTON;\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.ClearButtonControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.ClientAdapterController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_CLIENT_ADAPTER;\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_preload {\n  constructor() {\n    /** @type {?} */ this.clearButton;\n    /** @type {?} */ this.inputBox;\n    /** @type {?} */ this.suggestionsBox;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_DEVICE_HISTORY} */ this.deviceHistory;\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n    /** @type {!searchbox.wiz.services.typedefs.services_SUGGESTIONS_FETCHER} */ this.suggestionsFetcher;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.clearButton;\n    /** @type {?} */ this.inputBox;\n    /** @type {?} */ this.suggestionsBox;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_model {\n  constructor() {\n    /** @type {!searchbox.wiz.models.typedefs.models_SEARCHBOX_CONFIG} */ this.searchboxConfig;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.ClientAdapterControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_preload} */ this.preload;\n    /** @type {!searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_service} */ this.service;\n    /** @type {!searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_controller} */ this.controller;\n    /** @type {!searchboxwizgwsmobilecontrollersClientAdapterControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.DragonflyButtonsController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_DRAGONFLY_BUTTONS;\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.DragonflyButtonsControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.InputBoxController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_INPUT_BOX;\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersInputBoxControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.InputBoxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsmobilecontrollersInputBoxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.SnackBarController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_SNACK_BAR;\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.SnackBarControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.SuggestionDialogController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_SUGGESTION_DIALOG;\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.SuggestionDialogControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.SuggestionsBoxController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_SUGGESTIONS_BOX;\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_preload {\n  constructor() {\n    /** @type {?} */ this.dialog;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_controller {\n  constructor() {\n    /** @type {?} */ this.dialog;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_LOGGING} */ this.logging;\n    /** @type {!searchbox.wiz.services.typedefs.services_SUGGESTION_DIALOG} */ this.suggestionDialog;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.SuggestionsBoxControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_preload} */ this.preload;\n    /** @type {!searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_controller} */ this.controller;\n    /** @type {!searchboxwizgwsmobilecontrollersSuggestionsBoxControllerResponse_service} */ this.service;\n  }\n};\n\n\n\n\n/** @typedef {!searchbox.wiz.gws.mobile.ZeroPrefixInitiatorController} */\nsearchbox.wiz.gws.mobile.typedefs.controllers_ZERO_PREFIX_INITIATOR;\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersZeroPrefixInitiatorControllerResponse_service {\n  constructor() {\n    /** @type {!searchbox.wiz.services.typedefs.services_DEVICE_HISTORY} */ this.deviceHistory;\n    /** @type {!searchbox.wiz.services.typedefs.services_SUGGESTIONS_FETCHER} */ this.suggestionsFetcher;\n  }\n}\n\n\n\n/** @record */\nclass searchboxwizgwsmobilecontrollersZeroPrefixInitiatorControllerResponse_model {\n  constructor() {\n    /** @type {!searchbox.wiz.models.typedefs.models_SEARCHBOX_CONFIG} */ this.searchboxConfig;\n  }\n}\n\n\n\n/** @record */\nsearchbox.wiz.gws.mobile.controllers.ZeroPrefixInitiatorControllerResponse \x3d class {\n  constructor() {\n    /** @type {!wiz.ControllerBaseResponse} */ this.superResponse;\n    /** @type {!wiz.ControllerBaseResponse} */ this.super_response;\n    /** @type {!searchboxwizgwsmobilecontrollersZeroPrefixInitiatorControllerResponse_service} */ this.service;\n    /** @type {!searchboxwizgwsmobilecontrollersZeroPrefixInitiatorControllerResponse_model} */ this.model;\n  }\n};\n\n\n\n});\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/wizids.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy1f');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy1f');

}catch(e){_DumpException(e)}
/* _Module_:sy43 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy43');
var $googDebugFname="javascript/closure/uri/uri.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * Use goog.Uri(string) to parse a URI string.  Use goog.Uri.create(...) to\n * create a new instance of the goog.Uri object from Uri parts.\n *\n * e.g: \x3ccode\x3evar myUri \x3d new goog.Uri(window.location);\x3c/code\x3e\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n *\n * @author msamuel@google.com (Mike Samuel)\n * @author pupius@google.com (Dan Pupius) - Ported to Closure\n * @author jonp@google.com (Jon Perlow) - Optimized for IE6\n * @author micapolos@google.com (Michal Pociecha-Los) - Dot segments removal\n */\n\ngoog.provide(\x27goog.Uri\x27);\ngoog.provide(\x27goog.Uri.QueryData\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.structs\x27);\ngoog.require(\x27goog.structs.Map\x27);\ngoog.require(\x27goog.uri.utils\x27);\ngoog.require(\x27goog.uri.utils.ComponentIndex\x27);\ngoog.require(\x27goog.uri.utils.StandardQueryParam\x27);\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The \x3ccode\x3egetXyz\x3c/code\x3e/\x3ccode\x3esetXyz\x3c/code\x3e methods return the decoded part\n * -- so\x3ccode\x3egoog.Uri.parse(\x27/foo%20bar\x27).getPath()\x3c/code\x3e will return the\n * decoded path, \x3ccode\x3e/foo bar\x3c/code\x3e.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * \x3ccode\x3egoog.Uri.parse(\x27rel%61tive/path%2fto/resource\x27).getPath()\x3c/code\x3e will\n * return \x3ccode\x3erelative/path%2fto/resource\x3c/code\x3e.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren\x27t escaped but don\x27t cause\n * ambiguities will not cause parse failures.\n *\n * All setters return \x3ccode\x3ethis\x3c/code\x3e and so may be chained, a la\n * \x3ccode\x3egoog.Uri.parse(\x27/foo\x27).setFragment(\x27part\x27).toString()\x3c/code\x3e.\n *\n * @param {*\x3d} opt_uri Optional string URI to parse\n *        (use goog.Uri.create() to create a URI from parts), or if\n *        a goog.Uri is passed, a clone is created.\n * @param {boolean\x3d} opt_ignoreCase If true, #getParameterValue will ignore\n * the case of the parameter name.\n *\n * @throws URIError If opt_uri is provided and URI is malformed (that is,\n *     if decodeURIComponent fails on any of the URI components).\n * @constructor\n * @struct\n */\ngoog.Uri \x3d function(opt_uri, opt_ignoreCase) {\n  /**\n   * Scheme such as \x22http\x22.\n   * @private {string}\n   */\n  this.scheme_ \x3d \x27\x27;\n\n  /**\n   * User credentials in the form \x22username:password\x22.\n   * @private {string}\n   */\n  this.userInfo_ \x3d \x27\x27;\n\n  /**\n   * Domain part, e.g. \x22www.google.com\x22.\n   * @private {string}\n   */\n  this.domain_ \x3d \x27\x27;\n\n  /**\n   * Port, e.g. 8080.\n   * @private {?number}\n   */\n  this.port_ \x3d null;\n\n  /**\n   * Path, e.g. \x22/tests/img.png\x22.\n   * @private {string}\n   */\n  this.path_ \x3d \x27\x27;\n\n  /**\n   * The fragment without the #.\n   * @private {string}\n   */\n  this.fragment_ \x3d \x27\x27;\n\n  /**\n   * Whether or not this Uri should be treated as Read Only.\n   * @private {boolean}\n   */\n  this.isReadOnly_ \x3d false;\n\n  /**\n   * Whether or not to ignore case when comparing query params.\n   * @private {boolean}\n   */\n  this.ignoreCase_ \x3d false;\n\n  /**\n   * Object representing query data.\n   * @private {!goog.Uri.QueryData}\n   */\n  this.queryData_;\n\n  // Parse in the uri string\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ \x3d\n        goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri \x26\x26 (m \x3d goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n\n    // Set the parts -- decoding as we do so.\n    // COMPATIBILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || \x27\x27, true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || \x27\x27, true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || \x27\x27, true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || \x27\x27, true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || \x27\x27, true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || \x27\x27, true);\n\n  } else {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n    this.queryData_ \x3d new goog.Uri.QueryData(null, null, this.ignoreCase_);\n  }\n};\n\n\n/**\n * Parameter name added to stop caching.\n * @type {string}\n */\ngoog.Uri.RANDOM_PARAM \x3d goog.uri.utils.StandardQueryParam.RANDOM;\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString \x3d function() {\n  var out \x3d [];\n\n  var scheme \x3d this.getScheme();\n  if (scheme) {\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n        \x27:\x27);\n  }\n\n  var domain \x3d this.getDomain();\n  if (domain || scheme \x3d\x3d \x27file\x27) {\n    out.push(\x27//\x27);\n\n    var userInfo \x3d this.getUserInfo();\n    if (userInfo) {\n      out.push(\n          goog.Uri.encodeSpecialChars_(\n              userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n          \x27@\x27);\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n\n    var port \x3d this.getPort();\n    if (port !\x3d null) {\n      out.push(\x27:\x27, String(port));\n    }\n  }\n\n  var path \x3d this.getPath();\n  if (path) {\n    if (this.hasDomain() \x26\x26 path.charAt(0) !\x3d \x27/\x27) {\n      out.push(\x27/\x27);\n    }\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            path, path.charAt(0) \x3d\x3d \x27/\x27 ? goog.Uri.reDisallowedInAbsolutePath_ :\n                                          goog.Uri.reDisallowedInRelativePath_,\n            true));\n  }\n\n  var query \x3d this.getEncodedQuery();\n  if (query) {\n    out.push(\x27?\x27, query);\n  }\n\n  var fragment \x3d this.getFragment();\n  if (fragment) {\n    out.push(\n        \x27#\x27, goog.Uri.encodeSpecialChars_(\n                 fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join(\x27\x27);\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:\x3cbr\x3e\n * 1. foo - replaces the last part of the path, the whole query and fragment\x3cbr\x3e\n * 2. /foo - replaces the the path, the query and fragment\x3cbr\x3e\n * 3. //foo - replaces everything from the domain on.  foo is a domain name\x3cbr\x3e\n * 4. ?foo - replace the query and fragment\x3cbr\x3e\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \x22..\x22 and \x22.\x22\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {!goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve \x3d function(relativeUri) {\n\n  var absoluteUri \x3d this.clone();\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden \x3d relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden \x3d relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden \x3d relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden \x3d relativeUri.hasPort();\n  }\n\n  var path \x3d relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden \x3d relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) !\x3d \x27/\x27) {\n        // path is relative\n        if (this.hasDomain() \x26\x26 !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path \x3d \x27/\x27 + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex \x3d absoluteUri.getPath().lastIndexOf(\x27/\x27);\n          if (lastSlashIndex !\x3d -1) {\n            path \x3d absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path \x3d goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden \x3d relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden \x3d relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone \x3d function() {\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme \x3d function() {\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @throws URIError If opt_decode is true and newScheme is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newScheme New scheme value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme \x3d function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  this.scheme_ \x3d\n      opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ \x3d this.scheme_.replace(/:$/, \x27\x27);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme \x3d function() {\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo \x3d function() {\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @throws URIError If opt_decode is true and newUserInfo is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo \x3d function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ \x3d\n      opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo \x3d function() {\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain \x3d function() {\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @throws URIError If opt_decode is true and newDomain is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newDomain New domain value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain \x3d function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ \x3d\n      opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain \x3d function() {\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort \x3d function() {\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort \x3d function(newPort) {\n  this.enforceReadOnly();\n\n  if (newPort) {\n    newPort \x3d Number(newPort);\n    if (isNaN(newPort) || newPort \x3c 0) {\n      throw new Error(\x27Bad port number \x27 + newPort);\n    }\n    this.port_ \x3d newPort;\n  } else {\n    this.port_ \x3d null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort \x3d function() {\n  return this.port_ !\x3d null;\n};\n\n\n/**\n  * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath \x3d function() {\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @throws URIError If opt_decode is true and newPath is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newPath New path value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath \x3d function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath \x3d function() {\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery \x3d function() {\n  return this.queryData_.toString() !\x3d\x3d \x27\x27;\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData \x3d function(queryData, opt_decode) {\n  this.enforceReadOnly();\n\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ \x3d queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // opt_decode flag is not true.\n      queryData \x3d goog.Uri.encodeSpecialChars_(\n          queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ \x3d new goog.Uri.QueryData(queryData, null, this.ignoreCase_);\n  }\n\n  return this;\n};\n\n\n/**\n * Sets the URI query.\n * @param {string} newQuery New query value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQuery \x3d function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery \x3d function() {\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery \x3d function() {\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData \x3d function() {\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n *\n * Warning: This method, unlike other getter methods, returns encoded\n * value, instead of decoded one.\n */\ngoog.Uri.prototype.getQuery \x3d function() {\n  return this.getEncodedQuery();\n};\n\n\n/**\n * Sets the value of the named query parameters, clearing previous values for\n * that key.\n *\n * @param {string} key The parameter to set.\n * @param {*} value The new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValue \x3d function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\n\n\n/**\n * Sets the values of the named query parameters, clearing previous values for\n * that key.  Not new values will currently be moved to the end of the query\n * string.\n *\n * So, \x3ccode\x3egoog.Uri.parse(\x27foo?a\x3db\x26c\x3dd\x26e\x3df\x27).setParameterValues(\x27c\x27, [\x27new\x27])\n * \x3c/code\x3e yields \x3ctt\x3efoo?a\x3db\x26e\x3df\x26c\x3dnew\x3c/tt\x3e.\x3c/p\x3e\n *\n * @param {string} key The parameter to set.\n * @param {*} values The new values. If values is a single\n *     string then it will be treated as the sole value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValues \x3d function(key, values) {\n  this.enforceReadOnly();\n\n  if (!goog.isArray(values)) {\n    values \x3d [String(values)];\n  }\n\n  this.queryData_.setValues(key, values);\n\n  return this;\n};\n\n\n/**\n * Returns the value\x3cb\x3es\x3c/b\x3e for a given cgi parameter as a list of decoded\n * query parameter values.\n * @param {string} name The parameter to get values for.\n * @return {!Array\x3c?\x3e} The values for a given cgi parameter as a list of\n *     decoded query parameter values.\n */\ngoog.Uri.prototype.getParameterValues \x3d function(name) {\n  return this.queryData_.getValues(name);\n};\n\n\n/**\n * Returns the first value for a given cgi parameter or undefined if the given\n * parameter name does not appear in the query string.\n * @param {string} paramName Unescaped parameter name.\n * @return {string|undefined} The first value for a given cgi parameter or\n *     undefined if the given parameter name does not appear in the query\n *     string.\n */\ngoog.Uri.prototype.getParameterValue \x3d function(paramName) {\n  return /** @type {string|undefined} */ (this.queryData_.get(paramName));\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment \x3d function() {\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @throws URIError If opt_decode is true and newFragment is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newFragment New fragment value.\n * @param {boolean\x3d} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment \x3d function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ \x3d\n      opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment \x3d function() {\n  return !!this.fragment_;\n};\n\n\n/**\n * Returns true if this has the same domain as that of uri2.\n * @param {!goog.Uri} uri2 The URI object to compare to.\n * @return {boolean} true if same domain; false otherwise.\n */\ngoog.Uri.prototype.hasSameDomainAs \x3d function(uri2) {\n  return ((!this.hasDomain() \x26\x26 !uri2.hasDomain()) ||\n          this.getDomain() \x3d\x3d uri2.getDomain()) \x26\x26\n      ((!this.hasPort() \x26\x26 !uri2.hasPort()) ||\n       this.getPort() \x3d\x3d uri2.getPort());\n};\n\n\n/**\n * Adds a random parameter to the Uri.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.makeUnique \x3d function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n\n  return this;\n};\n\n\n/**\n * Removes the named query parameter.\n *\n * @param {string} key The parameter to remove.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.removeParameter \x3d function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\n\n\n/**\n * Sets whether Uri is read only. If this goog.Uri is read-only,\n * enforceReadOnly_ will be called at the start of any function that may modify\n * this Uri.\n * @param {boolean} isReadOnly whether this goog.Uri should be read only.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setReadOnly \x3d function(isReadOnly) {\n  this.isReadOnly_ \x3d isReadOnly;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI is read only.\n */\ngoog.Uri.prototype.isReadOnly \x3d function() {\n  return this.isReadOnly_;\n};\n\n\n/**\n * Checks if this Uri has been marked as read only, and if so, throws an error.\n * This should be called whenever any modifying function is called.\n */\ngoog.Uri.prototype.enforceReadOnly \x3d function() {\n  if (this.isReadOnly_) {\n    throw new Error(\x27Tried to modify a read-only Uri\x27);\n  }\n};\n\n\n/**\n * Sets whether to ignore case.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  this.ignoreCase_ \x3d ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether to ignore case.\n */\ngoog.Uri.prototype.getIgnoreCase \x3d function() {\n  return this.ignoreCase_;\n};\n\n\n//\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\n// Static members\n//\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\n\n\n/**\n * Creates a uri from the string form.  Basically an alias of new goog.Uri().\n * If a Uri object is passed to parse then it will return a clone of the object.\n *\n * @throws URIError If parsing the URI is malformed. The passed URI components\n *     should all be parseable by decodeURIComponent.\n * @param {*} uri Raw URI string or instance of Uri\n *     object.\n * @param {boolean\x3d} opt_ignoreCase Whether to ignore the case of parameter\n * names in #getParameterValue.\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.parse \x3d function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() :\n                                   new goog.Uri(uri, opt_ignoreCase);\n};\n\n\n/**\n * Creates a new goog.Uri object from unencoded parts.\n *\n * @param {?string\x3d} opt_scheme Scheme/protocol or full URI to parse.\n * @param {?string\x3d} opt_userInfo username:password.\n * @param {?string\x3d} opt_domain www.google.com.\n * @param {?number\x3d} opt_port 9830.\n * @param {?string\x3d} opt_path /some/path/to/a/file.html.\n * @param {string|goog.Uri.QueryData\x3d} opt_query a\x3d1\x26b\x3d2.\n * @param {?string\x3d} opt_fragment The fragment without the #.\n * @param {boolean\x3d} opt_ignoreCase Whether to ignore parameter name case in\n *     #getParameterValue.\n *\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.create \x3d function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query,\n    opt_fragment, opt_ignoreCase) {\n\n  var uri \x3d new goog.Uri(null, opt_ignoreCase);\n\n  // Only set the parts if they are defined and not empty strings.\n  opt_scheme \x26\x26 uri.setScheme(opt_scheme);\n  opt_userInfo \x26\x26 uri.setUserInfo(opt_userInfo);\n  opt_domain \x26\x26 uri.setDomain(opt_domain);\n  opt_port \x26\x26 uri.setPort(opt_port);\n  opt_path \x26\x26 uri.setPath(opt_path);\n  opt_query \x26\x26 uri.setQueryData(opt_query);\n  opt_fragment \x26\x26 uri.setFragment(opt_fragment);\n\n  return uri;\n};\n\n\n/**\n * Resolves a relative Uri against a base Uri, accepting both strings and\n * Uri objects.\n *\n * @param {*} base Base Uri.\n * @param {*} rel Relative Uri.\n * @return {!goog.Uri} Resolved uri.\n */\ngoog.Uri.resolve \x3d function(base, rel) {\n  if (!(base instanceof goog.Uri)) {\n    base \x3d goog.Uri.parse(base);\n  }\n\n  if (!(rel instanceof goog.Uri)) {\n    rel \x3d goog.Uri.parse(rel);\n  }\n\n  return base.resolve(rel);\n};\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments \x3d function(path) {\n  if (path \x3d\x3d \x27..\x27 || path \x3d\x3d \x27.\x27) {\n    return \x27\x27;\n\n  } else if (\n      !goog.string.contains(path, \x27./\x27) \x26\x26 !goog.string.contains(path, \x27/.\x27)) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash \x3d goog.string.startsWith(path, \x27/\x27);\n    var segments \x3d path.split(\x27/\x27);\n    var out \x3d [];\n\n    for (var pos \x3d 0; pos \x3c segments.length;) {\n      var segment \x3d segments[pos++];\n\n      if (segment \x3d\x3d \x27.\x27) {\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x27\x27);\n        }\n      } else if (segment \x3d\x3d \x27..\x27) {\n        if (out.length \x3e 1 || out.length \x3d\x3d 1 \x26\x26 out[0] !\x3d \x27\x27) {\n          out.pop();\n        }\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x27\x27);\n        }\n      } else {\n        out.push(segment);\n        leadingSlash \x3d true;\n      }\n    }\n\n    return out.join(\x27/\x27);\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn\x27t defined or empty.\n * @throws URIError If decodeURIComponent fails to decode val.\n * @param {string|undefined} val Value to decode.\n * @param {boolean\x3d} opt_preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ \x3d function(val, opt_preserveReserved) {\n  // Don\x27t use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return \x27\x27;\n  }\n\n  // decodeURI has the same output for \x27%2f\x27 and \x27%252f\x27. We double encode %25\n  // so that we can distinguish between the 2 inputs. This is later undone by\n  // removeDoubleEncoding_.\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, \x27%2525\x27)) :\n                                decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren\x27t\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean\x3d} opt_removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart \x3d\x3d null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ \x3d function(\n    unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (goog.isString(unescapedPart)) {\n    var encoded \x3d encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded \x3d goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ \x3d function(ch) {\n  var n \x3d ch.charCodeAt(0);\n  return \x27%\x27 + ((n \x3e\x3e 4) \x26 0xf).toString(16) + (n \x26 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ \x3d function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, \x27%$1\x27);\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ \x3d /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ \x3d /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ \x3d /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ \x3d /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ \x3d /#/g;\n\n\n/**\n * Checks whether two URIs have the same domain.\n * @param {string} uri1String First URI string.\n * @param {string} uri2String Second URI string.\n * @return {boolean} true if the two URIs have the same domain; false otherwise.\n */\ngoog.Uri.haveSameDomain \x3d function(uri1String, uri2String) {\n  // Differs from goog.uri.utils.haveSameDomain, since this ignores scheme.\n  // TODO(gboyer): Have this just call goog.uri.util.haveSameDomain.\n  var pieces1 \x3d goog.uri.utils.split(uri1String);\n  var pieces2 \x3d goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] \x3d\x3d\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] \x26\x26\n      pieces1[goog.uri.utils.ComponentIndex.PORT] \x3d\x3d\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string\x3d} opt_query Optional encoded query string to parse into\n *     the object.\n * @param {goog.Uri\x3d} opt_uri Optional uri object that should have its\n *     cache invalidated when this object updates. Deprecated -- this\n *     is no longer required.\n * @param {boolean\x3d} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @constructor\n * @struct\n * @final\n */\ngoog.Uri.QueryData \x3d function(opt_query, opt_uri, opt_ignoreCase) {\n  /**\n   * The map containing name/value or name/array-of-values pairs.\n   * May be null if it requires parsing from the query string.\n   *\n   * We need to use a Map because we cannot guarantee that the key names will\n   * not be problematic for IE.\n   *\n   * @private {goog.structs.Map\x3cstring, !Array\x3c*\x3e\x3e}\n   */\n  this.keyMap_ \x3d null;\n\n  /**\n   * The number of params, or null if it requires computing.\n   * @private {?number}\n   */\n  this.count_ \x3d null;\n\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @private {?string}\n   */\n  this.encodedQuery_ \x3d opt_query || null;\n\n  /**\n   * If true, ignore the case of the parameter name in #get.\n   * @private {boolean}\n   */\n  this.ignoreCase_ \x3d !!opt_ignoreCase;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ \x3d function() {\n  if (!this.keyMap_) {\n    this.keyMap_ \x3d new goog.structs.Map();\n    this.count_ \x3d 0;\n    if (this.encodedQuery_) {\n      var self \x3d this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\n\n\n/**\n * Creates a new query data instance from a map of names and values.\n *\n * @param {!goog.structs.Map\x3cstring, ?\x3e|!Object} map Map of string parameter\n *     names to parameter value. If parameter value is an array, it is\n *     treated as if the key maps to each individual value in the\n *     array.\n * @param {goog.Uri\x3d} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean\x3d} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromMap \x3d function(map, opt_uri, opt_ignoreCase) {\n  var keys \x3d goog.structs.getKeys(map);\n  if (typeof keys \x3d\x3d \x27undefined\x27) {\n    throw new Error(\x27Keys are undefined\x27);\n  }\n\n  var queryData \x3d new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  var values \x3d goog.structs.getValues(map);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    var key \x3d keys[i];\n    var value \x3d values[i];\n    if (!goog.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\n\n\n/**\n * Creates a new query data instance from parallel arrays of parameter names\n * and values. Allows for duplicate parameter names. Throws an error if the\n * lengths of the arrays differ.\n *\n * @param {!Array\x3cstring\x3e} keys Parameter names.\n * @param {!Array\x3c?\x3e} values Parameter values.\n * @param {goog.Uri\x3d} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean\x3d} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromKeysValues \x3d function(\n    keys, values, opt_uri, opt_ignoreCase) {\n  if (keys.length !\x3d values.length) {\n    throw new Error(\x27Mismatched lengths for keys/values\x27);\n  }\n  var queryData \x3d new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  key \x3d this.getKeyName_(key);\n  var values \x3d this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, (values \x3d []));\n  }\n  values.push(value);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Removes all the params with the given key.\n * @param {string} key Name.\n * @return {boolean} Whether any parameter was removed.\n */\ngoog.Uri.QueryData.prototype.remove \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n\n  key \x3d this.getKeyName_(key);\n  if (this.keyMap_.containsKey(key)) {\n    this.invalidateCache_();\n\n    // Decrement parameter count.\n    this.count_ \x3d\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.remove(key);\n  }\n  return false;\n};\n\n\n/**\n * Clears the parameters.\n */\ngoog.Uri.QueryData.prototype.clear \x3d function() {\n  this.invalidateCache_();\n  this.keyMap_ \x3d null;\n  this.count_ \x3d 0;\n};\n\n\n/**\n * @return {boolean} Whether we have any parameters.\n */\ngoog.Uri.QueryData.prototype.isEmpty \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_ \x3d\x3d 0;\n};\n\n\n/**\n * Whether there is a parameter with the given name\n * @param {string} key The parameter name to check for.\n * @return {boolean} Whether there is a parameter with the given name.\n */\ngoog.Uri.QueryData.prototype.containsKey \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n  key \x3d this.getKeyName_(key);\n  return this.keyMap_.containsKey(key);\n};\n\n\n/**\n * Whether there is a parameter with the given value.\n * @param {*} value The value to check for.\n * @return {boolean} Whether there is a parameter with the given value.\n */\ngoog.Uri.QueryData.prototype.containsValue \x3d function(value) {\n  // NOTE(arv): This solution goes through all the params even if it was the\n  // first param. We can get around this by not reusing code or by switching to\n  // iterators.\n  var vals \x3d this.getValues();\n  return goog.array.contains(vals, value);\n};\n\n\n/**\n * Runs a callback on every key-value pair in the map, including duplicate keys.\n * This won\x27t maintain original order when duplicate keys are interspersed (like\n * getKeys() / getValues()).\n * @param {function(this:SCOPE, ?, string, !goog.Uri.QueryData)} f\n * @param {SCOPE\x3d} opt_scope The value of \x22this\x22 inside f.\n * @template SCOPE\n */\ngoog.Uri.QueryData.prototype.forEach \x3d function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    goog.array.forEach(values, function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\n\n\n/**\n * Returns all the keys of the parameters. If a key is used multiple times\n * it will be included multiple times in the returned array\n * @return {!Array\x3cstring\x3e} All the keys of the parameters.\n */\ngoog.Uri.QueryData.prototype.getKeys \x3d function() {\n  this.ensureKeyMapInitialized_();\n  // We need to get the values to know how many keys to add.\n  var vals \x3d this.keyMap_.getValues();\n  var keys \x3d this.keyMap_.getKeys();\n  var rv \x3d [];\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    var val \x3d vals[i];\n    for (var j \x3d 0; j \x3c val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Returns all the values of the parameters with the given name. If the query\n * data has no such key this will return an empty array. If no key is given\n * all values wil be returned.\n * @param {string\x3d} opt_key The name of the parameter to get the values for.\n * @return {!Array\x3c?\x3e} All the values of the parameters with the given name.\n */\ngoog.Uri.QueryData.prototype.getValues \x3d function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  var rv \x3d [];\n  if (goog.isString(opt_key)) {\n    if (this.containsKey(opt_key)) {\n      rv \x3d goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    // Return all values.\n    var values \x3d this.keyMap_.getValues();\n    for (var i \x3d 0; i \x3c values.length; i++) {\n      rv \x3d goog.array.concat(rv, values[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Sets a key value pair and removes all other keys with the same value.\n *\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.set \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  // TODO(chrishenry): This could be better written as\n  // this.remove(key), this.add(key, value), but that would reorder\n  // the key (since the key is first removed and then added at the\n  // end) and we would have to fix unit tests that depend on key\n  // ordering.\n  key \x3d this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ \x3d\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Returns the first value associated with the key. If the query data has no\n * such key this will return undefined or the optional default.\n * @param {string} key The name of the parameter to get the value for.\n * @param {*\x3d} opt_default The default value to return if the query data\n *     has no such key.\n * @return {*} The first string value associated with the key, or opt_default\n *     if there\x27s no value.\n */\ngoog.Uri.QueryData.prototype.get \x3d function(key, opt_default) {\n  if (!key) {\n    return opt_default;\n  }\n  var values \x3d this.getValues(key);\n  return values.length \x3e 0 ? String(values[0]) : opt_default;\n};\n\n\n/**\n * Sets the values for a key. If the key already exists, this will\n * override all of the existing values that correspond to the key.\n * @param {string} key The key to set values for.\n * @param {!Array\x3c?\x3e} values The values to set.\n */\ngoog.Uri.QueryData.prototype.setValues \x3d function(key, values) {\n  this.remove(key);\n\n  if (values.length \x3e 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString \x3d function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return \x27\x27;\n  }\n\n  var sb \x3d [];\n\n  // In the past, we use this.getKeys() and this.getVals(), but that\n  // generates a lot of allocations as compared to simply iterating\n  // over the keys.\n  var keys \x3d this.keyMap_.getKeys();\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    var key \x3d keys[i];\n    var encodedKey \x3d goog.string.urlEncode(key);\n    var val \x3d this.getValues(key);\n    for (var j \x3d 0; j \x3c val.length; j++) {\n      var param \x3d encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !\x3d\x3d \x27\x27) {\n        param +\x3d \x27\x3d\x27 + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ \x3d sb.join(\x27\x26\x27);\n};\n\n\n/**\n * @throws URIError If URI is malformed (that is, if decodeURIComponent fails on\n *     any of the URI components).\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString \x3d function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Invalidate the cache.\n * @private\n */\ngoog.Uri.QueryData.prototype.invalidateCache_ \x3d function() {\n  this.encodedQuery_ \x3d null;\n};\n\n\n/**\n * Removes all keys that are not in the provided list. (Modifies this object.)\n * @param {Array\x3cstring\x3e} keys The desired keys.\n * @return {!goog.Uri.QueryData} a reference to this object.\n */\ngoog.Uri.QueryData.prototype.filterKeys \x3d function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone \x3d function() {\n  var rv \x3d new goog.Uri.QueryData();\n  rv.encodedQuery_ \x3d this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ \x3d this.keyMap_.clone();\n    rv.count_ \x3d this.count_;\n  }\n  return rv;\n};\n\n\n/**\n * Helper function to get the key name from a JavaScript object. Converts\n * the object to a string, and to lower case if necessary.\n * @private\n * @param {*} arg The object to get a key name from.\n * @return {string} valid key name which can be looked up in #keyMap_.\n */\ngoog.Uri.QueryData.prototype.getKeyName_ \x3d function(arg) {\n  var keyName \x3d String(arg);\n  if (this.ignoreCase_) {\n    keyName \x3d keyName.toLowerCase();\n  }\n  return keyName;\n};\n\n\n/**\n * Ignore case in parameter names.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n */\ngoog.Uri.QueryData.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  var resetKeys \x3d ignoreCase \x26\x26 !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      var lowerCase \x3d key.toLowerCase();\n      if (key !\x3d lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ \x3d ignoreCase;\n};\n\n\n/**\n * Extends a query data object with another query data or map like object. This\n * operates \x27in-place\x27, it does not create a new QueryData object.\n *\n * @param {...(?goog.Uri.QueryData|?goog.structs.Map\x3c?, ?\x3e|?Object)} var_args\n *     The object from which key value pairs will be copied.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters.\n */\ngoog.Uri.QueryData.prototype.extend \x3d function(var_args) {\n  for (var i \x3d 0; i \x3c arguments.length; i++) {\n    var data \x3d arguments[i];\n    goog.structs.forEach(\n        data, function(value, key) { this.add(key, value); }, this);\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/uri/uri.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy43');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy43');

}catch(e){_DumpException(e)}
/* _Module_:sy6a */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy6a');
var $googDebugFname="javascript/closure/structs/collection.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines the collection interface.\n *\n * @author nnaze@google.com (Nathan Naze)\n */\n\ngoog.provide(\x27goog.structs.Collection\x27);\n\n\n\n/**\n * An interface for a collection of values.\n * @interface\n * @template T\n */\ngoog.structs.Collection \x3d function() {};\n\n\n/**\n * @param {T} value Value to add to the collection.\n */\ngoog.structs.Collection.prototype.add;\n\n\n/**\n * @param {T} value Value to remove from the collection.\n */\ngoog.structs.Collection.prototype.remove;\n\n\n/**\n * @param {T} value Value to find in the collection.\n * @return {boolean} Whether the collection contains the specified value.\n */\ngoog.structs.Collection.prototype.contains;\n\n\n/**\n * @return {number} The number of values stored in the collection.\n */\ngoog.structs.Collection.prototype.getCount;\n\n//# sourceURL\x3dhttps://qs/javascript/closure/structs/collection.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy6a');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy6a');

}catch(e){_DumpException(e)}
/* _Module_:sy6b */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy6b');
var $googDebugFname="javascript/closure/structs/set.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Datastructure: Set.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author pallosp@google.com (Peter Pallos)\n *\n * This class implements a set data structure. Adding and removing is O(1). It\n * supports both object and primitive values. Be careful because you can add\n * both 1 and new Number(1), because these are not the same. You can even add\n * multiple new Number(1) because these are not equal.\n */\n\n\ngoog.provide(\x27goog.structs.Set\x27);\n\ngoog.require(\x27goog.structs\x27);\ngoog.require(\x27goog.structs.Collection\x27);\ngoog.require(\x27goog.structs.Map\x27);\n\n\n\n/**\n * A set that can contain both primitives and objects.  Adding and removing\n * elements is O(1).  Primitives are treated as identical if they have the same\n * type and convert to the same string.  Objects are treated as identical only\n * if they are references to the same object.  WARNING: A goog.structs.Set can\n * contain both 1 and (new Number(1)), because they are not the same.  WARNING:\n * Adding (new Number(1)) twice will yield two distinct elements, because they\n * are two different objects.  WARNING: Any object that is added to a\n * goog.structs.Set will be modified!  Because goog.getUid() is used to\n * identify objects, every object in the set will be mutated.\n * @param {Array\x3cT\x3e|Object\x3c?,T\x3e\x3d} opt_values Initial values to start with.\n * @constructor\n * @implements {goog.structs.Collection\x3cT\x3e}\n * @final\n * @template T\n * @deprecated This type is misleading: use ES6 Set instead.\n */\ngoog.structs.Set \x3d function(opt_values) {\n  this.map_ \x3d new goog.structs.Map;\n  if (opt_values) {\n    this.addAll(opt_values);\n  }\n};\n\n\n/**\n * Obtains a unique key for an element of the set.  Primitives will yield the\n * same key if they have the same type and convert to the same string.  Object\n * references will yield the same key only if they refer to the same object.\n * @param {*} val Object or primitive value to get a key for.\n * @return {string} A unique key for this value/object.\n * @private\n */\ngoog.structs.Set.getKey_ \x3d function(val) {\n  var type \x3d typeof val;\n  if (type \x3d\x3d \x27object\x27 \x26\x26 val || type \x3d\x3d \x27function\x27) {\n    return \x27o\x27 + goog.getUid(/** @type {Object} */ (val));\n  } else {\n    return type.substr(0, 1) + val;\n  }\n};\n\n\n/**\n * @return {number} The number of elements in the set.\n * @override\n */\ngoog.structs.Set.prototype.getCount \x3d function() {\n  return this.map_.getCount();\n};\n\n\n/**\n * Add a primitive or an object to the set.\n * @param {T} element The primitive or object to add.\n * @override\n */\ngoog.structs.Set.prototype.add \x3d function(element) {\n  this.map_.set(goog.structs.Set.getKey_(element), element);\n};\n\n\n/**\n * Adds all the values in the given collection to this set.\n * @param {Array\x3cT\x3e|goog.structs.Collection\x3cT\x3e|Object\x3c?,T\x3e} col A collection\n *     containing the elements to add.\n */\ngoog.structs.Set.prototype.addAll \x3d function(col) {\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    this.add(values[i]);\n  }\n};\n\n\n/**\n * Removes all values in the given collection from this set.\n * @param {Array\x3cT\x3e|goog.structs.Collection\x3cT\x3e|Object\x3c?,T\x3e} col A collection\n *     containing the elements to remove.\n */\ngoog.structs.Set.prototype.removeAll \x3d function(col) {\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    this.remove(values[i]);\n  }\n};\n\n\n/**\n * Removes the given element from this set.\n * @param {T} element The primitive or object to remove.\n * @return {boolean} Whether the element was found and removed.\n * @override\n */\ngoog.structs.Set.prototype.remove \x3d function(element) {\n  return this.map_.remove(goog.structs.Set.getKey_(element));\n};\n\n\n/**\n * Removes all elements from this set.\n */\ngoog.structs.Set.prototype.clear \x3d function() {\n  this.map_.clear();\n};\n\n\n/**\n * Tests whether this set is empty.\n * @return {boolean} True if there are no elements in this set.\n */\ngoog.structs.Set.prototype.isEmpty \x3d function() {\n  return this.map_.isEmpty();\n};\n\n\n/**\n * Tests whether this set contains the given element.\n * @param {T} element The primitive or object to test for.\n * @return {boolean} True if this set contains the given element.\n * @override\n */\ngoog.structs.Set.prototype.contains \x3d function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\n\n\n/**\n * Tests whether this set contains all the values in a given collection.\n * Repeated elements in the collection are ignored, e.g.  (new\n * goog.structs.Set([1, 2])).containsAll([1, 1]) is True.\n * @param {goog.structs.Collection\x3cT\x3e|Object} col A collection-like object.\n * @return {boolean} True if the set contains all elements.\n */\ngoog.structs.Set.prototype.containsAll \x3d function(col) {\n  return goog.structs.every(col, this.contains, this);\n};\n\n\n/**\n * Finds all values that are present in both this set and the given collection.\n * @param {Array\x3cS\x3e|Object\x3c?,S\x3e} col A collection.\n * @return {!goog.structs.Set\x3cT|S\x3e} A new set containing all the values\n *     (primitives or objects) present in both this set and the given\n *     collection.\n * @template S\n */\ngoog.structs.Set.prototype.intersection \x3d function(col) {\n  var result \x3d new goog.structs.Set();\n\n  var values \x3d goog.structs.getValues(col);\n  for (var i \x3d 0; i \x3c values.length; i++) {\n    var value \x3d values[i];\n    if (this.contains(value)) {\n      result.add(value);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Finds all values that are present in this set and not in the given\n * collection.\n * @param {Array\x3cT\x3e|goog.structs.Collection\x3cT\x3e|Object\x3c?,T\x3e} col A collection.\n * @return {!goog.structs.Set} A new set containing all the values\n *     (primitives or objects) present in this set but not in the given\n *     collection.\n */\ngoog.structs.Set.prototype.difference \x3d function(col) {\n  var result \x3d this.clone();\n  result.removeAll(col);\n  return result;\n};\n\n\n/**\n * Returns an array containing all the elements in this set.\n * @return {!Array\x3cT\x3e} An array containing all the elements in this set.\n */\ngoog.structs.Set.prototype.getValues \x3d function() {\n  return this.map_.getValues();\n};\n\n\n/**\n * Creates a shallow clone of this set.\n * @return {!goog.structs.Set\x3cT\x3e} A new set containing all the same elements as\n *     this set.\n */\ngoog.structs.Set.prototype.clone \x3d function() {\n  return new goog.structs.Set(this);\n};\n\n\n/**\n * Tests whether the given collection consists of the same elements as this set,\n * regardless of order, without repetition.  Primitives are treated as equal if\n * they have the same type and convert to the same string; objects are treated\n * as equal if they are references to the same object.  This operation is O(n).\n * @param {goog.structs.Collection\x3cT\x3e|Object} col A collection.\n * @return {boolean} True if the given collection consists of the same elements\n *     as this set, regardless of order, without repetition.\n */\ngoog.structs.Set.prototype.equals \x3d function(col) {\n  return this.getCount() \x3d\x3d goog.structs.getCount(col) \x26\x26 this.isSubsetOf(col);\n};\n\n\n/**\n * Tests whether the given collection contains all the elements in this set.\n * Primitives are treated as equal if they have the same type and convert to the\n * same string; objects are treated as equal if they are references to the same\n * object.  This operation is O(n).\n * @param {goog.structs.Collection\x3cT\x3e|Object} col A collection.\n * @return {boolean} True if this set is a subset of the given collection.\n */\ngoog.structs.Set.prototype.isSubsetOf \x3d function(col) {\n  var colCount \x3d goog.structs.getCount(col);\n  if (this.getCount() \x3e colCount) {\n    return false;\n  }\n  // TODO(pallosp) Find the minimal collection size where the conversion makes\n  // the contains() method faster.\n  if (!(col instanceof goog.structs.Set) \x26\x26 colCount \x3e 5) {\n    // Convert to a goog.structs.Set so that goog.structs.contains runs in\n    // O(1) time instead of O(n) time.\n    col \x3d new goog.structs.Set(col);\n  }\n  return goog.structs.every(\n      this, function(value) { return goog.structs.contains(col, value); });\n};\n\n\n/**\n * Returns an iterator that iterates over the elements in this set.\n * @param {boolean\x3d} opt_keys This argument is ignored.\n * @return {!goog.iter.Iterator} An iterator over the elements in this set.\n */\ngoog.structs.Set.prototype.__iterator__ \x3d function(opt_keys) {\n  return this.map_.__iterator__(false);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/structs/set.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy6b');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy6b');

}catch(e){_DumpException(e)}
/* _Module_:sy6k */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy6k');
var $googDebugFname="javascript/closure/soy/data.js";
eval("// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Soy data primitives.\n *\n * The goal is to encompass data types used by Soy, especially to mark content\n * as known to be \x22safe\x22.\n *\n * @author gboyer@google.com (Garrett Boyer)\n */\n\ngoog.provide(\x27goog.soy.data.SanitizedContent\x27);\ngoog.provide(\x27goog.soy.data.SanitizedContentKind\x27);\ngoog.provide(\x27goog.soy.data.SanitizedCss\x27);\ngoog.provide(\x27goog.soy.data.SanitizedHtml\x27);\ngoog.provide(\x27goog.soy.data.SanitizedHtmlAttribute\x27);\ngoog.provide(\x27goog.soy.data.SanitizedJs\x27);\ngoog.provide(\x27goog.soy.data.SanitizedStyle\x27);\ngoog.provide(\x27goog.soy.data.SanitizedTrustedResourceUri\x27);\ngoog.provide(\x27goog.soy.data.SanitizedUri\x27);\ngoog.provide(\x27goog.soy.data.UnsanitizedText\x27);\n\ngoog.require(\x27goog.Uri\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.html.SafeHtml\x27);\ngoog.require(\x27goog.html.SafeScript\x27);\ngoog.require(\x27goog.html.SafeStyle\x27);\ngoog.require(\x27goog.html.SafeStyleSheet\x27);\ngoog.require(\x27goog.html.SafeUrl\x27);\ngoog.require(\x27goog.html.TrustedResourceUrl\x27);\ngoog.require(\x27goog.html.uncheckedconversions\x27);\ngoog.require(\x27goog.i18n.bidi.Dir\x27);\ngoog.require(\x27goog.string.Const\x27);\n\n\n/**\n * A type of textual content.\n *\n * This is an enum of type Object so that these values are unforgeable.\n *\n * @enum {!Object}\n */\ngoog.soy.data.SanitizedContentKind \x3d {\n\n  /**\n   * A snippet of HTML that does not start or end inside a tag, comment, entity,\n   * or DOCTYPE; and that does not contain any executable code\n   * (JS, {@code \x3cobject\x3e}s, etc.) from a different trust domain.\n   */\n  HTML: goog.DEBUG ? {sanitizedContentKindHtml: true} : {},\n\n  /**\n   * Executable Javascript code or expression, safe for insertion in a\n   * script-tag or event handler context, known to be free of any\n   * attacker-controlled scripts. This can either be side-effect-free\n   * Javascript (such as JSON) or Javascript that\x27s entirely under Google\x27s\n   * control.\n   */\n  JS: goog.DEBUG ? {sanitizedContentJsChars: true} : {},\n\n  /** A properly encoded portion of a URI. */\n  URI: goog.DEBUG ? {sanitizedContentUri: true} : {},\n\n  /** A resource URI not under attacker control. */\n  TRUSTED_RESOURCE_URI:\n      goog.DEBUG ? {sanitizedContentTrustedResourceUri: true} : {},\n\n  /**\n   * Repeated attribute names and values. For example,\n   * {@code dir\x3d\x22ltr\x22 foo\x3d\x22bar\x22 onclick\x3d\x22trustedFunction()\x22 checked}.\n   */\n  ATTRIBUTES: goog.DEBUG ? {sanitizedContentHtmlAttribute: true} : {},\n\n  // TODO: Consider separating rules, declarations, and values into\n  // separate types, but for simplicity, we\x27ll treat explicitly blessed\n  // SanitizedContent as allowed in all of these contexts.\n  /**\n   * A CSS3 declaration, property, value or group of semicolon separated\n   * declarations.\n   */\n  STYLE: goog.DEBUG ? {sanitizedContentStyle: true} : {},\n\n  /** A CSS3 style sheet (list of rules). */\n  CSS: goog.DEBUG ? {sanitizedContentCss: true} : {},\n\n  /**\n   * Unsanitized plain-text content.\n   *\n   * This is effectively the \x22null\x22 entry of this enum, and is sometimes used\n   * to explicitly mark content that should never be used unescaped. Since any\n   * string is safe to use as text, being of ContentKind.TEXT makes no\n   * guarantees about its safety in any other context such as HTML.\n   */\n  TEXT: goog.DEBUG ? {sanitizedContentKindText: true} : {}\n};\n\n\n\n/**\n * A string-like object that carries a content-type and a content direction.\n *\n * IMPORTANT! Do not create these directly, nor instantiate the subclasses.\n * Instead, use a trusted, centrally reviewed library as endorsed by your team\n * to generate these objects. Otherwise, you risk accidentally creating\n * SanitizedContent that is attacker-controlled and gets evaluated unescaped in\n * templates.\n *\n * @constructor\n */\ngoog.soy.data.SanitizedContent \x3d function() {\n  throw new Error(\x27Do not instantiate directly\x27);\n};\n\n\n/**\n * The context in which this content is safe from XSS attacks.\n * @type {goog.soy.data.SanitizedContentKind}\n */\ngoog.soy.data.SanitizedContent.prototype.contentKind;\n\n\n/**\n * The content\x27s direction; null if unknown and thus to be estimated when\n * necessary.\n * @type {?goog.i18n.bidi.Dir}\n */\ngoog.soy.data.SanitizedContent.prototype.contentDir \x3d null;\n\n\n/**\n * The already-safe content.\n * @protected {string}\n */\ngoog.soy.data.SanitizedContent.prototype.content;\n\n\n/**\n * Gets the already-safe content.\n * @return {string}\n */\ngoog.soy.data.SanitizedContent.prototype.getContent \x3d function() {\n  return this.content;\n};\n\n\n/** @override */\ngoog.soy.data.SanitizedContent.prototype.toString \x3d function() {\n  return this.content;\n};\n\n\n/**\n * Converts sanitized content of kind TEXT or HTML into SafeHtml. HTML content\n * is converted without modification, while text content is HTML-escaped.\n * @return {!goog.html.SafeHtml}\n * @throws {Error} when the content kind is not TEXT or HTML.\n */\ngoog.soy.data.SanitizedContent.prototype.toSafeHtml \x3d function() {\n  if (this.contentKind \x3d\x3d\x3d goog.soy.data.SanitizedContentKind.TEXT) {\n    return goog.html.SafeHtml.htmlEscape(this.toString());\n  }\n  if (this.contentKind !\x3d\x3d goog.soy.data.SanitizedContentKind.HTML) {\n    throw new Error(\x27Sanitized content was not of kind TEXT or HTML.\x27);\n  }\n  return goog.html.uncheckedconversions\n      .safeHtmlFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\n              \x27Soy SanitizedContent of kind HTML produces \x27 +\n              \x27SafeHtml-contract-compliant value.\x27),\n          this.toString(), this.contentDir);\n};\n\n\n/**\n * Converts sanitized content of kind URI into SafeUrl without modification.\n * @return {!goog.html.SafeUrl}\n * @throws {Error} when the content kind is not URI.\n */\ngoog.soy.data.SanitizedContent.prototype.toSafeUrl \x3d function() {\n  if (this.contentKind !\x3d\x3d goog.soy.data.SanitizedContentKind.URI) {\n    throw new Error(\x27Sanitized content was not of kind URI.\x27);\n  }\n  return goog.html.uncheckedconversions\n      .safeUrlFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\n              \x27Soy SanitizedContent of kind URI produces \x27 +\n              \x27SafeHtml-contract-compliant value.\x27),\n          this.toString());\n};\n\n\n/**\n * Unsanitized plain text string.\n *\n * While all strings are effectively safe to use as a plain text, there are no\n * guarantees about safety in any other context such as HTML. This is\n * sometimes used to mark that should never be used unescaped.\n *\n * @param {*} content Plain text with no guarantees.\n * @param {?goog.i18n.bidi.Dir\x3d} opt_contentDir The content direction; null if\n *     unknown and thus to be estimated when necessary. Default: null.\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.UnsanitizedText \x3d function(content, opt_contentDir) {\n  // Not calling the superclass constructor which just throws an exception.\n\n  /** @override */\n  this.content \x3d String(content);\n  this.contentDir \x3d opt_contentDir !\x3d null ? opt_contentDir : null;\n};\ngoog.inherits(goog.soy.data.UnsanitizedText, goog.soy.data.SanitizedContent);\n\n\n/** @override */\ngoog.soy.data.UnsanitizedText.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.TEXT;\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.HTML}.\n *\n * The content is a string of HTML that can safely be embedded in a PCDATA\n * context in your app.  If you would be surprised to find that an HTML\n * sanitizer produced `s` (e.g.  it runs code or fetches bad URLs) and\n * you wouldn\x27t write a template that produces `s` on security or privacy\n * grounds, then don\x27t pass `s` here. The default content direction is\n * unknown, i.e. to be estimated when necessary.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedHtml \x3d function() {\n  goog.soy.data.SanitizedHtml.base(this, \x27constructor\x27);\n};\ngoog.inherits(goog.soy.data.SanitizedHtml, goog.soy.data.SanitizedContent);\n\n/** @override */\ngoog.soy.data.SanitizedHtml.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.HTML;\n\n/**\n * Checks if the value could be used as the Soy type {html}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedHtml.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedHtml ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.SafeHtml;\n};\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.JS}.\n *\n * The content is JavaScript source that when evaluated does not execute any\n * attacker-controlled scripts. The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedJs \x3d function() {\n  goog.soy.data.SanitizedJs.base(this, \x27constructor\x27);\n};\ngoog.inherits(goog.soy.data.SanitizedJs, goog.soy.data.SanitizedContent);\n\n/** @override */\ngoog.soy.data.SanitizedJs.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.JS;\n\n/** @override */\ngoog.soy.data.SanitizedJs.prototype.contentDir \x3d goog.i18n.bidi.Dir.LTR;\n\n/**\n * Checks if the value could be used as the Soy type {js}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedJs.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedJs ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.SafeScript;\n};\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.URI}.\n *\n * The content is a URI chunk that the caller knows is safe to emit in a\n * template. The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedUri \x3d function() {\n  goog.soy.data.SanitizedUri.base(this, \x27constructor\x27);\n};\ngoog.inherits(goog.soy.data.SanitizedUri, goog.soy.data.SanitizedContent);\n\n/** @override */\ngoog.soy.data.SanitizedUri.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.URI;\n\n/** @override */\ngoog.soy.data.SanitizedUri.prototype.contentDir \x3d goog.i18n.bidi.Dir.LTR;\n\n/**\n * Checks if the value could be used as the Soy type {uri}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedUri.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedUri ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.SafeUrl ||\n      value instanceof goog.html.TrustedResourceUrl ||\n      value instanceof goog.Uri;\n};\n\n\n\n/**\n * Content of type\n * {@link goog.soy.data.SanitizedContentKind.TRUSTED_RESOURCE_URI}.\n *\n * The content is a TrustedResourceUri chunk that is not under attacker control.\n * The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedTrustedResourceUri \x3d function() {\n  goog.soy.data.SanitizedTrustedResourceUri.base(this, \x27constructor\x27);\n};\ngoog.inherits(\n    goog.soy.data.SanitizedTrustedResourceUri, goog.soy.data.SanitizedContent);\n\n/** @override */\ngoog.soy.data.SanitizedTrustedResourceUri.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.TRUSTED_RESOURCE_URI;\n\n/** @override */\ngoog.soy.data.SanitizedTrustedResourceUri.prototype.contentDir \x3d\n    goog.i18n.bidi.Dir.LTR;\n\n/**\n * Converts sanitized content into TrustedResourceUrl without modification.\n * @return {!goog.html.TrustedResourceUrl}\n */\ngoog.soy.data.SanitizedTrustedResourceUri.prototype.toTrustedResourceUrl \x3d\n    function() {\n  return goog.html.uncheckedconversions\n      .trustedResourceUrlFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\n              \x27Soy SanitizedContent of kind TRUSTED_RESOURCE_URI produces \x27 +\n              \x27TrustedResourceUrl-contract-compliant value.\x27),\n          this.toString());\n};\n\n/**\n * Checks if the value could be used as the Soy type {trusted_resource_uri}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedTrustedResourceUri.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedTrustedResourceUri ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.TrustedResourceUrl;\n};\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.ATTRIBUTES}.\n *\n * The content should be safely embeddable within an open tag, such as a\n * key\x3d\x22value\x22 pair. The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedHtmlAttribute \x3d function() {\n  goog.soy.data.SanitizedHtmlAttribute.base(this, \x27constructor\x27);\n};\ngoog.inherits(\n    goog.soy.data.SanitizedHtmlAttribute, goog.soy.data.SanitizedContent);\n\n/** @override */\ngoog.soy.data.SanitizedHtmlAttribute.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.ATTRIBUTES;\n\n/** @override */\ngoog.soy.data.SanitizedHtmlAttribute.prototype.contentDir \x3d\n    goog.i18n.bidi.Dir.LTR;\n\n/**\n * Checks if the value could be used as the Soy type {attribute}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedHtmlAttribute.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedHtmlAttribute ||\n      value instanceof goog.soy.data.UnsanitizedText;\n};\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.STYLE}.\n *\n * The content is non-attacker-exploitable CSS, such as `color:#c3d9ff`.\n * The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedStyle \x3d function() {\n  goog.soy.data.SanitizedStyle.base(this, \x27constructor\x27);\n};\ngoog.inherits(goog.soy.data.SanitizedStyle, goog.soy.data.SanitizedContent);\n\n\n/** @override */\ngoog.soy.data.SanitizedStyle.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.STYLE;\n\n\n/** @override */\ngoog.soy.data.SanitizedStyle.prototype.contentDir \x3d goog.i18n.bidi.Dir.LTR;\n\n\n/**\n * Checks if the value could be used as the Soy type {css}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedStyle.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedStyle ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.SafeStyle;\n};\n\n\n\n/**\n * Content of type {@link goog.soy.data.SanitizedContentKind.CSS}.\n *\n * The content is non-attacker-exploitable CSS, such as {@code @import url(x)}.\n * The content direction is LTR.\n *\n * @extends {goog.soy.data.SanitizedContent}\n * @constructor\n */\ngoog.soy.data.SanitizedCss \x3d function() {\n  goog.soy.data.SanitizedCss.base(this, \x27constructor\x27);\n};\ngoog.inherits(goog.soy.data.SanitizedCss, goog.soy.data.SanitizedContent);\n\n\n/** @override */\ngoog.soy.data.SanitizedCss.prototype.contentKind \x3d\n    goog.soy.data.SanitizedContentKind.CSS;\n\n\n/** @override */\ngoog.soy.data.SanitizedCss.prototype.contentDir \x3d goog.i18n.bidi.Dir.LTR;\n\n\n/**\n * Checks if the value could be used as the Soy type {css}.\n * @param {*} value\n * @return {boolean}\n */\ngoog.soy.data.SanitizedCss.isCompatibleWith \x3d function(value) {\n  return goog.isString(value) ||\n      value instanceof goog.soy.data.SanitizedCss ||\n      value instanceof goog.soy.data.UnsanitizedText ||\n      value instanceof goog.html.SafeStyle ||  // TODO(jakubvrana): Delete.\n      value instanceof goog.html.SafeStyleSheet;\n};\n\n\n/**\n * Converts SanitizedCss into SafeStyleSheet.\n * Note: SanitizedCss in Soy represents both SafeStyle and SafeStyleSheet in\n * Closure. It\x27s about to be split so that SanitizedCss represents only\n * SafeStyleSheet.\n * @return {!goog.html.SafeStyleSheet}\n */\ngoog.soy.data.SanitizedCss.prototype.toSafeStyleSheet \x3d function() {\n  var value \x3d this.toString();\n  // TODO(jakubvrana): Remove this check when there\x27s a separate type for style\n  // declaration.\n  goog.asserts.assert(\n      /[@{]|^\\s*$/.test(value),\n      \x27value doesn\\\x27t look like style sheet: \x27 + value);\n  return goog.html.uncheckedconversions\n      .safeStyleSheetFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\n              \x27Soy SanitizedCss produces SafeStyleSheet-contract-compliant \x27 +\n              \x27value.\x27),\n          value);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/soy/data.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/soy/soy.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides utility methods to render soy template.\n * @author kai@google.com (Kai Huang)\n * @author ptucker@google.com (Philip Tucker)\n * @author chrishenry@google.com (Chris Henry)\n */\n\ngoog.provide(\x27goog.soy\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.html.legacyconversions\x27);\ngoog.require(\x27goog.soy.data.SanitizedContent\x27);\ngoog.require(\x27goog.soy.data.SanitizedContentKind\x27);\ngoog.require(\x27goog.string\x27);\n\n\n/**\n * @define {boolean} Whether to require all Soy templates to be \x22strict html\x22.\n * Soy templates that use strict autoescaping forbid noAutoescape along with\n * many dangerous directives, and return a runtime type SanitizedContent that\n * marks them as safe.\n *\n * If this flag is enabled, Soy templates will fail to render if a template\n * returns plain text -- indicating it is a non-strict template.\n */\ngoog.define(\x27goog.soy.REQUIRE_STRICT_AUTOESCAPE\x27, false);\n\n\n/**\n * Type definition for strict Soy templates. Very useful when passing a template\n * as an argument.\n * @typedef {function(?, null\x3d, ?Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedContent}\n */\ngoog.soy.StrictTemplate;\n\n\n/**\n * Type definition for strict Soy HTML templates. Very useful when passing\n * a template as an argument.\n * @typedef {function(?, null\x3d, ?Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedHtml}\n */\ngoog.soy.StrictHtmlTemplate;\n\n\n/**\n * Sets the processed template as the innerHTML of an element. It is recommended\n * to use this helper function instead of directly setting innerHTML in your\n * hand-written code, so that it will be easier to audit the code for cross-site\n * scripting vulnerabilities.\n *\n * @param {?Element} element The element whose content we are rendering into.\n * @param {!goog.soy.data.SanitizedContent} templateResult The processed\n *     template of kind HTML or TEXT (which will be escaped).\n * @template ARG_TYPES\n */\ngoog.soy.renderHtml \x3d function(element, templateResult) {\n  element.innerHTML \x3d goog.soy.ensureTemplateOutputHtml_(templateResult);\n};\n\n\n/**\n * Renders a Soy template and then set the output string as\n * the innerHTML of an element. It is recommended to use this helper function\n * instead of directly setting innerHTML in your hand-written code, so that it\n * will be easier to audit the code for cross-site scripting vulnerabilities.\n *\n * @param {Element} element The element whose content we are rendering into.\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @param {Object\x3d} opt_injectedData The injected data for the template.\n * @template ARG_TYPES\n */\ngoog.soy.renderElement \x3d function(\n    element, template, opt_templateData, opt_injectedData) {\n  // Soy template parameter is only nullable for historical reasons.\n  goog.asserts.assert(template, \x27Soy template may not be null.\x27);\n  element.innerHTML \x3d goog.soy.ensureTemplateOutputHtml_(\n      template(\n          opt_templateData || goog.soy.defaultTemplateData_, undefined,\n          opt_injectedData));\n};\n\n\n/**\n * Renders a Soy template into a single node or a document\n * fragment. If the rendered HTML string represents a single node, then that\n * node is returned (note that this is *not* a fragment, despite them name of\n * the method). Otherwise a document fragment is returned containing the\n * rendered nodes.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @param {Object\x3d} opt_injectedData The injected data for the template.\n * @param {goog.dom.DomHelper\x3d} opt_domHelper The DOM helper used to\n *     create DOM nodes; defaults to `goog.dom.getDomHelper`.\n * @return {!Node} The resulting node or document fragment.\n * @template ARG_TYPES\n */\ngoog.soy.renderAsFragment \x3d function(\n    template, opt_templateData, opt_injectedData, opt_domHelper) {\n  // Soy template parameter is only nullable for historical reasons.\n  goog.asserts.assert(template, \x27Soy template may not be null.\x27);\n  var dom \x3d opt_domHelper || goog.dom.getDomHelper();\n  var output \x3d template(\n      opt_templateData || goog.soy.defaultTemplateData_, undefined,\n      opt_injectedData);\n  var html \x3d goog.soy.ensureTemplateOutputHtml_(output);\n  goog.soy.assertFirstTagValid_(html);\n  var safeHtml \x3d output instanceof goog.soy.data.SanitizedContent ?\n      output.toSafeHtml() :\n      goog.html.legacyconversions.safeHtmlFromString(html);\n  return dom.safeHtmlToNode(safeHtml);\n};\n\n\n/**\n * Renders a Soy template into a single node. If the rendered\n * HTML string represents a single node, then that node is returned. Otherwise,\n * a DIV element is returned containing the rendered nodes.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @param {Object\x3d} opt_injectedData The injected data for the template.\n * @param {goog.dom.DomHelper\x3d} opt_domHelper The DOM helper used to\n *     create DOM nodes; defaults to `goog.dom.getDomHelper`.\n * @return {!Element} Rendered template contents, wrapped in a parent DIV\n *     element if necessary.\n * @template ARG_TYPES\n */\ngoog.soy.renderAsElement \x3d function(\n    template, opt_templateData, opt_injectedData, opt_domHelper) {\n  // Soy template parameter is only nullable for historical reasons.\n  goog.asserts.assert(template, \x27Soy template may not be null.\x27);\n  return goog.soy.convertToElement_(\n      template(\n          opt_templateData || goog.soy.defaultTemplateData_, undefined,\n          opt_injectedData),\n      opt_domHelper);\n};\n\n\n/**\n * Converts a processed Soy template into a single node. If the rendered\n * HTML string represents a single node, then that node is returned. Otherwise,\n * a DIV element is returned containing the rendered nodes.\n *\n * @param {!goog.soy.data.SanitizedContent} templateResult The processed\n *     template of kind HTML or TEXT (which will be escaped).\n * @param {?goog.dom.DomHelper\x3d} opt_domHelper The DOM helper used to\n *     create DOM nodes; defaults to `goog.dom.getDomHelper`.\n * @return {!Element} Rendered template contents, wrapped in a parent DIV\n *     element if necessary.\n */\ngoog.soy.convertToElement \x3d function(templateResult, opt_domHelper) {\n  return goog.soy.convertToElement_(templateResult, opt_domHelper);\n};\n\n\n/**\n * Non-strict version of `goog.soy.convertToElement`.\n *\n * @param {*} templateResult The processed template.\n * @param {?goog.dom.DomHelper\x3d} opt_domHelper The DOM helper used to\n *     create DOM nodes; defaults to `goog.dom.getDomHelper`.\n * @return {!Element} Rendered template contents, wrapped in a parent DIV\n *     element if necessary.\n * @private\n */\ngoog.soy.convertToElement_ \x3d function(templateResult, opt_domHelper) {\n  var dom \x3d opt_domHelper || goog.dom.getDomHelper();\n  var wrapper \x3d dom.createElement(goog.dom.TagName.DIV);\n  var html \x3d goog.soy.ensureTemplateOutputHtml_(templateResult);\n  goog.soy.assertFirstTagValid_(html);\n  wrapper.innerHTML \x3d html;\n\n  // If the template renders as a single element, return it.\n  if (wrapper.childNodes.length \x3d\x3d 1) {\n    var firstChild \x3d wrapper.firstChild;\n    if (firstChild.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT) {\n      return /** @type {!Element} */ (firstChild);\n    }\n  }\n\n  // Otherwise, return the wrapper DIV.\n  return wrapper;\n};\n\n\n/**\n * Ensures the result is \x22safe\x22 to insert as HTML.\n *\n * Note if the template has non-strict autoescape, the guarantees here are very\n * weak. It is recommended applications switch to requiring strict\n * autoescaping over time by tweaking goog.soy.REQUIRE_STRICT_AUTOESCAPE.\n *\n * In the case the argument is a SanitizedContent object, it either must\n * already be of kind HTML, or if it is kind\x3d\x22text\x22, the output will be HTML\n * escaped.\n *\n * @param {*} templateResult The template result.\n * @return {string} The assumed-safe HTML output string.\n * @private\n */\ngoog.soy.ensureTemplateOutputHtml_ \x3d function(templateResult) {\n  // Allow strings as long as strict autoescaping is not mandated. Note we\n  // allow everything that isn\x27t an object, because some non-escaping templates\n  // end up returning non-strings if their only print statement is a\n  // non-escaped argument, plus some unit tests spoof templates.\n  // TODO(gboyer): Track down and fix these cases.\n  if (!goog.soy.REQUIRE_STRICT_AUTOESCAPE \x26\x26 !goog.isObject(templateResult)) {\n    return String(templateResult);\n  }\n\n  // Allow SanitizedContent of kind HTML.\n  if (templateResult instanceof goog.soy.data.SanitizedContent) {\n    templateResult \x3d\n        /** @type {!goog.soy.data.SanitizedContent} */ (templateResult);\n    var ContentKind \x3d goog.soy.data.SanitizedContentKind;\n    if (templateResult.contentKind \x3d\x3d\x3d ContentKind.HTML) {\n      return goog.asserts.assertString(templateResult.getContent());\n    }\n    if (templateResult.contentKind \x3d\x3d\x3d ContentKind.TEXT) {\n      // Allow text to be rendered, as long as we escape it. Other content\n      // kinds will fail, since we don\x27t know what to do with them.\n      // TODO(gboyer): Perhaps also include URI in this case.\n      return goog.string.htmlEscape(templateResult.getContent());\n    }\n  }\n\n  goog.asserts.fail(\n      \x27Soy template output is unsafe for use as HTML: \x27 + templateResult);\n\n  // In production, return a safe string, rather than failing hard.\n  return \x27zSoyz\x27;\n};\n\n\n/**\n * Checks that the rendered HTML does not start with an invalid tag that would\n * likely cause unexpected output from renderAsElement or renderAsFragment.\n * See {@link http://www.w3.org/TR/html5/semantics.html#semantics} for reference\n * as to which HTML elements can be parents of each other.\n * @param {string} html The output of a template.\n * @private\n */\ngoog.soy.assertFirstTagValid_ \x3d function(html) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var matches \x3d html.match(goog.soy.INVALID_TAG_TO_RENDER_);\n    goog.asserts.assert(\n        !matches, \x27This template starts with a %s, which \x27 +\n            \x27cannot be a child of a \x3cdiv\x3e, as required by soy internals. \x27 +\n            \x27Consider using goog.soy.renderElement instead.\\nTemplate output: %s\x27,\n        matches \x26\x26 matches[0], html);\n  }\n};\n\n\n/**\n * A pattern to find templates that cannot be rendered by renderAsElement or\n * renderAsFragment, as these elements cannot exist as the child of a \x3cdiv\x3e.\n * @type {!RegExp}\n * @private\n */\ngoog.soy.INVALID_TAG_TO_RENDER_ \x3d\n    /^\x3c(body|caption|col|colgroup|head|html|tr|td|th|tbody|thead|tfoot)\x3e/i;\n\n\n/**\n * Immutable object that is passed into templates that are rendered\n * without any data.\n * @private @const\n */\ngoog.soy.defaultTemplateData_ \x3d {};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/soy/soy.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy6k');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy6k');

}catch(e){_DumpException(e)}
/* _Module_:sy7f */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy7f');
var $googDebugFname="javascript/apps/wiz/common/properties.js";
goog.loadModule("/**\n * @fileoverview Properties that Wiz elements have.\n */\n\ngoog.module(\x27wiz.Properties\x27);\ngoog.module.declareLegacyNamespace();\n\n/**\n * Data stored on DOM element for jsdata\n * @type {!WeakMap\x3c!Element, !Object\x3c!jspb.Message\x3e\x3e}\n * @const\n * */\nexports.DATA \x3d new WeakMap();\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/properties.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy7f');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy7f');

}catch(e){_DumpException(e)}
/* _Module_:sy7g */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy7g');
var $googDebugFname="javascript/template/jslayout/wizdata.js";
eval("/**\n * @visibility {//visibility:public}\n */\ngoog.provide(\x27jslayout.wizdata\x27);\n\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Properties\x27);\n\n/**\n * Used to generate client side instance keys.\n * @private {number}\n */\njslayout.wizdata.counter_ \x3d 0;\n\n\n/**\n * Map for data stored during the current rendering.\n * @private {!Map\x3cstring, !Array\x3e}\n */\njslayout.wizdata.cachedData_ \x3d new Map;\n\n\n/**\n * Generates unique ID string per message instance.\n * @param {string} messageXid\n * @param {!Array} data\n * @return {string}\n * @private\n */\njslayout.wizdata.getDataId_ \x3d function(messageXid, data) {\n  for (const key of jslayout.wizdata.cachedData_.keys()) {\n    if (jslayout.wizdata.cachedData_.get(key) \x3d\x3d\x3d data) {\n      return key;\n    }\n  }\n  return messageXid + \x27;;\x27 + jslayout.wizdata.counter_++;\n};\n\n\n/**\n * @param {string} messageXid\n * @param {!Array} data\n * @return {string} The unique ID string of the message instance.\n */\njslayout.wizdata.cacheData \x3d function(messageXid, data) {\n  const dataId \x3d jslayout.wizdata.getDataId_(messageXid, data);\n  jslayout.wizdata.cachedData_.set(dataId, data);\n  return dataId;\n};\n\n\n/**\n * Resolves data for client side render.\n * @param {!Element} element The element with the jsdata annonation.\n * @param {function(new: jspb.Message, !Array\x3d)} ctor Proto constructor for the\n *     data.\n * @param {string} jsdataKey The jsdata annotation.\n * @return {?goog.Promise\x3c!jspb.Message\x3e} An instance of the given constructor\n *     matching the jsdata annonation.\n */\njslayout.wizdata.resolveForClientSideRender \x3d function(\n    element, ctor, jsdataKey) {\n  if (jslayout.wizdata.cachedData_.has(jsdataKey) \x26\x26\n      element.getAttribute(wiz.Attribute.DATA) \x3d\x3d jsdataKey) {\n    wiz.Properties.DATA.set(element, jslayout.wizdata.cachedData_.get(jsdataKey));\n    jslayout.wizdata.cachedData_.delete(jsdataKey);\n  }\n  let msgData \x3d wiz.Properties.DATA.get(element);\n  if (msgData \x26\x26 goog.isArray(msgData)) {\n    return goog.Promise.resolve(new ctor(msgData));\n  }\n  return null;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/template/jslayout/wizdata.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy7g');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy7g');

}catch(e){_DumpException(e)}
/* _Module_:syby */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syby');
var $googDebugFname="google/protobuf/any.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.google.protobuf.Any\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.Any \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.Any, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.google.protobuf.Any.displayName \x3d \x27proto.google.protobuf.Any\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.Any.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.google.protobuf.Any.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.Any} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    typeUrl: jspb.Message.getFieldWithDefault(msg, 1, \x22\x22),\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.google.protobuf.Any;\n  return proto.google.protobuf.Any.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Any} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setTypeUrl(value);\n      break;\n    case 2:\n      var value \x3d /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.google.protobuf.Any.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Any} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d message.getTypeUrl();\n  if (f.length \x3e 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d message.getValue_asU8();\n  if (f.length \x3e 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type_url \x3d 1;\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getTypeUrl \x3d function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \x22\x22));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.Any.prototype.setTypeUrl \x3d function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes value \x3d 2;\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getValue \x3d function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \x22\x22));\n};\n\n\n/**\n * optional bytes value \x3d 2;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getValue_asB64 \x3d function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value \x3d 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.getValue_asU8 \x3d function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.google.protobuf.Any.prototype.setValue \x3d function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.google.protobuf.Any, data);\n};\n\n\n/* This code will be inserted into generated code for\n * google/protobuf/any.proto. */\n\n/**\n * Returns the type name contained in this instance, if any.\n * @return {string|undefined}\n */\nproto.google.protobuf.Any.prototype.getTypeName \x3d function() {\n  return this.getTypeUrl().split(\x27/\x27).pop();\n};\n\n\n/**\n * Packs the given message instance into this Any.\n * @param {!Uint8Array} serialized The serialized data to pack.\n * @param {string} name The type name of this message object.\n * @param {string\x3d} opt_typeUrlPrefix the type URL prefix.\n */\nproto.google.protobuf.Any.prototype.pack \x3d function(serialized, name,\n                                                    opt_typeUrlPrefix) {\n  if (!opt_typeUrlPrefix) {\n    opt_typeUrlPrefix \x3d \x27type.googleapis.com/\x27;\n  }\n\n  if (opt_typeUrlPrefix.substr(-1) !\x3d \x27/\x27) {\n    this.setTypeUrl(opt_typeUrlPrefix + \x27/\x27 + name);\n  } else {\n    this.setTypeUrl(opt_typeUrlPrefix + name);\n  }\n\n  this.setValue(serialized);\n};\n\n\n/**\n * @template T\n * Unpacks this Any into the given message object.\n * @param {function(Uint8Array):T} deserialize Function that will deserialize\n *     the binary data properly.\n * @param {string} name The expected type name of this message object.\n * @return {?T} If the name matched the expected name, returns the deserialized\n *     object, otherwise returns null.\n */\nproto.google.protobuf.Any.prototype.unpack \x3d function(deserialize, name) {\n  if (this.getTypeName() \x3d\x3d name) {\n    return deserialize(this.getValue_asU8());\n  } else {\n    return null;\n  }\n};\n\n//# sourceURL\x3dhttps://qs/google/protobuf/any.jspb.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syby');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syby');

}catch(e){_DumpException(e)}
/* _Module_:syc1 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syc1');
var $googDebugFname="google/rpc/status.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.google.rpc.Status\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27proto.google.protobuf.Any\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.rpc.Status \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.rpc.Status.repeatedFields_, null);\n};\ngoog.inherits(proto.google.rpc.Status, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.google.rpc.Status.displayName \x3d \x27proto.google.rpc.Status\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.google.rpc.Status.repeatedFields_ \x3d [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.rpc.Status.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.google.rpc.Status.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.rpc.Status} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.rpc.Status.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \x22\x22),\n    detailsList: jspb.Message.toObjectList(msg.getDetailsList(),\n    proto.google.protobuf.Any.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.rpc.Status}\n */\nproto.google.rpc.Status.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.google.rpc.Status;\n  return proto.google.rpc.Status.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.rpc.Status} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.rpc.Status}\n */\nproto.google.rpc.Status.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value \x3d new proto.google.protobuf.Any;\n      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);\n      msg.addDetails(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.rpc.Status.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.google.rpc.Status.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.rpc.Status} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.rpc.Status.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d message.getCode();\n  if (f !\x3d\x3d 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f \x3d message.getMessage();\n  if (f.length \x3e 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f \x3d message.getDetailsList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.google.protobuf.Any.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code \x3d 1;\n * @return {number}\n */\nproto.google.rpc.Status.prototype.getCode \x3d function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.google.rpc.Status.prototype.setCode \x3d function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message \x3d 2;\n * @return {string}\n */\nproto.google.rpc.Status.prototype.getMessage \x3d function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \x22\x22));\n};\n\n\n/** @param {string} value */\nproto.google.rpc.Status.prototype.setMessage \x3d function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated google.protobuf.Any details \x3d 3;\n * @return {!Array\x3c!proto.google.protobuf.Any\x3e}\n */\nproto.google.rpc.Status.prototype.getDetailsList \x3d function() {\n  return /** @type{!Array\x3c!proto.google.protobuf.Any\x3e} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.Any, 3));\n};\n\n\n/** @param {!Array\x3c!proto.google.protobuf.Any\x3e} value */\nproto.google.rpc.Status.prototype.setDetailsList \x3d function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.Any\x3d} opt_value\n * @param {number\x3d} opt_index\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.rpc.Status.prototype.addDetails \x3d function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Any, opt_index);\n};\n\n\nproto.google.rpc.Status.prototype.clearDetailsList \x3d function() {\n  this.setDetailsList([]);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.google.rpc.Status}\n */\nproto.google.rpc.Status.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.google.rpc.Status, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/google/rpc/status.jspb.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syc1');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syc1');

}catch(e){_DumpException(e)}
/* _Module_:syex */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syex');
var $googDebugFname="googledata/html/templates/gws/head/xjs/deferred/delay_deferred.js";
goog.loadModule("/**\n * @fileoverview Utility to delay the execution of gws.deferred until a promise\n * is resolved. This is in place because base_wiz_bootstrap_module.js needs to\n * run before gws.deferred, but it should run in a tick after the primary XJS\n * request is parsed so that any controllers present in the request can be\n * initilialized. Because this may have unintended consequences, this new\n * functionality is implemented via a mod. The implementation below is the no-op\n * implementation, and the actual implementation is in\n * delay_deferred_enabled_mod.js.\n *\n * Note that this is intentionally written so that it does not depend on\n * gws.deferred. This is done so that if Wiz is included without gws.deferred\n * (via the cards_only_wiz_bootstrap.js module), the user doesn\x27t have to\n * download gws.deferred and gws.moduleInterface.\n */\ngoog.module(\x27gws.delayDeferred\x27);\n\nconst Logger \x3d goog.require(\x27goog.log.Logger\x27);\nconst log \x3d goog.require(\x27goog.log\x27);\n\n/** @type {?Logger} */\nconst logger \x3d log.getLogger(\x27gws.deferred\x27);\n\n/**\n * @const {{\n *     executeFirst: function(function()),\n *     executeSecond: function(function()),\n * }}\n * @package Visible for pinto mods.\n */\nconst mod \x3d {\n  executeFirst: (fn) \x3d\x3e {\n    log.info(logger, \x27executeFirst executing\x27);\n    fn();\n  },\n  executeSecond: (fn) \x3d\x3e {\n    log.info(logger, \x27executeSecond executing\x27);\n    fn();\n  }\n};\n\n/**\n * Calls fn(). This should be called before executeSecond().\n * When the mod is enabled, this is called in a clock tick after it is called.\n * This is done so that WizManager.synchronousDirty() can be called in a clock\n * tick after the primary XJS request is parsed.\n * @param {function()} fn\n */\nfunction executeFirst(fn) {\n  log.info(logger, \x27executeFirst called\x27);\n  mod.executeFirst(fn);\n}\n\n/**\n * Call fn(). This should be called after executeFirst().\n * This is used so that when the mod is enabled, it can delay the execution of\n * deferred.init() until after a clock tick.\n */\nfunction executeSecond(fn) {\n  log.info(logger, \x27executeSecond called\x27);\n  mod.executeSecond(fn);\n}\n\nexports \x3d {\n  executeFirst,\n  executeSecond,\n  mod,\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/deferred/delay_deferred.js\n");

$googDebugFname=undefined;

var $googDebugFname="googledata/html/templates/gws/head/xjs/deferred/delay_deferred_enabled_mod.js";
goog.loadModule("/**\n * @mods {gws.delayDeferred}\n * @modName {delayWizDirtyMod}\n */\ngoog.module(\x27gws.delayDeferredEnabledMod\x27);\n\nconst Logger \x3d goog.require(\x27goog.log.Logger\x27);\nconst Promise \x3d goog.require(\x27goog.Promise\x27);\nconst Resolver \x3d goog.require(\x27goog.promise.Resolver\x27);\nconst delayDeferred \x3d goog.require(\x27gws.delayDeferred\x27);\nconst log \x3d goog.require(\x27goog.log\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\nconst {nextTick} \x3d goog.require(\x27search.task.scheduler\x27);\n\n/** @type {?Resolver} */\nlet resolver;\n\n/** @type {?Logger} */\nconst logger \x3d log.getLogger(\x27gws.deferred\x27);\n\n/**\n * Calls fn on a nextTick, and then ensures that deferred.init() will be called\n * a tick after that. This function does not support being called multiple\n * times.\n * @param {function()} fn\n */\ndelayDeferred.mod.executeFirst \x3d function(fn) {\n  resolver \x3d Promise.withResolver();\n  nextTick(() \x3d\x3e {\n    log.info(logger, \x27executeFirst executing\x27);\n    fn();\n    assert(resolver).resolve();\n  });\n};\n\n/**\n * Calls fn on a tick after the \x22executeFirst\x22 function is called.\n * This assumes executeSecond is called after executeFirst.\n * @param {function()} fn\n */\ndelayDeferred.mod.executeSecond \x3d function(fn) {\n  if (resolver) {\n    resolver.promise.then(() \x3d\x3e {\n      log.info(logger, \x27executeSecond executing\x27);\n      return fn();\n    });\n  } else {\n    // If Wiz is not enabled, then executeFirst was never called and we\n    // should just init right away.\n    log.info(logger, \x27executeSecond executing\x27);\n    fn();\n  }\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/deferred/delay_deferred_enabled_mod.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syex');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syex');

}catch(e){_DumpException(e)}
/* _Module_:syg7 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syg7');
var $googDebugFname="javascript/frameworks/client/data/rpc_instance.js";
eval("/**\n * @fileoverview A templated class that is used to address an individual\n * frontend data request instance. See http://go/what-is-rpcid for more\n * information.\n */\ngoog.provide(\x27frameworks.client.data.RpcInstance\x27);\n\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\n/** @suppress {extraRequire} */\ngoog.require(\x27jspb.Message\x27);\n\ngoog.forwardDeclare(\x27frameworks.client.data.RpcId\x27);\n\n\n/**\n * A templated class that is used to address an individual frontend data\n * request instance.  See http://go/what-is-rpcid for more information.\n *\n * @interface\n * @template REQUEST, RESPONSE\n */\nframeworks.client.data.RpcInstance \x3d function() {};\n\n\n/** @return {REQUEST|undefined} */\nframeworks.client.data.RpcInstance.prototype.getRequestMessage;\n\n\n/** @return {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e} */\nframeworks.client.data.RpcInstance.prototype.getRpcId;\n\n\n/**\n * Note that adding a request sidechannel here only propagates the message set\n * to your HTTP frontend as request parameters. To set up further propagation\n * to the RPC service, you need to make some changes to your server code. See\n * go/sidechannel-propagation to learn more.\n *\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n * @param {EXTENSION_TYPE} message\n * @return {!frameworks.client.data.RpcInstance\x3cREQUEST, RESPONSE\x3e}\n * @template EXTENSION_TYPE\n */\nframeworks.client.data.RpcInstance.prototype.withRequestSideChannel;\n\n\n/**\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n *     Extension identifier.\n * @return {EXTENSION_TYPE} Extension message or `undefined`.\n * @template EXTENSION_TYPE\n */\nframeworks.client.data.RpcInstance.prototype.getRequestSideChannel;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpc_instance.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syg7');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syg7');

}catch(e){_DumpException(e)}
/* _Module_:syg9 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syg9');
var $googDebugFname="javascript/frameworks/client/data/rpc_response.js";
eval("/**\n * @fileoverview Transport layer class that holds both the response message\n * proto and response side channel fields. The higher \x27data\x27 level API does not\n * expose response side channel fields directly. Only interceptors can access\n * response sidechannel.\n */\ngoog.provide(\x27frameworks.client.data.RpcResponse\x27);\n\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\n\n/**\n * Transport layer class that holds both the response message\n * proto and response side channel fields.\n *\n * @interface\n * @template REQUEST, RESPONSE\n */\nframeworks.client.data.RpcResponse \x3d function() {};\n\n\n/** @return {RESPONSE} */\nframeworks.client.data.RpcResponse.prototype.getResponseMessage;\n\n\n/** @return {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e} */\nframeworks.client.data.RpcResponse.prototype.getRpcId;\n\n\n/**\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n * @param {EXTENSION_TYPE} message\n * @return {!frameworks.client.data.RpcResponse\x3cRESPONSE\x3e}\n * @template EXTENSION_TYPE\n */\nframeworks.client.data.RpcResponse.prototype.withResponseSideChannel;\n\n\n/**\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n * @return {EXTENSION_TYPE}\n * @template EXTENSION_TYPE\n */\nframeworks.client.data.RpcResponse.prototype.getResponseSideChannel;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpc_response.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syg9');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syg9');

}catch(e){_DumpException(e)}
/* _Module_:sygm */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygm');
var $googDebugFname="javascript/frameworks/client/data/rpcinstanceinternal.js";
goog.loadModule("/**\n * @fileoverview Package-private implementation classes related to RPC ID.\n */\ngoog.module(\x27frameworks.client.data.RpcInstanceInternal\x27);\ngoog.module.declareLegacyNamespace();\n\nconst JspbMessage \x3d goog.require(\x27jspb.Message\x27);\nconst RpcInstance \x3d goog.require(\x27frameworks.client.data.RpcInstance\x27);\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\nconst object \x3d goog.require(\x27goog.object\x27);\n\n\n\n/**\n * A templated class that is used to address an individual frontend data\n * request instance.\n * @param {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e} rpcId\n * @param {REQUEST|undefined} requestMessage `undefined` is discouraged.\n * @param {!Object\x3d} sideChannel\n * @constructor @final\n * @template REQUEST, RESPONSE\n * @implements {RpcInstance\x3cREQUEST, RESPONSE\x3e}\n */\nvar RpcInstanceInternal \x3d function(rpcId, requestMessage, sideChannel) {\n  /**\n   * @const\n   * @private\n   */\n  this.rpcId_ \x3d rpcId;\n\n  /**\n   * @const {REQUEST|undefined}\n   * @private\n   */\n  this.requestMessage_ \x3d requestMessage || undefined;\n\n  /**\n   * A map from message set extension field index to instance of sidechannel\n   * message. This implicitly assumes there can only be one instance of a\n   * given type of request extension.\n   *\n   * Note(b/17988911): Closure compiler does not currently support bounded\n   * generics (e.g. Foo\x3cT extends Bar\x3e). If it did, the type would be\n   * \x3cnumber, !jspb.Message\x3e.\n   *\n   * @const {!Object}\n   * @package\n   */\n  this.sideChannel \x3d sideChannel || {};\n};\n\n\n/**\n * @override\n * @return {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e}\n */\nRpcInstanceInternal.prototype.getRpcId \x3d function() {\n  return this.rpcId_;\n};\n\n\n/**\n * @override\n * @return {REQUEST|undefined}\n */\nRpcInstanceInternal.prototype.getRequestMessage \x3d function() {\n  return this.requestMessage_;\n};\n\n\n/**\n * @override\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n *     Extension identifier.\n * @param {EXTENSION_TYPE} message Extension message.\n * @return {!RpcInstance\x3cREQUEST, RESPONSE\x3e} Deep copy\n *      of this object with side channel added.\n * @template EXTENSION_TYPE\n */\nRpcInstanceInternal.prototype.withRequestSideChannel \x3d function(\n    messageSetExtension, message) {\n  asserts.assertObject(message, `Invalid message [${message}].`);\n  const fieldIndex \x3d messageSetExtension.fieldIndex;\n  asserts.assert(\n      JspbMessage.messageSetExtensions[fieldIndex],\n      `Invalid request message extension with field index [${fieldIndex}].`);\n\n  // Make deep copy of request and side channel. This allows callers to change\n  // fields in the result of this method without modifying the original\n  // RpcInstance.\n  const sideChannelClone \x3d object.map(this.sideChannel, (value) \x3d\x3e {\n    const originalExtension \x3d asserts.assertInstanceof(value, JspbMessage);\n    return originalExtension.cloneMessage();\n  });\n  sideChannelClone[fieldIndex] \x3d message;\n  const request \x3d this.requestMessage_;\n  const requestClone \x3d request ?\n      asserts.assertInstanceof(request, JspbMessage).cloneMessage() :\n      null;\n  return new RpcInstanceInternal(this.rpcId_, requestClone, sideChannelClone);\n};\n\n\n/**\n * @override\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n *     Extension identifier.\n * @return {EXTENSION_TYPE} Extension message or `undefined`.\n * @template EXTENSION_TYPE\n */\nRpcInstanceInternal.prototype.getRequestSideChannel \x3d function(\n    messageSetExtension) {\n  return this.sideChannel[messageSetExtension.fieldIndex];\n};\n\nexports \x3d RpcInstanceInternal;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpcinstanceinternal.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/frameworks/client/data/rpcresponseinternal.js";
goog.loadModule("/**\n * @fileoverview Package-private implementation classes related to RPC ID.\n */\ngoog.module(\x27frameworks.client.data.RpcResponseInternal\x27);\ngoog.module.declareLegacyNamespace();\n\nvar JspbMessage \x3d goog.require(\x27jspb.Message\x27);\nvar RpcResponse \x3d goog.require(\x27frameworks.client.data.RpcResponse\x27);\nvar asserts \x3d goog.require(\x27goog.asserts\x27);\n\n\n\n/**\n * A templated class that is used to address an individual frontend data\n * response instance.\n * @param {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e} rpcId\n * @param {RESPONSE} responseMessage\n * @constructor @final\n * @template REQUEST, RESPONSE\n * @implements {RpcResponse\x3cREQUEST, RESPONSE\x3e}\n */\nvar RpcResponseInternal \x3d function(rpcId, responseMessage) {\n  /**\n   * @const\n   * @private\n   */\n  this.rpcId_ \x3d rpcId;\n\n  /**\n   * @const {REQUEST}\n   * @private\n   */\n  this.responseMessage_ \x3d responseMessage;\n\n  // TODO(ptucker): Make this deeply immutable? e.g.,\n  // fluent.collect.ImmutableMap or goog.object.createImmutableView?\n  /**\n   * A map from message set extension field index to instance of sidechannel\n   * message. This implicitly assumes there can only be one instance of a\n   * given type of request extension.\n   *\n   * Note(b/17988911): Closure compiler does not currently support bounded\n   * generics (e.g. Foo\x3cT extends Bar\x3e). If it did, the type would be\n   * \x3cnumber, !jspb.Message\x3e.\n   *\n   * @const {!Object}\n   * @package\n   */\n  this.sideChannel \x3d {};\n};\n\n\n/**\n * @override\n * @return {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e}\n */\nRpcResponseInternal.prototype.getRpcId \x3d function() {\n  return this.rpcId_;\n};\n\n\n/**\n * @override\n * @return {RESPONSE}\n */\nRpcResponseInternal.prototype.getResponseMessage \x3d\n    function() {\n  return this.responseMessage_;\n};\n\n\n/**\n * @override\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n *     Extension identifier.\n * @param {EXTENSION_TYPE} message Extension message.\n * @return {!RpcResponse\x3cREQUEST, RESPONSE\x3e} Copy\n *      of this object with side channel added.\n * @template EXTENSION_TYPE\n */\nRpcResponseInternal.prototype.withResponseSideChannel \x3d function(\n    messageSetExtension, message) {\n  asserts.assertObject(message, `Invalid message [${message}].`);\n  const fieldIndex \x3d messageSetExtension.fieldIndex;\n  asserts.assert(\n      JspbMessage.messageSetExtensions[fieldIndex],\n      `Invalid request message extension with field index [${fieldIndex}].`);\n  const result \x3d new RpcResponseInternal(this.rpcId_, this.responseMessage_);\n  result.sideChannel[fieldIndex] \x3d message;\n  return result;\n};\n\n\n/**\n * @override\n * @param {!jspb.ExtensionFieldInfo\x3cEXTENSION_TYPE\x3e} messageSetExtension\n *     Extension identifier.\n * @return {EXTENSION_TYPE} Extension message.\n * @template EXTENSION_TYPE\n */\nRpcResponseInternal.prototype.getResponseSideChannel \x3d\n    function(messageSetExtension) {\n  return this.sideChannel[messageSetExtension.fieldIndex];\n};\n\nexports \x3d RpcResponseInternal;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpcresponseinternal.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/frameworks/client/data/rpc_id.js";
eval("/**\n * @fileoverview A templated class that is used to address frontend data\n * requests. See http://go/what-is-rpcid for more information.\n */\ngoog.provide(\x27frameworks.client.data.RpcId\x27);\n\ngoog.require(\x27frameworks.client.data.RpcInstance\x27);\ngoog.require(\x27frameworks.client.data.RpcInstanceInternal\x27);\ngoog.require(\x27frameworks.client.data.RpcResponse\x27);\ngoog.require(\x27frameworks.client.data.RpcResponseInternal\x27);\ngoog.require(\x27goog.asserts\x27);\n\n\n/**\n * A templated class that is used to address frontend data requests. The\n * input string identifier is opaque and not interpreted by the framework.\n * See http://go/what-is-rpcid for more information.\n *\n * TODO(jatraman): Consider compiler passes similar to wiz.event.\n *\n * @param {string} rpcId\n * @param {function(new: RESPONSE, ?Array\x3d)} responseMsgCtor\n * @param {function(new: REQUEST, ?Array\x3d)} requestMsgCtor\n * @param {?number\x3d} opt_extensionId\n * @constructor @struct @final\n * @template REQUEST, RESPONSE\n */\nframeworks.client.data.RpcId \x3d function(\n    rpcId, responseMsgCtor, requestMsgCtor, opt_extensionId) {\n  goog.asserts.assert(rpcId, `Invalid RPC id + [${rpcId}].`);\n  /**\n   * @const\n   * @private\n   */\n  this.rpcId_ \x3d rpcId;\n\n  /**\n   * @const\n   * @private\n   */\n  this.responseMsgCtor_ \x3d responseMsgCtor;\n\n  /**\n   * @const\n   * @private\n   */\n  this.requestMsgCtor_ \x3d requestMsgCtor;\n\n  /**\n   * @const\n   * @private {?number}\n   */\n  this.extensionId_ \x3d opt_extensionId || parseInt(rpcId, 10) || null;\n};\n\n\n/** @return {function(new: RESPONSE, ?Array\x3d)} */\nframeworks.client.data.RpcId.prototype.getResponseMessageCtor \x3d function() {\n  return this.responseMsgCtor_;\n};\n\n\n/** @return {function(new: REQUEST, ?Array\x3d)} */\nframeworks.client.data.RpcId.prototype.getRequestMessageCtor \x3d function() {\n  return this.requestMsgCtor_;\n};\n\n\n/** @override @return {string} */\nframeworks.client.data.RpcId.prototype.toString \x3d function() {\n  return this.rpcId_;\n};\n\n\n/**\n * @param {REQUEST} request `null` is supported, but discouraged.\n * @return {!frameworks.client.data.RpcInstance\x3cREQUEST, RESPONSE\x3e}\n */\nframeworks.client.data.RpcId.prototype.getInstance \x3d function(request) {\n  return new frameworks.client.data.RpcInstanceInternal(this, request);\n};\n\n\n/**\n * @param {RESPONSE} response\n * @return {!frameworks.client.data.RpcResponse\x3cREQUEST, RESPONSE\x3e}\n */\nframeworks.client.data.RpcId.prototype.getResponse \x3d function(response) {\n  return new frameworks.client.data.RpcResponseInternal(this, response);\n};\n\n\n/** @return {?number} */\nframeworks.client.data.RpcId.prototype.getExtensionId \x3d function() {\n  return this.extensionId_;\n};\n\n\n/**\n * Returns true if `this` and `that` both have the same rpcId, or if either has\n *     an extensionId that matchs the other rpcId. The latter supports\n *     backward-compatibility when migrating from boq-data to WizRPC.\n * @param {!frameworks.client.data.RpcId} that\n * @return {boolean}\n */\nframeworks.client.data.RpcId.prototype.matches \x3d function(that) {\n  if (this.rpcId_ \x3d\x3d that.rpcId_) {\n    return true;\n  }\n  if (this.extensionId_ \x26\x26 (this.extensionId_.toString() \x3d\x3d that.rpcId_)) {\n    return true;\n  }\n  if (that.extensionId_ \x26\x26 (that.extensionId_.toString() \x3d\x3d this.rpcId_)) {\n    return true;\n  }\n  return false;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpc_id.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygm');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygm');

}catch(e){_DumpException(e)}
/* _Module_:syg5 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syg5');
var $googDebugFname="apps/framework/data/datarequest.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.af.data.DataRequest\x27);\n\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.af.data.DataRequest \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 1, null, null);\n};\ngoog.inherits(proto.af.data.DataRequest, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.af.data.DataRequest.displayName \x3d \x27proto.af.data.DataRequest\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.af.data.DataRequest.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.af.data.DataRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.af.data.DataRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.DataRequest.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.af.data.DataRequest.extensions, proto.af.data.DataRequest.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.af.data.DataRequest}\n */\nproto.af.data.DataRequest.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.af.data.DataRequest;\n  return proto.af.data.DataRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.af.data.DataRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.af.data.DataRequest}\n */\nproto.af.data.DataRequest.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.af.data.DataRequest.extensionsBinary,\n        proto.af.data.DataRequest.prototype.getExtension,\n        proto.af.data.DataRequest.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.af.data.DataRequest.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.af.data.DataRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.af.data.DataRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.DataRequest.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.af.data.DataRequest.extensionsBinary, proto.af.data.DataRequest.prototype.getExtension);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldInfo\x3e}\n */\nproto.af.data.DataRequest.extensions \x3d {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldBinaryInfo\x3e}\n */\nproto.af.data.DataRequest.extensionsBinary \x3d {};\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.af.data.DataRequest}\n */\nproto.af.data.DataRequest.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.af.data.DataRequest, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/apps/framework/data/datarequest.js\n");

$googDebugFname=undefined;
var $googDebugFname="apps/framework/data/dataresponse.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.af.data.DataResponse\x27);\n\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.af.data.DataResponse \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, \x27af.adr\x27, 2, null, null);\n};\ngoog.inherits(proto.af.data.DataResponse, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.af.data.DataResponse.displayName \x3d \x27proto.af.data.DataResponse\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.af.data.DataResponse.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.af.data.DataResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.af.data.DataResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.DataResponse.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    serial: jspb.Message.getField(msg, 1)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.af.data.DataResponse.extensions, proto.af.data.DataResponse.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.af.data.DataResponse}\n */\nproto.af.data.DataResponse.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.af.data.DataResponse;\n  return proto.af.data.DataResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.af.data.DataResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.af.data.DataResponse}\n */\nproto.af.data.DataResponse.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {number} */ (reader.readInt32());\n      msg.setSerial(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.af.data.DataResponse.extensionsBinary,\n        proto.af.data.DataResponse.prototype.getExtension,\n        proto.af.data.DataResponse.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.af.data.DataResponse.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.af.data.DataResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.af.data.DataResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.DataResponse.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?number} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.af.data.DataResponse.extensionsBinary, proto.af.data.DataResponse.prototype.getExtension);\n};\n\n\n\n/**\n * The JsPb id of this message type.\n * @const {string}\n */\nproto.af.data.DataResponse.messageId \x3d \x27af.adr\x27;\n\n/*\n * Add this message to the JsPb type registry.\n * This allows for objects of this type to be built without knowing the message\n * type in advance, by using jspb.Message.buildMessageFromArray(array).\n */\njspb.Message.registerMessageType(proto.af.data.DataResponse.messageId,\n    proto.af.data.DataResponse);\n\n/**\n * optional int32 serial \x3d 1;\n * @return {?number}\n */\nproto.af.data.DataResponse.prototype.getSerial \x3d function() {\n  return /** @type {?number} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?number|undefined} value */\nproto.af.data.DataResponse.prototype.setSerial \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.af.data.DataResponse.prototype.clearSerial \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.af.data.DataResponse.prototype.hasSerial \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldInfo\x3e}\n */\nproto.af.data.DataResponse.extensions \x3d {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldBinaryInfo\x3e}\n */\nproto.af.data.DataResponse.extensionsBinary \x3d {};\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.af.data.DataResponse}\n */\nproto.af.data.DataResponse.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.af.data.DataResponse, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/apps/framework/data/dataresponse.js\n");

$googDebugFname=undefined;
var $googDebugFname="apps/framework/data/mutatedatarequest.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.af.data.MutateDataRequest\x27);\n\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.af.data.MutateDataRequest \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 1, null, null);\n};\ngoog.inherits(proto.af.data.MutateDataRequest, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.af.data.MutateDataRequest.displayName \x3d \x27proto.af.data.MutateDataRequest\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.af.data.MutateDataRequest.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.af.data.MutateDataRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.af.data.MutateDataRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.MutateDataRequest.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.af.data.MutateDataRequest.extensions, proto.af.data.MutateDataRequest.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.af.data.MutateDataRequest}\n */\nproto.af.data.MutateDataRequest.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.af.data.MutateDataRequest;\n  return proto.af.data.MutateDataRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.af.data.MutateDataRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.af.data.MutateDataRequest}\n */\nproto.af.data.MutateDataRequest.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.af.data.MutateDataRequest.extensionsBinary,\n        proto.af.data.MutateDataRequest.prototype.getExtension,\n        proto.af.data.MutateDataRequest.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.af.data.MutateDataRequest.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.af.data.MutateDataRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.af.data.MutateDataRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.MutateDataRequest.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.af.data.MutateDataRequest.extensionsBinary, proto.af.data.MutateDataRequest.prototype.getExtension);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldInfo\x3e}\n */\nproto.af.data.MutateDataRequest.extensions \x3d {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldBinaryInfo\x3e}\n */\nproto.af.data.MutateDataRequest.extensionsBinary \x3d {};\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.af.data.MutateDataRequest}\n */\nproto.af.data.MutateDataRequest.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.af.data.MutateDataRequest, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/apps/framework/data/mutatedatarequest.js\n");

$googDebugFname=undefined;
var $googDebugFname="apps/framework/data/mutatedataresponse.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.af.data.MutateDataResponse\x27);\n\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.af.data.MutateDataResponse \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, \x27af.mdr\x27, 1, null, null);\n};\ngoog.inherits(proto.af.data.MutateDataResponse, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.af.data.MutateDataResponse.displayName \x3d \x27proto.af.data.MutateDataResponse\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.af.data.MutateDataResponse.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.af.data.MutateDataResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.af.data.MutateDataResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.MutateDataResponse.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.af.data.MutateDataResponse.extensions, proto.af.data.MutateDataResponse.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.af.data.MutateDataResponse}\n */\nproto.af.data.MutateDataResponse.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.af.data.MutateDataResponse;\n  return proto.af.data.MutateDataResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.af.data.MutateDataResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.af.data.MutateDataResponse}\n */\nproto.af.data.MutateDataResponse.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.af.data.MutateDataResponse.extensionsBinary,\n        proto.af.data.MutateDataResponse.prototype.getExtension,\n        proto.af.data.MutateDataResponse.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.af.data.MutateDataResponse.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.af.data.MutateDataResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.af.data.MutateDataResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.af.data.MutateDataResponse.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.af.data.MutateDataResponse.extensionsBinary, proto.af.data.MutateDataResponse.prototype.getExtension);\n};\n\n\n\n/**\n * The JsPb id of this message type.\n * @const {string}\n */\nproto.af.data.MutateDataResponse.messageId \x3d \x27af.mdr\x27;\n\n/*\n * Add this message to the JsPb type registry.\n * This allows for objects of this type to be built without knowing the message\n * type in advance, by using jspb.Message.buildMessageFromArray(array).\n */\njspb.Message.registerMessageType(proto.af.data.MutateDataResponse.messageId,\n    proto.af.data.MutateDataResponse);\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldInfo\x3e}\n */\nproto.af.data.MutateDataResponse.extensions \x3d {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object\x3cnumber, jspb.ExtensionFieldBinaryInfo\x3e}\n */\nproto.af.data.MutateDataResponse.extensionsBinary \x3d {};\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.af.data.MutateDataResponse}\n */\nproto.af.data.MutateDataResponse.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.af.data.MutateDataResponse, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/apps/framework/data/mutatedataresponse.js\n");

$googDebugFname=undefined;
var $googDebugFname="frameworks/client/data/caching_extension.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.frameworks.client.data.CacheResponseExtension\x27);\ngoog.provide(\x27proto.frameworks.client.data.CachingExtension\x27);\ngoog.provide(\x27proto.frameworks.client.data.RequestCacheDirective\x27);\ngoog.provide(\x27proto.frameworks.client.data.RequestCacheDirective.Directive\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.ExtensionFieldBinaryInfo\x27);\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.frameworks.client.data.CachingExtension \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.frameworks.client.data.CachingExtension, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.frameworks.client.data.CachingExtension.displayName \x3d \x27proto.frameworks.client.data.CachingExtension\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.frameworks.client.data.CachingExtension.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.frameworks.client.data.CachingExtension.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.frameworks.client.data.CachingExtension} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.CachingExtension.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    forceServerFetch: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.frameworks.client.data.CachingExtension}\n */\nproto.frameworks.client.data.CachingExtension.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.frameworks.client.data.CachingExtension;\n  return proto.frameworks.client.data.CachingExtension.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.frameworks.client.data.CachingExtension} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.frameworks.client.data.CachingExtension}\n */\nproto.frameworks.client.data.CachingExtension.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setForceServerFetch(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.frameworks.client.data.CachingExtension.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.frameworks.client.data.CachingExtension.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.frameworks.client.data.CachingExtension} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.CachingExtension.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `messageSetExtension`.\n * @type {!jspb.ExtensionFieldInfo\x3c!proto.frameworks.client.data.CachingExtension\x3e}\n */\nproto.frameworks.client.data.CachingExtension.messageSetExtension \x3d new jspb.ExtensionFieldInfo(\n    90848875,\n    {messageSetExtension: 0},\n    proto.frameworks.client.data.CachingExtension,\n     /** @type {?function((boolean|undefined),!jspb.Message\x3d): !Object} */ (\n         proto.frameworks.client.data.CachingExtension.toObject),\n    0);\n\njspb.Message.messageSetExtensionsBinary[90848875] \x3d new jspb.ExtensionFieldBinaryInfo(\n    proto.frameworks.client.data.CachingExtension.messageSetExtension,\n    jspb.BinaryReader.prototype.readMessage,\n    jspb.BinaryWriter.prototype.writeMessage,\n    proto.frameworks.client.data.CachingExtension.serializeBinaryToWriter,\n    proto.frameworks.client.data.CachingExtension.deserializeBinaryFromReader,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\njspb.Message.messageSetExtensions[90848875] \x3d proto.frameworks.client.data.CachingExtension.messageSetExtension;\n\n/**\n * optional bool force_server_fetch \x3d 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.frameworks.client.data.CachingExtension.prototype.getForceServerFetch \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.frameworks.client.data.CachingExtension.prototype.setForceServerFetch \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.frameworks.client.data.CachingExtension.prototype.clearForceServerFetch \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.frameworks.client.data.CachingExtension.prototype.hasForceServerFetch \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.frameworks.client.data.CachingExtension}\n */\nproto.frameworks.client.data.CachingExtension.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.frameworks.client.data.CachingExtension, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.frameworks.client.data.CacheResponseExtension \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.frameworks.client.data.CacheResponseExtension.repeatedFields_, null);\n};\ngoog.inherits(proto.frameworks.client.data.CacheResponseExtension, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.frameworks.client.data.CacheResponseExtension.displayName \x3d \x27proto.frameworks.client.data.CacheResponseExtension\x27;\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array\x3cnumber\x3e}\n * @const\n */\nproto.frameworks.client.data.CacheResponseExtension.repeatedFields_ \x3d [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.frameworks.client.data.CacheResponseExtension.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.frameworks.client.data.CacheResponseExtension} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.CacheResponseExtension.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    timeToLiveSec: jspb.Message.getField(msg, 1),\n    matchRequestHeadersList: jspb.Message.getRepeatedField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.frameworks.client.data.CacheResponseExtension}\n */\nproto.frameworks.client.data.CacheResponseExtension.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.frameworks.client.data.CacheResponseExtension;\n  return proto.frameworks.client.data.CacheResponseExtension.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.frameworks.client.data.CacheResponseExtension} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.frameworks.client.data.CacheResponseExtension}\n */\nproto.frameworks.client.data.CacheResponseExtension.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {number} */ (reader.readInt64());\n      msg.setTimeToLiveSec(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.addMatchRequestHeaders(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.frameworks.client.data.CacheResponseExtension.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.frameworks.client.data.CacheResponseExtension} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.CacheResponseExtension.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?number} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f \x3d message.getMatchRequestHeadersList();\n  if (f.length \x3e 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `messageSetExtension`.\n * @type {!jspb.ExtensionFieldInfo\x3c!proto.frameworks.client.data.CacheResponseExtension\x3e}\n */\nproto.frameworks.client.data.CacheResponseExtension.messageSetExtension \x3d new jspb.ExtensionFieldInfo(\n    182135729,\n    {messageSetExtension: 0},\n    proto.frameworks.client.data.CacheResponseExtension,\n     /** @type {?function((boolean|undefined),!jspb.Message\x3d): !Object} */ (\n         proto.frameworks.client.data.CacheResponseExtension.toObject),\n    0);\n\njspb.Message.messageSetExtensionsBinary[182135729] \x3d new jspb.ExtensionFieldBinaryInfo(\n    proto.frameworks.client.data.CacheResponseExtension.messageSetExtension,\n    jspb.BinaryReader.prototype.readMessage,\n    jspb.BinaryWriter.prototype.writeMessage,\n    proto.frameworks.client.data.CacheResponseExtension.serializeBinaryToWriter,\n    proto.frameworks.client.data.CacheResponseExtension.deserializeBinaryFromReader,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\njspb.Message.messageSetExtensions[182135729] \x3d proto.frameworks.client.data.CacheResponseExtension.messageSetExtension;\n\n/**\n * optional int64 time_to_live_sec \x3d 1;\n * @return {?number}\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.getTimeToLiveSec \x3d function() {\n  return /** @type {?number} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?number|undefined} value */\nproto.frameworks.client.data.CacheResponseExtension.prototype.setTimeToLiveSec \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.frameworks.client.data.CacheResponseExtension.prototype.clearTimeToLiveSec \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.hasTimeToLiveSec \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * repeated string match_request_headers \x3d 2;\n * @return {!Array\x3cstring\x3e}\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.getMatchRequestHeadersList \x3d function() {\n  return /** @type {!Array\x3cstring\x3e} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {Array\x3cstring\x3e|undefined} value */\nproto.frameworks.client.data.CacheResponseExtension.prototype.setMatchRequestHeadersList \x3d function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number\x3d} opt_index\n */\nproto.frameworks.client.data.CacheResponseExtension.prototype.addMatchRequestHeaders \x3d function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.frameworks.client.data.CacheResponseExtension.prototype.clearMatchRequestHeadersList \x3d function() {\n  this.setMatchRequestHeadersList([]);\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.frameworks.client.data.CacheResponseExtension}\n */\nproto.frameworks.client.data.CacheResponseExtension.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.frameworks.client.data.CacheResponseExtension, data);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.frameworks.client.data.RequestCacheDirective \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.frameworks.client.data.RequestCacheDirective, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.frameworks.client.data.RequestCacheDirective.displayName \x3d \x27proto.frameworks.client.data.RequestCacheDirective\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.frameworks.client.data.RequestCacheDirective.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.frameworks.client.data.RequestCacheDirective.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.frameworks.client.data.RequestCacheDirective} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.RequestCacheDirective.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    directive: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.frameworks.client.data.RequestCacheDirective}\n */\nproto.frameworks.client.data.RequestCacheDirective.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.frameworks.client.data.RequestCacheDirective;\n  return proto.frameworks.client.data.RequestCacheDirective.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.frameworks.client.data.RequestCacheDirective} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.frameworks.client.data.RequestCacheDirective}\n */\nproto.frameworks.client.data.RequestCacheDirective.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {!proto.frameworks.client.data.RequestCacheDirective.Directive} */ (reader.readEnum());\n      msg.setDirective(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.frameworks.client.data.RequestCacheDirective.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.frameworks.client.data.RequestCacheDirective.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.frameworks.client.data.RequestCacheDirective} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.RequestCacheDirective.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {!proto.frameworks.client.data.RequestCacheDirective.Directive} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.frameworks.client.data.RequestCacheDirective.Directive \x3d {\n  DEFAULT_CACHE_OK_IF_VALID: 0,\n  CACHE_OK_IF_AVAILABLE: 1,\n  SKIP_CACHE: 2,\n  CACHE_ONLY: 3,\n  VALID_CACHE_ONLY: 4\n};\n\n/**\n * optional Directive directive \x3d 1;\n * @return {!proto.frameworks.client.data.RequestCacheDirective.Directive}\n */\nproto.frameworks.client.data.RequestCacheDirective.prototype.getDirective \x3d function() {\n  return /** @type {!proto.frameworks.client.data.RequestCacheDirective.Directive} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {?proto.frameworks.client.data.RequestCacheDirective.Directive|undefined} value */\nproto.frameworks.client.data.RequestCacheDirective.prototype.setDirective \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.frameworks.client.data.RequestCacheDirective.prototype.clearDirective \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.frameworks.client.data.RequestCacheDirective.prototype.hasDirective \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.frameworks.client.data.RequestCacheDirective}\n */\nproto.frameworks.client.data.RequestCacheDirective.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.frameworks.client.data.RequestCacheDirective, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/frameworks/client/data/caching_extension.jspb.js\n");

$googDebugFname=undefined;
var $googDebugFname="frameworks/client/data/retry_extension.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.frameworks.client.data.RetryExtension\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.ExtensionFieldBinaryInfo\x27);\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\ngoog.require(\x27jspb.Message\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.frameworks.client.data.RetryExtension \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.frameworks.client.data.RetryExtension, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.frameworks.client.data.RetryExtension.displayName \x3d \x27proto.frameworks.client.data.RetryExtension\x27;\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.frameworks.client.data.RetryExtension.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.frameworks.client.data.RetryExtension.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.frameworks.client.data.RetryExtension} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.RetryExtension.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    maxRetries: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.frameworks.client.data.RetryExtension}\n */\nproto.frameworks.client.data.RetryExtension.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.frameworks.client.data.RetryExtension;\n  return proto.frameworks.client.data.RetryExtension.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.frameworks.client.data.RetryExtension} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.frameworks.client.data.RetryExtension}\n */\nproto.frameworks.client.data.RetryExtension.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {number} */ (reader.readInt32());\n      msg.setMaxRetries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.frameworks.client.data.RetryExtension.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.frameworks.client.data.RetryExtension.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.frameworks.client.data.RetryExtension} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.frameworks.client.data.RetryExtension.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?number} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `messageSetExtension`.\n * @type {!jspb.ExtensionFieldInfo\x3c!proto.frameworks.client.data.RetryExtension\x3e}\n */\nproto.frameworks.client.data.RetryExtension.messageSetExtension \x3d new jspb.ExtensionFieldInfo(\n    154852854,\n    {messageSetExtension: 0},\n    proto.frameworks.client.data.RetryExtension,\n     /** @type {?function((boolean|undefined),!jspb.Message\x3d): !Object} */ (\n         proto.frameworks.client.data.RetryExtension.toObject),\n    0);\n\njspb.Message.messageSetExtensionsBinary[154852854] \x3d new jspb.ExtensionFieldBinaryInfo(\n    proto.frameworks.client.data.RetryExtension.messageSetExtension,\n    jspb.BinaryReader.prototype.readMessage,\n    jspb.BinaryWriter.prototype.writeMessage,\n    proto.frameworks.client.data.RetryExtension.serializeBinaryToWriter,\n    proto.frameworks.client.data.RetryExtension.deserializeBinaryFromReader,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\njspb.Message.messageSetExtensions[154852854] \x3d proto.frameworks.client.data.RetryExtension.messageSetExtension;\n\n/**\n * optional int32 max_retries \x3d 1;\n * @return {?number}\n */\nproto.frameworks.client.data.RetryExtension.prototype.getMaxRetries \x3d function() {\n  return /** @type {?number} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?number|undefined} value */\nproto.frameworks.client.data.RetryExtension.prototype.setMaxRetries \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.frameworks.client.data.RetryExtension.prototype.clearMaxRetries \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.frameworks.client.data.RetryExtension.prototype.hasMaxRetries \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.frameworks.client.data.RetryExtension}\n */\nproto.frameworks.client.data.RetryExtension.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.frameworks.client.data.RetryExtension, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/frameworks/client/data/retry_extension.jspb.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/cache/types.js";
eval("/**\n * @fileoverview Type definitions for the data service.\n */\n\ngoog.provide(\x27af.data.cache.CacheKey\x27);\n\n\n\n/**\n * String key that is used to identify cached data items.\n * @typedef {string}\n */\naf.data.cache.CacheKey;\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/cache/types.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/keyregistry.js";
eval("/**\n * @fileoverview Apps Framework data key registry.\n * Provides helper functions to work with instances of datakeys and extension\n * field indexes.\n */\n\ngoog.provide(\x27af.data.keyregistry\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27proto.af.data.DataRequest\x27);\ngoog.require(\x27proto.af.data.DataResponse\x27);\ngoog.require(\x27proto.af.data.MutateDataRequest\x27);\ngoog.require(\x27proto.af.data.MutateDataResponse\x27);\n\n\n\n/**\n * Map from message xid of datakey {@link jspb.Message} classes to\n * extension field index in the {@link af.data.DataRequest} class.\n *\n * @const @private {!Object\x3cstring, number\x3e}\n */\naf.data.keyregistry.fetchRequestFieldIndexMap_ \x3d {};\n\n\n/**\n * Map from message xid of datakey {@link jspb.Message} classes to\n * extension field index in the {@link af.data.MutateRequest} class.\n *\n * @const @private {!Object\x3cstring, number\x3e}\n */\naf.data.keyregistry.mutateRequestFieldIndexMap_ \x3d {};\n\n\n/**\n * Looks up the field index of the given AF data fetch or mutate request.\n * @param {!jspb.Message} request\n * @param {boolean} isFetch\n * @return {number} Field index.\n */\naf.data.keyregistry.lookupFetchOrMutateRequestFieldIndex \x3d function(\n    request, isFetch) {\n  if (goog.DEBUG) {\n    var requestType \x3d isFetch ? \x27Fetch\x27 : \x27Mutate\x27;\n    goog.asserts.assert(\n        request.messageXid,\n        requestType +\n            \x27 request proto is expected to contain messageXid. Are you \x27 +\n            \x27missing \x22option (jspb.generate_xid) \x3d true;\x22 in the .proto \x27 +\n            \x27file? I cannot even tell you which proto file, because there \x27 +\n            \x27is no message xid.\x27);\n  }\n  return af.data.keyregistry.lookupRequestFieldIndexByMessageXid(\n      /** @type {!xid.String} */ (request.messageXid), isFetch);\n};\n\n\n/**\n * Looks up the field index of the given AF data fetch or mutate request\n * message XID.\n * @param {!xid.String} messageXid\n * @param {boolean} isFetch\n * @return {number} Field index.\n */\naf.data.keyregistry.lookupRequestFieldIndexByMessageXid \x3d function(\n    messageXid, isFetch) {\n  var fieldIndexMap \x3d isFetch ? af.data.keyregistry.fetchRequestFieldIndexMap_ :\n                                af.data.keyregistry.mutateRequestFieldIndexMap_;\n  var fieldIndex \x3d fieldIndexMap[messageXid.toString()];\n  if (!fieldIndex) {\n    af.data.keyregistry.refreshRequestFieldMap_(isFetch);\n    fieldIndex \x3d fieldIndexMap[messageXid.toString()];\n  }\n  if (goog.DEBUG) {\n    var requestType \x3d isFetch ? \x27Fetch\x27 : \x27Mutate\x27;\n    var afRequestType \x3d\n        isFetch ? \x27af.data.DataRequest\x27 : \x27af.data.MutateDataRequest\x27;\n    goog.asserts.assert(\n        fieldIndex,\n        requestType + \x27 request proto JSPB messageId (\x27 + messageXid +\n            \x27) not found while iterating over all registered extensions \x27 +\n            \x27of \x27 + afRequestType + \x27. Are you sure the input jspb.Message \x27 +\n            \x27is a \x27 + requestType + \x27 data key?\x27);\n  }\n  return fieldIndex;\n};\n\n\n/**\n * Checks if the provided AF data request is a fetch or mutate. Returns\n * undefined if it is neither.\n * @param {!xid.String} messageXid\n * @return {boolean|undefined} true if fetch, false if mutate.\n */\naf.data.keyregistry.isFetch \x3d function(messageXid) {\n  var fieldIndex \x3d\n      af.data.keyregistry.fetchRequestFieldIndexMap_[messageXid.toString()];\n  if (!fieldIndex) {\n    af.data.keyregistry.refreshRequestFieldMap_(true /* isFetch */);\n    fieldIndex \x3d\n        af.data.keyregistry.fetchRequestFieldIndexMap_[messageXid.toString()];\n  }\n  if (fieldIndex) {\n    return true;\n  }\n  fieldIndex \x3d\n      af.data.keyregistry.mutateRequestFieldIndexMap_[messageXid.toString()];\n  if (!fieldIndex) {\n    af.data.keyregistry.refreshRequestFieldMap_(false /* isFetch */);\n    fieldIndex \x3d\n        af.data.keyregistry.mutateRequestFieldIndexMap_[messageXid.toString()];\n  }\n  if (fieldIndex) {\n    return false;\n  }\n  return undefined;\n};\n\n\n/**\n * Populates a map from datakey proto message xids to\n * {@link proto.af.data.MutateDataRequest} extention field index. This method\n * can be called repeatedly as additional datakeys are goog.required and added\n * to proto.af.data.MutateDataRequest.extensions.\n *\n * Note: The code is currently known to be inefficient since it iterates over\n * all registered extensions to DataRequest and MutateDataRequest. There is an\n * opportunitiy here to save time by generating and running the registration\n * code explicitly before hand.\n * @param {boolean} isFetch\n * @private\n */\naf.data.keyregistry.refreshRequestFieldMap_ \x3d function(isFetch) {\n  var extensions \x3d isFetch ? proto.af.data.DataRequest.extensions :\n                             proto.af.data.MutateDataRequest.extensions;\n  var fieldIndexMap \x3d isFetch ? af.data.keyregistry.fetchRequestFieldIndexMap_ :\n                                af.data.keyregistry.mutateRequestFieldIndexMap_;\n  for (var fieldNumber in extensions) {\n    var fieldInfo \x3d extensions[parseInt(fieldNumber, 10)];\n    var messageXid \x3d fieldInfo.ctor.prototype.messageXid;\n    if (messageXid) {\n      // Assert that if request field map already contains this message xid\n      // then it maps to the same extension field index.\n      if (fieldIndexMap[messageXid]) {\n        goog.asserts.assert(\n            (fieldIndexMap[messageXid] \x3d\x3d fieldInfo.fieldIndex),\n            \x27Found same data request proto message with messageXid \x27 +\n                messageXid + \x27 mapped to \x27 +\n                \x27multiple extension field indexes. The field indexes are \x27 +\n                fieldIndexMap[messageXid] + \x27 and \x27 + fieldInfo.fieldIndex +\n                \x27. This is an error. Please get \x27 +\n                \x27rid of one. The MUST be a 1:1 mapping from request message \x27 +\n                \x27to extension field identifier.\x27);\n      }\n      fieldIndexMap[messageXid] \x3d fieldInfo.fieldIndex;\n    }\n  }\n};\n\n\n/**\n * Wraps a request in an af.data.DataRequest or af.data.MutateRequest that can\n * be used with the verbose methods in the data service class.\n *\n * @param {!jspb.Message} request A data fetch or mutate request to be wrapped\n *     in an af.data.DataRequest or af.data.MutateRequest.\n * @return {!af.data.DataRequest|!af.data.MutateRequest} The AF Data request.\n */\naf.data.keyregistry.createRequest \x3d function(request) {\n  var isFetch \x3d af.data.keyregistry.isFetch(/** @type {!xid.String} */ (\n      goog.asserts.assertString(request.messageXid)));\n  return isFetch\n      ? af.data.keyregistry.createFetchRequest(request)\n      : af.data.keyregistry.createMutateRequest(request);\n};\n\n\n/**\n * Wraps a request in an af.data.DataRequest that can be used with\n * the verbose methods in the data service class.\n *\n * @param {!jspb.Message} request A data fetch request to be wrapped in\n *     an af.data.DataRequest.\n * @return {!af.data.DataRequest} The AF Data request.\n */\naf.data.keyregistry.createFetchRequest \x3d function(request) {\n  var fieldIndex \x3d af.data.keyregistry.lookupFetchOrMutateRequestFieldIndex(\n      request, true /* isFetch */);\n  var afRequest \x3d {\n    responseExtension:\n        goog.asserts.assert(proto.af.data.DataResponse.extensions[fieldIndex]),\n    requestExtension: /** @type {!jspb.ExtensionFieldInfo} */\n        (proto.af.data.DataRequest.extensions[fieldIndex]),\n    request: request\n  };\n  return /** @type {!af.data.DataRequest} */ (afRequest);\n};\n\n\n/**\n * Wraps a request in an af.data.MutateDataRequest that can be used with\n * the verbose methods in the data service class.\n *\n * @param {!jspb.Message} request A data fetch request to be wrapped in\n *     an af.data.MutateRequest.\n * @return {!af.data.MutateRequest} The AF Data request.\n */\naf.data.keyregistry.createMutateRequest \x3d function(request) {\n  var fieldIndex \x3d af.data.keyregistry.lookupFetchOrMutateRequestFieldIndex(\n      request, false /* isFetch */);\n  var afRequest \x3d {\n    responseExtension: proto.af.data.MutateDataResponse.extensions[fieldIndex],\n    mutateRequestExtension: /** @type {!jspb.ExtensionFieldInfo} */\n        (proto.af.data.MutateDataRequest.extensions[fieldIndex]),\n    mutateRequest: request\n  };\n  return /** @type {!af.data.MutateRequest} */ (afRequest);\n};\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/keyregistry.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/types.js";
eval("/**\n * @fileoverview Type definitions for the data service.\n */\n\ngoog.provide(\x27af.data.DataRequest\x27);\ngoog.provide(\x27af.data.ExtendedDataRequest\x27);\ngoog.provide(\x27af.data.MutateRequest\x27);\ngoog.provide(\x27af.data.MutateResponse\x27);\ngoog.provide(\x27af.data.Request\x27);\ngoog.provide(\x27af.data.getRpcId\x27);\ngoog.provide(\x27af.data.isDataRequest\x27);\ngoog.provide(\x27af.data.requestToRpcId\x27);\ngoog.provide(\x27af.data.requestToRpcInstance\x27);\ngoog.provide(\x27af.data.requestToString\x27);\ngoog.provide(\x27af.data.rpcIdToFetchRequest\x27);\ngoog.provide(\x27af.data.rpcInstanceToDatakey\x27);\n\ngoog.require(\x27af.data.cache.CacheKey\x27);\ngoog.require(\x27af.data.keyregistry\x27);\ngoog.require(\x27frameworks.client.data.RpcId\x27);\ngoog.require(\x27frameworks.client.data.RpcInstance\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27proto.af.data.DataRequest\x27);\ngoog.require(\x27proto.af.data.DataResponse\x27);\ngoog.require(\x27proto.af.data.MutateDataRequest\x27);\ngoog.require(\x27proto.af.data.MutateDataResponse\x27);\ngoog.require(\x27proto.frameworks.client.data.CachingExtension\x27);\ngoog.require(\x27proto.frameworks.client.data.RetryExtension\x27);\n\ngoog.forwardDeclare(\x27af.data.CacheControl\x27);\n\n\n/**\n * Type that represents all the information necessary for a single data request,\n * including the type of the input (required if the data has input params),\n * the response type (always required), and the actual input parameters to the\n * request if necessary.\n * If the forceServerFetch option is set to true, the request will expire the\n * old cache value and fetch the value from the server.\n * If maxRetries is not specified, a default will be used (BatchResolver\n * defaults to af.data.BatchResolver.MAX_RETRIES_).\n * The key_ is used to cache the computation of cache key of the request,\n * which can be expensive for larger requests with many fields (see\n * af.data.KeyGenerator.keyForRequest for more details).  It is not meant for\n * external use.\n *\n * This uses JSPB Proto Extensions to refer to the fields of the data key.\n * For more information on this, see \x3cinsert doc link when available\x3e.\n *\n * @typedef {{\n *   requestExtension: (jspb.ExtensionFieldInfo|undefined),\n *   responseExtension: !jspb.ExtensionFieldInfo,\n *   request: (jspb.Message|undefined),\n *   forceServerFetch: (boolean|undefined),\n *   maxRetries: (number|undefined),\n *   key_: (!af.data.cache.CacheKey|undefined)\n * }}\n */\naf.data.DataRequest;\n// Changes require updating the getData method in data service.\n\n\n/**\n * @typedef {!af.data.DataRequest|\n *     !af.data.MutateRequest|\n *     !jspb.ExtensionFieldInfo}\n * TODO(tomnguyen) Remove this typedef and its usages.\n */\naf.data.Request;\n\n\n/**\n * A data request with an additional makeRequest function.\n * @typedef {{\n *   makeRequest: !Function,\n *   deadlineMillis: (number|undefined),\n *   nonFatal: (boolean|undefined),\n *   experimentFlagRequired: (!xid.String|undefined)\n * }|af.data.DataRequest}\n */\naf.data.ExtendedDataRequest;\n\n\n/**\n * Tests if a value is a af.data.DataRequest.\n *\n * @param {*} dataRequest\n * @return {boolean} Whether the passed in value is a af.data.DataRequest.\n */\naf.data.isDataRequest \x3d function(dataRequest) {\n  if (!goog.isObject(dataRequest)) {\n    return false;\n  }\n  if (goog.isDef(dataRequest.requestExtension) \x26\x26\n      !(dataRequest.requestExtension instanceof jspb.ExtensionFieldInfo)) {\n    return false;\n  }\n  if (!(dataRequest.responseExtension instanceof jspb.ExtensionFieldInfo)) {\n    return false;\n  }\n  if (goog.isDef(dataRequest.request) \x26\x26\n      !(dataRequest.request instanceof jspb.Message)) {\n    return false;\n  }\n  if (goog.isDef(dataRequest.forceServerFetch) \x26\x26\n      !goog.isBoolean(dataRequest.forceServerFetch)) {\n    return false;\n  }\n  if (goog.isDef(dataRequest.maxRetries) \x26\x26\n      (!goog.isNumber(dataRequest.maxRetries) || dataRequest.maxRetries \x3c 0)) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Produces a useful debug representation of the passed in data key.\n * @param {!af.data.Request|!af.data.MutateRequest|\n *   !frameworks.client.data.RpcInstance} dataKey\n * @return {string}\n */\naf.data.requestToString \x3d function(dataKey) {\n  goog.asserts.assert(dataKey);\n  if (dataKey.getRpcId) {\n    return dataKey.getRpcId().toString();\n  }\n  if (!goog.DEBUG) {\n    return dataKey.toString();\n  }\n  var requestLabel \x3d \x27unknown\x27;\n  var requestType \x3d \x27DataRequest\x27;\n  if (dataKey instanceof jspb.ExtensionFieldInfo \x26\x26 dataKey.ctor) {\n    requestLabel \x3d dataKey.ctor.displayName || dataKey.ctor.name;\n  } else if (dataKey.request) {\n    requestLabel \x3d dataKey.request.constructor.displayName ||\n        dataKey.request.constructor.name;\n  } else if (dataKey.mutateRequest) {\n    requestType \x3d \x27MutateRequest\x27;\n    requestLabel \x3d dataKey.mutateRequest.constructor.displayName ||\n        dataKey.mutateRequest.constructor.name;\n  } else if (dataKey.responseExtension \x26\x26 dataKey.responseExtension.ctor) {\n    var ctor \x3d dataKey.responseExtension.ctor;\n    requestLabel \x3d ctor.displayName || ctor.name;\n  }\n  return requestType + \x27\x3c\x27 + requestLabel + \x27\x3e\x27;\n};\n\n\n/**\n * Produces the RpcInstance of the passed in data key.\n * If `datakey` is a `jspb.Message`, we call `af.data.keyregistry.createRequest`\n * to construct an af.data request object, and produce the instance from that.\n * @param {!af.data.Request|!af.data.MutateRequest|\n *   !frameworks.client.data.RpcInstance|!jspb.Message} dataKey\n * @return {!frameworks.client.data.RpcInstance}\n */\naf.data.requestToRpcInstance \x3d function(dataKey) {\n  if (dataKey.getRpcId) {\n    return /** @type {!frameworks.client.data.RpcInstance} */ (dataKey);\n  }\n  var rpcId \x3d af.data.requestToRpcId(dataKey);\n  if (dataKey instanceof jspb.Message) {\n    return rpcId.getInstance(dataKey);\n  }\n  var rpcInstance \x3d dataKey.request\n      ? rpcId.getInstance(dataKey.request)\n      : rpcId.getInstance(dataKey.mutateRequest);\n  if (dataKey.forceServerFetch) {\n    var cacheExtension \x3d new proto.frameworks.client.data.CachingExtension();\n    cacheExtension.setForceServerFetch(true);\n    rpcInstance \x3d rpcInstance.withRequestSideChannel(\n        proto.frameworks.client.data.CachingExtension.messageSetExtension,\n        cacheExtension);\n  }\n  if (dataKey.maxRetries) {\n    var retryExtension \x3d new proto.frameworks.client.data.RetryExtension();\n    retryExtension.setMaxRetries(dataKey.maxRetries);\n    rpcInstance \x3d rpcInstance.withRequestSideChannel(\n        proto.frameworks.client.data.RetryExtension.messageSetExtension,\n        retryExtension);\n  }\n  return rpcInstance;\n};\n\n\n/**\n * Produces the RpcId of the passed in data key.\n * If `datakey` is a `jspb.Message`, we call `af.data.keyregistry.createRequest`\n * to construct an af.data request object, and produce the ID from that.\n * @param {!af.data.Request|!af.data.MutateRequest|\n *   !frameworks.client.data.RpcInstance|!jspb.Message} dataKey\n * @return {!frameworks.client.data.RpcId}\n */\naf.data.requestToRpcId \x3d function(dataKey) {\n  goog.asserts.assert(dataKey);\n  if (goog.isFunction(dataKey.getRpcId)) {\n    return dataKey.getRpcId();\n  }\n  var rpcIdNumber \x3d -1;\n  if (dataKey instanceof jspb.Message) {\n    dataKey \x3d af.data.keyregistry.createRequest(dataKey);\n  }\n  if (dataKey instanceof jspb.ExtensionFieldInfo) {\n    rpcIdNumber \x3d dataKey.fieldIndex;\n  } else if (dataKey.requestExtension) {\n    rpcIdNumber \x3d dataKey.requestExtension.fieldIndex;\n  } else if (dataKey.mutateRequestExtension) {\n    rpcIdNumber \x3d dataKey.mutateRequestExtension.fieldIndex;\n  } else if (dataKey.responseExtension) {\n    rpcIdNumber \x3d dataKey.responseExtension.fieldIndex;\n  }\n  goog.asserts.assert(rpcIdNumber \x3e 0);\n  var requestCtorExtension \x3d\n      proto.af.data.DataRequest.extensions[rpcIdNumber] ||\n      proto.af.data.MutateDataRequest.extensions[rpcIdNumber];\n  var responseCtorExtension \x3d\n      proto.af.data.DataResponse.extensions[rpcIdNumber] ||\n      proto.af.data.MutateDataResponse.extensions[rpcIdNumber];\n  // Old AF data keys sometimes do not have a request.\n  var requestCtor \x3d goog.nullFunction;\n  if (requestCtorExtension) {\n    requestCtor \x3d /** @type {function(new: jspb.Message, ?Array\x3d)} */ (\n        requestCtorExtension.ctor);\n  }\n  // Old AF data keys sometimes do not have a response.\n  var responseCtor \x3d goog.nullFunction;\n  if (responseCtorExtension) {\n    responseCtor \x3d /** @type {function(new: jspb.Message, ?Array\x3d)} */ (\n        responseCtorExtension.ctor);\n  }\n  return new frameworks.client.data.RpcId(\n      rpcIdNumber + \x27\x27, responseCtor, requestCtor);\n};\n\n\n/**\n * Produces the RpcId of the passed in extensions.\n * @param {!jspb.ExtensionFieldInfo\x3cRESPONSE\x3e} responseExtension\n * @param {!jspb.ExtensionFieldInfo\x3cREQUEST\x3e\x3d} opt_requestExtension\n * @return {!frameworks.client.data.RpcId\x3cREQUEST, RESPONSE\x3e}\n * @template REQUEST, RESPONSE\n */\naf.data.getRpcId \x3d function(responseExtension, opt_requestExtension) {\n  var requestMessageCtor \x3d\n      /** @type {function(new: jspb.Message, ?Array\x3d)} */ (\n          opt_requestExtension ? opt_requestExtension.ctor : goog.nullFunction);\n  return new frameworks.client.data.RpcId(\n      responseExtension.fieldIndex + \x27\x27,\n      /** @type {function(new: jspb.Message, ?Array\x3d)} */\n      (responseExtension.ctor), requestMessageCtor);\n};\n\n\n/**\n * Produces the RpcId of the passed in data key.\n * @param {!frameworks.client.data.RpcId} rpcId\n * @param {?jspb.Message\x3d} opt_request\n * @return {!af.data.DataRequest}\n */\naf.data.rpcIdToFetchRequest \x3d function(rpcId, opt_request) {\n  goog.asserts.assert(rpcId);\n  var rpcIdNumber \x3d parseInt(rpcId, 10);\n  goog.asserts.assert(rpcIdNumber \x3e 0);\n  var fetchResponseCtorExtension \x3d\n      proto.af.data.DataResponse.extensions[rpcIdNumber];\n  goog.asserts.assert(\n      fetchResponseCtorExtension,\n      \x27Did not find af.data.DataResponse with extension number \x27 + rpcIdNumber);\n  return /** @type {!af.data.DataRequest} */ ({\n    responseExtension: fetchResponseCtorExtension,\n    requestExtension: proto.af.data.DataRequest.extensions[rpcIdNumber],\n    request: opt_request\n  });\n};\n\n\n/**\n * Produces a data key using provided rpc instance. Returns null if provided\n * rpc instance cannot be turned into a datakey.\n * @param {!frameworks.client.data.RpcInstance} rpcInstance\n * @return {?af.data.DataRequest|?af.data.MutateRequest}\n */\naf.data.rpcInstanceToDatakey \x3d function(rpcInstance) {\n  var rpcIdNumber \x3d rpcInstance.getRpcId().getExtensionId();\n  if ((rpcIdNumber \x3d\x3d null) || (rpcIdNumber \x3c 0)) {\n    return null;\n  }\n  var fetchResponseCtorExtension \x3d\n      proto.af.data.DataResponse.extensions[rpcIdNumber];\n  if (fetchResponseCtorExtension) {\n    var cachingExtension \x3d rpcInstance.getRequestSideChannel(\n        proto.frameworks.client.data.CachingExtension.messageSetExtension);\n    var retryExtension \x3d rpcInstance.getRequestSideChannel(\n        proto.frameworks.client.data.RetryExtension.messageSetExtension);\n    var afRequest \x3d /** @type {!af.data.DataRequest} */ ({\n      responseExtension: fetchResponseCtorExtension,\n      requestExtension: proto.af.data.DataRequest.extensions[rpcIdNumber],\n      request: rpcInstance.getRequestMessage(),\n      forceServerFetch:\n          (cachingExtension \x26\x26 cachingExtension.getForceServerFetch())\n    });\n    if (retryExtension \x26\x26 retryExtension.getMaxRetries()) {\n      afRequest.maxRetries \x3d\n          /** @type {number} */ (retryExtension.getMaxRetries());\n    }\n    return afRequest;\n  }\n  // We use mutate request here since mutate response is optional in\n  // af.data.MutateRequest to support old AF data keys where the response\n  // is optional. A mutate request, otoh, is required and not optional.\n  var mutateRequestCtorExtension \x3d\n      proto.af.data.MutateDataRequest.extensions[rpcIdNumber];\n  if (mutateRequestCtorExtension) {\n    var afRequest \x3d /** @type {!af.data.MutateRequest} */ ({\n      responseExtension:\n          proto.af.data.MutateDataResponse.extensions[rpcIdNumber],\n      mutateRequestExtension: mutateRequestCtorExtension,\n      mutateRequest: rpcInstance.getRequestMessage()\n    });\n    return afRequest;\n  }\n  return null;\n};\n\n\n/**\n * Type that represents all the information necessary for a mutate data request,\n * including the type of the mutate request, the mutate request itself,\n * the response type.\n *\n * This uses JSPB Proto Extensions to refer to the fields of the data key.\n * For more information on this, see \x3cinsert doc link when available\x3e.\n *\n * @typedef {{\n *   responseExtension: (jspb.ExtensionFieldInfo|undefined),\n *   mutateRequestExtension: !jspb.ExtensionFieldInfo,\n *   mutateRequest: !jspb.Message\n * }}\n */\naf.data.MutateRequest;\n// Changes require updating the mutateData methods in data service.\n\n\n/**\n * Encapsulates the response proto for a mutation request and the cache control\n * object that can be used to update the cache after a successful mutation.\n *\n * @param {!af.data.CacheControl} cacheControl The cache control object.\n * @param {T} message The response proto for the mutation request or null\n *     when there is no such response.\n * @param {*\x3d} opt_error Error object if there was an error in the mutation.\n * @constructor @struct @final\n * @template T\n */\naf.data.MutateResponse \x3d function(cacheControl, message, opt_error) {\n  /** @public @const {!af.data.CacheControl} */\n  this.cacheControl \x3d cacheControl;\n\n  /** @public @const {T} */\n  this.message \x3d message;\n\n  /** @public @const {*} */\n  this.error \x3d opt_error;\n};\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/types.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syg5');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syg5');

}catch(e){_DumpException(e)}
/* _Module_:syg6 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syg6');
var $googDebugFname="google/rpc/code.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.google.rpc.Code\x27);\n\n/**\n * @enum {number}\n */\nproto.google.rpc.Code \x3d {\n  OK: 0,\n  CANCELLED: 1,\n  UNKNOWN: 2,\n  INVALID_ARGUMENT: 3,\n  DEADLINE_EXCEEDED: 4,\n  NOT_FOUND: 5,\n  ALREADY_EXISTS: 6,\n  PERMISSION_DENIED: 7,\n  UNAUTHENTICATED: 16,\n  RESOURCE_EXHAUSTED: 8,\n  FAILED_PRECONDITION: 9,\n  ABORTED: 10,\n  OUT_OF_RANGE: 11,\n  UNIMPLEMENTED: 12,\n  INTERNAL: 13,\n  UNAVAILABLE: 14,\n  DATA_LOSS: 15\n};\n\n\n//# sourceURL\x3dhttps://qs/google/rpc/code.jspb.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syg6');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syg6');

}catch(e){_DumpException(e)}
/* _Module_:syg8 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syg8');
var $googDebugFname="javascript/frameworks/client/data/batchdatainterface.js";
goog.loadModule("/**\n * @pintomodule\n */\n\ngoog.module(\x27frameworks.client.data.BatchDataInterface\x27);\ngoog.module.declareLegacyNamespace();\n\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst RpcInstance \x3d goog.require(\x27frameworks.client.data.RpcInstance\x27);\nconst atInterface \x3d goog.require(\x27wiz.atInterface\x27);\nconst interfaces \x3d goog.require(\x27frameworks.client.data.interfaces\x27);\n\n\n\n/**\n * Interface for executing batch data operations. The default implementaion of\n * this interface provides a rich interceptor API that is transport agnostic.\n * If you are not using standard Boq Web or Wiz RPC, you should provide a custom\n * implementation of BatchTransportInterface, if you wish to use batch\n * operations.\n * @interface\n */\nvar BatchDataInterface \x3d atInterface(interfaces.BATCH_DATA);\n\n\n/**\n * Execute a batch operation.\n *\n * @param {!Object\x3cstring, !RpcInstance\x3e} requestBatch\n * @return {!Object\x3cstring, !GoogPromise\x3c!jspb.Message\x3e\x3e}\n */\nBatchDataInterface.prototype.execute;\n\nexports \x3d BatchDataInterface;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/batchdatainterface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syg8');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syg8');

}catch(e){_DumpException(e)}
/* _Module_:syga */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syga');
var $googDebugFname="javascript/frameworks/client/data/batchtransportinterface.js";
goog.loadModule("/**\n * @pintomodule\n */\n\ngoog.module(\x27frameworks.client.data.BatchTransportInterface\x27);\ngoog.module.declareLegacyNamespace();\n\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst RpcInstance \x3d goog.require(\x27frameworks.client.data.RpcInstance\x27);\nconst RpcResponse \x3d goog.require(\x27frameworks.client.data.RpcResponse\x27);\nconst atInterface \x3d goog.require(\x27wiz.atInterface\x27);\nconst interfaces \x3d goog.require(\x27frameworks.client.data.interfaces\x27);\n\n\n\n/**\n * Interface for executing batch data operations. A default implementation\n * is intentionally not bound since it depends heavily on product infrastructure\n * goals. In the confines of Boq Web, the implementation is expected\n * to be boq.wizrpcbinding.services.BATCH_EXECUTOR.\n * @interface\n */\nvar BatchTransportInterface \x3d atInterface(interfaces.BATCH_TRANSPORT);\n\n\n/**\n * Execute a batch operation.\n *\n * @param {!Object\x3cstring, !RpcInstance\x3e} requestBatch\n * @return {!Object\x3cstring, !GoogPromise\x3c!RpcResponse\x3c!jspb.Message\x3e\x3e\x3e}\n */\nBatchTransportInterface.prototype.execute;\n\nexports \x3d BatchTransportInterface;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/batchtransportinterface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syga');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syga');

}catch(e){_DumpException(e)}
/* _Module_:sygb */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygb');
var $googDebugFname="javascript/apps/wiz/wiz_interface.js";
eval("/**\n * @fileoverview Implementation of wiz.registerInterface, which is used to\n * register an ES6 Wiz interface. This allows an interface\x27s implementation to\n * be set in the bootstrap of an application.\n */\ngoog.provide(\x27wiz.interface\x27);\ngoog.provide(\x27wiz.interface.registry\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27wiz.atInterface\x27);\n\n\n/**\n * Returns a function that is tagged to be an interface. The interface object\n * can then be extracted from the returned function using\n * {@see wiz.atInterface.get}.\n * @param {!fava.services.ServiceId} serviceId\n * @param {?} ctor\n * @param {!fava.services.ServiceId\x3d} opt_defaultImplementationId\n */\nwiz.interface.registry.registerInterface \x3d (serviceId, ctor,\n    opt_defaultImplementationId) \x3d\x3e {\n  wiz.atInterface.init(ctor, serviceId, opt_defaultImplementationId);\n};\n\n\n/**\n * Returns a function that is tagged to be an interface. The interface object\n * can then be extracted from the returned function using\n * {@see wiz.atInterface.get}.\n * @param {!fava.services.ServiceId} serviceId\n * @param {?} ctor\n * @param {!fava.services.ServiceId\x3d} opt_defaultImplementationId\n */\nwiz.interface.registerInterface \x3d wiz.interface.registry.registerInterface;\n\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/wiz_interface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygb');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygb');

}catch(e){_DumpException(e)}
/* _Module_:sygc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygc');
var $googDebugFname="javascript/frameworks/client/data/genericdatainterface.js";
goog.loadModule("/**\n * @pintomodule\n */\n\ngoog.module(\x27frameworks.client.data.GenericDataInterface\x27);\ngoog.module.declareLegacyNamespace();\n\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst RpcInstance \x3d goog.require(\x27frameworks.client.data.RpcInstance\x27);\nconst services \x3d goog.require(\x27frameworks.client.data.services\x27);\nconst {GENERIC_DATA} \x3d goog.require(\x27frameworks.client.data.interfaces\x27);\nconst {registerInterface} \x3d goog.require(\x27wiz.interface\x27);\n\n\n\n/**\n * Interface for executing data operations in Wiz. The default implementaion of\n * this interface provides a rich interceptor API that is transport agnostic.\n * If you are not using standard Boq Web or Wiz RPC, you should provide a custom\n * implementation of GenericTransportInterface.\n * @interface\n */\nclass GenericDataInterface {\n  /**\n   * Execute a fetch operation. A fetch operation doesn\x27t have any side-effects,\n   * is idempotent and safe to execute in parallel with any other fetch\n   * operation.\n   *\n   * In Boq Data, the Data Key proto extends DataRequest, see:\n   * go/boq-data/concepts/data-keys.md?#what-types-of-data-keys-are-there.\n   *\n   * In Wiz RPC, the RPC service proto contains a FETCH frontend_method_type\n   * option. See cs/data/service_annotations.proto.\n   *\n   * @param {!RpcInstance\x3cREQUEST, RESPONSE\x3e} rpcInstance\n   * @return {!GoogPromise\x3cRESPONSE\x3e}\n   * @template REQUEST, RESPONSE\n   */\n  fetch(rpcInstance) {}\n  /**\n   * Execute a mutate operation. A mutate operation has side-effects and must be\n   * executed in serial, one after another. Implementors of this interface are\n   * expected to enforce this restriction.\n   *\n   * In Boq Data, the Data Key proto extends MutateDataRequest, see:\n   * go/boq-data/concepts/data-keys.md?#what-types-of-data-keys-are-there.\n   *\n   * In Wiz RPC, the RPC service proto contains a MUTATE frontend_method_type\n   * option. See cs/data/service_annotations.proto.\n   *\n   * @param {!RpcInstance\x3cREQUEST, RESPONSE\x3e} rpcInstance\n   * @return {!GoogPromise\x3cRESPONSE\x3e}\n   * @template REQUEST, RESPONSE\n   */\n  mutate(rpcInstance) {}\n}\n\nregisterInterface(GENERIC_DATA, GenericDataInterface, services.GENERIC_DATA);\n\nexports \x3d GenericDataInterface;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/genericdatainterface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygc');

}catch(e){_DumpException(e)}
/* _Module_:sygd */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygd');
var $googDebugFname="javascript/frameworks/client/data/generictransportinterface.js";
goog.loadModule("/**\n * @pintomodule\n */\n\ngoog.module(\x27frameworks.client.data.GenericTransportInterface\x27);\ngoog.module.declareLegacyNamespace();\n\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst RpcInstance \x3d goog.require(\x27frameworks.client.data.RpcInstance\x27);\nconst RpcResponse \x3d goog.require(\x27frameworks.client.data.RpcResponse\x27);\nconst atInterface \x3d goog.require(\x27wiz.atInterface\x27);\nconst interfaces \x3d goog.require(\x27frameworks.client.data.interfaces\x27);\n\n\n\n/**\n * Interface for executing data operations in Wiz. A default implementation\n * is intentionally not bound since it depends heavily on product infrastructure\n * goals. In the confines of Boq Web, the implementation is expected\n * to be boq.wizrpcbinding.services.AF_RPC_DATA. Different transport types use\n * different techniques to identify mutate operations.\n * @interface\n */\nvar GenericTransportInterface \x3d atInterface(interfaces.GENERIC_TRANSPORT);\n\n\n/**\n * Execute a fetch operation. A fetch operation doesn\x27t have any side-effects,\n * is idempotent and safe to execute in parallel with any other fetch operation.\n *\n * In Boq Data, the Data Key proto extends DataRequest, see:\n * go/boq-data/concepts/data-keys.md?#what-types-of-data-keys-are-there.\n *\n * In Wiz RPC, the RPC service proto contains a FETCH frontend_method_type\n * option. See cs/data/service_annotations.proto.\n *\n * @param {!RpcInstance\x3cREQUEST, RESPONSE\x3e} rpcInstance\n * @return {!GoogPromise\x3c!RpcResponse\x3cRESPONSE\x3e\x3e}\n * @template REQUEST, RESPONSE\n */\nGenericTransportInterface.prototype.fetch;\n\n\n/**\n * Execute a mutate operation. A mutate operation has side-effects and must be\n * executed in serial, one after another. Implementors of this interface are\n * expected to enforce this restriction.\n *\n * In Boq Data, the Data Key proto extends MutateDataRequest, see:\n * go/boq-data/concepts/data-keys.md?#what-types-of-data-keys-are-there.\n *\n * In Wiz RPC, the RPC service proto contains a MUTATE frontend_method_type\n * option. See cs/data/service_annotations.proto.\n *\n * @param {!RpcInstance\x3cREQUEST, RESPONSE\x3e} rpcInstance\n * @return {!GoogPromise\x3c!RpcResponse\x3cRESPONSE\x3e\x3e}\n * @template REQUEST, RESPONSE\n */\nGenericTransportInterface.prototype.mutate;\n\nexports \x3d GenericTransportInterface;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/generictransportinterface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygd');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygd');

}catch(e){_DumpException(e)}
/* _Module_:syge */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syge');
var $googDebugFname="java/com/google/apps/framework/data/client/middleware/jsdatamessage.js";
eval("goog.provide(\x27af.data.middleware.JsdataMessage\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27xid\x27);\n\n\n\ngoog.scope(function() {\n\n/** @const {!Object\x3cstring, !af.data.middleware.JsdataMessage\x3e} */\nvar messageXidToJsDataLookup \x3d {};\n\n\n/**\n * JsdataMessage is a wrapper around a {@link jspb.Message} based protocol\n * buffer class. It provides methods that make it easier to map protos\n * together based on jsdata serialization.\n * Instances of this class are created by code generation. When a proto\n * would otherwise be required with\n * goog.require(\x27proto.bar.MyProto\x27);\n * you can get the associated jsdata instance by doing\n * goog.require(\x27jsdata.bar.MyProto\x27);\n * Notice the \x27jsdata\x27 instead of the \x27proto\x27.\n * @param {function(new:MESSAGE, ?Array\x3d)} ctor\n * @param {number\x3d} opt_timeToLive\n * @constructor @final\n * @template MESSAGE\n */\naf.data.middleware.JsdataMessage \x3d function(ctor, opt_timeToLive) {\n  /** @const {function(new:MESSAGE, ?Array\x3d)} */\n  this.messageCtor \x3d ctor;\n\n  /** @const @private {number|undefined} Units are in ms. */\n  this.timeToLive_ \x3d opt_timeToLive;\n\n  // If the proto is not configured for jsdata, then ignore lookup.\n  if (ctor.prototype.messageXid) {\n    var messageXid \x3d ctor.prototype.messageXid;\n    messageXidToJsDataLookup[messageXid] \x3d this;\n  }\n};\n\n\n/**\n * Units are in milliseconds.\n * @return {number|undefined}\n */\naf.data.middleware.JsdataMessage.prototype.getTimeToLive \x3d function() {\n  return this.timeToLive_;\n};\n\n\n/**\n * Returns the xid of the proto type behind this JsdataMessage.\n * @return {!xid.String}\n */\naf.data.middleware.JsdataMessage.prototype.getXid \x3d function() {\n  return this.messageCtor.prototype.messageXid;\n};\n\n\n/**\n * Returns a new proto instance of the type that is wrapped in this\n * JsdataMessage.\n * @param {Array\x3d} opt_data\n * @return {MESSAGE}\n */\naf.data.middleware.JsdataMessage.prototype.getInstance \x3d function(opt_data) {\n  return new this.messageCtor(opt_data);\n};\n\n/**\n * Returns true if a message or its ctor has a jsdatamessage.\n * @param {!jspb.Message|function(new:jspb.Message)} messageOrMessageCtor\n * @return {!af.data.middleware.JsdataMessage}\n */\naf.data.middleware.JsdataMessage.getJsdataMessage \x3d\n    function(messageOrMessageCtor) {\n  return messageXidToJsDataLookup[af.data.middleware.JsdataMessage.getXid(\n    messageOrMessageCtor)];\n};\n\n/**\n * Builds a JsPb message proto from Js array data. This is intended for code\n * which might need to build protos without knowing their type in advance.\n * The proto type must set the JsPb generate_xid option. To construct a proto\n * object when you know the type in advance, you should call its constructor\n * directly.\n * @param {string} xid The message xid.\n * @param {!Array} data The message data array.\n * @return {!jspb.Message} The converted proto message.\n */\naf.data.middleware.JsdataMessage.buildMessageFromArray \x3d\n    function(xid, data) {\n  if (!messageXidToJsDataLookup[xid]) {\n    throw Error(\x27Unknown message type: \x27 + xid\n        + \x27. Does the proto set jspb.generate_xid and is the \x27\n        + \x27corresponding jsdata file in your deps?\x27);\n  }\n  var messageCtor \x3d messageXidToJsDataLookup[xid].messageCtor;\n  return new messageCtor(data);\n};\n\n\n/**\n * Returns the xid of the proto type for a given proto.\n * @param {!jspb.Message|!af.data.middleware.JsdataMessage|\n *     function(new:jspb.Message)} messageOrMessageCtor\n * @return {xid.String}\n * TODO(tomnguyen) Make @package once migration is complete.\n */\naf.data.middleware.JsdataMessage.getXid \x3d function(messageOrMessageCtor) {\n  var xidString;\n  var ctor;\n  if (messageOrMessageCtor instanceof jspb.Message) {\n    xidString \x3d messageOrMessageCtor.messageXid;\n    ctor \x3d messageOrMessageCtor.constructor;\n  } else if (messageOrMessageCtor instanceof af.data.middleware.JsdataMessage) {\n    xidString \x3d messageOrMessageCtor.getXid();\n    ctor \x3d messageOrMessageCtor.messageCtor;\n  } else {\n    goog.asserts.assertFunction(messageOrMessageCtor,\n        \x27Expected a protocol buffer or protocol buffer constructor or a \x27 +\n        \x27af.data.middleware.JsdataMessage but got: \x27 + messageOrMessageCtor);\n    xidString \x3d messageOrMessageCtor.prototype.messageXid;\n    ctor \x3d messageOrMessageCtor;\n  }\n  xid.assertXidLikeString(\n      xidString,\n      \x27Proto \x3c\x27 + (ctor.name || ctor.displayName) +\n          \x27\x3e doesn\\\x27t have an xid. Annotate the proto with \x27 +\n          \x27option (jspb.generate_xid) \x3d true; See \x27 +\n          \x27http://go/wiz-data-proto-prerequisites#generate-xid\x27);\n  goog.asserts.assert(!(/;/.test(xidString)),\n      \x27Xids should never include semicolons\x27);\n  return xidString;\n};\n\n});\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/middleware/jsdatamessage.js\n");

$googDebugFname=undefined;
var $googDebugFname="java/com/google/apps/framework/data/client/middleware/idgenerators.js";
eval("/**\n * @fileoverview Provides a function to register functions for jspb message ids\n * that map the respective messages to their \x22primary key\x22.\n * TODO(tomnguyen) Move appropriate error messages to right documentation\n * once moved to Apps Framework.\n */\n\ngoog.provide(\x27af.data.middleware.idGenerators\x27);\ngoog.provide(\x27af.data.middleware.idGenerators.GeneratorFunction\x27);\n\ngoog.require(\x27af.data.middleware.JsdataMessage\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27xid\x27);\n\n\n\n/**\n * Used in code generation as the message key for \x22window scoped\x22 messages.\n * Since these are singletons on the client side they do not need a specific\n * key (The key always includes the type name). We use _ instead of the empty\n * string, so it is more obvious when looking at a jsdata string why there is\n * nothing more specific.\n * @return {string}\n * @const\n */\naf.data.middleware.idGenerators.WINDOW_SCOPED \x3d function() {\n  // LINT.IfChange\n  return \x27_\x27;\n  // LINT.ThenChange(//depot/google3/java/com/google/apps/framework/modulesets/soyplugins/jsdata/MessageKey.java)\n};\n\n\n\n/**\n * @const {!Object\x3cstring, af.data.middleware.idGenerators.GeneratorFunction\x3e}\n * @private\n */\naf.data.middleware.idGenerators.registry_ \x3d {};\n\n\n/**\n * A function that takes a proto and returns a \x22primary key\x22 string for that\n * proto.\n * @typedef {function(!jspb.Message):string}\n */\naf.data.middleware.idGenerators.GeneratorFunction;\n\n\n/**\n * A function that takes a proto and returns a \x22primary key\x22 string for that\n * proto.\n * @typedef {{\n *   messageXid: string,\n *   id: string,\n *   fullId: string\n * }}\n */\naf.data.middleware.idGenerators.IdSet;\n\n\n\n/**\n * Registers an id generator for a given jspb message id. Together with the type\n * of the message, the returned value should only be the same if it respresents\n * the semantically same protocol buffer instance.\n * @param {xid.String} xidString XID of the name of messageCtor\n * @param {function(?):string} fn\n */\naf.data.middleware.idGenerators.mapXid_only_call_from_generated_code \x3d function(\n    xidString, fn) {\n  xid.assertXidLikeString(xidString);\n  goog.asserts.assert(!af.data.middleware.idGenerators.registry_[xidString],\n      \x27Duplicate registration for \x3c\x27 + xidString + \x27\x3e\x27);\n  af.data.middleware.idGenerators.registry_[xidString] \x3d fn;\n};\n\n\n/**\n * Returns a \x22primary key\x22 for a given proto. After retrieving the id, it\n * replaces special characters.\n * @param {!jspb.Message} message\n * @return {string}\n */\naf.data.middleware.idGenerators.getEncodedId \x3d function(message) {\n  var val \x3d\n      af.data.middleware.idGenerators.getRawId_only_call_from_generated_code(\n          message);\n  return af.data.middleware.idGenerators.encodeKey_(val);\n};\n\n\n/**\n * Returns a \x22primary key\x22 for a given proto or the value itself if it is\n * a primitive. The primitive being allowed facilitates for easy usage\n * in codegen tools.\n * @param {!jspb.Message|string|number|boolean|undefined|null}\n * messageOrPrimitive\n * @return {string}\n */\naf.data.middleware.idGenerators.getRawId_only_call_from_generated_code \x3d\n    function(messageOrPrimitive) {\n  if (!(messageOrPrimitive instanceof jspb.Message)) {\n    return \x27\x27 + messageOrPrimitive;\n  }\n  var xidString \x3d af.data.middleware.JsdataMessage.getXid(messageOrPrimitive);\n  if (!af.data.middleware.idGenerators.registry_[xidString]) {\n    return \x27unsupported\x27;\n  }\n  var fn \x3d af.data.middleware.idGenerators.registry_[xidString];\n  var val \x3d fn(messageOrPrimitive);\n  goog.asserts.assert(val !\x3d null,\n      \x27ID generator for \x3c\x27 + xidString + \x27\x3e returned null.\x27);\n  return val;\n};\n\n\n/**\n * Returns the value of the field if it exists, otherwise returns a\n * missing field marker.\n * @param {boolean|jspb.Message|null|number|string|undefined} fieldValue\n * @return {boolean|jspb.Message|number|string}\n */\naf.data.middleware.idGenerators.getFieldForJs \x3d function(fieldValue) {\n  if (goog.isDefAndNotNull(fieldValue)) {\n    return fieldValue;\n  }\n  // LINT.IfChange\n  return \x27-\x27;\n  // LINT.ThenChange(//depot/google3/java/com/google/apps/framework/modulesets/soyplugins/jsdata/MessageKey.java)\n};\n\n\n/**\n * Returns true if an id generator for the given message was defined.\n * @param {string} messageXid\n * @return {boolean}\n * @package\n */\naf.data.middleware.idGenerators.hasIdGenerator \x3d function(messageXid) {\n  return !!af.data.middleware.idGenerators.registry_[messageXid];\n};\n\n\n/**\n * Encode the key in a form that has no semicolons and spaces. Strategy is\n * similar to how URL parameter works.\n * Example: \x22foo;bar\x22 -\x3e \x27foo|59+bar\x27\n * All special characters in the encoding are picked to be rare in actually\n * occuring strings and not need additional HTML entity encoding.\n * Needs to be kept in sync with\n * {@link com.google.apps.framework.modulesets.soyplugins\n *     .jsdata.MessageKey.encodeKey}\n * @param {string} str\n * @return {string}\n * @private\n */\naf.data.middleware.idGenerators.encodeKey_ \x3d function(str) {\n  return str.replace(/[;\\s\\|\\+]/g, function(c) {\n    return \x27|\x27 + c.charCodeAt(0) + \x27+\x27;\n  });\n};\n\n\n/**\n * Returns a \x22primary key\x22 for a given proto including the type.\n * @param {!jspb.Message|function(new:jspb.Message,!Array\x3d)} messageOrCtor\n * @return {string}\n */\naf.data.middleware.idGenerators.getFullId \x3d function(messageOrCtor) {\n  return af.data.middleware.idGenerators.getIdSet(messageOrCtor).fullId;\n};\n\n\n/**\n * Returns whether the idGenerators can create an ID set for the message.\n * @param {!jspb.Message} message\n * @return {boolean}\n */\naf.data.middleware.idGenerators.hasIdSet \x3d function(message) {\n  return message !\x3d null \x26\x26 message.messageXid !\x3d null\n      \x26\x26 af.data.middleware.idGenerators.registry_[message.messageXid] !\x3d null;\n};\n\n\n/**\n * @param {string} messageXid\n * @param {string} id\n * @return {string}\n */\naf.data.middleware.idGenerators.getFullIdFromParts \x3d function(messageXid, id) {\n  return messageXid + \x27;\x27 + id;\n};\n\n\n/**\n * Returns the type and the \x22primary keys\x22 for the message as a set.\n * @param {!jspb.Message|function(!Array\x3d)} messageOrMessageCtor\n * @return {!af.data.middleware.idGenerators.IdSet}\n */\naf.data.middleware.idGenerators.getIdSet \x3d function(messageOrMessageCtor) {\n  var messageXid \x3d\n      af.data.middleware.JsdataMessage.getXid(messageOrMessageCtor);\n  var id;\n  if (goog.isFunction(messageOrMessageCtor)) {\n    // In this case, there is no primary key for the id set, as now all protos\n    // of this type are qualified for this full ID.\n    id \x3d \x27\x27;\n  } else {\n    id \x3d af.data.middleware.idGenerators.getEncodedId(messageOrMessageCtor);\n  }\n  return {\n    messageXid: messageXid,\n    id: id,\n    fullId: af.data.middleware.idGenerators.getFullIdFromParts(messageXid, id)\n  };\n};\n\n\n/**\n * Checks if the provided message is registered to have a valid identifier.\n * This is analogous to the isValid method in\n * c/g/apps/framework/modulesets/soyplugins/jsdata/MessageKey.java.\n * @param {!jspb.Message} message\n * @return {boolean}\n */\naf.data.middleware.idGenerators.canGenerateId \x3d function(message) {\n  var xidString \x3d message.messageXid;\n  return !!xidString \x26\x26 xidString in af.data.middleware.idGenerators.registry_;\n};\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/middleware/idgenerators.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syge');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syge');

}catch(e){_DumpException(e)}
/* _Module_:sygf */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygf');
var $googDebugFname="javascript/closure/soy/renderer.js";
eval("// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a soy renderer that allows registration of\n * injected data (\x22globals\x22) that will be passed into the rendered\n * templates.\n *\n * There is also an interface {@link goog.soy.InjectedDataSupplier} that\n * user should implement to provide the injected data for a specific\n * application. The injected data format is a JavaScript object:\n * \x3cpre\x3e\n * {\x27dataKey\x27: \x27value\x27, \x27otherDataKey\x27: \x27otherValue\x27}\n * \x3c/pre\x3e\n *\n * The injected data can then be referred to in any soy templates as\n * part of a magic \x22ij\x22 parameter. For example, `$ij.dataKey`\n * will evaluate to \x27value\x27 with the above injected data.\n *\n * @author henrywong@google.com (Henry Wong)\n * @author chrishenry@google.com (Chris Henry)\n */\n\ngoog.provide(\x27goog.soy.InjectedDataSupplier\x27);\ngoog.provide(\x27goog.soy.Renderer\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.soy\x27);\ngoog.require(\x27goog.soy.data.SanitizedContent\x27);\ngoog.require(\x27goog.soy.data.SanitizedContentKind\x27);\n\n\n\n/**\n * Creates a new soy renderer. Note that the renderer will only be\n * guaranteed to work correctly within the document scope provided in\n * the DOM helper.\n *\n * @param {goog.soy.InjectedDataSupplier\x3d} opt_injectedDataSupplier A supplier\n *     that provides an injected data.\n * @param {goog.dom.DomHelper\x3d} opt_domHelper Optional DOM helper;\n *     defaults to that provided by `goog.dom.getDomHelper()`.\n * @constructor\n */\ngoog.soy.Renderer \x3d function(opt_injectedDataSupplier, opt_domHelper) {\n  /**\n   * @const {!goog.dom.DomHelper}\n   * @private\n   */\n  this.dom_ \x3d opt_domHelper || goog.dom.getDomHelper();\n\n  /**\n   * @const {?goog.soy.InjectedDataSupplier}\n   * @private\n   */\n  this.supplier_ \x3d opt_injectedDataSupplier || null;\n};\n\n\n/**\n * Renders a Soy template into a single node or a document fragment.\n * Delegates to `goog.soy.renderAsFragment`.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!Node} The resulting node or document fragment.\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderAsFragment \x3d function(\n    template, opt_templateData) {\n  var node \x3d goog.soy.renderAsFragment(\n      template, opt_templateData, this.getInjectedData_(), this.dom_);\n  this.handleRender(node);\n  return node;\n};\n\n\n/**\n * Renders a Soy template into a single node. If the rendered HTML\n * string represents a single node, then that node is returned.\n * Otherwise, a DIV element is returned containing the rendered nodes.\n * Delegates to `goog.soy.renderAsElement`.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!Element} Rendered template contents, wrapped in a parent DIV\n *     element if necessary.\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderAsElement \x3d function(\n    template, opt_templateData) {\n  var element \x3d goog.soy.renderAsElement(\n      template, opt_templateData, this.getInjectedData_(), this.dom_);\n  this.handleRender(element);\n  return element;\n};\n\n\n/**\n * Renders a Soy template and then set the output string as the\n * innerHTML of the given element. Delegates to `goog.soy.renderElement`.\n *\n * @param {Element} element The element whose content we are rendering.\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template defining the element\x27s content.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderElement \x3d function(\n    element, template, opt_templateData) {\n  goog.soy.renderElement(\n      element, template, opt_templateData, this.getInjectedData_());\n  this.handleRender(element);\n};\n\n\n/**\n * Renders a Soy template and returns the output string.\n * If the template is strict, it must be of kind HTML. To render strict\n * templates of other kinds, use `renderText` (for {@code kind\x3d\x22text\x22}) or\n * `renderStrictOfKind`.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):*|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):*} template\n *     The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {string} The return value of rendering the template directly.\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.render \x3d function(template, opt_templateData) {\n  var result \x3d\n      template(opt_templateData || {}, undefined, this.getInjectedData_());\n  goog.asserts.assert(\n      !(result instanceof goog.soy.data.SanitizedContent) ||\n          result.contentKind \x3d\x3d\x3d goog.soy.data.SanitizedContentKind.HTML,\n      \x27render was called with a strict template of kind other than \x22html\x22\x27 +\n          \x27 (consider using renderText or renderStrict)\x27);\n  this.handleRender();\n  return String(result);\n};\n\n\n/**\n * Renders a strict Soy template of kind\x3d\x22text\x22 and returns the output string.\n * It is an error to use renderText on non-strict templates, or strict templates\n * of kinds other than \x22text\x22.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):?goog.soy.data.UnsanitizedText|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):\n *     ?goog.soy.data.UnsanitizedText} template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {string} The return value of rendering the template directly.\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderText \x3d function(template, opt_templateData) {\n  var result \x3d\n      template(opt_templateData || {}, undefined, this.getInjectedData_());\n  goog.asserts.assertInstanceof(\n      result, goog.soy.data.SanitizedContent,\n      \x27renderText cannot be called on a non-strict soy template\x27);\n  goog.asserts.assert(\n      result.contentKind \x3d\x3d\x3d goog.soy.data.SanitizedContentKind.TEXT,\n      \x27renderText was called with a template of kind other than \x22text\x22\x27);\n  this.handleRender();\n  return String(result);\n};\n\n\n/**\n * Renders a strict Soy HTML template and returns the output SanitizedHtml\n * object.\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d):!goog.soy.data.SanitizedHtml|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedHtml} template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!goog.soy.data.SanitizedHtml}\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderStrict \x3d function(\n    template, opt_templateData) {\n  return this.renderStrictOfKind(\n      template, opt_templateData, goog.soy.data.SanitizedContentKind.HTML);\n};\n\n\n/**\n * Renders a strict Soy template and returns the output SanitizedUri object.\n *\n * @param {function(ARG_TYPES, ?Object\x3cstring, *\x3e\x3d):!goog.soy.data.SanitizedUri|\n *     function(ARG_TYPES, null\x3d, ?Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedUri} template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!goog.soy.data.SanitizedUri}\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderStrictUri \x3d function(\n    template, opt_templateData) {\n  return this.renderStrictOfKind(\n      template, opt_templateData, goog.soy.data.SanitizedContentKind.URI);\n};\n\n\n/**\n * Renders a strict Soy template and returns the output SanitizedContent object.\n *\n * @param {?function(ARG_TYPES, ?Object\x3cstring, *\x3e\x3d): RETURN_TYPE|\n *     ?function(ARG_TYPES, null\x3d, ?Object\x3cstring, *\x3e\x3d): RETURN_TYPE}\n *     template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @param {goog.soy.data.SanitizedContentKind\x3d} opt_kind The output kind to\n *     assert. If null, the template must be of kind\x3d\x22html\x22 (i.e., opt_kind\n *     defaults to goog.soy.data.SanitizedContentKind.HTML).\n * @return {RETURN_TYPE} The SanitizedContent object. This return type is\n *     generic based on the return type of the template, such as\n *     goog.soy.data.SanitizedHtml.\n * @template ARG_TYPES, RETURN_TYPE\n */\ngoog.soy.Renderer.prototype.renderStrictOfKind \x3d function(\n    template, opt_templateData, opt_kind) {\n  var result \x3d\n      template(opt_templateData || {}, undefined, this.getInjectedData_());\n  goog.asserts.assertInstanceof(\n      result, goog.soy.data.SanitizedContent,\n      \x27renderStrict cannot be called on a non-strict soy template\x27);\n  goog.asserts.assert(\n      result.contentKind \x3d\x3d\x3d\n          (opt_kind || goog.soy.data.SanitizedContentKind.HTML),\n      \x27renderStrict was called with the wrong kind of template\x27);\n  this.handleRender();\n  return result;\n};\n\n\n/**\n * Renders a strict Soy template of kind\x3d\x22html\x22 and returns the result as\n * a goog.html.SafeHtml object.\n *\n * Rendering a template that is not a strict template of kind\x3d\x22html\x22 results in\n * a runtime error.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d): !goog.soy.data.SanitizedHtml|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedHtml} template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!goog.html.SafeHtml}\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderSafeHtml \x3d function(\n    template, opt_templateData) {\n  var result \x3d this.renderStrict(template, opt_templateData);\n  // Convert from SanitizedHtml to SafeHtml.\n  return result.toSafeHtml();\n};\n\n\n/**\n * Renders a strict Soy template of kind\x3d\x22css\x22 and returns the result as\n * a goog.html.SafeStyleSheet object.\n *\n * Rendering a template that is not a strict template of kind\x3d\x22css\x22 results in\n * a runtime and compile-time error.\n *\n * @param {?function(ARG_TYPES, Object\x3cstring, *\x3e\x3d): !goog.soy.data.SanitizedCss|\n *     ?function(ARG_TYPES, null\x3d, Object\x3cstring, *\x3e\x3d):\n *     !goog.soy.data.SanitizedCss} template The Soy template to render.\n * @param {ARG_TYPES\x3d} opt_templateData The data for the template.\n * @return {!goog.html.SafeStyleSheet}\n * @template ARG_TYPES\n */\ngoog.soy.Renderer.prototype.renderSafeStyleSheet \x3d function(\n    template, opt_templateData) {\n  var result \x3d this.renderStrictOfKind(\n      template, opt_templateData, goog.soy.data.SanitizedContentKind.CSS);\n  return result.toSafeStyleSheet();\n};\n\n\n/**\n * @return {!goog.dom.DomHelper}\n * @protected\n */\ngoog.soy.Renderer.prototype.getDom \x3d function() {\n  return this.dom_;\n};\n\n\n/**\n * Observes rendering of templates by this renderer.\n * @param {Node\x3d} opt_node Relevant node, if available. The node may or may\n *     not be in the document, depending on whether Soy is creating an element\n *     or writing into an existing one.\n * @protected\n */\ngoog.soy.Renderer.prototype.handleRender \x3d goog.nullFunction;\n\n\n/**\n * Creates the injectedParams map if necessary and calls the configuration\n * service to prepopulate it.\n * @return {Object} The injected params.\n * @private\n */\ngoog.soy.Renderer.prototype.getInjectedData_ \x3d function() {\n  return this.supplier_ ? this.supplier_.getData() : {};\n};\n\n\n\n/**\n * An interface for a supplier that provides Soy injected data.\n * @interface\n */\ngoog.soy.InjectedDataSupplier \x3d function() {};\n\n\n/**\n * Gets the injected data. Implementation may assume that\n * `goog.soy.Renderer` will treat the returned data as\n * immutable.  The renderer will call this every time one of its\n * {@code render*} methods is called.\n * @return {Object} A key-value pair representing the injected data.\n */\ngoog.soy.InjectedDataSupplier.prototype.getData \x3d function() {};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/soy/renderer.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/dom/soyrenderer.js";
eval("// Copyright 2010 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview A fava-specific Soy renderer. Adds AppContext support\n * to `goog.soy.Renderer`. To inject Soy injected data, create\n * and register `fava.dom.SoyRendererConfig` into the AppContext.\n *\n * You can reference the injected data from Soy by prefixing it with\n * `$ij.`. For example, `$ij.example` will reference the\n * value of `example` in the injected data.\n *\n * @author henrywong@google.com (Henry Wong)\n */\n\ngoog.provide(\x27fava.dom.SoyRenderer\x27);\ngoog.provide(\x27fava.dom.SoyRendererEvents\x27);\n\ngoog.require(\x27fava.services\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.Event\x27);\ngoog.require(\x27goog.events.EventTarget\x27);\ngoog.require(\x27goog.soy.InjectedDataSupplier\x27);\ngoog.require(\x27goog.soy.Renderer\x27);\n\n\n\n/**\n * Create a class that will render soy templates.\n * @param {!fava.AppContext} appContext The AppContext.\n * @extends {goog.soy.Renderer}\n * @implements {goog.soy.InjectedDataSupplier}\n * @constructor\n * @struct\n */\nfava.dom.SoyRenderer \x3d function(appContext) {\n  fava.dom.SoyRenderer.base(this, \x27constructor\x27, this,\n            appContext.get(fava.services.DOM).getDomHelper());\n\n  /**\n   * The app context.\n   * @type {!fava.AppContext}\n   * @private\n   */\n  this.appContext_ \x3d appContext;\n\n  /**\n   * Event target for dispatching render events.\n   * @const\n   * @private {!goog.events.EventTarget}\n   */\n  this.eventTarget_ \x3d new goog.events.EventTarget();\n};\ngoog.inherits(fava.dom.SoyRenderer, goog.soy.Renderer);\n\n\n/**\n * Event fired when a soy template was rendered.\n * @const {string}\n */\nfava.dom.SoyRendererEvents.RENDER \x3d\n    goog.events.getUniqueId(\x27fava.dom.SoyRendererEvents.RENDER\x27);\n\n\n/**\n * Registers an instance of the SoyRenderer for the specified AppContext.\n * @param {!fava.AppContext} appContext\n * @return {!fava.dom.SoyRenderer}\n */\nfava.dom.SoyRenderer.register \x3d function(appContext) {\n  return appContext.registerService(\n      fava.services.SOY_RENDERER, new fava.dom.SoyRenderer(appContext));\n};\n\n\n/**\n * Gets instance of the SoyRenderer for the specified AppContext.\n * @param {!fava.AppContext} appContext The application context object.\n * @return {!fava.dom.SoyRenderer} The instances of the SoyRenderer.\n */\nfava.dom.SoyRenderer.get \x3d function(appContext) {\n  return appContext.get(fava.services.SOY_RENDERER);\n};\n\n\n/**\n * Map of params that should be injected into every template.\n * @type {Object}\n * @private\n */\nfava.dom.SoyRenderer.prototype.injectedParams_;\n\n\n/**\n * Store the unprocessed lazy-evaluated functions in params (e.g. proto param is\n * wrapped in a function).\n * @type {?Object\x3cstring, !Function\x3e}\n * @private\n */\nfava.dom.SoyRenderer.prototype.lazyInjectedParams_;\n\n\n/** @override */\nfava.dom.SoyRenderer.prototype.getData \x3d function() {\n  if (!goog.isDef(this.injectedParams_)) {\n\n    // Check if anyone registered a configuration service.\n    var configService \x3d this.appContext_.getOrNull(\n        fava.services.SOY_RENDERER_CONFIG);\n    if (configService) {\n      this.injectedParams_ \x3d configService.getInjectedParams();\n      this.lazyInjectedParams_ \x3d {};\n      for (var key in this.injectedParams_) {\n        if (goog.isFunction(this.injectedParams_[key])) {\n          // Cache unprocessed lazy-evaluate params so that it does not have\n          // to iterate all the keys of injectedParams_ every time.\n          this.lazyInjectedParams_[key] \x3d this.injectedParams_[key];\n          // Prevent accidentally use unevalated params.\n          this.injectedParams_[key] \x3d undefined;\n        }\n      }\n    } else {\n      // If there\x27s no injected data set this to null (rather than {} or an\n      // empty map) so that the soy template js can quickly ignore it.\n      this.injectedParams_ \x3d null;\n    }\n  }\n  this.maybeEvaluateLazyInjectedData_();\n  return this.injectedParams_;\n};\n\n\n/**\n * @return {!goog.events.EventTarget} Returns the renderer\x27s event target.\n */\nfava.dom.SoyRenderer.prototype.getEventTarget \x3d function() {\n  return this.eventTarget_;\n};\n\n\n/**\n * Emits a {@see fava.dom.SoyRendererEvents.RENDER} event after soy was\n * rendered.\n * @override\n */\nfava.dom.SoyRenderer.prototype.handleRender \x3d function(opt_node) {\n  fava.dom.SoyRenderer.base(this, \x27handleRender\x27);\n  this.eventTarget_.dispatchEvent(\n      new goog.events.Event(fava.dom.SoyRendererEvents.RENDER, opt_node));\n};\n\n\n/**\n * Evaluate closures in params.\n * @private\n */\nfava.dom.SoyRenderer.prototype.maybeEvaluateLazyInjectedData_ \x3d function() {\n  if (this.lazyInjectedParams_) {\n    for (var key in this.lazyInjectedParams_) {\n      try {\n        var val \x3d this.lazyInjectedParams_[key]();\n        this.injectedParams_[key] \x3d val;\n        delete this.lazyInjectedParams_[key];\n      } catch (e) {\n        // Do nothing here since errors are expected when the type have not been\n        // loaded yet. For instance, protos are late loaded. For those proto\n        // values, the evaluation will happen again before rendering when the\n        // protos have loaded.\n      }\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/dom/soyrenderer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygf');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygf');

}catch(e){_DumpException(e)}
/* _Module_:sygg */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygg');
var $googDebugFname="javascript/apps/wiz/data/jsdata.js";
goog.loadModule("/**\n * @fileoverview Utility functions for getting jsdata attributes.\n */\ngoog.module(\x27wiz.data.jsdata\x27);\ngoog.module.declareLegacyNamespace();\n\nconst Attribute \x3d goog.require(\x27wiz.Attribute\x27);\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst Timer \x3d goog.require(\x27goog.Timer\x27);\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\nconst googString \x3d goog.require(\x27goog.string\x27);\n\nconst DEFERRED_ATTRIBUTE \x3d \x27deferred\x27;\n\n/**\n * Retrieve an element by ID. Handles the case where the element may be detached\n * from the DOM and may be a descendant of the provided ancestor.\n *\n * @param {!Element} ancestor\n * @param {string} id\n * @return {?Element}\n */\nfunction getElementById(ancestor, id) {\n  return document.getElementById(id) || ancestor.querySelector(`#${id}`);\n}\n\n/** @const {string} */\nexports.COMPONENT_DATA_TAG_NAME \x3d \x27C-DATA\x27;\n\n/**\n * Retrieve a jsdata attribute synchronously. If a jsdata attribute is deferred\n * then this expects that the deferred element is already in the dom.\n *\n * @param {!Element} element\n * @param {!Element\x3d} root Optional root element that might containt the\n *     deferred jsdata element. If not supplied, we assume the element is\n *     attached to the document.\n * @return {string|undefined}\n */\nexports.getAttribute \x3d function(element, root \x3d undefined) {\n  const attr \x3d element.getAttribute(Attribute.DATA);\n\n  if (attr \x26\x26 attr.indexOf(DEFERRED_ATTRIBUTE) \x3d\x3d 0) {\n    const deferredId \x3d googString.trim(attr).split(\x27-\x27)[1];\n    let deferredElement;\n    if (root) {\n      deferredElement \x3d root.querySelector(\x27#\x27 + deferredId);\n    }\n    if (!deferredElement) {\n      deferredElement \x3d getElementById(element, deferredId);\n    }\n    deferredElement \x3d asserts.assertElement(deferredElement,\n        \x27Deferred jsdata element not found for id: \x27 + deferredId);\n    return deferredElement.getAttribute(Attribute.DATA);\n  }\n\n  return attr;\n};\n\n\n/**\n * Retrieve a jsdata attribute asynchronously. If a jsdata attribute is\n * deferred and the deferred element is not in the dom, then this function\n * will wait until it is available. If the document is loaded before that\n * happens then the function will return a rejected promise.\n *\n * @param {!Element} element\n * @return {!GoogPromise\x3cstring|undefined\x3e}\n */\nexports.getAttributeAsync \x3d function(element) {\n  const attr \x3d element.getAttribute(Attribute.DATA);\n\n  // The attribute might be deferred...\n  if (attr \x26\x26 attr.indexOf(DEFERRED_ATTRIBUTE) \x3d\x3d 0) {\n    const deferredId \x3d googString.trim(attr).split(\x27-\x27)[1];\n    return new GoogPromise((resolve, reject) \x3d\x3e {\n      const findDeferred \x3d () \x3d\x3e {\n        const deferredElement \x3d getElementById(element, deferredId);\n        if (deferredElement) {\n          resolve(deferredElement.getAttribute(Attribute.DATA));\n        } else if (window.document.readyState \x3d\x3d \x27complete\x27) {\n          const errorMsgPieces \x3d\n              [\x27Unable to find deferred jsdata with id: \x27 + deferredId];\n          if (element.hasAttribute(Attribute.CONTROLLER)) {\n            errorMsgPieces.push(Attribute.CONTROLLER + \x27: \x27 +\n                element.getAttribute(Attribute.CONTROLLER));\n          }\n          if (element.hasAttribute(Attribute.MODEL)) {\n            errorMsgPieces.push(Attribute.MODEL + \x27: \x27 +\n                element.getAttribute(Attribute.MODEL));\n          }\n          reject(new Error(errorMsgPieces.join(\x27\\n\x27)));\n        } else {\n          Timer.callOnce(findDeferred, 50);\n        }\n      };\n      Timer.callOnce(findDeferred, 50);\n    });\n  }\n\n  // or it might already be there.\n  return GoogPromise.resolve(attr || undefined);\n};\n\n\n/**\n * Checks whether a jsdata attribute can be retrieved synchronously.\n *\n * @param {!Element} element\n * @return {boolean}\n */\nexports.isAsync \x3d function(element) {\n  const attr \x3d element.getAttribute(Attribute.DATA);\n  if (!attr) {\n    return false;\n  }\n\n  if (attr.indexOf(DEFERRED_ATTRIBUTE) \x3d\x3d 0) {\n    // check if the deferred element is in the dom already.\n    const deferredId \x3d googString.trim(attr).split(\x27-\x27)[1];\n    return !getElementById(element, deferredId);\n  }\n\n  // not deferred\n  return false;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/jsdata.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygg');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygg');

}catch(e){_DumpException(e)}
/* _Module_:sygh */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygh');
var $googDebugFname="java/com/google/apps/framework/modulesets/soyplugins/jsdata/client/soyfunction.js";
eval("/**\n * @fileoverview JS implementation of the \x22wizJsData\x22 soy function.\n *\n * USAGE in soy:\n * jsdata\x3d\x22{wizJsData($someProto)}\x22\n * or\n * jsdata\x3d\x22{wizJsData($someProto)} {wizJsData($otherProto)}\x22\n *\n * See http://go/wiz-data\n * @enhanceable\n * TODO(tomnguyen) Extract the __data property from wiz.Property into afdata.\n */\ngoog.provide(\x27af.data.soyFunction\x27);\n\ngoog.require(\x27af.data.middleware.idGenerators\x27);\ngoog.require(\x27fava.dom.SoyRendererEvents\x27);\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Properties\x27);\ngoog.require(\x27wiz.data.jsdata\x27);\ngoog.require(\x27xid\x27);\n\n\n\n/**\n * Info parsed from a jsdata annotation.\n * @typedef {{messageXid: string, id: string, instanceId: string}}\n * @package\n */\naf.data.JsDataKey;\n\n\ngoog.scope(function() {\n\n/** @const */\nvar DOCUMENT_FRAGMENT \x3d goog.dom.NodeType.DOCUMENT_FRAGMENT;\n\n/** @const */\nvar ELEMENT \x3d goog.dom.NodeType.ELEMENT;\n\n/** @const */\nvar NON_AF_MESSAGE_KEY \x3d\n    // LINT.IfChange\n    \x27unsupported\x27;\n// LINT.ThenChange(//depot/google3/java/com/google/apps/framework/modulesets/soyplugins/EmbedWizDataFunction.java)\n\n/**\n * Used to generate client side instance keys.\n * @private {number}\n */\naf.data.soyFunction.counter_ \x3d 0;\n\n\n/**\n * Map for data stored during the current soy rendering.\n * @private {!Object\x3cstring, !jspb.Message\x3e}\n */\naf.data.soyFunction.dataStash_ \x3d {};\n\n\n/**\n * Saves away the passed in data and makes it available under the returned\n * string.\n * @param {!jspb.Message} message\n * @return {string}\n */\naf.data.soyFunction.embedData \x3d function(message) {\n  goog.asserts.assert(message);\n  var key \x3d \x27$\x27 + af.data.soyFunction.counter_++;\n  // LINT.IfChange\n  var messageFullId;\n  if (af.data.middleware.idGenerators.canGenerateId(message)) {\n    messageFullId \x3d af.data.middleware.idGenerators.getFullId(message);\n  } else if (message.messageXid) {\n    messageFullId \x3d message.messageXid + \x27;\x27 + NON_AF_MESSAGE_KEY;\n  } else {\n    messageFullId \x3d \x27;\x27 + NON_AF_MESSAGE_KEY;\n  }\n  var stashKey \x3d messageFullId + \x27;\x27 + key;\n  // LINT.ThenChange(//depot/google3/java/com/google/apps/framework/modulesets/soyplugins/EmbedWizDataFunction.java)\n  af.data.soyFunction.dataStash_[stashKey] \x3d message;\n  return stashKey;\n};\n\n\n/**\n * This is called when soy was rendered. It will store the currently saved data\n * in the DOM node that was just rendered or children with the jsdata attribute\n * and override the global map, so that we are ready for the next render.\n * @param {!goog.events.Event} event\n * @private\n */\naf.data.soyFunction.stash_ \x3d function(event) {\n  if (goog.object.isEmpty(af.data.soyFunction.dataStash_)) {\n    return;\n  }\n  var domNode \x3d /** @type {!Node} */ (event.target);\n  if (!domNode ||\n      (domNode.nodeType !\x3d ELEMENT \x26\x26 domNode.nodeType !\x3d DOCUMENT_FRAGMENT)) {\n    // When using renderStrict, make sure renderAsElement is immediately\n    // followed to avoid clearing out dataStash by renderAsElement in another\n    // soy template.\n    return;\n  }\n  // First find all the elements with jsdata attributes registered on them.\n  // Note: The root element \x22domNode\x22 is included by default but will be\n  // filtered out if it ends up not having a valid jsdata attribute.\n  // Note that domNode may not actually be an Element. This may occur if\n  // something is rendered using renderAsFragment and the template results in\n  // multiple children at the root level.\n  var jsDataElements \x3d goog.dom.isElement(domNode) ? [domNode] : [];\n  goog.array.extend(\n      jsDataElements, domNode.querySelectorAll(\x27[\x27 + wiz.Attribute.DATA + \x27]\x27));\n\n  jsDataElements \x3d goog.array.filter(jsDataElements, function(node) {\n    return af.data.soyFunction.hasJsDataValue_(node);\n  });\n\n  var domElement \x3d goog.dom.isElement(domNode) ?\n      /** @type{!Element} */ (domNode) :\n      undefined;\n  goog.array.forEach(jsDataElements, function(jsDataElement) {\n    // This function is called as a result of client-side renders, so we can\n    // always get the jsdata synchronously.\n    var rawJsData \x3d wiz.data.jsdata.getAttribute(jsDataElement, domElement);\n    if (!rawJsData) {\n      // We deferred it thinking we have data, but it turns out we didn\x27t...\n      return;\n    }\n    var jsDataKeys \x3d goog.string.trim(rawJsData).split(\x27 \x27).filter(\n        x \x3d\x3e !x.startsWith(\x27;\x27 + NON_AF_MESSAGE_KEY));\n\n    var stash \x3d {};\n    // For every jsdata registered on the node, find the message from the stash\n    // and store them into a temporary stash.\n    goog.array.forEach(jsDataKeys, function(jsDataKey) {\n      var instanceId \x3d af.data.soyFunction.getKey(jsDataKey).instanceId;\n      stash[instanceId] \x3d af.data.soyFunction.dataStash_[jsDataKey];\n    });\n    // Stash the appropriate messages on the node with the registered jsdata.\n    wiz.Properties.DATA.set(jsDataElement, stash);\n  });\n  af.data.soyFunction.dataStash_ \x3d {};\n};\n\n\n/**\n * @param {!Element} domNode The element to check for the `jsdata`\n *     attribute.\n * @return {boolean} Whether or not the given node has a value defined for\n *     the `jsdata` attribute.\n * @private\n */\naf.data.soyFunction.hasJsDataValue_ \x3d function(domNode) {\n  if (!domNode.hasAttribute(wiz.Attribute.DATA)) {\n    return false;\n  }\n  var value \x3d domNode.getAttribute(wiz.Attribute.DATA);\n  return !goog.string.isEmptyOrWhitespace(goog.string.makeSafe(value));\n};\n\n\n/**\n * Call this just after creation of the soy renderer.\n * @param {!fava.dom.SoyRenderer} soy\n */\naf.data.soyFunction.initialize \x3d function(soy) {\n  soy.getEventTarget().listen(\n      fava.dom.SoyRendererEvents.RENDER, af.data.soyFunction.stash_);\n};\n\n\n/**\n * Resolves data for client side rendered case, the algorithm to resolve the\n * data is to find a parent element with a {@see wiz.Properyt.DATA} property.\n * The property contains a map to lookup the data item. If the data can\x27t be\n * found, an error is thrown.\n * @param {!Element} element The element with the jsdata annonation.\n * @param {function(new: jspb.Message, !Array\x3d)} ctor Proto constructor for the\n *     data.\n * @param {string} jsdataKey The jsdata annotation.\n * @return {?goog.Promise\x3c!jspb.Message\x3e} An instance of the given constructor\n *     matching the jsdata annonation.\n */\naf.data.soyFunction.resolveForClientSideRender \x3d function(\n    element, ctor, jsdataKey) {\n  // {@see af.data.soyFunction.stash_} for how this gets here.\n  var stashedData \x3d wiz.Properties.DATA.get(element);\n  if (!stashedData) {\n    return null;\n  }\n  var result \x3d stashedData[af.data.soyFunction.getKey(jsdataKey).instanceId];\n  if (result) {\n    return goog.Promise.resolve(result);\n  }\n  throw new Error(\n      \x27Can\\\x27t find data for \x3c\x27 + jsdataKey + \x27\x3e from client side render.\x27);\n};\n\n\n/**\n * Parses a jsdata annotation.\n * @param {string} val\n * @return {af.data.JsDataKey}\n * @package\n */\naf.data.soyFunction.getKey \x3d function(val) {\n  var parts \x3d goog.string.trim(val).split(/;/);\n  goog.asserts.assert(\n      parts.length \x3d\x3d 3,\n      \x27Invalid jsdata value \x3c\x27 + val +\n          \x27\x3e. Did you use the wizJsData soy function?\x27);\n  xid.assertXidLikeString(\n      parts[0],\n      \x27Invalid jsdata value \x3c\x27 + val +\n          \x27\x3e. Did you use the wizJsData soy function?\x27);\n  return {\n    messageXid: parts[0],\n    messageKey: parts[0] + \x27;\x27 + parts[1],\n    id: parts[1],\n    instanceId: parts[2]\n  };\n};\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/modulesets/soyplugins/jsdata/client/soyfunction.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygh');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygh');

}catch(e){_DumpException(e)}
/* _Module_:sygi */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygi');
var $googDebugFname="javascript/apps/wiz/data/initialdatainterface.js";
goog.loadModule("/**\n * @visibility {//javascript/apps/wiz:__subpackages__}\n * @pintomodule\n */\n\ngoog.module(\x27wiz.data.InitialDataInterface\x27);\ngoog.module.declareLegacyNamespace();\n\nvar GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nvar interfaces \x3d goog.require(\x27wiz.data.interfaces\x27);\nvar {registerInterface} \x3d goog.require(\x27wiz.interface\x27);\n\n\n\n/**\n * Interface for obtaining initial data in Wiz. Please use this instead of\n * af.data.services.INITIAL_DATA and/or other direct usages of initial data.\n * When configuring your application, if you are using another service for\n * initial data, set the default implementation ID to another service\n * implementing the same interface.\n * @interface\n */\nclass InitialDataInterface {\n  /**\n   * Using wizJsData($proto) emits a string similar to\n   * \x22ProtoName_;identifyingField;instanceId\x22. The instance id is expected to\n   * have a mapping when passed to the InitialDataInterface and should map to\n   * the proto that was passed in.\n   * @param {string} instanceId\n   * @return {!GoogPromise\x3c?Array\x3e}\n   */\n  getDataFromInstanceId(instanceId) {}\n\n  /**\n   * Resolves data for client side renderere case.\n   * @param {!Element} element The element with the jsdata annonation.\n   * @param {function(new: jspb.Message, !Array\x3d)} ctor Proto constructor for\n   *     the data.\n   * @param {string} jsdataKey The jsdata annotation.\n   * @return {?GoogPromise\x3c!jspb.Message\x3e} An instance of the given constructor\n   *      matching the jsdata annonation.\n   */\n  resolveForClientSideRender(element, ctor, jsdataKey) {}\n}\n\nexports \x3d InitialDataInterface;\nregisterInterface(interfaces.INITIAL_DATA, InitialDataInterface);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/initialdatainterface.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygi');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygi');

}catch(e){_DumpException(e)}
/* _Module_:sygj */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygj');
var $googDebugFname="javascript/apps/wiz/service/registry.js";
goog.loadModule("/**\n * @fileoverview Provides registration methods for Wiz ES6 services.\n * Each registration method binds the service ID of a Wiz object to its\n * constructor and applies class specific logic. The Wiz Id generator also\n * uses these registration methods to generate the right namespaces for the\n * Wiz Ids.\n */\ngoog.module(\x27wiz.service.registry\x27);\ngoog.module.declareLegacyNamespace();\n\nconst ServiceId \x3d goog.require(\x27fava.services.ServiceId\x27);\nconst service \x3d goog.require(\x27wiz.service\x27);\n\n\n/**\n * @param {!ServiceId\x3cT\x3e} id\n * @param {function(new:T, ?)} ctor\n * @return {function(new:T, ?)}\n * @template T\n */\nexports.registerService \x3d (id, ctor) \x3d\x3e {\n  service.init(id, undefined, ctor);\n  return ctor;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/service/registry.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygj');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygj');

}catch(e){_DumpException(e)}
/* _Module_:sygk */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygk');
var $googDebugFname="javascript/apps/wiz/data/clients/gws/initial_data_service.js";
goog.loadModule("/**\n * @pintomodule\n */\ngoog.module(\x27wiz.data.clients.gws.InitialDataService\x27);\ngoog.module.declareLegacyNamespace();\n\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst InitialDataInterface \x3d goog.require(\x27wiz.data.InitialDataInterface\x27);\nconst Message \x3d goog.require(\x27jspb.Message\x27);\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst atInterface \x3d goog.require(\x27wiz.atInterface\x27);\nconst jslayoutWizdata \x3d goog.require(\x27jslayout.wizdata\x27);\nconst soyFunction \x3d goog.require(\x27af.data.soyFunction\x27);\nconst {INITIAL_DATA} \x3d goog.require(\x27wiz.data.clients.gws.services\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\n/**\n * @implements {InitialDataInterface}\n * @final\n */\nclass InitialDataService extends Service {\n  static setAsDefaultImplementation() {\n    atInterface.get(InitialDataInterface)\n        .setDefaultImplementationId(INITIAL_DATA);\n  }\n\n  constructor(response) {\n    super(response.superResponse);\n\n    /**\n     * @private @const {!Map\x3cfunction(new: Message), !Message\x3e}\n     */\n    this.jsStateInstances_ \x3d new Map();\n  }\n\n  /** @override */\n  getDataFromInstanceId(instanceId) {\n    return GoogPromise.resolve(window[\x27W_jd\x27][instanceId] || null);\n  }\n\n  /** @override */\n  resolveForClientSideRender(element, ctor, jsdataKey) {\n    return jslayoutWizdata.resolveForClientSideRender(\n               element, ctor, jsdataKey) ||\n        soyFunction.resolveForClientSideRender(element, ctor, jsdataKey) ||\n        this.getJsStateInstance_(ctor);\n  }\n\n  /**\n   * Resolves data for client side rendererer case.\n   * @param {function(new: Message)} ctor Proto constructor for\n   *     the data.\n   * @return {?GoogPromise\x3c!Message\x3e} An instance of the given constructor\n   *     matching the jsdata annonation.\n   * @private\n   */\n  getJsStateInstance_(ctor) {\n    if (this.jsStateInstances_.has(ctor)) {\n      return GoogPromise.resolve(this.jsStateInstances_.get(ctor));\n    }\n    return null;\n  }\n\n  /**\n   * @param {function(new: Message)} ctor Proto constructor for the jsstate\n   * @param {!Message} instance Proto instance\n   */\n  addInitialJsStateInstance(ctor, instance) {\n    this.jsStateInstances_.set(ctor, instance);\n  }\n}\n\nregisterService(INITIAL_DATA, InitialDataService);\n\nexports \x3d InitialDataService;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/gws/initial_data_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygk');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygk');

}catch(e){_DumpException(e)}
/* _Module_:sygl */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygl');
var $googDebugFname="javascript/apps/wiz/annotations/internal/internal.js";
eval("/**\n * @fileoverview Methods that apply annotations to objects. Should only be\n * invoked by the framework.\n */\n\ngoog.provide(\x27wiz.annotations.internal\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.throwException\x27);\n\ngoog.forwardDeclare(\x27wiz.Processor\x27);\ngoog.forwardDeclare(\x27wiz.Processor.Outcome\x27);\n\n\n/**\n * Run the \x22preProcessAction\x22 processor stage.\n *\n * @param {!wiz.Controller} controller\n * @param {!wiz.Event} event\n * @param {!Array\x3c!wiz.Processor\x3e} annotations\n * @return {(undefined|!wiz.Processor.Outcome)}\n */\nwiz.annotations.internal.preProcessAction \x3d function(\n    controller, event, annotations) {\n  for (var i \x3d 0; i \x3c annotations.length; i++) {\n    try {\n      var outcome \x3d annotations[i].preProcessAction(event, controller);\n      goog.asserts.assert(outcome \x3d\x3d null ||\n           typeof outcome.abort \x3d\x3d \x27boolean\x27,\n          \x27preProcessAction of \x3c\x27 + annotations[i].toString() +\n          \x27\x3e must return a wiz.Processor.Outcome.\x27);\n      if (goog.isDefAndNotNull(outcome) \x26\x26 outcome.abort) {\n        return outcome;\n      }\n    } catch (e) {\n      // Throw exception outside\n      goog.async.throwException(e);\n    }\n  }\n  return undefined; // Proceed.\n};\n\n\n/**\n * Run the \x22beforeAction\x22 processor stage.\n *\n * @param {!wiz.Controller} controller\n * @param {!wiz.Event} event\n * @param {!Array\x3c!wiz.Processor\x3e} annotations\n */\nwiz.annotations.internal.beforeAction \x3d function(\n    controller, event, annotations) {\n  for (var i \x3d 0; i \x3c annotations.length; i++) {\n    try {\n      annotations[i].beforeAction(event, controller);\n    } catch (e) {\n      goog.async.throwException(e);\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/annotations/internal/internal.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/events/dispatcher.js";
eval("/**\n * @fileoverview JsAction event dispatcher for use with controllers. Provides\n * event retargetting and bubbling for custom events as well as dynamic loading\n * of controllers.\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.Dispatcher\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.DeferredList\x27);\ngoog.require(\x27goog.debug.entryPointRegistry\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.dom.classlist\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27jsaction.Dispatcher\x27);\ngoog.require(\x27wiz.Action\x27);\ngoog.require(\x27wiz.ActionSet\x27);\ngoog.require(\x27wiz.Attribute\x27);\ngoog.require(\x27wiz.Event\x27);\ngoog.require(\x27wiz.Property\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.annotations.internal\x27);\ngoog.require(\x27wiz.controllers\x27);\ngoog.require(\x27wiz.dom\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.jsaction\x27);\ngoog.require(\x27wiz.jsaction.util\x27);\ngoog.require(\x27wiz.lookupWizService\x27);\ngoog.require(\x27wiz.services\x27);\ngoog.require(\x27xid\x27);\n\ngoog.forwardDeclare(\x27wiz.Processor\x27);\n\n\n/**\n * Constructor for a custom implementation of the JsAction dispatcher for use\n * with the Wiz framework.\n * @param {Function} trigger Function that triggers browser event\n *     dispatch in jsaction.\n * @param {!wiz.Manager} manager The manager for the controllers\n *     in the same context associated with this dispatcher.\n * @param {fava.AppContext\x3d} opt_appContext The Fava AppContext.\n * @param {function(jsaction.EventInfo):jsaction.ActionFlow\x3d} opt_flowFactory\n *     the jsaction.ActionFlow factory.\n * @param {function(!jsaction.ActionFlow)\x3d} opt_namespaceHandler\n * @param {!jsaction.ActionLogger\x3d} opt_actionLogger An optional ActionLogger,\n *     if set, action dispatches will be logged through this.\n * @constructor\n * @struct\n */\nwiz.Dispatcher \x3d function(\n    trigger, manager, opt_appContext, opt_flowFactory, opt_namespaceHandler,\n    opt_actionLogger) {\n  /**\n   * @type {Function}\n   * @private\n   */\n  this.trigger_ \x3d trigger;\n\n  /**\n   * @const\n   * @private\n   */\n  this.manager_ \x3d manager;\n\n  /**\n   * @type {fava.AppContext}\n   * @private\n   */\n  this.appContext_ \x3d opt_appContext || null;\n\n  /**\n   * @const {goog.log.Logger}\n   * @private\n   */\n  this.logger_ \x3d goog.log.getLogger(\x27wiz.Dispatcher\x27);\n\n  /**\n   * @const {!jsaction.Dispatcher}\n   * @private\n   */\n  this.jsActionDispatcher_ \x3d new jsaction.Dispatcher(opt_flowFactory,\n      this.getJsActionHandler_());\n  this.jsActionDispatcher_.setEventReplayer(\n      goog.bind(this.replayEvents_, this));\n\n  /**\n   * @const {!Array\x3c!Element\x3e}\n   * @private\n   */\n  this.ignoredRoots_ \x3d [];\n\n  /**\n   * Optional externally initialized deferred to defer all controller\n   * construction.\n   * @private {goog.async.Deferred}\n   */\n  this.appInitializationDeferred_ \x3d null;\n\n  // Store the dispatcher on the DOM. It\x27s a virtual singleton.\n  var doc \x3d manager.getDocument();\n  doc[wiz.Property.DISPATCHER] \x3d this;\n\n  /**\n   * A cache of loaded and initialized processors.\n   * @private @const {!Object\x3cfava.services.ServiceId, wiz.Processor\x3e}\n   */\n  this.processors_ \x3d {};\n\n  /**\n   * The list of annotations that apply to all actions. These\n   * annotations will be applied before the action specific annotations.\n   * @private @const {!Array\x3c!fava.services.ServiceId\x3e}\n   */\n  this.globalProcessorIds_ \x3d [];\n\n  /** @private {boolean} */\n  this.handledFirstAction_ \x3d false;\n\n  /**\n   * Namespace actions are ignored by Wiz. When set, namespace actions will\n   * be forwarded to this handler.\n   * @private {?function(!jsaction.ActionFlow)}\n   */\n  this.namespaceHandler_ \x3d opt_namespaceHandler || null;\n\n  /**\n   * jsaction.ActionLogger to log dispatching information.\n   * @private {?jsaction.ActionLogger}\n   */\n  this.actionLogger_ \x3d opt_actionLogger || null;\n\n  goog.log.info(this.logger_, \x27Instantiated.\x27);\n\n  if (goog.DEBUG) {\n    /**\n     * An element to monitor events. All events that originate from the element\n     * and that are handled by a controller at this element are console logged.\n     * @private {?Element}\n     */\n    this.debugElement_ \x3d null;\n  }\n};\n\n\n/**\n * @define {boolean} Whether or not wiz checks that all methods declared in an\n *     element via \x22jsaction\x3d\x22 are implemented by the element\x27s controller.\n */\ngoog.define(\x27wiz.Dispatcher.ASSERT_ALL_CONTROLLER_METHODS_IMPLEMENTED\x27,\n    goog.DEBUG);\n\n\n/** @typedef {{action: !wiz.Action, target: !Element}} */\nwiz.Dispatcher.MatchedAction_;\n\n\n/**\n * Identifies branches of action flows performed by wiz.\n * @const {string}\n * @private\n */\nwiz.Dispatcher.ACTIONFLOW_BRANCH_NAME_ \x3d \x27wiz\x27;\n\n\n/**\n * @return {!wiz.Manager} The lifecycle manager for this dispatcher.\n */\nwiz.Dispatcher.prototype.getManager \x3d function() {\n  return this.manager_;\n};\n\n\n/**\n * @return {!fava.AppContext} The fava AppContext for this dispatcher.\n */\nwiz.Dispatcher.prototype.getAppContext \x3d function() {\n  // The appContext is optional in construction, but in a given app it is\n  // either always or never present. There should be no need to check.\n  goog.asserts.assert(this.appContext_ !\x3d null, \x27The AppContext must either\x27 +\n      \x27 be not null or never requested.\x27);\n  return this.appContext_;\n};\n\n\n/**\n * @return {!fava.AppContext|undefined} The fava AppContext for this dispatcher.\n */\nwiz.Dispatcher.prototype.getOptionalAppContext \x3d function() {\n  return this.appContext_ || undefined;\n};\n\n\n/**\n * Redispatches all events that have accumulated between loading the\n * event contract and us.\n * @param {!Array\x3cjsaction.EventInfo\x3e} events .\n * @param {!jsaction.Dispatcher} jsActionDispatcher .\n * @private\n */\nwiz.Dispatcher.prototype.replayEvents_ \x3d function(events, jsActionDispatcher) {\n  // The wiz dispatcher can always handle every event, as late loading happens\n  // in the dispatcher itself. Thus calling dispatch at this point will never\n  // re-queue the event (leading to a potentially infinite loop).\n  this.handledFirstAction_ \x3d true;\n  while (events.length) {\n    var eventInfo \x3d events.shift();\n    jsActionDispatcher.dispatch(eventInfo);\n  }\n};\n\n\n/**\n * Gets the jsaction dispatcher. Use this for global registration.\n * @return {!jsaction.Dispatcher} The jsaction dispatcher for this wiz\n *     dispatcher.\n */\nwiz.Dispatcher.prototype.getJsActionDispatcher \x3d function() {\n  return this.jsActionDispatcher_;\n};\n\n\n/**\n * Triggers browser event dispatch (including support for custom events)\n * through jsaction.\n * @param {Object} event The event object.\n */\nwiz.Dispatcher.prototype.trigger \x3d function(event) {\n  if (goog.DEBUG) {\n    var target \x3d event[\x27_retarget\x27] ? event[\x27_retarget\x27] :\n        event.target || event.srcElement;\n    if (target \x26\x26 this.debugElement_ \x3d\x3d target) {\n      console.log(\x27Dispatched event \x22%s\x22. %O \x27, event.type.toString(), event);\n    }\n  }\n  this.trigger_(event);\n};\n\n\n/**\n * Checks whether the given element is in the document and not part of an\n * ignored subtree.\n * @param {!Element} element Element on which controller is defined.\n * @return {boolean} true if element is in document and no ancestor is in\n *     the list of ignored roots.\n * @private\n */\nwiz.Dispatcher.prototype.isInDocument_ \x3d function(element) {\n  if (goog.dom.contains(element.ownerDocument, element)) {\n    for (var i \x3d 0; i \x3c this.ignoredRoots_.length; i++) {\n      goog.asserts.assert(goog.dom.contains(element.ownerDocument,\n          this.ignoredRoots_[i]), \x27Ignored root is no longer in the document \x27 +\n          \x27but was not removed with removeIgnoredRoot.\x27);\n      if (goog.dom.contains(this.ignoredRoots_[i], element)) {\n         return false;\n      }\n    }\n\n    return true;\n  }\n\n  // Need to find out if element is hidden in a shadow dom. Only way to do this\n  // is to traverse its ancestors\n  var parent \x3d element;\n  while (parent \x3d parent.parentNode) {\n    parent \x3d parent.host || parent;\n\n    if (goog.array.contains(this.ignoredRoots_, parent)) {\n      return false;\n    }\n\n    if (parent \x3d\x3d element.ownerDocument) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Looks up and loads a controller, returning an async result.\n * @param {!Element|!wiz.Query} query Element on which controller is defined.\n * @return {!goog.async.Deferred} Async result containing the\n *     instantiated controllers.\n */\nwiz.Dispatcher.prototype.getController \x3d function(query) {\n  var injector \x3d wiz.inject.Injector.getInstance();\n  var element \x3d wiz.Query.el(query);\n  var name \x3d element.getAttribute(wiz.Attribute.CONTROLLER);\n  goog.asserts.assert(name !\x3d null, \x27No controller defined for this element.\x27);\n  goog.log.info(this.logger_, \x27Getting controller: \x27 + name);\n  if (element[wiz.Property.CONTROLLER]) {\n    // TODO(malteubl) Decide if we want to retry if the previous try failed.\n    return element[wiz.Property.CONTROLLER].branch()\n      .addCallback((controller) \x3d\x3e {\n      // This would happen if the element\x27s jscontroller attribute was\n      // overwritten.\n      if (controller.getObjectKey \x26\x26 controller.getObjectKey() !\x3d name) {\n        element[wiz.Property.CONTROLLER] \x3d undefined;\n        controller.dispose();\n        return this.getController(query);\n      }\n      return controller;\n    });\n  }\n  name \x3d wiz.lookupWizService(name);\n  var d \x3d new goog.async.Deferred();\n  // Save the deferred into the DOM node immediately, so that every subsequent\n  // call will short circuit.\n  element[wiz.Property.CONTROLLER] \x3d d;\n  // Make sure that the manager is aware of every controller element that is\n  // actually instantiated.\n  this.getManager().notifyElement(element);\n  if (!this.isInDocument_(element)) {\n    goog.log.info(this.logger_, \x27Cancelling controller \x27 + name +\n        \x27 because the root element is not in the document.\x27);\n    d.cancel();\n    element[wiz.Property.CONTROLLER] \x3d undefined;\n  }\n  var controllerFailed \x3d function(error) {\n    d.errback(error);\n  };\n  /** @type {?goog.async.Deferred} */\n  var appInitializationDeferred \x3d null;\n\n  // We\x27ll wait on the app init deferred unless it has fired already in which\n  // case we don\x27t to avoid a few extra confusing stack frame.\n  if (this.appInitializationDeferred_ \x26\x26\n      !this.appInitializationDeferred_.hasFired()) {\n    // Branch, so that errors in callbacks don\x27t affect subsequent controller\n    // instantiations.\n    appInitializationDeferred \x3d this.appInitializationDeferred_.branch();\n  }\n  var self \x3d this;\n  // The controller name may have 1 or 2 parts separated by .\n  // If there are 2 parts, the first is assumed to be a module name. The module\n  // is downloaded before instantiating the controller.\n  var construct \x3d function(ctor) {\n    if (!self.isInDocument_(element)) {\n      goog.log.info(self.logger_, \x27Cancelling controller \x27 + name +\n              \x27 because the root element is no longer in the document.\x27);\n      d.cancel();\n      element[wiz.Property.CONTROLLER] \x3d undefined;\n      return;\n    }\n    goog.log.info(self.logger_, \x27Instantiating \x27 + name);\n\n    var deferredForCtrlr \x3d ctor.create(name, element, self);\n    var immediate \x3d true;\n\n    var callbackIfInDocument \x3d function(controller) {\n      if (!immediate \x26\x26 !self.isInDocument_(element)) {\n        goog.log.info(self.logger_, \x27Cancelling controller \x27 + name +\n            \x27 because the root element is no longer in the document.\x27);\n        d.cancel();\n        element[wiz.Property.CONTROLLER] \x3d undefined;\n        return;\n      }\n      d.callback(controller);\n    };\n    deferredForCtrlr.addCallback(callbackIfInDocument);\n    deferredForCtrlr.addErrback(d.errback, d);\n\n    immediate \x3d false;\n  };\n  if (goog.DEBUG) {\n    construct.displayName \x3d \x27# Controller: \x27 + name;\n  }\n  var constructControllerWhenReady \x3d construct;\n  // If there is an appInitializationDeferred_ and it hasn\x27t fired, make all\n  // controller construction wait for it.\n  if (appInitializationDeferred) {\n    constructControllerWhenReady \x3d function(ctor) {\n      appInitializationDeferred.addCallback(\n          goog.partial(construct, ctor));\n    };\n  }\n\n  // Download the module (if necessary) and instantiate.\n  // Errors during loading will throw without a chance to be caught. Given\n  // that failure of controller instantiation is non-recoverable, this seems\n  // like the right thing to do.\n  goog.log.info(this.logger_, \x27Downloading service \x27 + name);\n  injector.getCtor(name)\n      .addCallback(constructControllerWhenReady, this)\n      .addErrback(controllerFailed, this);\n  if (goog.DEBUG) {\n    d.addCallback(\n        goog.partial(wiz.jsaction.util.validateControllerSanity, element));\n  }\n  return d;\n};\n\n\n/**\n * Makes wiz ignore the children of the given element (not reversible). These\n * elements will not be disposed automatically by wiz. removeIgnoredRoot()\n * must be called as soon as this element is removed from the DOM.\n * Useful for visually cloning DOM trees without incurring the cost of loading\n * controllers.\n * @param {!Element|!wiz.Query} root Element whose children are to be ignored.\n */\nwiz.Dispatcher.prototype.addIgnoredRoot \x3d function(root) {\n  this.ignoredRoots_.push(wiz.Query.el(root));\n};\n\n\n/**\n * Must be called after addIgnoredRoot when the root is removed from the DOM.\n * This method is only for preventing memory leaks and does not cause wiz to\n * unignore the elements.\n * @param {!Element|!wiz.Query} root The root to remove from wiz\x27s ignore list\n */\nwiz.Dispatcher.prototype.removeIgnoredRoot \x3d function(root) {\n  // TODO: Assert that the element is detached?\n  goog.array.remove(this.ignoredRoots_, wiz.Query.el(root));\n};\n\n\n/**\n * Set this to make all controller instantiations be blocked by this deferred.\n * This may be useful to block controllers from being instantiated before the\n * page is fully initialized.\n * @param {!goog.async.Deferred} d\n */\nwiz.Dispatcher.prototype.setAppInitializationDeferred \x3d function(d) {\n  goog.asserts.assert(!this.appInitializationDeferred_,\n      \x27Should only be set once.\x27);\n  this.appInitializationDeferred_ \x3d d;\n};\n\n\n/**\n * Add processor that will be run on every action. The processors\n * will be run in the order they are added.\n * If you attempt to add an processor more than once, an error will\n * be thrown. An add call is atomic. If one of the processor in the\n * the list is a duplicate, the entire list is not added.\n * @param {!Array\x3c!fava.services.ServiceId\x3e} processorIds List of\n *     processor service ids to add.\n */\nwiz.Dispatcher.prototype.addGlobalProcessors \x3d function(processorIds) {\n  // Double check that there is no overlap\n  for (var i \x3d 0; i \x3c this.globalProcessorIds_.length; i++) {\n    for (var j \x3d 0; j \x3c processorIds.length; j++) {\n      goog.asserts.assert(this.globalProcessorIds_[i] !\x3d processorIds[j],\n        \x27Attempted to re-add \x27 + processorIds[j]);\n    }\n  }\n  this.globalProcessorIds_.push.apply(this.globalProcessorIds_, processorIds);\n};\n\n\n/**\n * Attaches an event debugger to an element. In debug mode, this console logs\n * all the events that originate from the element as well as all the events that\n * are handled by that element.\n * @param {?Element} element\n */\nwiz.Dispatcher.prototype.attachEventDebugger \x3d function(element) {\n  if (!goog.DEBUG) {\n    return;\n  }\n  this.debugElement_ \x3d element;\n};\n\n\n/**\n * Parses the `actionFlow` into an `wiz.ActionSet`.\n * @param {!jsaction.ActionFlow} actionFlow The ActionFlow object for an event.\n * @return {!wiz.ActionSet} Action map object.\n * @private\n */\nwiz.Dispatcher.prototype.getActions_ \x3d function(actionFlow) {\n  return wiz.ActionSet.create(actionFlow.flowType());\n};\n\n\n/**\n * Bubbles an event up through the DOM until it hits a controller. Then\n * asynchronously loads the controller and attempts to call the appropriate\n * handler for the event.\n * @param {!jsaction.ActionFlow} actionFlow The action flow for the event.\n * @private\n */\nwiz.Dispatcher.prototype.handleActions_ \x3d function(actionFlow) {\n  // Don\x27t handle actions when the appContext is disposed.\n  if (this.appContext_ \x26\x26 this.appContext_.isDisposed()) {\n    return;\n  }\n  // Wiz ignores namespaced actions, but they can be fowarded to a custom\n  // registered handler.\n  if (actionFlow.actionNamespace()) {\n    if (this.namespaceHandler_) {\n      this.namespaceHandler_(actionFlow);\n    }\n    return;\n  }\n\n  // If there are still non-replayed events, we want to replay them before\n  // handling the first non-replayed events, so that events have the chance\n  // to be in the right order.\n  if (!this.handledFirstAction_) {\n    this.handledFirstAction_ \x3d true;  // Recurse into replay exactly once.\n    this.jsActionDispatcher_.replayNow();\n  }\n\n  var element \x3d /** @type {!Element} */ (actionFlow.node());\n\n  // Handle programmatic event handlers\n  var event \x3d actionFlow.event();\n  goog.log.fine(this.logger_, \x27Dispatching event: \x27 + event.type);\n  var target \x3d event[\x27_retarget\x27] ? event[\x27_retarget\x27] :\n                                    actionFlow.target() || event.srcElement;\n\n  if (goog.DEBUG) {\n    if (this.debugElement_ \x3d\x3d element) {\n      console.log(\x27Received event \x22%s\x22. %O\x27, event.type.toString(), event);\n    } else if (this.debugElement_ \x3d\x3d target) {\n      console.log(\x27Event \x22%s\x22 handled by %O. %O \x27,\n          event.type.toString(), element, event);\n    }\n  }\n\n  var handlers \x3d wiz.jsaction.util.getHandlers(element, goog.asserts.assert(\n      actionFlow.eventType() ? actionFlow.eventType() : event.type));\n  var shouldBubble \x3d false;\n  if (handlers) {\n    goog.log.fine(this.logger_, \x27Calling \x27 + handlers.length +\n        \x27 programmatic handlers\x27);\n    for (var i \x3d 0; i \x3c handlers.length; i++) {\n      var retVal \x3d this.callActionHandler_(actionFlow, handlers[i], null,\n          target);\n      shouldBubble \x3d shouldBubble || retVal \x3d\x3d\x3d true;\n    }\n  }\n\n  var root \x3d wiz.controllers.getControllerRoot(element,\n      /* includeElement */ true);\n  if (!root) {\n    if (goog.DEBUG \x26\x26 this.debugElement_ \x3d\x3d target) {\n      console.log(\x27No controller found for \x22%s\x22 at element %O. %s \x27 +\n          \x27%O\x27, event.type.toString(), element,\n          shouldBubble ? \x27Bubbling event\x27 : \x27\x27, event);\n    }\n    if (shouldBubble) {\n      goog.log.info(this.logger_,\n          \x27No controller for this jsaction. Bubbling.\x27);\n      this.bubbleToJsactionParent_(actionFlow, event);\n    }\n    return;\n  }\n  var actionSet \x3d this.getActions_(actionFlow);\n  var actions \x3d this.resolveActions_(actionFlow, actionSet, root);\n\n  if (actions.length \x3d\x3d 0) {\n    if (goog.DEBUG) {\n      if (this.debugElement_ \x3d\x3d target) {\n        console.log(\x27No matching @wizaction found for \x22%s\x22 at element %O. %s \x27 +\n            \x27%O\x27, event.type.toString(), element,\n            shouldBubble ? \x27Bubbling event\x27 : \x27\x27, event);\n      }\n    }\n    // This means we i.e. bound click using jsaction but stated we are only\n    // interested in events matching certain jsnames and none matched.\n    // In this case we treat this like there was never a jsaction in the first\n    // place and redispatch the event unless it was handled programmatically\n    // and bubbling wasn\x27t requested\n    if (!handlers || shouldBubble) {\n      goog.log.info(this.logger_, \x27No matching @wizaction found for \x27 +\n          event.type + \x27. Bubbling event.\x27);\n      this.bubbleToJsactionParent_(actionFlow, event);\n    }\n    return;\n  }\n\n  var d \x3d this.getController(root);\n  actionFlow.branch(wiz.Dispatcher.ACTIONFLOW_BRANCH_NAME_);\n  // Add the loading class if the controller is not very fast (\x3c50ms; the\n  // minimum time perceptible as non-instant).\n  var shouldAddLoadingClass \x3d true;\n  var addedLoadingClass \x3d false;\n  window.setTimeout(function() {\n    // Avoid usage of clearTimeout because of a weird bug in mobile safari,\n    // where it stops further event dispatch.\n    if (shouldAddLoadingClass) {\n      wiz.Dispatcher.enableLoadingClass_(true, actions, actionFlow, root);\n      addedLoadingClass \x3d true;\n    }\n  }, 50);\n  // Remove the class again if it was added.\n  d.addBoth(function() {\n    if (addedLoadingClass) {\n      wiz.Dispatcher.enableLoadingClass_(false, actions, actionFlow, root);\n    }\n    shouldAddLoadingClass \x3d false;\n  }, this);\n\n\n  d.addCallback(goog.bind(this.preloadProcessors_, this, actions));\n\n  d.addCallback(function(controller) {\n    // The action flow must be branched, when methods are called.\n    goog.asserts.assert(actionFlow.branches()[\n        wiz.Dispatcher.ACTIONFLOW_BRANCH_NAME_] \x3d\x3d\x3d 1);\n    try {\n      if (this.actionLogger_) {\n        this.actionLogger_.logDispatch(\n            actionFlow, root.getAttribute(wiz.Attribute.CONTROLLER));\n      }\n      this.callActions_(controller, actionFlow,\n          goog.asserts.assertElement(root), actions, shouldBubble);\n    } finally {\n      actionFlow.done(wiz.Dispatcher.ACTIONFLOW_BRANCH_NAME_);\n    }\n  }, this);\n  d.addErrback(function(error) {\n    actionFlow.done(wiz.Dispatcher.ACTIONFLOW_BRANCH_NAME_);\n    if (error instanceof goog.async.Deferred.CanceledError) {\n      return;\n    }\n    throw error;\n  });\n};\n\n\n/**\n * For the actions on the controller, determine what processors will be called\n * and fetch those services. Store instances of the services in the processor\n * cache.\n *\n * @param {!Array\x3cwiz.Dispatcher.MatchedAction_\x3e} actions The actions to call\n *     on the controller.\n * @param {!wiz.Controller} controller The controller handling the actions.\n * @return {goog.async.Deferred\x3c!wiz.Controller\x3e|undefined} A deferred that is\n *     finished the processors are loaded.\n * @private\n */\nwiz.Dispatcher.prototype.preloadProcessors_ \x3d function(actions, controller) {\n  var unfetchedIds \x3d goog.array.filter(this.globalProcessorIds_, function(id) {\n    return !this.processors_[id];\n  }, this);\n  for (var i \x3d 0; i \x3c actions.length; i++) {\n    var action \x3d actions[i].action;\n    var method \x3d wiz.jsaction.util.getMethod(controller, action);\n    if (method.annotations) {\n      for (var j \x3d 0; j \x3c method.annotations.length; j++) {\n        if (!this.processors_[method.annotations[j]]) {\n          unfetchedIds.push(method.annotations[j]);\n        }\n      }\n    }\n  }\n  if (!unfetchedIds.length) {\n    // Since this is called in a deferred chain, it will just keep the current\n    // produced value which is the contract of this function.\n    return undefined;\n  }\n  var serviceDeferreds \x3d [];\n  var injector \x3d wiz.inject.Injector.getInstance();\n  injector.getAsync(unfetchedIds);\n  for (var i \x3d 0; i \x3c unfetchedIds.length; i++) {\n    var myId \x3d unfetchedIds[i];\n    var serviceDeferred \x3d wiz.services.getInstance(myId, this.appContext_)\n        .addCallback(goog.bind(function(id, processor) {\n            this.processors_[id] \x3d processor;\n        }, this, myId));\n    serviceDeferreds.push(serviceDeferred);\n  }\n  return new goog.async.DeferredList(serviceDeferreds)\n      .addCallback(function() { return controller; });\n};\n\n\n/**\n * Returns information about which of the jsactions in the given ActionSet\n * actually match the current event including the target that is either the\n * event target or whatever node had the matching jsname.\n * @param {!jsaction.ActionFlow} actionFlow The action flow for the event.\n * @param {!wiz.ActionSet} actionSet Actions to call on the controller results.\n * @param {!Element} root Controller root element.\n * @return {!Array\x3cwiz.Dispatcher.MatchedAction_\x3e}\n * @private\n */\nwiz.Dispatcher.prototype.resolveActions_ \x3d function(actionFlow, actionSet,\n    root) {\n  var matchingActions \x3d [];\n  var event \x3d actionFlow.event();\n  var actions \x3d actionSet.get();\n  for (var j \x3d 0; j \x3c actions.length; j++) {\n    var action \x3d actions[j];\n\n    if (action.action \x3d\x3d\x3d wiz.jsaction.CLIENT_SIDE_LISTEN_MARKER) {\n      continue;\n    }\n\n    var target \x3d event[\x27_retarget\x27] ? event[\x27_retarget\x27] :\n                                      actionFlow.target() || event.srcElement;\n\n    // Stores the actual target of a delegated event.\n    var newTarget \x3d null;\n\n    if (action.target) {\n      // Traverse up the DOM to check if the parent of the target has the\n      // delegated name. We check in the condition for the presence of\n      // getAttribute so that we stop at the documentElement if no matching\n      // \x27jsname\x27 is found.\n      do {\n        var targetName \x3d target.getAttribute(wiz.Attribute.NAME);\n        if (targetName) {\n          xid.assertXidLikeString(targetName);\n          xid.assertXidLikeString(action.target);\n        }\n        if (action.target \x3d\x3d targetName \x26\x26\n            wiz.controllers.getControllerRoot(target,\n                /* includeElement */ false) \x3d\x3d root) {\n          newTarget \x3d target;\n          break;\n        }\n        target \x3d wiz.dom.getEventOrderParentElement(target);\n      } while (target \x26\x26 target !\x3d root);\n      // If no target is found, it means that neither the target nor the\n      // ancestor of the target has a matching jsname.\n      if (!newTarget) {\n        goog.log.fine(this.logger_, action.action + \x27 does not match \x27 +\n            action.target);\n        continue;\n      }\n    }\n    if (action.args) {\n      if (action.args[wiz.Action.ARGS.PREVENT_DEFAULT] \x3d\x3d \x27true\x27) {\n        this.preventDefault_(event);\n      }\n      if (action.args[wiz.Action.ARGS.PREVENT_MOUSE_EVENTS] \x3d\x3d \x27true\x27) {\n        // TODO(dvoytenko): b/20255556: Add _preventMouseEvents into Boq\x27s\n        //   externs and replace here with just \x22event._preventMouseEvents\x22.\n        goog.asserts.assertFunction(event[\x27_preventMouseEvents\x27],\n            \x27preventMouseEvents can only be applied to touchend, but got %s.\x27,\n            event.type).call(event);\n      }\n    }\n    matchingActions.push({\n      action: action,\n      target: newTarget || target\n    });\n  }\n\n  return matchingActions;\n};\n\n\n/**\n * Returns the set of actions in the action set that match the current event and\n * target of the actionflow.\n * @param {!wiz.Controller} controller The controller associated with element.\n * @param {!jsaction.ActionFlow} actionFlow The action flow for the event.\n * @param {!Element} root Controller root element.\n * @param {!Array\x3cwiz.Dispatcher.MatchedAction_\x3e} actions The actions to call\n *     on the controller.\n * @param {boolean} shouldBubble\n * @private\n */\nwiz.Dispatcher.prototype.callActions_ \x3d function(controller, actionFlow, root,\n    actions, shouldBubble) {\n  var event \x3d actionFlow.event();\n  for (var i \x3d 0; i \x3c actions.length; i++) {\n    var action \x3d actions[i].action;\n    var target \x3d actions[i].target;\n    var method \x3d wiz.jsaction.util.getMethod(controller, action);\n    goog.log.info(this.logger_, \x27Calling method \x27 + action.action + \x27 on \x27 +\n        controller + \x27 responding to event of type \x27 + event.type);\n    var retVal \x3d this.callActionHandler_(\n        actionFlow, method, controller, target);\n    shouldBubble \x3d shouldBubble || retVal \x3d\x3d\x3d true;\n  }\n\n  // If propagation was not stopped and the event indicates that it bubbles,\n  // do a user-land bubbling through jsaction.\n  // WARNING: IT\x27S TOO LATE TO CHANGE OUR MIND ABOUT THIS BEING A GOOD IDEA.\n  if (shouldBubble \x26\x26 event.bubbles !\x3d\x3d false) {\n    var retargetedEvent \x3d this.retargetEvent_(event, root);\n    if (retargetedEvent !\x3d null) {\n      goog.log.info(this.logger_, \x27Bubbling event.\x27);\n      this.trigger(retargetedEvent);\n    }\n  } else {\n    goog.log.fine(this.logger_,\n        \x27No bubbling requested. Stopping event dispatch\x27);\n  }\n};\n\n\n/**\n * Calls the action handler function.\n * @param {!jsaction.ActionFlow} actionFlow The action flow for the event.\n * @param {function(!wiz.Event)} fn The function to call.\n * @param {*} context The context for the called function.\n * @param {!Element} target Target of the event.\n * @return {*} The return value of the handler.\n * @private\n */\nwiz.Dispatcher.prototype.callActionHandler_ \x3d\n    function(actionFlow, fn, context, target) {\n  var event \x3d /** @type {!Event} */ (actionFlow.event());\n  var node \x3d actionFlow.node();\n\n  // In firefox text nodes can be the target of browser events. In this case\n  // set the its parent as the target so users don\x27t have to special case their\n  // code.\n  if (target.nodeType \x3d\x3d goog.dom.NodeType.TEXT) {\n    target \x3d goog.asserts.assertElement(target.parentNode);\n  }\n  var wizEvent \x3d new wiz.Event(event, new wiz.Query.One(target),\n      new wiz.Query.One(node), event[wiz.Property.EVENT_SOURCE]);\n\n  var processors \x3d [];\n  for (var i \x3d 0; i \x3c this.globalProcessorIds_.length; i++) {\n    var globalProcessorId \x3d this.globalProcessorIds_[i];\n    var globalProcessor \x3d this.processors_[globalProcessorId];\n    if (globalProcessor) {\n      processors.push(globalProcessor);\n    } else {\n      goog.log.error(\n          this.logger_,\n          \x27Processor not yet loaded for processor id: \x27 + globalProcessorId);\n    }\n  }\n  if (fn.annotations) {\n    for (var i \x3d 0; i \x3c fn.annotations.length; i++) {\n      var annotationProcessorId \x3d fn.annotations[i];\n      var annotationProcessor \x3d this.processors_[annotationProcessorId];\n      if (annotationProcessor) {\n        processors.push(annotationProcessor);\n      } else {\n        goog.log.error(\n            this.logger_,\n            \x27Processor not yet loaded for processor id: \x27 +\n                annotationProcessorId);\n      }\n    }\n  }\n  if (processors.length \x3e 0) {\n    // We guard the processor executions to the preProcessAction\n    // and beforeAction calls are not called on contexts that are\n    // not wiz controllers.\n    if (!wiz.annotations.internal.preProcessAction(\n         /** @type {!wiz.Controller} */ (context), wizEvent, processors)) {\n      wiz.annotations.internal.beforeAction(\n          /** @type {!wiz.Controller} */ (context), wizEvent, processors);\n    } else {\n      // A preprocessor aborted.\n      return;\n    }\n  }\n  return fn.call(context, wizEvent);\n};\n\n\n/**\n * Adds or removes a class to the current actionElement and controller root node\n * during loading if this is requested by the jsaction through the\n * {@see wiz.Action.ARGS.CSS_FEEDBACK_DURING_LOADING} argument.\n * Example: {@code jsaction\x3d\x22click:{xid handle}(feedback\x3dtrue)\x22}\n *\n * @param {boolean} enable\n * @param {!Array\x3cwiz.Dispatcher.MatchedAction_\x3e} actions\n * @param {!jsaction.ActionFlow} actionFlow\n * @param {Element} root Controller root element.\n * @private\n */\nwiz.Dispatcher.enableLoadingClass_ \x3d function(enable, actions,\n    actionFlow, root) {\n  goog.array.forEach(actions, function(matchedAction) {\n    var loadingClass \x3d matchedAction.action.args \x26\x26 matchedAction.action.args[\n        wiz.Action.ARGS.CSS_FEEDBACK_DURING_LOADING];\n    if (!loadingClass) {\n      return;\n    }\n    goog.dom.classlist.enable(actionFlow.node(),\n        goog.getCssName(\x27wizLoadingJsAction\x27), enable);\n    goog.dom.classlist.enable(matchedAction.target,\n        goog.getCssName(\x27wizLoadingTarget\x27), enable);\n    goog.dom.classlist.enable(root,\n        goog.getCssName(\x27wizLoadingJsController\x27), enable);\n  });\n};\n\n\n/**\n * Bubbles an event to the parentElement to of the current actionNode. This\n * effectively prevents the current jsaction from matching again and moves on\n * to the next jsaction above.\n * @param {!jsaction.ActionFlow} actionFlow\n * @param {!Event} event\n * @private\n */\nwiz.Dispatcher.prototype.bubbleToJsactionParent_ \x3d function(actionFlow,\n    event) {\n  // Start redispatch from the parentElement of the Node that has the\n  // current jsaction attribute, but keep the target the same\n  var retargetedEvent \x3d this.retargetEvent_(\n      event,\n      /** @type {?Element} */ (actionFlow.target() || event.srcElement),\n      wiz.dom.getEventOrderParentElement(\n          /** @type {Element} */ (actionFlow.node())));\n  if (retargetedEvent !\x3d null) {\n    this.trigger(retargetedEvent);\n  }\n};\n\n\n/**\n * Retargets a bubbled event to the current controller.\n * The special value \x27_retarget\x27 carries the desired target to the next\n * invocation. The target itself is set to the controller parentNode to\n * start dispatch in jsaction at the right spot.\n * @param {!Object} event The event to retarget.\n * @param {?Element} target The new target.\n * @param {?Element\x3d} opt_bubbleStartNode The node from which to find the\n *     next matching event handler. Default to the owner or parentNode\n *     of the target.\n * @return {?Object} A copy of the event with the new target. Returns null if\n *     there is no node to bubble to. I.e. because documentElement was reached.\n * @private\n */\nwiz.Dispatcher.prototype.retargetEvent_ \x3d function(event, target,\n    opt_bubbleStartNode) {\n  // The main reason to make a copy is that event properties cannot be changed.\n  // In the future it may be nice to avoid this copy if it is not actually\n  // needed.\n  var copy \x3d {};\n  for (var i in event) {\n    if (typeof event[i] \x3d\x3d\x3d \x27function\x27 || i \x3d\x3d\x3d \x27srcElement\x27 ||\n        i \x3d\x3d\x3d \x27target\x27) {\n      continue;\n    }\n    copy[i] \x3d event[i];\n  }\n  var bubbleStartNode \x3d\n      opt_bubbleStartNode || wiz.dom.getEventOrderParentElement(target);\n  if (!bubbleStartNode || !this.isInDocument_(bubbleStartNode)) {\n    // This would happen when we\x27ve reached documentElement or a node was\n    // removed from the DOM.\n    return null;\n  }\n  copy[\x27target\x27] \x3d bubbleStartNode;\n  copy[\x27_retarget\x27] \x3d target;\n  copy[\x27_originalEvent\x27] \x3d event;\n\n  // Emulate preventDefault and stopPropagation behavior, but only on non-IE8\n  // browsers.\n  if (event.preventDefault) {\n    copy[\x27defaultPrevented\x27] \x3d event.defaultPrevented || false;\n    copy[\x27preventDefault\x27] \x3d wiz.Dispatcher.retargetPreventDefault_;\n    copy[\x27_propagationStopped\x27] \x3d event[\x27_propagationStopped\x27] || false;\n    copy[\x27stopPropagation\x27] \x3d wiz.Dispatcher.retargetStopPropagation_;\n    copy[\x27_immediatePropagationStopped\x27] \x3d\n        event[\x27_immediatePropagationStopped\x27] || false;\n    copy[\x27stopImmediatePropagation\x27] \x3d\n        wiz.Dispatcher.retargetStopImmediatePropagation_;\n  }\n  return copy;\n};\n\n\n/**\n * Sets \x22defaultPrevented\x22 property and delegates to the original event.\n * @this {!Event}\n * @private\n */\nwiz.Dispatcher.retargetPreventDefault_ \x3d function() {\n  this.defaultPrevented \x3d true;\n  var original \x3d /** @type {?Event} */ (this[\x27_originalEvent\x27]);\n  if (original) {\n    original.preventDefault();\n  }\n};\n\n\n/**\n * Sets \x22_propagationStopped\x22 property and delegates to the original event.\n * @this {!Event}\n * @private\n */\nwiz.Dispatcher.retargetStopPropagation_ \x3d function() {\n  this[\x27_propagationStopped\x27] \x3d true;\n  var original \x3d /** @type {?Event} */ (this[\x27_originalEvent\x27]);\n  if (original) {\n    original.stopPropagation();\n  }\n};\n\n\n/**\n * Sets \x22_immediatePropagationStopped\x22 property and delegates to the original\n * event.\n * @this {!Event}\n * @private\n */\nwiz.Dispatcher.retargetStopImmediatePropagation_ \x3d function() {\n  this[\x27_immediatePropagationStopped\x27] \x3d true;\n  var original \x3d /** @type {?Event} */ (this[\x27_originalEvent\x27]);\n  if (original) {\n    original.stopImmediatePropagation();\n  }\n};\n\n\n/**\n * Returns the function that returns the function that will be invoked for each\n * event handled throgh JSAction.\n * The function is optionally wrap through {@see goog.debug.entryPointRegistry}\n * depending on whether that facility is activated.\n * @return {function(jsaction.EventInfo):Function}\n * @private\n */\nwiz.Dispatcher.prototype.getJsActionHandler_ \x3d function() {\n  var jsActionHandler \x3d goog.bind(this.handleActions_, this);\n  var wrapActionHandler_ \x3d goog.functions.identity;\n\n  goog.debug.entryPointRegistry.register(\n      /**\n       * @param {function(!Function): !Function} transformer The transforming\n       *     function.\n       */\n      function(transformer) {\n        wrapActionHandler_ \x3d transformer;\n      });\n\n  return /** @type {function(jsaction.EventInfo):Function} */ (function() {\n    return wrapActionHandler_(jsActionHandler);\n  });\n};\n\n\n/**\n * Call preventDefault on an event.\n * @param {Event} event\n * @private\n */\nwiz.Dispatcher.prototype.preventDefault_ \x3d function(event) {\n  if (event.preventDefault) {\n    event.preventDefault();\n  } else {\n    // Gross hack alarm. JSAction copies the event object in IE8, thus we\n    // can\x27t call preventDefault. Instead we get the window.event object\n    // which should be the same when we got synchronously called (which\n    // is the only time the default action can still be prevented) and set\n    // event.returnValto false which is equivalent to calling\n    // preventDefault.\n    if (event.srcElement) {\n      var win \x3d event.srcElement.ownerDocument.parentWindow;\n      if (win.event \x26\x26 win.event.type \x3d\x3d event.type) {\n        win.event.returnValue \x3d false;\n      }\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/events/dispatcher.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygl');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygl');

}catch(e){_DumpException(e)}
/* _Module_:sygn */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygn');
var $googDebugFname="javascript/apps/wiz/data/types.js";
eval("/**\n * @fileoverview Type definitions for Wiz data.\n */\ngoog.provide(\x27wiz.data.types\x27);\n\ngoog.require(\x27frameworks.client.data.RpcId\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27jspb.Message\x27);\n\n/** @const */\nwiz.data.types.IGNORE_DEADLINE \x3d -1;\n\n/**\n * @typedef {{\n *   extension: !jspb.ExtensionFieldInfo,\n *   message: !jspb.Message\n * }}\n */\nwiz.data.types.SideChannelMessage;\n\n/**\n * Type that represents all the metadata that Wiz data bindings are expected\n * to support.\n *\n * @typedef {{\n *   deadlineMillis : (number|undefined),\n *   fatal: (boolean|undefined),\n *   experimentFlagRequired:  (!xid.String|!Array\x3cxid.String\x3e|undefined),\n *   sideChannel: (!Array\x3c!wiz.data.types.SideChannelMessage\x3e|undefined),\n *   retrieveError: (boolean|undefined),\n *   hasTimedOut: (boolean|undefined)\n * }}\n */\nwiz.data.types.RequestMetadata;\n\n\n/**\n * Type that represents all the information necessary for a single data request.\n * The transportType is the async binder that will be used to fetch the data.\n *\n * @typedef {{\n *   rpcId: (!frameworks.client.data.RpcId),\n *   transportType: (string),\n *   requestMessage: (?jspb.Message),\n *   metadata: (?wiz.data.types.RequestMetadata|undefined),\n * }}\n */\nwiz.data.types.DataRequest;\n\n\n/**\n * Temporary type that represents both legacy and new representations of a\n * data request. Eventually, {@see wiz.data.types.DataRequest} will be the only\n * one used.\n *\n * @typedef {\n *     ?af.data.DataRequest|\n *     ?af.data.ExtendedDataRequest|\n *     !jspb.ExtensionFieldInfo|\n *     ?wiz.data.types.DataRequest}\n */\nwiz.data.types.UberDataRequest;\n\n\n/**\n * A type that is castable to {@see wiz.async.RetrievableMap}.\n *\n * @typedef {!Object\x3cstring, !wiz.data.types.UberDataRequest\x3e}\n */\nwiz.data.types.UberDataRequestMap;\n\n/**\n * This type represents a transitional state while working with data requests.\n * The first key is the name of the async data binding that should be used to\n * make the data request. The second key is the alias of the data request\n * itself.\n *\n * For example:\n * {\n *   afdata: {\n *     foorequest1: \x22...\x22,\n *     foorequest2: \x22...\x22\n *   },\n *   more_data: {\n *     barrequest1: \x22...\x22,\n *     barrequest2: \x22...\x22\n *   }\n * }\n *\n * In the above example \x27afdata\x27 and \x27more_data\x27 are two data bindings. Their\n * corresponding object value contains a map of requests that should be made\n * using the data binding.\n *\n * @typedef {!Object\x3c!Object\x3c!wiz.data.types.UberDataRequest\x3e\x3e}\n */\nwiz.data.types.DataRequestsByBinder;\n\n/** @const */\nwiz.data.types.DEFAULT_TRANSPORT_TYPE \x3d \x27data\x27;\n\n\n/** @const */\nwiz.data.types.RPC_TRANSPORT_TYPE \x3d \x27rpc\x27;\n\n\n/**\n * Tests if a value is a wiz.data.types.DataRequest.\n *\n * @param {*} dataRequest\n * @return {boolean} Whether the passed in value is a wiz.data.DataRequest.\n */\nwiz.data.types.isDataRequest \x3d function(dataRequest) {\n  if (!goog.isObject(dataRequest)) {\n    return false;\n  }\n  if (!goog.isDef(dataRequest.rpcId) ||\n      !(dataRequest.rpcId instanceof frameworks.client.data.RpcId)) {\n    return false;\n  }\n  if (!goog.isDef(dataRequest.transportType)) {\n    return false;\n  }\n  if (goog.isDef(dataRequest.requestMessage) \x26\x26\n      !(dataRequest.requestMessage instanceof jspb.Message)) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Turns an object containing multiple {@link wiz.data.types.UberDataRequest}\n * into a {@link wiz.async.Request} that is suitable to use in a\n * {@link wiz.async.get} call.\n *\n * @param {!Object\x3c!wiz.data.types.UberDataRequest\x3e} dataRequest\n * @return {!Object} the wiz async request.\n */\nwiz.data.types.createWizAsyncRequest \x3d function(dataRequest) {\n  // The list of data requests could be using different transport types.\n  // First construct a map from transport type to data request aliases.\n  var dataRequestsByBinder \x3d\n      /** @type {wiz.data.types.DataRequestsByBinder} */ ({});\n  for (var alias in dataRequest) {\n    var binder \x3d goog.isDefAndNotNull(dataRequest[alias].transportType) ?\n        dataRequest[alias].transportType :\n        wiz.data.types.DEFAULT_TRANSPORT_TYPE;\n    if (!(binder in dataRequestsByBinder)) {\n      dataRequestsByBinder[binder] \x3d\n          /** @type {!Object\x3c!wiz.data.types.UberDataRequest\x3e} */ ({});\n    }\n    dataRequestsByBinder[binder][alias] \x3d dataRequest[alias];\n  }\n  var asyncRequest \x3d /** @type {!wiz.async.Request} **/ ({});\n  for (var binder in dataRequestsByBinder) {\n    asyncRequest[binder] \x3d dataRequestsByBinder[binder];\n  }\n  return asyncRequest;\n};\n\n\n/**\n * Turns a {@link wiz.async.Response} that contains results from multiple\n * async data binders into a flat object with all responses.\n *\n * Example:\n * {\n *   data: {\n *     foo: \x27fooResponse\x27,\n *     bar: \x27barResponse\x27\n *   },\n *   other_data: {\n *     baz: \x27bazResponse\x27\n *   }\n * }\n * turns into\n * {\n *   foo: \x27fooResponse\x27,\n *   bar: \x27barResponse\x27,\n *   baz: \x27bazResponse\x27\n * }\n *\n * @param {!wiz.async.Response} response\n * @return {!Object} the unpacked wiz async response.\n */\nwiz.data.types.unpackAsyncDataResponse \x3d function(response) {\n  var data \x3d {};\n  var binderForAlias \x3d {};\n  for (var binder in response) {\n    for (var alias in response[binder]) {\n      goog.asserts.assert(\n          !data[alias], \x27Found duplicate alias [\x27 + alias +\n              \x27] used in multiple transport types [\x27 + binder + \x27] and [\x27 +\n              binderForAlias[alias] + \x27].\x27);\n      data[alias] \x3d response[binder][alias];\n      binderForAlias[alias] \x3d binder;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Modifies an existing data request and adds an attribute that tells\n * the framework to modify the return type to check for errors instead.\n * The resulting error status will then be propogated to the consuming template.\n * @param {!Function} fn\n * @return {!Function}\n * @template T\n */\nwiz.data.types.retrieveError \x3d function(fn) {\n  return (componentParams, ambientParams, overrides) \x3d\x3e {\n    var request \x3d fn(componentParams, ambientParams, overrides);\n    if (!request) {\n      return request;\n    }\n    request.metadata.retrieveError \x3d true;\n    return request;\n  };\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/types.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygn');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygn');

}catch(e){_DumpException(e)}
/* _Module_:sygo */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sygo');
var $googDebugFname="javascript/apps/wiz/data/clients/datafetcher.js";
eval("/**\n * @fileoverview Data fetcher interface to be implemented for client side\n * binding alternative data stories.\n * @pintomodule\n */\ngoog.provide(\x27wiz.data.clients.DataFetcher\x27);\n\ngoog.require(\x27wiz.atInterface\x27);\ngoog.require(\x27wiz.data.clients.interfaces\x27);\ngoog.require(\x27wiz.data.types\x27);\n\ngoog.scope(function() {\n\n\n\n/**\n * Interface for binding alternative data stories.\n * @interface\n */\nwiz.data.clients.DataFetcher \x3d wiz.atInterface(\n    wiz.data.clients.interfaces.DATA_FETCHER);\nvar DataFetcher \x3d wiz.data.clients.DataFetcher;\n\n\n/**\n * Fetch responses for provided data requests.\n * @param {?wiz.data.types.UberDataRequestMap} dataRequests\n * @return {!Object\x3c!goog.Promise\x3c!Object\x3e\x3e}\n */\nDataFetcher.prototype.execute;\n});  // goog.scope\n\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/datafetcher.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sygo');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sygo');

}catch(e){_DumpException(e)}
/* _Module_:jsa */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('jsa');
var $googDebugFname="javascript/frameworks/client/data/bindings.js";
goog.loadModule("/**\n * @fileoverview Utility class to install bindings required by run Wiz RPC.\n */\ngoog.module(\x27frameworks.client.data.bindings\x27);\ngoog.module.declareLegacyNamespace();\n\n\nconst BatchDataInterface \x3d goog.require(\x27frameworks.client.data.BatchDataInterface\x27);\nconst BatchTransportInterface \x3d goog.require(\x27frameworks.client.data.BatchTransportInterface\x27);\nconst GenericDataInterface \x3d goog.require(\x27frameworks.client.data.GenericDataInterface\x27);\nconst GenericTransportInterface \x3d goog.require(\x27frameworks.client.data.GenericTransportInterface\x27);\nconst ServiceId \x3d goog.require(\x27fava.services.ServiceId\x27);\nconst atInterface \x3d goog.require(\x27wiz.atInterface\x27);\nconst services \x3d goog.require(\x27frameworks.client.data.services\x27);\n\n\n\n/**\n * @param {!ServiceId} transportServiceId\n * @param {!ServiceId\x3d} opt_batchTransportServiceId\n */\nfunction setTransportImplementation(\n    transportServiceId, opt_batchTransportServiceId) {\n  atInterface.get(GenericTransportInterface)\n      .setDefaultImplementationId(transportServiceId);\n  atInterface.get(GenericDataInterface)\n      .setDefaultImplementationId(services.GENERIC_DATA);\n  if (opt_batchTransportServiceId) {\n    atInterface.get(BatchTransportInterface)\n        .setDefaultImplementationId(opt_batchTransportServiceId);\n    atInterface.get(BatchDataInterface)\n        .setDefaultImplementationId(services.BATCH_DATA);\n  }\n}\n\nexports \x3d {setTransportImplementation};\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/bindings.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/mothership/bindings.js";
goog.loadModule("goog.module(\x27search.mothership.bindings\x27);\n\nconst bindings \x3d goog.require(\x27frameworks.client.data.bindings\x27);\nconst services \x3d goog.require(\x27search.mothership.services\x27);\n\n/** Binds Mothership client to Wiz RPC interfaces. */\nfunction install() {\n  bindings.setTransportImplementation(services.GWS_RPC_DATA);\n}\n\nexports \x3d {install};\n\n//# sourceURL\x3dhttps://qs/gws/js/mothership/bindings.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/state/state_service_interface.js";
goog.loadModule("goog.module(\x27search.state.StateServiceInterface\x27);\n\n/**\n * @record\n * @template T\n */\nclass StateServiceInterface {\n  constructor() {}\n\n  /**\n   * Gets the current state.\n   * @return {!T}\n   */\n  get() {}\n\n  /**\n   * Get the message constructor.\n   * @return {function(new: T)}\n   */\n  getMessageConstructor() {}\n\n  /**\n   * @param {function(!T)} listener\n   */\n  addNonDomListener(listener) {}\n}\n\nexports \x3d StateServiceInterface;\n\n//# sourceURL\x3dhttps://qs/gws/js/state/state_service_interface.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/wiz/state_binding.js";
goog.loadModule("/**\n * @fileoverview A binding that provides state functionality.\n */\ngoog.module(\x27search.wiz.stateBinding\x27);\n\nconst EventType \x3d goog.require(\x27wiz.event.EventType\x27);\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst InitialDataService \x3d goog.require(\x27wiz.data.clients.gws.InitialDataService\x27);\nconst Message \x3d goog.require(\x27jspb.Message\x27);\nconst ServiceId \x3d goog.require(\x27fava.services.ServiceId\x27);\nconst Source \x3d goog.require(\x27wiz.async.Source\x27);\nconst StateServiceInterface \x3d goog.require(\x27search.state.StateServiceInterface\x27);\nconst googObject \x3d goog.require(\x27goog.object\x27);\nconst wizAsync \x3d goog.require(\x27wiz.async\x27);\nconst {INITIAL_DATA} \x3d goog.require(\x27wiz.data.clients.gws.services\x27);\nconst {assertInstanceof, assertObject, assertFunction} \x3d goog.require(\x27goog.asserts\x27);\n\n/**\n * @typedef {{\n *     id: !ServiceId,\n *     onUpdate: (function(!Message, !EventType)|undefined),\n * }}\n */\nlet StateObj;\n\n/**\n * @typedef {{\n *     getRoot: (function(): !Element|undefined),\n *     getRootElementRestricted: (function(): !Element|undefined),\n * }}\n */\nlet MaybeHasRoot;\n\n/**\n * @param {!StateObj} stateObj\n * @return {!StateObj}\n */\nfunction assertStateObj(stateObj) {\n  assertObject(stateObj);\n  assertInstanceof(stateObj.id, ServiceId);\n  if (stateObj.onUpdate) {\n    assertFunction(stateObj.onUpdate);\n  }\n  return stateObj;\n}\n\n/**\n * Adds a dependency on a state proto service.\n * @param {!Source} source\n * @param {!wizAsync.RetrievableMap} aliasToStateServiceOrObj\n * @return {!Object\x3cstring, !GoogPromise\x3e}\n */\nfunction stateBinding(source, aliasToStateServiceOrObj) {\n  const stateObjs \x3d googObject.map(aliasToStateServiceOrObj, (spec) \x3d\x3e {\n    if (spec instanceof ServiceId) {\n      return {id: spec};\n    } else {\n      return assertStateObj(/** @type {!StateObj} */ (spec));\n    }\n  });\n  return googObject.map(stateObjs, ({id, onUpdate}, alias) \x3d\x3e {\n    return wizAsync\n        .get(\n            source,\n            {service: {stateService: id, initialDataService: INITIAL_DATA}})\n        .then((response) \x3d\x3e {\n          /** @type {!StateServiceInterface} */\n          const stateService \x3d response.service.stateService;\n          const maybeHasRoot \x3d\n              /** @type {!MaybeHasRoot} */ (source);\n          // If source is a controller or model, use jsdata.\n          if (maybeHasRoot.getRoot || maybeHasRoot.getRootElementRestricted) {\n            /** @type {!InitialDataService} */\n            const initialDataService \x3d response.service.initialDataService;\n            const ctor \x3d stateService.getMessageConstructor();\n            initialDataService.addInitialJsStateInstance(\n                ctor, stateService.get());\n            const jsdataObj \x3d {ctor};\n            if (onUpdate) {\n              jsdataObj.onUpdate \x3d onUpdate;\n            }\n            return wizAsync.get(source, {jsdata: {[alias]: jsdataObj}})\n                .then(() \x3d\x3e stateService);\n          }\n          // If source is a service, pass it directly to the StateService as a\n          // non-DOM listener.\n          if (onUpdate) {\n            stateService.addNonDomListener(goog.bind(onUpdate, source));\n          }\n          return stateService;\n        });\n  });\n}\n\nexports \x3d stateBinding;\n\n//# sourceURL\x3dhttps://qs/gws/js/wiz/state_binding.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/extension/manifest.js";
eval("// Copyright 2010 Google Inc. All rights reserved.\n\n/**\n * @fileoverview Base definition of the manifest defining an extension.\n * @author adeboor@google.com (Adam de Boor)\n */\ngoog.provide(\x27fava.extension.Manifest\x27);\ngoog.provide(\x27fava.extension.ServiceDefinition\x27);\n\n\n/**\n * The description of an extension and its components. The format is extensible,\n * by adding prototype properties to the class in other files.\n *\n * Extensions use the fava.strictCast() function to cast an object literal\n * to one of these -- it is not usually constructed.\n *\n * @constructor\n */\nfava.extension.Manifest \x3d function() {\n};\n\n\n/**\n * Definition of a service, for use in the\n * {@see fava.extension.Manifest#services} property, or in the\n * {@see fava.extension.Manifest#windowServices} property, or through a call to\n * the\n * {@see fava.extension.registerServices} or\n * {@see fava.extension.registerServicesOnInit} functions.\n *\n * A service has an id under which it is registered, exactly one of the\n * properties \x27ctor\x27, \x27callback\x27, \x27module\x27, or \x27later\x27, and an optional\n * \x27multiple\x27 property.\n *\n * The \x27ctor\x27 property, if present, is a javascript constructor that will be\n * called with the new operator and passed only the app context.\n *\n * The \x27callback\x27 property, if present, is a function that will be passed the\n * app context; it should return a newly created instance of the service. This\n * is useful when a service requires more parameters than just the app context\n * in order to create it.\n *\n * If the \x27module\x27 property is present, the service is registered as a late-\n * loaded service. The module should register the service in a module\n * initialization callback or using fava.extension.registerServicesOnInit.\n *\n * The \x27later\x27 property can be used in special cases in extension manifests to\n * satisfy service dependencies when all parties understand that the service\n * will actually be registered at some point in the future.\n *\n * When the \x27multiple\x27 property is absent or false, the service is created\n * at extension initialization time on the root app context (if defined in an\n * extension manifest), or immediately on the specified app context (if you\n * call fava.extension.registerServices).  Note that\n * fava.extension.registerServices is typically called in a module\n * initialization callback, which always receives the root app context.\n *\n * When the \x27multiple\x27 property is true, the service is created the first time\n * it is requested for an app context, and passed the app context for which it\n * was requested. Use this for services that need separate instances per\n * app context.\n *\n * @typedef {{\n *     id: (string|!fava.services.ServiceId),\n *     ctor: (undefined|Function),\n *     callback: (undefined|function(!fava.AppContext): !Object),\n *     module: (undefined|string),\n *     multiple: (undefined|boolean),\n *     later: (undefined|boolean)\n *   }}\n */\nfava.extension.ServiceDefinition;\n\n\n/**\n * The list of services implemented by the extension.\n *\n * @type {(undefined|?Array\x3cfava.extension.ServiceDefinition\x3e)}\n */\nfava.extension.Manifest.prototype.services;\n\n\n/**\n * The list of window services implemented by the extension. Window\n * services are not registered on the root application context, but\n * each ApplicationWindow will register them on the window\x27s app context.\n *\n * @type {(undefined|?Array\x3cfava.extension.ServiceDefinition\x3e)}\n */\nfava.extension.Manifest.prototype.windowServices;\n\n\n/**\n * The list of services required by this extension. Typically this is the\n * list of services fetched by the provided services in their constructors.\n * The list is used to determine the order in which an extension\x27s services\n * are registered, and the initialize function is called.\n *\n * @type {(undefined|?Array\x3c(string|!fava.services.ServiceId)\x3e)}\n */\nfava.extension.Manifest.prototype.requires;\n\n\n/**\n * The list of services required by the windowServices in this extension.\n * This is distinct from the requires field because a service registered on\n * the root context cannot require a window service because all window services\n * are potentially registered on a child window app context and will be\n * registered after all non-window services get registered. On the other hand,\n * it is fine for window services to require other non-window services.\n *\n * @type {(undefined|?Array\x3cstring\x3e)}\n */\nfava.extension.Manifest.prototype.windowRequires;\n\n\n/**\n * The function that initializes the extension. Initialization is only done\n * after all extensions have been created.\n *\n * @type {(undefined|function(!fava.AppContext): void)}\n */\nfava.extension.Manifest.prototype.initialize;\n\n\n/**\n * The function that configures the extension. Configuration for a given\n * extension is done immediately after the extension is created and its\n * services are registered and before subsequent downstream extensions are\n * created.\n *\n * @type {(undefined|function(!fava.AppContext): void)}\n */\nfava.extension.Manifest.prototype.configure;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/extension/manifest.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/extension/extension.js";
eval("// Copyright 2009 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview Defines a fava extension. An extension is a piece of code\n * that is meant to be compiled into the main application, and, at application\n * load time, defines how the rest of the application interacts with its\n * associated code. For example, an extension registers view types so that\n * other parts of the application can start a navigation to these views before\n * the extension\x27s main code has loaded. The goal is to minimize the amount of\n * code that is loaded early into the main application; this is the\n * early-loaded code that inserts awareness of a feature into the system.\n *\n * @author mpd@google.com (Michael Davidson)\n */\n\ngoog.provide(\x27fava.extension\x27);\ngoog.provide(\x27fava.extension.FactoryConfig\x27);\ngoog.provide(\x27fava.extension.FactoryService\x27);\ngoog.provide(\x27fava.extension.RegistrationError\x27);\n\ngoog.require(\x27fava.extension.Manifest\x27);\n/** @suppress {extraRequire} typedef */\ngoog.require(\x27fava.extension.ServiceDefinition\x27);\ngoog.require(\x27fava.services.ServiceId\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.debug\x27);\ngoog.require(\x27goog.debug.Error\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.module.ModuleManager\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.structs.Set\x27);\n\n\n\n/**\n * Our holder for manifests.\n * @typedef {{\n *   provides: !Object\x3cstring,boolean\x3e,\n *   index: number,\n *   depends: (undefined|!goog.structs.Set),\n *   visited: (undefined|boolean),\n *   manifest: !fava.extension.Manifest}}\n */\nfava.extension.ManifestHolder;\n\n\n/**\n * Array of manifests, contained in an object that makes sorting faster.\n * @type {Array\x3cfava.extension.ManifestHolder\x3e}\n * @private\n */\nfava.extension.manifests_ \x3d [];\n\n\n/**\n * Initialization hooks.\n * @type {Array\x3cfunction(!fava.AppContext): void\x3e}\n * @private\n */\nfava.extension.initializationHooks_ \x3d [];\n\n\nif (!goog.DISALLOW_TEST_ONLY_CODE) {\n  /**\n   * Services that are registeredOnInit.\n   * Store these, so they can be re-initialized in tests.\n   * @private {!Array\x3c!Object\x3e}\n   */\n  fava.extension.servicesRegisteredOnInit_ \x3d [];\n}\n\n\n/**\n * Whether the application has initialized the extensions.\n * @type {boolean}\n * @private\n */\nfava.extension.initialized_ \x3d false;\n\n\n/**\n * Registers a new extension.  If the application has already called initialize\n * then an error will be thrown.  Extensions should have all been included in\n * the initial download and be registered by the time the application starts.\n * @param {!fava.extension.Manifest} manifest The description of the extension.\n */\nfava.extension.register \x3d function(manifest) {\n  if (fava.extension.initialized_) {\n    throw new fava.extension.RegistrationError(manifest);\n  }\n  // For speed of sorting, we create a set that should be faster to\n  // examine.\n  var manifestHolder \x3d {\n    provides: {},\n    index: fava.extension.manifests_.length,\n    manifest: manifest\n  };\n\n  /**\n   * @param {(undefined|Array\x3cfava.extension.ServiceDefinition\x3e)} srvs The\n   *     services to add to the manifest holder.\n   */\n  function recordProvides(srvs) {\n    if (srvs) {\n      goog.array.reduce(srvs, function(s, v) {\n        s[v.id] \x3d true;\n        return s;\n      }, manifestHolder.provides);\n    }\n  }\n  // Add the manifest services/windowServices to the set of provided services.\n  recordProvides(manifest.services);\n  recordProvides(manifest.windowServices);\n  fava.extension.manifests_.push(manifestHolder);\n\n  if (manifest.services) {\n    goog.array.forEach(manifest.services, function(definition) {\n      var serviceId \x3d /** @type {!fava.services.ServiceId|string} */ (\n          definition.id);\n      if (serviceId instanceof fava.services.ServiceId \x26\x26 definition.module) {\n        serviceId.setModuleId(definition.module);\n      }\n    });\n  }\n};\n\n\n/**\n * Validates the extensions, looking for missing services and graph cycles.\n * @param {!fava.AppContext} appContext The root app context.\n * @private\n */\nfava.extension.validate_ \x3d function(appContext) {\n  var initRequires \x3d {}, allRequires \x3d {};\n  var initProvides \x3d {}, allProvides \x3d {}, winProvides \x3d {};\n  var errors \x3d [];\n  var i, j, m;\n\n  /**\n   * Helper function that adds all the required services to a list.\n   * @param {(undefined|Array\x3cstring\x3e)} requiresList The list of\n   *     required services.\n   * @param {Object\x3cstring,boolean\x3e} requiredServicesList Set that\n   *     contain service ids.\n   */\n  function buildRequires(requiresList, requiredServicesList) {\n    if (requiresList) {\n      goog.array.forEach(requiresList, function(id) {\n          requiredServicesList[id] \x3d true;\n        });\n    }\n  }\n\n  /**\n   * Helper function that removes a set of services from the services required.\n   * @param {(undefined|Array\x3cfava.extension.ServiceDefinition\x3e)} servicesList\n   *     The list of services that are provided.\n   * @param {Object\x3cstring,boolean\x3e} requiredServicesList Set that contain\n   *     service ids.\n   */\n  function removeRequires(servicesList, requiredServicesList) {\n    if (servicesList) {\n      goog.array.forEach(servicesList, function(svc) {\n          delete requiredServicesList[String(svc.id)];\n        });\n    }\n  }\n\n  /**\n   * @param {(undefined|Array\x3cfava.extension.ServiceDefinition\x3e)} servicesList\n   *     The list of services that are provided.\n   * @param {Object\x3cstring,number\x3e} providesServicesList An array of\n   *     sets that contain service ids of the provided services.\n   */\n  function buildProvides(servicesList, providesServicesList) {\n    if (servicesList) {\n      goog.array.forEach(servicesList, function(svc) {\n          if (providesServicesList[String(svc.id)]) {\n            providesServicesList[String(svc.id)]++;\n          } else {\n            providesServicesList[String(svc.id)] \x3d 1;\n          }\n        });\n    }\n  }\n\n  // In a manifest, service names listed in the \x22requires\x22 field can only be\n  // satisfied by services that are declared in the \x22services\x22 field. On the\n  // other hand service names listed in the \x22windowRequires\x22 field can be\n  // satisfied by services listed in both the \x22services\x22 and \x22windowServices\x22\n  // field of extension manifests.\n  //\n  // In order to determine if there are any missing requirements of the\n  // manifests we need to consider two scenarios:\n  //\n  // First is the case where we need to consider only the requirements that\n  // might be needed for global services. For these we only need to consider\n  // the \x22requires\x22 fields and ensure they are satisfied by services in the\n  // \x22services\x22 field (as mentioned above a service name listed in a \x22requires\x22\n  // field must be satisfied by a service listed in a \x22services\x22 field).\n  //\n  // Second we need to consider the requirements that might be needed for\n  // window services. For these we need to consider both the \x22requires\x22 field\n  // as well as the \x22windowRequires\x22 field since each \x22windowService\x22 can\n  // depend on any of these requirements.\n  //\n  // The way this loop works is by assuming that the manifests are already\n  // sorted in a topological order. For each iteration of the loop we add any\n  // dependencies required by this manifest (keeping track of two sets of\n  // requirments in parallel, one for each of the two cases above) and then\n  // remove any services declared by the manifest (again keeping track of the\n  // two cases) since those requirements are now satisfied by the manifest.\n  //\n  // Because we are going in reverse topological order if we encounter a\n  // manifest that requires (either through \x22requires\x22 or \x22windowRequires\x22) a\n  // service that has already been declared (and removed from the sets) that\n  // requirement will get added to the sets again and remain in the set after\n  // we are done (NOTE: we also ensure that a service is not declared twice so\n  // that it cannot be removed twice from the sets).\n  //\n  for (i \x3d fava.extension.manifests_.length - 1; i \x3e\x3d 0; --i) {\n    m \x3d fava.extension.manifests_[i];\n\n    // We build the two sets of required services here for the two cases above.\n    // The first (initRequires) is only made up of service names in \x22requires\x22\n    // and the second (allRequires) is made up of service names in both\n    // \x22requires\x22 and \x22windowRequires\x22.\n    buildRequires(m.manifest.requires, initRequires);\n    buildRequires(m.manifest.requires, allRequires);\n    buildRequires(m.manifest.windowRequires, allRequires);\n\n    // We remove any services declared in \x22services\x22 from both sets\n    // (initRequires, allRequires) since they can satisfy requirements for\n    // both cases mentioned above. We then also remove any services declared in\n    // \x22windowServices\x22 but only from the second set (allRequires) since window\n    // services can only satisfy the requirements of the second set.\n    //\n    // Note that it is possible that a service declared in \x22windowServices\x22\n    // could be used to satisfy a requirement added to the second set\n    // (allRequires) as a result of a declaration in a \x22requires\x22 field.\n    // However, this scenario would cause an error because the first set\n    // (initRequires) would still have an unsatisfied requirement in it at the\n    // end.\n    removeRequires(m.manifest.services, initRequires);\n    removeRequires(m.manifest.services, allRequires);\n    removeRequires(m.manifest.windowServices, allRequires);\n\n    // As mentioned above, we also need to ensure that a service is not provided\n    // more than once so we build up a list of provided services so that we\n    // can later check this later.\n    buildProvides(m.manifest.services, allProvides);\n    buildProvides(m.manifest.windowServices, allProvides);\n\n    // Also keeping track of the services that are provided via services and\n    // windowServices so that we can differentiate between missing requires and\n    // requires provided of the wrong type.\n    buildProvides(m.manifest.services, initProvides);\n    buildProvides(m.manifest.windowServices, winProvides);\n  }\n\n  // Check to see if any service is provided more than once\n  goog.object.forEach(allProvides, function(num, id) {\n      if (num \x3e 1) {\n        errors.push(\x27Service \x27 + id + \x27 provided more than once.\x27);\n      }\n    });\n\n  /**\n   * Helper function that removes services that have already been registered\n   * from the set of services that we were expecting to be provided.\n   * @param {!Object\x3cstring,boolean\x3e} requiresList Set of services that were\n   *     not provided.\n   */\n  function removeExistingRequires(requiresList) {\n    var ids \x3d goog.object.getKeys(requiresList);\n    goog.array.forEach(ids, function(id) {\n        if (appContext.isLateRegistered(id)) {\n          delete requiresList[id];\n        }\n      });\n  }\n\n  // Check for services that are already registered with the appContext. Since\n  // an application could choose to register services outside of this mechanism.\n  removeExistingRequires(initRequires);\n  removeExistingRequires(allRequires);\n\n  if (!goog.object.isEmpty(initRequires) || !goog.object.isEmpty(allRequires)) {\n    // If there\x27s a cycle in the dependency graph, it will show up as\n    // some service being missing. We\x27d like to alert the developer to\n    // the cycle differently in that case, but we need to find the\n    // cycle first. First, clean the graph.\n    for (i \x3d fava.extension.manifests_.length - 1; i \x3e\x3d 0; --i) {\n      delete fava.extension.manifests_[i].visited;\n    }\n\n    // In visit(), we take advantage of the \x3d\x3d operator in the\n    // handling of the \x27visited\x27 property of the manifest holder, which\n    // takes on three values:\n    // - undefined \x3d not processed / seen\n    // - false \x3d currently processing\n    // - true \x3d have processed the manifest and its children.\n    var path \x3d [];\n\n    var visit \x3d function(m) {\n      if (m.visited) {\n        return;\n      }\n\n      if (m.visited \x3d\x3d false) {\n        // undefined !\x3d false, so this means we\x27ve come back\n        // to a manifest we\x27ve seen higher up.\n        var err \x3d [];\n\n        for (j \x3d path.length - 1; j \x3e\x3d 0; --j) {\n          err.unshift(goog.debug.deepExpose(path[j]));\n          if (path[j] \x3d\x3d m) {\n            break;\n          }\n        }\n        errors.push(\x27Cycle detected: \x27 +\n                    err.join(\x27\\n\\nrequires services from:\\n\x27));\n      } else {\n        m.visited \x3d false;\n        if (m.depends) {\n          path.push(m);\n          goog.array.forEach(m.depends.getValues(), visit);\n          path.pop();\n        }\n        m.visited \x3d true;\n      }\n    };\n\n    // Walk the graph.\n    for (i \x3d 0; i \x3c fava.extension.manifests_.length; ++i) {\n      m \x3d fava.extension.manifests_[i];\n\n      if (!m.visited) {\n        visit(m);\n      }\n    }\n\n    /**\n     * Helper function that will take a list of required services and check if\n     * they are missing and report what extension they were required in.\n     * @param {(undefined|Array\x3cstring\x3e)} requiresList The list of required\n     *     services.\n     * @param {fava.extension.Manifest} manifest The manifest that was\n     *     potentially incoming.\n     * @param {!Object\x3cstring,boolean\x3e} missingRequires The requires that have\n     *     not been provided.\n     * @param {Array\x3cfava.extension.Manifest\x3e} manifestErrors The manifests\n     *     that contain errors.\n     */\n    var checkForMissing \x3d function(requiresList, manifest, missingRequires,\n        manifestErrors) {\n      if (requiresList) {\n        for (var i \x3d requiresList.length; i \x3e\x3d 0; --i) {\n          if (goog.object.containsKey(missingRequires, requiresList[i])) {\n            manifestErrors.push(manifest);\n            break;\n          }\n        }\n      }\n    };\n\n    // Tell the developer about the services that are missing.\n    var requirers \x3d goog.array.reduce(fava.extension.manifests_,\n        /**\n         * @param {!Array\x3c!fava.extension.Manifest\x3e} r\n         * @param {!fava.extension.ManifestHolder} mh\n         * @return {!Array\x3c!fava.extension.Manifest\x3e}\n         */\n        function(r, mh) {\n          checkForMissing(mh.manifest.requires, mh.manifest,\n              initRequires, r);\n          checkForMissing(mh.manifest.windowRequires, mh.manifest,\n              allRequires, r);\n          return r;\n        }, []);\n\n\n    // Missing init services\n    var missingInitServices \x3d goog.object.getKeys(initRequires);\n    // Missing window services\n    var missingWindowServices \x3d goog.array.filter(\n        goog.object.getKeys(allRequires),\n        function(id) {\n          return !initRequires[id];\n        });\n    // Required services that are provided but still in the requires set.\n    var providedButIncorrect \x3d goog.array.filter(\n        goog.object.getKeys(allRequires),\n        function(id) {\n          return !!allProvides[id];\n        });\n    // Required service in a requires tag that are provided by a windowService.\n    var providedAsWindowServices \x3d goog.array.filter(\n        goog.object.getKeys(initRequires),\n        function(id) {\n          return !!winProvides[id];\n        });\n\n    errors.push(\n        \x27Missing required services:\x27 +\n        (missingInitServices.length ?\n            (\x27\\n\\tinit services: \x27 + missingInitServices.join(\x27, \x27)) : \x27\x27) +\n        (missingWindowServices.length ?\n            (\x27\\n\\twindow services: \x27 + missingWindowServices.join(\x27, \x27)) : \x27\x27) +\n        (providedAsWindowServices.length ?\n            (\x27\\nThe following are provided as window services, but required \x27 +\n            \x27as init services: \x27 +\n            providedAsWindowServices.join(\x27, \x27)) : \x27\x27) +\n        (providedButIncorrect.length ?\n            (\x27\\nThe following are provided but in the wrong order?: \x27 +\n            providedButIncorrect.join(\x27, \x27)) : \x27\x27) +\n        \x27\\nReferencing extensions:\\n\x27 +\n        goog.array.map(requirers,\n            function(obj) { return goog.debug.deepExpose(obj); })\n              .join(\x27\\n\\n\x27));\n  }\n\n  goog.asserts.assert(errors.length \x3d\x3d 0, errors.join(\x27\\n\x27));\n};\n\n\n/**\n * Forms the manifests into a graph and sort them topologically. The result\n * is the manifests array is ordered so that any extension that depends on\n * services in another extension comes after the other extension in the\n * array. We deal with cycles in validate_.\n * @private\n */\nfava.extension.topoSort_ \x3d function() {\n  // First, construct the graph. We could do the result construction\n  // at the same time, but (1) we need the graph to print out cycle\n  // information, and (2) it\x27s more understandable to keep the two separate.\n  var provides \x3d {}, i, j;\n\n  // Compute a map of services -\x3e manifest holders so we can establish\n  // the dependencies quickly. We don\x27t care about duplicate providers at\n  // this point -- that\x27s handled in validate_.\n  for (i \x3d fava.extension.manifests_.length - 1; i \x3e\x3d 0; --i) {\n    var mh \x3d fava.extension.manifests_[i];\n\n    if (mh.manifest.services) {\n      var svcs \x3d mh.manifest.services;\n      for (j \x3d svcs.length - 1; j \x3e\x3d 0; --j) {\n        provides[svcs[j].id] \x3d mh;\n      }\n    }\n\n    if (mh.manifest.windowServices) {\n      var svcs \x3d mh.manifest.windowServices;\n      for (j \x3d svcs.length - 1; j \x3e\x3d 0; --j) {\n        provides[svcs[j].id] \x3d mh;\n      }\n    }\n  }\n\n  // Now establish the set of manifests on which each one depends.\n  for (i \x3d fava.extension.manifests_.length - 1; i \x3e\x3d 0; --i) {\n    var mh \x3d fava.extension.manifests_[i];\n    var m \x3d mh.manifest;\n\n    if (m.requires) {\n      mh.depends \x3d new goog.structs.Set();\n      for (j \x3d m.requires.length - 1; j \x3e\x3d 0; --j) {\n        var provider \x3d provides[m.requires[j]];\n        if (provider) {\n          mh.depends.add(provider);\n        }\n      }\n    }\n\n    if (m.windowRequires) {\n      if (!mh.depends) {\n        mh.depends \x3d new goog.structs.Set();\n      }\n      for (j \x3d m.windowRequires.length - 1; j \x3e\x3d 0; --j) {\n        var provider \x3d provides[m.windowRequires[j]];\n        if (provider) {\n          mh.depends.add(provider);\n        }\n      }\n    }\n  }\n\n  /**\n   * @type {Array\x3cfava.extension.ManifestHolder\x3e}\n   */\n  var result \x3d [];\n\n  /**\n   * @param {fava.extension.ManifestHolder} mh Extension to visit.\n   */\n  function visit(mh) {\n    if (mh.visited) {\n      return;\n    }\n    // Set visited now so we short-circuit any cycles.\n    mh.visited \x3d true;\n    if (mh.depends) {\n      goog.array.forEach(mh.depends.getValues(), visit);\n    }\n    result.push(mh);\n  }\n  goog.array.forEach(fava.extension.manifests_, visit);\n  fava.extension.manifests_ \x3d result;\n};\n\n\n\n/**\n * Initializes all registered extensions.  Once called new extensions will not\n * be allowed to register.  This should be called from the application startup\n * code.\n *\n * @param {!fava.AppContext} appContext Application context.\n */\nfava.extension.initialize \x3d function(appContext) {\n  if (!fava.extension.initialized_) {\n    fava.extension.topoSort_();\n\n    if (goog.DEBUG) {\n      fava.extension.validate_(appContext);\n    }\n\n    // Register all the services that need registering.\n\n    for (var i \x3d 0; i \x3c fava.extension.manifests_.length; ++i) {\n      var m \x3d fava.extension.manifests_[i].manifest;\n\n      if (m.services) {\n        fava.extension.registerServices(appContext, m.services);\n      }\n\n      // Configure each extension immediately after its services are\n      // registered.\n      if (m.configure) {\n        m.configure(appContext);\n      }\n    }\n\n    // Call the initialization functions for each extension first, as we\n    // expect they\x27re part of building up the environment.\n\n    for (i \x3d 0; i \x3c fava.extension.manifests_.length; ++i) {\n      var m \x3d fava.extension.manifests_[i];\n\n      if (m.manifest.initialize) {\n        m.manifest.initialize(appContext);\n      }\n    }\n\n    // Now call any independent initialization functions.\n\n    for (i \x3d 0; i \x3c fava.extension.initializationHooks_.length; ++i) {\n      fava.extension.initializationHooks_[i](appContext);\n    }\n\n    fava.extension.initialized_ \x3d true;\n  }\n};\n\n\n/**\n * Registers a list of services on the given application context.\n * The services are registered in the order of the array.\n *\n * @param {!fava.AppContext} appContext The context on which to register\n *     the services.\n * @param {!Array\x3c!fava.extension.ServiceDefinition\x3e|Arguments} services The\n *     list of services to register. (Arguments type is only valid for\n *     functions that take only ...!fava.extension.ServiceDefinition.\n *     or ...!Object).\n */\nfava.extension.registerServices \x3d function(appContext, services) {\n  for (var j \x3d 0; j \x3c services.length; ++j) {\n    var svc \x3d services[j];\n\n    // If the service was in the initial download, it may already\n    // be registered\n    if (appContext.isRegistered(svc.id)) {\n      continue;\n    }\n\n    // TODO(adeboor): come up with a better way to deal with window-\n    // specific services\n    goog.asserts.assert(svc.ctor || svc.callback || svc.module || svc.later,\n        \x27missing service definition for %s\x27, svc.id);\n    if (svc.later) {\n      continue;\n    } else if (svc.module) {\n      appContext.registerLateService(svc.id, svc.module);\n    } else if (svc.multiple) {\n      appContext.registerServiceFactory(svc.id,\n          svc.callback || goog.partial(goog.functions.create, svc.ctor));\n    } else {\n      appContext.registerService(svc.id,\n          svc.callback ? svc.callback(appContext) : new svc.ctor(appContext));\n    }\n  }\n};\n\n\n/**\n * Registers a list of services when the module currently loading is\n * initialized. Services are registered on the global application context.\n *\n * @param {...!Object} var_args The services to\n *     register.\n */\nfava.extension.registerServicesOnInit \x3d function(var_args) {\n  var services \x3d arguments;\n  if (!goog.DISALLOW_TEST_ONLY_CODE) {\n    goog.array.forEach(services, function(service) {\n      fava.extension.servicesRegisteredOnInit_.push(service);\n    });\n  }\n  goog.module.ModuleManager.getInstance().registerInitializationCallback(\n      /** @param {!fava.AppContext} appContext */\n      function(appContext) {\n        fava.extension.registerServices(appContext, services);\n      });\n};\n\n\n/**\n * Factory for late object creation. When a class registers with\n * {@see fava.extension.registerFactoriesOnInit} an instance of this\n * factory is returned to the goog.async.Deferred callback via\n * {@see fava.AppContext.getAsync}.\n * Calling create() will return an instance of the class.\n * The create function takes any number of arguments along the AppContext.\n *\n * @typedef {{create: function(!fava.AppContext, ...): Object}}\n */\nfava.extension.FactoryService;\n\n\n/**\n * Definition of the association between a service ID and an object\n * constructor. This association is provided to\n * {@see fava.extension.registerFactoriesOnInit} to create a\n * {@see fava.extension.FactoryService} that allows for late\n * creation of the class.\n *\n * @typedef {{\n *    id: (!fava.services.ServiceId|string),\n *    ctor: function(!fava.AppContext, ...)\n * }}\n */\nfava.extension.FactoryConfig;\n\n\n/**\n * Registers a set of factory services that create objects of a specified\n * class. These services all implement the create() method of\n * {@see fava.extension.FactoryService} to create an instance.\n *\n * @param {...!fava.extension.FactoryConfig} var_arg\n *      FactoryConfig list.\n */\nfava.extension.registerFactoriesOnInit \x3d function(var_arg) {\n  var factoryConfigs \x3d arguments;\n  // create a list of factories to be registered with the ModuleManager\n  var factories \x3d [];\n  for (var i \x3d 0; i \x3c factoryConfigs.length; i++) {\n    addFactory(factoryConfigs[i]);\n  }\n\n  // closure for the config instance correctly outside of the loop\n  function addFactory(factoryConfig) {\n    goog.asserts.assert(factoryConfig.ctor,\n        \x27service %s must specify a ctor property\x27, factoryConfig.id);\n    factories.push(/** @type {fava.extension.FactoryService} */ ({\n      create: function(appContext) {\n        var newArgs \x3d Array.prototype.slice.call(arguments);\n        newArgs.unshift(factoryConfig.ctor);\n        return goog.functions.create.apply(null, newArgs);\n      }\n    }));\n  }\n\n  goog.module.ModuleManager.getInstance().registerInitializationCallback(\n      /** @param {!fava.AppContext} appContext current AppContext instance. */\n      function(appContext) {\n        for (var i \x3d 0; i \x3c factories.length; i++) {\n          // directly register the factory with the appContext\n          // as there are no options to consider. The factory\n          // contains a reference to the ctor.\n          appContext.registerService(factoryConfigs[i].id,\n              factories[i]);\n        }\n      });\n};\n\n\nif (!goog.DISALLOW_TEST_ONLY_CODE) {\n  /**\n   * Disposes all the extensions and resets the list of constructors.\n   * Intended for tests.\n   * @param {!fava.AppContext} appContext\n   */\n  fava.extension.reset \x3d function(appContext) {\n    fava.extension.manifests_.length \x3d\n        fava.extension.servicesRegisteredOnInit_.length \x3d\n            fava.extension.initializationHooks_.length \x3d 0;\n    fava.extension.initialized_ \x3d false;\n  };\n\n\n  /**\n   * Re-initializes existing extensions with a new appContext.\n   *\n   * Intended for tests: Within a test file, extensions and services have global\n   * state and therefore they don\x27t work across test methods so this exists to\n   * allow different test methods to reset the application state.\n   *\n   * If you do not make use of a ModuleManager and don\x27t call\n   * fava.extension.initialize manually, simply use this method in your tests\u2019\n   * setUp function.\n   *\n   * @param {!fava.AppContext} appContext\n   */\n  fava.extension.reinit \x3d function(appContext) {\n    fava.extension.initialized_ \x3d false;\n    goog.array.forEach(fava.extension.manifests_, function(mh) {\n      mh.visited \x3d false;\n    });\n    fava.extension.initialize(appContext);\n    fava.extension.registerServices(appContext,\n                                    fava.extension.servicesRegisteredOnInit_);\n  };\n}\n\n\n/**\n * Registers a function to be called once all services have been registered.\n * Functions are called in registration order.\n *\n * @param {function(!fava.AppContext): void} callback The function to call.\n */\nfava.extension.registerInitializationCallback \x3d function(callback) {\n  goog.asserts.assert(\n      !fava.extension.initialized_,\n      \x27Cannot register initialization hook after initialization.\x27);\n  fava.extension.initializationHooks_.push(callback);\n};\n\n\n/**\n * Iterates over all the registered extensions.\n *\n * @param {function(this: T, !fava.extension.Manifest, number\x3d): void} callback\n *     The callback function. The number is the 0-origin index.\n * @param {T\x3d} opt_scope The value to bind to \x22this\x22 when calling the\n *     callback.\n * @template T\n */\nfava.extension.forEach \x3d function(callback, opt_scope) {\n  var scope \x3d opt_scope || null;\n  for (var i \x3d 0; i \x3c fava.extension.manifests_.length; ++i) {\n    callback.call(scope, fava.extension.manifests_[i].manifest, i);\n  }\n};\n\n\n\n/**\n * An error class thrown when extensions are illegally registered.\n * @param {fava.extension.Manifest} manifest The extension\x27s manifest.\n * @extends {goog.debug.Error}\n * @constructor\n * @final\n * @struct\n */\nfava.extension.RegistrationError \x3d function(manifest) {\n  goog.debug.Error.call(this);\n\n  /**\n   * A reference to the manifest of the extension that was registered\n   * illegally.  For debugging.\n   * @type {fava.extension.Manifest}\n   */\n  this.manifest \x3d manifest;\n\n  var services \x3d manifest.services ?\n      goog.array.map(\n          manifest.services, function(m) { return m.id; }).join(\x27, \x27) :\n      \x27none\x27;\n\n  /**\n   * Message text.\n   * @type {string}\n   * @override\n   */\n  this.message \x3d \x27Extension registered after application initialization \x27 +\n      \x27 adding these services: \x27 + services;\n};\ngoog.inherits(fava.extension.RegistrationError, goog.debug.Error);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/extension/extension.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/cssom/cssom.js";
eval("// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview CSS Object Model helper functions.\n * References:\n * - W3C: http://dev.w3.org/csswg/cssom/\n * - MSDN: http://msdn.microsoft.com/en-us/library/ms531209(VS.85).aspx.\n * TODO(elsigh): Consider hacking page, media, etc.. to work.\n *     This would be pretty challenging. IE returns the text for any rule\n *     regardless of whether or not the media is correct or not. Firefox at\n *     least supports CSSRule.type to figure out if it\x27s a media type and then\n *     we could do something interesting, but IE offers no way for us to tell.\n * @author elsigh@google.com (Lindsey Simon)\n */\n\ngoog.provide(\x27goog.cssom\x27);\ngoog.provide(\x27goog.cssom.CssRuleType\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.TagName\x27);\n\n\n/**\n * Enumeration of `CSSRule` types.\n * @enum {number}\n */\ngoog.cssom.CssRuleType \x3d {\n  STYLE: 1,\n  IMPORT: 3,\n  MEDIA: 4,\n  FONT_FACE: 5,\n  PAGE: 6,\n  NAMESPACE: 7\n};\n\n\n/**\n * Recursively gets all CSS as text, optionally starting from a given\n * StyleSheet.\n * @param {(StyleSheet|StyleSheetList)\x3d} opt_styleSheet\n * @return {string} css text.\n */\ngoog.cssom.getAllCssText \x3d function(opt_styleSheet) {\n  var styleSheet \x3d opt_styleSheet || document.styleSheets;\n  return /** @type {string} */ (goog.cssom.getAllCss_(styleSheet, true));\n};\n\n\n/**\n * Recursively gets all CSSStyleRules, optionally starting from a given\n * StyleSheet.\n * Note that this excludes any CSSImportRules, CSSMediaRules, etc..\n * @param {(StyleSheet|StyleSheetList)\x3d} opt_styleSheet\n * @return {!Array\x3cCSSStyleRule\x3e} A list of CSSStyleRules.\n */\ngoog.cssom.getAllCssStyleRules \x3d function(opt_styleSheet) {\n  var styleSheet \x3d opt_styleSheet || document.styleSheets;\n  return /** @type {!Array\x3cCSSStyleRule\x3e} */ (\n      goog.cssom.getAllCss_(styleSheet, false));\n};\n\n\n/**\n * Returns the CSSRules from a styleSheet.\n * Worth noting here is that IE and FF differ in terms of what they will return.\n * Firefox will return styleSheet.cssRules, which includes ImportRules and\n * anything which implements the CSSRules interface. IE returns simply a list of\n * CSSRules.\n * @param {StyleSheet} styleSheet\n * @throws {Error} If we cannot access the rules on a stylesheet object - this\n *     can  happen if a stylesheet object\x27s rules are accessed before the rules\n *     have been downloaded and parsed and are \x22ready\x22.\n * @return {CSSRuleList} An array of CSSRules or null.\n */\ngoog.cssom.getCssRulesFromStyleSheet \x3d function(styleSheet) {\n  var cssRuleList \x3d null;\n  try {\n    // Select cssRules unless it isn\x27t present.  For pre-IE9 IE, use the rules\n    // collection instead.\n    // It\x27s important to be consistent in using only the W3C or IE apis on\n    // IE9+ where both are present to ensure that there is no indexing\n    // mismatches - the collections are subtly different in what the include or\n    // exclude which can lead to one collection being longer than the other\n    // depending on the page\x27s construction.\n    cssRuleList \x3d styleSheet.cssRules /* W3C */ || styleSheet.rules /* IE */;\n  } catch (e) {\n    // This can happen if we try to access the CSSOM before it\x27s \x22ready\x22.\n    if (e.code \x3d\x3d 15) {\n      // Firefox throws an NS_ERROR_DOM_INVALID_ACCESS_ERR error if a stylesheet\n      // is read before it has been fully parsed. Let the caller know which\n      // stylesheet failed.\n      e.styleSheet \x3d styleSheet;\n      throw e;\n    }\n  }\n  return cssRuleList;\n};\n\n\n/**\n * Gets all StyleSheet objects starting from some StyleSheet. Note that we\n * want to return the sheets in the order of the cascade, therefore if we\n * encounter an import, we will splice that StyleSheet object in front of\n * the StyleSheet that contains it in the returned array of StyleSheets.\n * @param {(StyleSheet|StyleSheetList)\x3d} opt_styleSheet A StyleSheet.\n * @param {boolean\x3d} opt_includeDisabled If true, includes disabled stylesheets,\n *    defaults to false.\n * @return {!Array\x3cStyleSheet\x3e} A list of StyleSheet objects.\n */\ngoog.cssom.getAllCssStyleSheets \x3d function(\n    opt_styleSheet, opt_includeDisabled) {\n  var styleSheetsOutput \x3d [];\n  var styleSheet \x3d opt_styleSheet || document.styleSheets;\n  var includeDisabled \x3d\n      goog.isDef(opt_includeDisabled) ? opt_includeDisabled : false;\n\n  // Imports need to go first.\n  if (styleSheet.imports \x26\x26 styleSheet.imports.length) {\n    for (var i \x3d 0, n \x3d styleSheet.imports.length; i \x3c n; i++) {\n      goog.array.extend(\n          styleSheetsOutput,\n          goog.cssom.getAllCssStyleSheets(styleSheet.imports[i]));\n    }\n\n  } else if (styleSheet.length) {\n    // In case we get a StyleSheetList object.\n    // http://dev.w3.org/csswg/cssom/#the-stylesheetlist\n    for (var i \x3d 0, n \x3d styleSheet.length; i \x3c n; i++) {\n      goog.array.extend(\n          styleSheetsOutput,\n          goog.cssom.getAllCssStyleSheets(\n              /** @type {!StyleSheet} */ (styleSheet[i])));\n    }\n  } else {\n    // We need to walk through rules in browsers which implement .cssRules\n    // to see if there are styleSheets buried in there.\n    // If we have a StyleSheet within CssRules.\n    var cssRuleList \x3d goog.cssom.getCssRulesFromStyleSheet(\n        /** @type {!StyleSheet} */ (styleSheet));\n    if (cssRuleList \x26\x26 cssRuleList.length) {\n      // Chrome does not evaluate cssRuleList[i] to undefined when i \x3e\x3dn;\n      // so we use a (i \x3c n) check instead of cssRuleList[i] in the loop below\n      // and in other places where we iterate over a rules list.\n      // See issue # 5917 in Chromium.\n      for (var i \x3d 0, n \x3d cssRuleList.length, cssRule; i \x3c n; i++) {\n        cssRule \x3d cssRuleList[i];\n        // There are more stylesheets to get on this object..\n        if (cssRule.styleSheet) {\n          goog.array.extend(\n              styleSheetsOutput,\n              goog.cssom.getAllCssStyleSheets(cssRule.styleSheet));\n        }\n      }\n    }\n  }\n\n  // This is a StyleSheet. (IE uses .rules, W3c and Opera cssRules.)\n  if ((styleSheet.type || styleSheet.rules || styleSheet.cssRules) \x26\x26\n      (!styleSheet.disabled || includeDisabled)) {\n    styleSheetsOutput.push(styleSheet);\n  }\n\n  return styleSheetsOutput;\n};\n\n\n/**\n * Gets the cssText from a CSSRule object cross-browserly.\n * @param {CSSRule} cssRule A CSSRule.\n * @return {string} cssText The text for the rule, including the selector.\n */\ngoog.cssom.getCssTextFromCssRule \x3d function(cssRule) {\n  var cssText \x3d \x27\x27;\n\n  if (cssRule.cssText) {\n    // W3C.\n    cssText \x3d cssRule.cssText;\n  } else if (cssRule.style \x26\x26 cssRule.style.cssText \x26\x26 cssRule.selectorText) {\n    // IE: The spacing here is intended to make the result consistent with\n    // FF and Webkit.\n    // We also remove the special properties that we may have added in\n    // getAllCssStyleRules since IE includes those in the cssText.\n    var styleCssText \x3d\n        cssRule.style.cssText\n            .replace(/\\s*-closure-parent-stylesheet:\\s*\\[object\\];?\\s*/gi, \x27\x27)\n            .replace(/\\s*-closure-rule-index:\\s*[\\d]+;?\\s*/gi, \x27\x27);\n    var thisCssText \x3d cssRule.selectorText + \x27 { \x27 + styleCssText + \x27 }\x27;\n    cssText \x3d thisCssText;\n  }\n\n  return cssText;\n};\n\n\n/**\n * Get the index of the CSSRule in it\x27s StyleSheet.\n * @param {CSSRule} cssRule A CSSRule.\n * @param {StyleSheet\x3d} opt_parentStyleSheet A reference to the stylesheet\n *     object this cssRule belongs to.\n * @throws {Error} When we cannot get the parentStyleSheet.\n * @return {number} The index of the CSSRule, or -1.\n */\ngoog.cssom.getCssRuleIndexInParentStyleSheet \x3d function(\n    cssRule, opt_parentStyleSheet) {\n  // Look for our special style.ruleIndex property from getAllCss.\n  if (cssRule.style \x26\x26 /** @type {!Object} */ (cssRule.style)[\x27-closure-rule-index\x27]) {\n    return (/** @type {!Object} */ (cssRule.style))[\x27-closure-rule-index\x27];\n  }\n\n  var parentStyleSheet \x3d\n      opt_parentStyleSheet || goog.cssom.getParentStyleSheet(cssRule);\n\n  if (!parentStyleSheet) {\n    // We could call getAllCssStyleRules() here to get our special indexes on\n    // the style object, but that seems like it could be wasteful.\n    throw new Error(\x27Cannot find a parentStyleSheet.\x27);\n  }\n\n  var cssRuleList \x3d goog.cssom.getCssRulesFromStyleSheet(parentStyleSheet);\n  if (cssRuleList \x26\x26 cssRuleList.length) {\n    for (var i \x3d 0, n \x3d cssRuleList.length, thisCssRule; i \x3c n; i++) {\n      thisCssRule \x3d cssRuleList[i];\n      if (thisCssRule \x3d\x3d cssRule) {\n        return i;\n      }\n    }\n  }\n  return -1;\n};\n\n\n/**\n * We do some trickery in getAllCssStyleRules that hacks this in for IE.\n * If the cssRule object isn\x27t coming from a result of that function call, this\n * method will return undefined in IE.\n * @param {CSSRule} cssRule The CSSRule.\n * @return {StyleSheet} A styleSheet object.\n */\ngoog.cssom.getParentStyleSheet \x3d function(cssRule) {\n  return cssRule.parentStyleSheet ||\n      cssRule.style \x26\x26\n      (/** @type {!Object} */ (cssRule.style))[\x27-closure-parent-stylesheet\x27];\n};\n\n\n/**\n * Replace a cssRule with some cssText for a new rule.\n * If the cssRule object is not one of objects returned by\n * getAllCssStyleRules, then you\x27ll need to provide both the styleSheet and\n * possibly the index, since we can\x27t infer them from the standard cssRule\n * object in IE. We do some trickery in getAllCssStyleRules to hack this in.\n * @param {CSSRule} cssRule A CSSRule.\n * @param {string} cssText The text for the new CSSRule.\n * @param {StyleSheet\x3d} opt_parentStyleSheet A reference to the stylesheet\n *     object this cssRule belongs to.\n * @param {number\x3d} opt_index The index of the cssRule in its parentStylesheet.\n * @throws {Error} If we cannot find a parentStyleSheet.\n * @throws {Error} If we cannot find a css rule index.\n */\ngoog.cssom.replaceCssRule \x3d function(\n    cssRule, cssText, opt_parentStyleSheet, opt_index) {\n  var parentStyleSheet \x3d\n      opt_parentStyleSheet || goog.cssom.getParentStyleSheet(cssRule);\n  if (parentStyleSheet) {\n    var index \x3d Number(opt_index) \x3e\x3d 0 ?\n        Number(opt_index) :\n        goog.cssom.getCssRuleIndexInParentStyleSheet(cssRule, parentStyleSheet);\n    if (index \x3e\x3d 0) {\n      goog.cssom.removeCssRule(parentStyleSheet, index);\n      goog.cssom.addCssRule(parentStyleSheet, cssText, index);\n    } else {\n      throw new Error(\x27Cannot proceed without the index of the cssRule.\x27);\n    }\n  } else {\n    throw new Error(\x27Cannot proceed without the parentStyleSheet.\x27);\n  }\n};\n\n\n/**\n * Cross browser function to add a CSSRule into a StyleSheet, optionally\n * at a given index.\n * @param {StyleSheet} cssStyleSheet The CSSRule\x27s parentStyleSheet.\n * @param {string} cssText The text for the new CSSRule.\n * @param {number\x3d} opt_index The index of the cssRule in its parentStylesheet.\n * @throws {Error} If the css rule text appears to be ill-formatted.\n * TODO(bowdidge): Inserting at index 0 fails on Firefox 2 and 3 with an\n *     exception warning \x22Node cannot be inserted at the specified point in\n *     the hierarchy.\x22\n */\ngoog.cssom.addCssRule \x3d function(cssStyleSheet, cssText, opt_index) {\n  var index \x3d opt_index;\n  if (index \x3d\x3d undefined || index \x3c 0) {\n    // If no index specified, insert at the end of the current list\n    // of rules.\n    var rules \x3d goog.cssom.getCssRulesFromStyleSheet(cssStyleSheet);\n    index \x3d rules.length;\n  }\n  if (cssStyleSheet.insertRule) {\n    // W3C (including IE9+).\n    cssStyleSheet.insertRule(cssText, index);\n\n  } else {\n    // IE, pre 9: We have to parse the cssRule text to get the selector\n    // separated from the style text.\n    // aka Everything that isn\x27t a colon, followed by a colon, then\n    // the rest is the style part.\n    var matches \x3d /^([^\\{]+)\\{([^\\{]+)\\}/.exec(cssText);\n    if (matches.length \x3d\x3d 3) {\n      var selector \x3d matches[1];\n      var style \x3d matches[2];\n      cssStyleSheet.addRule(selector, style, index);\n    } else {\n      throw new Error(\x27Your CSSRule appears to be ill-formatted.\x27);\n    }\n  }\n};\n\n\n/**\n * Cross browser function to remove a CSSRule in a StyleSheet at an index.\n * @param {StyleSheet} cssStyleSheet The CSSRule\x27s parentStyleSheet.\n * @param {number} index The CSSRule\x27s index in the parentStyleSheet.\n */\ngoog.cssom.removeCssRule \x3d function(cssStyleSheet, index) {\n  if (cssStyleSheet.deleteRule) {\n    // W3C.\n    cssStyleSheet.deleteRule(index);\n\n  } else {\n    // IE.\n    cssStyleSheet.removeRule(index);\n  }\n};\n\n\n/**\n * Appends a DOM node to HEAD containing the css text that\x27s passed in.\n * @param {string} cssText CSS to add to the end of the document.\n * @param {goog.dom.DomHelper\x3d} opt_domHelper Optional DOM helper user for\n *     document interactions.\n * @return {!Element} The newly created STYLE element.\n */\ngoog.cssom.addCssText \x3d function(cssText, opt_domHelper) {\n  var domHelper \x3d opt_domHelper || goog.dom.getDomHelper();\n  var document \x3d domHelper.getDocument();\n  var cssNode \x3d domHelper.createElement(goog.dom.TagName.STYLE);\n  cssNode.type \x3d \x27text/css\x27;\n  var head \x3d domHelper.getElementsByTagName(goog.dom.TagName.HEAD)[0];\n  head.appendChild(cssNode);\n  if (cssNode.styleSheet) {\n    // IE.\n    cssNode.styleSheet.cssText \x3d cssText;\n  } else {\n    // W3C.\n    var cssTextNode \x3d document.createTextNode(cssText);\n    cssNode.appendChild(cssTextNode);\n  }\n  return cssNode;\n};\n\n\n/**\n * Cross browser method to get the filename from the StyleSheet\x27s href.\n * Explorer only returns the filename in the href, while other agents return\n * the full path.\n * @param {!StyleSheet} styleSheet Any valid StyleSheet object with an href.\n * @throws {Error} When there\x27s no href property found.\n * @return {?string} filename The filename, or null if not an external\n *    styleSheet.\n */\ngoog.cssom.getFileNameFromStyleSheet \x3d function(styleSheet) {\n  var href \x3d styleSheet.href;\n\n  // Another IE/FF difference. IE returns an empty string, while FF and others\n  // return null for StyleSheets not from an external file.\n  if (!href) {\n    return null;\n  }\n\n  // We need the regexp to ensure we get the filename minus any query params.\n  var matches \x3d /([^\\/\\?]+)[^\\/]*$/.exec(href);\n  var filename \x3d matches[1];\n  return filename;\n};\n\n\n/**\n * Recursively gets all CSS text or rules.\n * @param {StyleSheet|StyleSheetList} styleSheet\n * @param {boolean} isTextOutput If true, output is cssText, otherwise cssRules.\n * @return {string|!Array\x3cCSSRule\x3e} cssText or cssRules.\n * @private\n */\ngoog.cssom.getAllCss_ \x3d function(styleSheet, isTextOutput) {\n  var cssOut \x3d [];\n  var styleSheets \x3d goog.cssom.getAllCssStyleSheets(styleSheet);\n\n  for (var i \x3d 0; styleSheet \x3d styleSheets[i]; i++) {\n    var cssRuleList \x3d goog.cssom.getCssRulesFromStyleSheet(styleSheet);\n\n    if (cssRuleList \x26\x26 cssRuleList.length) {\n      var ruleIndex \x3d 0;\n      for (var j \x3d 0, n \x3d cssRuleList.length, cssRule; j \x3c n; j++) {\n        cssRule \x3d cssRuleList[j];\n        // Gets cssText output, ignoring CSSImportRules.\n        if (isTextOutput \x26\x26 !cssRule.href) {\n          var res \x3d goog.cssom.getCssTextFromCssRule(cssRule);\n          cssOut.push(res);\n\n        } else if (!cssRule.href) {\n          // Gets cssRules output, ignoring CSSImportRules.\n          if (cssRule.style) {\n            // This is a fun little hack to get parentStyleSheet into the rule\n            // object for IE since it failed to implement rule.parentStyleSheet.\n            // We can later read this property when doing things like hunting\n            // for indexes in order to delete a given CSSRule.\n            // Unfortunately we have to use the style object to store these\n            // pieces of info since the rule object is read-only.\n            if (!cssRule.parentStyleSheet) {\n              (/** @type {!Object} */ (cssRule.style))[\n                \x27-closure-parent-stylesheet\x27] \x3d styleSheet;\n            }\n\n            // This is a hack to help with possible removal of the rule later,\n            // where we just append the rule\x27s index in its parentStyleSheet\n            // onto the style object as a property.\n            // Unfortunately we have to use the style object to store these\n            // pieces of info since the rule object is read-only.\n            (/** @type {!Object} */ (cssRule.style))[\x27-closure-rule-index\x27] \x3d\n                isTextOutput ? undefined : ruleIndex;\n          }\n          cssOut.push(cssRule);\n        }\n        if (!isTextOutput) {\n          ruleIndex++;\n        }\n      }\n    }\n  }\n  return isTextOutput ? cssOut.join(\x27 \x27) : cssOut;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/cssom/cssom.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/fava/modules/basecssloader.js";
goog.loadModule("// Copyright 2014 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Defines fava.modules.BaseCssLoader.\n *\n * BaseCssLoader installs given CSS response into a stylesheet. The CSS is\n * installed in every document found in appContext. If no DOM services are\n * found, then the CSS is installed in the current document. If the init()\n * method is called, _F_installCss function is exported, which is invoked to\n * install CSS if SCS returns a concatenated JS + CSS response.\n */\n\ngoog.module(\x27fava.modules.BaseCssLoader\x27);\ngoog.module.declareLegacyNamespace();\n\nconst AbstractModuleManager \x3d goog.require(\x27goog.loader.AbstractModuleManager\x27);\nconst DomHelper \x3d goog.require(\x27goog.dom.DomHelper\x27);\nconst favaServices \x3d goog.require(\x27fava.services\x27);\nconst googArray \x3d goog.require(\x27goog.array\x27);\nconst googCssom \x3d goog.require(\x27goog.cssom\x27);\nconst googLog \x3d goog.require(\x27goog.log\x27);\n\nclass BaseCssLoader {\n  /**\n   * @param {!AbstractModuleManager} moduleManager\n   */\n  constructor(moduleManager) {\n    /** @private @const {!AbstractModuleManager} */\n    this.moduleManager_ \x3d moduleManager;\n  }\n\n  /**\n   * Installs given CSS response into a stylesheet. The CSS is installed\n   * in every document found in appContext. If no DOM services are found,\n   * then the CSS is installed in the current document.\n   * @param {string} content\n   * @private\n   */\n  installCss_(content) {\n    // TODO(panicker): SCS response should omit the CSS if it\x27s non-existent\n    // for that module.\n    if (!content || content \x3d\x3d \x27sentinel{}\x27) {\n      return;\n    }\n    const appContext \x3d\n        /** @type {?fava.AppContext} */ (\n            this.moduleManager_.getModuleContext());\n\n    if (!appContext) {\n      BaseCssLoader.installCssInDocument_(content, document);\n      return;\n    }\n    const ownerDocuments \x3d BaseCssLoader.getAllDocuments_(appContext);\n\n    // If no documents are found via DOM services then use the current document.\n    if (ownerDocuments.length \x3d\x3d 0) {\n      BaseCssLoader.installCssInDocument_(content, document);\n    } else {\n      // If documents are found via DOM services, install CSS in every document.\n      for (let doc of ownerDocuments) {\n        BaseCssLoader.installCssInDocument_(content, doc);\n      }\n    }\n    // TODO(panicker): If necessary handle an iframe here, by using the\n    // parent document in that case.\n  };\n\n  /**\n   * Exports _F_installCss function that\x27s invoked if SCS returns a concatenated\n   * JS + CSS response.\n   * @public\n   */\n  init() {\n    goog.exportSymbol(\x27_F_installCss\x27, (/** @type {string} */ content) \x3d\x3e {\n      this.installCss_(content);\n    });\n  }\n\n  /**\n   * Installs given CSS response into a stylesheet in the given document.\n   * Exported in legacy namespace solely for the purpose of testing.\n   * @param {string} content\n   * @param {!Document} doc The document in which to install the stylesheet.\n   * @private\n   */\n  static installCssInDocument_(content, doc) {\n    const styleSheetLength \x3d doc.styleSheets.length;\n    const cssElement \x3d googCssom.addCssText(content, new DomHelper(doc));\n    cssElement.setAttribute(\x27data-late-css\x27, \x27\x27);\n    const logger \x3d googLog.getLogger(\x27fava.modules.BaseCssLoader.installCss_\x27);\n    if (doc.styleSheets.length !\x3d (styleSheetLength + 1)) {\n      googLog.error(logger, \x27Failed to install late loaded stylesheet.\x27);\n      return;\n    }\n    // Ensure that the stylesheet was parsed correctly by looking\n    // for the \x27sentinel\x27 in the stylesheet that we just added.\n    const ss \x3d googArray.find(doc.styleSheets, (styleSheet) \x3d\x3e {\n      const ownerNode \x3d styleSheet.ownerNode || styleSheet.owningElement;\n      return ownerNode \x3d\x3d cssElement;\n    });\n    const rules \x3d ss.cssRules || ss.rules;\n    if (!rules || rules.length \x3d\x3d 0 ||\n        rules[rules.length - 1].selectorText !\x3d \x27sentinel\x27) {\n      googLog.error(logger, \x27Error loading CSS, no sentinel found.\x27);\n    }\n  }\n\n  /**\n   * Returns all the documents reachable from appContext. Exported in legacy\n   * namespace solely for the purpose of testing.\n   * @param {!fava.AppContext} appContext\n   * @return {!Array\x3c!Document\x3e} Array of documents\n   * @private\n   */\n  static getAllDocuments_(appContext) {\n    const ownerDocuments \x3d googArray.map(\n        appContext.getAllServiceInstances(favaServices.DOM),\n        (/** @type {!fava.component.DomServices} */ service) \x3d\x3e\n            service.getOwnerDocument());\n    return ownerDocuments;\n  }\n}\n\nexports \x3d BaseCssLoader;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/fava/modules/basecssloader.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/bootstrap/bootstrapdispatcher.js";
eval("/**\n * @fileoverview Provides a function to bootstrap a wiz.Dispatcher and\n * and associated objects.\n * This file is meant to be included into the main binary.\n * @see tm.setupJsAction for example usage.\n */\n\ngoog.provide(\x27wiz.bootstrapDispatcher\x27);\n\ngoog.require(\x27jsaction.ActionLogger\x27);\ngoog.require(\x27wiz.Dispatcher\x27);\ngoog.require(\x27wiz.Manager\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\n/**\n * @suppress {extraRequire} Registers the service IDs for Wiz objects.\n */\ngoog.require(\x27wiz.inject.Registry\x27);\n\n\n/**\n * Instantiate the wiz.Dispatcher and associated objects and bind the to the\n * jsaction.EventContract.\n * @param {?Object} bootstrapContractExport The object exported by\n *     wiz.controller.bootstrapContract(\u2026).\n * @param {!Document} doc The HTML document to bind to.\n * @param {!fava.AppContext\x3d} opt_appContext The app context.\n * @param {function(jsaction.EventInfo):?jsaction.ActionFlow\x3d} opt_flowFactory\n * @param {function(!jsaction.ActionFlow)\x3d} opt_namespaceHandler\n * @param {boolean\x3d} opt_skipDirtyCall If true, manager.dirty() will not be\n *     called and instead should be called by the caller of bootstrapDispatcher.\n * @param {!jsaction.ActionLogger\x3d} opt_actionLogger a logger to log action\n *     dispatches.\n * @return {!wiz.Dispatcher} The newly created wiz.Dispatcher.\n */\nwiz.bootstrapDispatcher \x3d function(\n    bootstrapContractExport, doc, opt_appContext, opt_flowFactory,\n    opt_namespaceHandler, opt_skipDirtyCall, opt_actionLogger) {\n  // Get functions initialized in wiz.controller.bootstrapContract which might\n  // have been defined in a separate compilation unit, so we use string\n  // names to refer to the symbols.\n  var triggerCustomEvent \x3d bootstrapContractExport[\x27trigger\x27];\n  var bindContract \x3d bootstrapContractExport[\x27bind\x27];\n\n  // Setup wiz.Dispatcher and associated objects.\n  var manager \x3d new wiz.Manager(doc, opt_appContext);\n  var dispatcher \x3d new wiz.Dispatcher(\n      triggerCustomEvent, manager, opt_appContext, opt_flowFactory,\n      opt_namespaceHandler, opt_actionLogger);\n\n  // If there is an appContext, tap into the fava clean up sequence.\n  // Otherwise, the manager will clean itself on unload.\n  if (opt_appContext) {\n    wiz.inject.Injector.getInstance().setAppContext(opt_appContext);\n    opt_appContext.registerDisposable(manager);\n  }\n\n  // Bind the dispatch method of the jsaction Dispatcher to the contract.\n  // This in turn calls the wiz.Dispatcher, going full circle :)\n  var jsActionDispatcher \x3d dispatcher.getJsActionDispatcher();\n  bindContract(goog.bind(jsActionDispatcher.dispatch, jsActionDispatcher));\n\n  if (!opt_skipDirtyCall) {\n    manager.dirty();\n  }\n  return dispatcher;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/bootstrap/bootstrapdispatcher.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/frameworks/client/data/rpcerror.js";
goog.loadModule("goog.module(\x27frameworks.client.data.RpcError\x27);\ngoog.module.declareLegacyNamespace();\n\nvar Error \x3d goog.require(\x27goog.debug.Error\x27);\nvar Status \x3d goog.require(\x27proto.google.rpc.Status\x27);\n\n\n/**\n * A wrapper around application error status.\n * This class exists so we can pass the payload to callbacks that\n * require an object that inherits from the javascript Error type.\n * e.g. Promise errback require a input of type Error.\n * @param {!Status} status\n * @constructor\n * @extends {Error}\n */\nvar RpcError \x3d function(status) {\n  RpcError.base(this, \x27constructor\x27, status.getMessage());\n  // These errors have already been reported on the server, so there is no need\n  // to also send a JS error report to the server with the same message.\n  this.reportErrorToServer \x3d false;\n\n  /** @const @type {!Status} */\n  this.status \x3d status;\n};\ngoog.inherits(RpcError, Error);\n\n\n/** @override */\nRpcError.prototype.name \x3d \x27RpcError\x27;\n\nexports \x3d RpcError;\n\n//# sourceURL\x3dhttps://qs/javascript/frameworks/client/data/rpcerror.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/postprocessor.js";
goog.loadModule("/**\n * @fileoverview Post-processes a promise for a particular data fetch response.\n */\ngoog.module(\x27wiz.data.clients.postprocessor\x27);\ngoog.module.declareLegacyNamespace();\n\nconst Code \x3d goog.require(\x27proto.google.rpc.Code\x27);\nconst GoogPromise \x3d goog.require(\x27goog.Promise\x27);\nconst GoogTimer \x3d goog.require(\x27goog.Timer\x27);\nconst RpcError \x3d goog.require(\x27frameworks.client.data.RpcError\x27);\nconst Status \x3d goog.require(\x27proto.google.rpc.Status\x27);\nconst googArray \x3d goog.require(\x27goog.array\x27);\nconst types \x3d goog.require(\x27wiz.data.types\x27);\n\n\nvar postprocessor \x3d {};\n\n/**\n * It is important that process errors comes first. That way, if an error\n * fails but is expected, it turns into a Status that succeeds.\n * @const {!Array\x3cfunction(!types.UberDataRequest,\n * !GoogPromise):!GoogPromise\x3e}\n */\nvar postProcessors \x3d\n    [deadLineMillisProcessor, processErrors, nonFatalProcessor];\n\n\n/**\n * Registers an additonal post processor. For every data request/response pair,\n * this function will be called with those parameters.\n * @param {!function(!types.UberDataRequest, !GoogPromise):!GoogPromise} fn\n */\npostprocessor.registerPostProcessor \x3d function(fn) {\n  postProcessors.push(fn);\n};\n\n\n// TODO(jatraman): Remove these methods that deal with both Wiz and AF Data\n// requests. This class should only deal with Wiz data requests. AF Data Service\n// should probably have methods that know how to handle Wiz data requests.\n/**\n * Checks if the provided AF data or Wiz data request should bubble a failure to\n * fetch the response.\n * @param {Object|null|string} oneRequest\n * @return {!xid.String|undefined} experiment flag, if one is found.\n */\nfunction isNonFatal(oneRequest) {\n  var nonfatal \x3d oneRequest.nonFatal;\n  if (types.isDataRequest(oneRequest)) {\n    nonfatal \x3d oneRequest.metadata ?\n        !oneRequest.metadata.fatal :\n        undefined;\n  }\n  return nonfatal;\n}\n\n\n/**\n * Retrieves operation deadline, in milliseconds, from the provided AF data or\n * Wiz data request.\n * @param {Object|null|string} oneRequest\n * @return {!number|undefined} deadline in ms, if one is found.\n */\nfunction getDeadlineMillis(oneRequest) {\n  var deadlineMillis \x3d oneRequest.deadlineMillis;\n  if (types.isDataRequest(oneRequest)) {\n    deadlineMillis \x3d oneRequest.metadata ?\n        oneRequest.metadata.deadlineMillis :\n        undefined;\n  }\n  return deadlineMillis;\n}\n\n\n/**\n * @param {!types.UberDataRequest} request\n * @param {!GoogPromise} responsePromise\n * @return {!GoogPromise}\n */\nfunction deadLineMillisProcessor(request, responsePromise) {\n  var deadlineMillis \x3d getDeadlineMillis(request);\n  if (deadlineMillis \x3e -1) {\n    return GoogPromise.race([\n      responsePromise,\n      GoogTimer.promise(deadlineMillis, new GoogPromise((resolve, reject) \x3d\x3e {\n        resolve(null);\n        request.metadata.hasTimedOut \x3d true;\n      }))\n    ]);\n  }\n  return responsePromise;\n}\n\n\n/**\n * @param {!types.UberDataRequest} request\n * @param {!GoogPromise} responsePromise\n * @return {!GoogPromise}\n */\nfunction nonFatalProcessor(request, responsePromise) {\n  if (isNonFatal(request)) {\n    return responsePromise.thenCatch(function(e) {\n      return GoogPromise.resolve(null);\n    });\n  }\n  return responsePromise;\n}\n\n/**\n * If the data request is a normal Wiz data request and it is flagged\n * to retrieve errors and the caught error is an RpcError, then extract the\n * status proto and propagate forward.\n * @param {!types.UberDataRequest} request\n * @param {!GoogPromise} responsePromise\n * @return {!GoogPromise}\n */\nfunction processErrors(request, responsePromise) {\n  if (!types.isDataRequest(request) || !request.metadata ||\n      !request.metadata.retrieveError) {\n    return responsePromise;\n  }\n  return responsePromise.then(\n      response \x3d\x3e {\n        if (!response \x26\x26 request.metadata \x26\x26 request.metadata.hasTimedOut) {\n          const status \x3d new Status();\n          status.setCode(Code.UNKNOWN);\n          return status;\n        }\n        return null;\n      },\n      err \x3d\x3e {\n        if (err instanceof RpcError) {\n          return err.status;\n        }\n        return null;\n      });\n}\n\n\n/**\n * Pre process the data requests to make requests using functions if generator\n * functions are found and filter experiment guarded requests.\n *\n * @param {!GoogPromise} dataResponsePromise\n * @param {!types.UberDataRequest} dataRequest\n * @return {!GoogPromise} processed response promise\n */\npostprocessor.process \x3d function(dataResponsePromise, dataRequest) {\n  googArray.forEach(postProcessors, function(fn) {\n    dataResponsePromise \x3d fn(dataRequest, dataResponsePromise);\n  });\n  return dataResponsePromise;\n};\n\nexports \x3d postprocessor;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/postprocessor.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/preprocessor.js";
eval("/**\n * @fileoverview Pre-processes a map of data keys and aliases.\n */\ngoog.provide(\x27wiz.data.clients.preprocessor\x27);\n\ngoog.require(\x27af.data.isDataRequest\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27jspb.ExtensionFieldInfo\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.data.types\x27);\ngoog.require(\x27wiz.experiments.services\x27);\n\n\n\n/**\n * @constructor\n * @final\n */\nwiz.data.clients.preprocessor \x3d function() {};\n\n\n/**\n * Pre process the data requests to make requests using functions if generator\n * functions are found and filter experiment guarded requests.\n *\n * @param {!wiz.async.Source} source\n * @param {!wiz.async.RetrievableMap} inputRequests\n * @return {?goog.async.Deferred\x3c\n *     !wiz.data.types.UberDataRequestMap\x3e|!wiz.data.types.UberDataRequestMap}\n */\nwiz.data.clients.preprocessor.process \x3d\n    function(source, inputRequests) {\n  if (goog.object.getValues(inputRequests).length \x3d\x3d 0) {\n    return null;\n  }\n\n  if (goog.DEBUG) {\n    goog.object.forEach(inputRequests, function(oneRequest) {\n      goog.asserts.assert(\n          wiz.data.types.isDataRequest(oneRequest) ||\n          af.data.isDataRequest(oneRequest) ||\n              oneRequest instanceof jspb.ExtensionFieldInfo,\n          \x27The data key must be an wiz.data.types.DataRequest or \x27 +\n              \x27af.data.DataRequest or jspb.ExtensionFieldInfo.\x27);\n    });\n  }\n  inputRequests \x3d\n      /** @type {wiz.data.types.UberDataRequestMap} */ (inputRequests);\n\n  var experimentGuarded \x3d false;\n  goog.object.forEach(inputRequests, function(oneRequest, alias) {\n    if (wiz.data.clients.preprocessor.getExperimentFlag_(oneRequest)) {\n      experimentGuarded \x3d true;\n    }\n  });\n\n  if (experimentGuarded) {\n    // If any of the data keys are experiment guarded we first fetch\n    // the experiment service (Apps should preload it to avoid cascading\n    // downloads) and then remove the data keys from the fetch that are\n    // guarded and where the experiment is off.\n    return wiz.async.get(\n        source,\n        {service: {experiments: wiz.experiments.services.EXPERIMENT}})\n        .then(function(response) {\n      inputRequests \x3d\n          goog.object.filter(inputRequests, function(oneRequest, alias) {\n        if (!wiz.data.clients.preprocessor.getExperimentFlag_(oneRequest)) {\n          return true;\n        }\n        return response.service.experiments.isEnabled(/** @type {!xid.String} */\n            (wiz.data.clients.preprocessor.getExperimentFlag_(oneRequest)));\n      });\n      return inputRequests;\n    });\n  } else {\n    return inputRequests;\n  }\n};\n\n\n/**\n * Retrieves an experiment flag from the provided AF data or Wiz data request.\n * @param {Object|null|string} oneRequest\n * @return {!xid.String|undefined} experiment flag, if one is found.\n * @private\n */\nwiz.data.clients.preprocessor.getExperimentFlag_ \x3d function(oneRequest) {\n  var experimentFlag \x3d oneRequest.experimentFlagRequired;\n  if (wiz.data.types.isDataRequest(oneRequest)) {\n    experimentFlag \x3d oneRequest.metadata ?\n        oneRequest.metadata.experimentFlagRequired :\n        undefined;\n  }\n  return experimentFlag;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/preprocessor.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/binding.js";
eval("/**\n * @fileoverview Creates a new client-side wiz data binding.\n */\ngoog.provide(\x27wiz.data.clients.binding\x27);\n\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.atInterface\x27);\ngoog.require(\x27wiz.data.clients.DataFetcher\x27);\ngoog.require(\x27wiz.data.clients.interfaces\x27);\ngoog.require(\x27wiz.data.clients.postprocessor\x27);\ngoog.require(\x27wiz.data.clients.preprocessor\x27);\n\n\n/**\n * @constructor\n * @final\n */\nwiz.data.clients.binding \x3d function() {};\n\n\n/**\n * This type is present here only for convenience. It is used only by the\n * framework.\n * @typedef {function(!wiz.async.Source, !wiz.async.RetrievableMap):\n *     !Object\x3cstring,!goog.Promise\x3e}\n * @private\n */\nwiz.data.clients.binding.DataBindingFunction_;\n\n\n/**\n * Create a new client side data binding using the provided data fetcher\n * implementation service id.\n *\n * @param {!fava.services.ServiceId} dataFetcherServiceId\n * @param {string\x3d} opt_transportType\n * @return {!wiz.data.clients.binding.DataBindingFunction_} the binding function\n */\nwiz.data.clients.binding.create \x3d function(\n    dataFetcherServiceId, opt_transportType) {\n  const wizInterface \x3d wiz.atInterface.get(wiz.data.clients.DataFetcher);\n  goog.asserts.assert(\n      wizInterface.isImplementedBy(dataFetcherServiceId),\n      \x27ServiceId \x27 + dataFetcherServiceId +\n          \x27used to create wiz client data binding must \x27 +\n          \x27implement wiz.data.clients.DataFetcher.\x27);\n  wiz.data.clients.interfaces.DATA_FETCHER.getDependencies().push(\n      dataFetcherServiceId);\n  return function(source, aliasToDataRequest) {\n    goog.object.forEach(aliasToDataRequest, function(oneRequest, alias) {\n      if (goog.isFunction(oneRequest.makeRequest)) {\n        oneRequest \x3d goog.object.clone(/** @type {!Object} */ (oneRequest));\n        aliasToDataRequest[alias] \x3d oneRequest;\n        oneRequest.request \x3d oneRequest.makeRequest.call(source);\n      }\n      if (!!opt_transportType \x26\x26 !oneRequest.transportType) {\n        // Transport type might not be set when using \x27rpc\x27 async binding.\n        oneRequest.transportType \x3d opt_transportType;\n      }\n    });\n    var dataFetcher;\n    var preProcessingResultD \x3d\n        wiz.async.get(source, {service: {dataFetcher: dataFetcherServiceId}})\n            .addCallback(function(response) {\n              dataFetcher \x3d response.service.dataFetcher;\n              return wiz.data.clients.preprocessor.process(\n                  source, aliasToDataRequest);\n            })\n            .then(function(filteredResponseMap) {\n              if (!filteredResponseMap) {\n                return goog.Promise.resolve({});\n              }\n              return dataFetcher.execute(filteredResponseMap);\n            });\n    return goog.object.map(aliasToDataRequest, function(oneRequest, alias) {\n      var p \x3d preProcessingResultD.then(function(resultMap) {\n        return resultMap[alias] ? resultMap[alias] : null;\n      });\n      return wiz.data.clients.postprocessor.process(\n          p,\n          /** @type {!wiz.data.types.DataRequest} */ (oneRequest));\n    });\n  };\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/binding.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/data/clients/appsframework/bindings.js";
eval("/**\n * @fileoverview Provides wiz.async data bindings for the AF data transport\n * type.\n */\ngoog.provide(\x27wiz.data.clients.appsframework.bindings\x27);\n\ngoog.require(\x27af.data.middleware.JsdataMessage\x27);\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.atInterface\x27);\ngoog.require(\x27wiz.common.FrameworkRestricted\x27);\ngoog.require(\x27wiz.data.InitialDataInterface\x27);\ngoog.require(\x27wiz.data.clients.appsframework.services\x27);\ngoog.require(\x27wiz.data.clients.binding\x27);\n\ngoog.forwardDeclare(\x27wiz.ModelSource\x27);\n\n\nwiz.data.clients.appsframework.bindings.DATA_TRANSPORT_TYPE \x3d \x27afdata_o\x27;\n\n\n/**\n * Install bindings for AF data service for wiz.async for fetching data keys.\n * Keys can be either a {@see wiz.data.types.DataRequest} or\n * {@see af.data.DataRequest}.\n * Note that this binding also supports a function as the makeRequest property\n * in {@see af.data.DataRequest}. This function will be called with the current\n * \x22async source\x22 (The current controller, model or the first argument passed)\n * to {@see wiz.async.get} as the this value.\n *\n * ADDITIONAL FEATURES:\n * - dataKey.notFatal: boolean If set any error during data retrieval will be\n *   transformed to null instead of throwing an exception.\n * - dataKey.deadlineMillis: number If it has a value of 0 or higher, null will\n *   be produced for the data key if retrieval took longer than given milli\n *   seconds.\n * - dataKey.experimentFlagRequired: string If set to the flag name of an\n *   experiment the data key will only be requested if the given experiment is\n *   on for the current user.\n *\n * SETUP\n * Apps should preload af.data.services.DATA to avoid an extra JS download\n * before data is requested. If experiments are used the same is true for\n * wiz.experiments.services.EXPERIMENT.\n *\n * USAGE with Wiz data request:\n *\n * `MyController.prototype.click \x3d function(event) {\n *  wiz.async.get(this, {\n *    afdata: {\n *      myData: {\n *        rpcId: MyDataAfRpcId,\n *        requestMessage: myDataRequest,\n *        transportType:\n * wiz.data.clients.appsframework.bindings.DATA_TRANSPORT_TYPE\n *      }\n *    }\n *  }).then(function(get) {\n *    alert(get.afdata.myData);\n *  });`\n *\n * USAGE with data key:\n *\n * `MyController.prototype.click \x3d function(event) {\n *  wiz.async.get(this, {\n *    afdata: {\n *      myData: dataKey.datakey\n *    }\n *  }).then(function(get) {\n *    alert(get.afdata.myData);\n *  });`\n *\n * USAGE with makeRequest:\n *\n * `MyController.prototype.click \x3d function(event) {\n *  wiz.async.get(this, {\n *    afdata: {\n *      profileData: {\n *        responseExtension: QuarkStreamResponse.quarkStream,\n *        requestExtension: QuarkStreamRequest.quarkStream,\n *        /** @this {MyController}\n *        makeRequest: function() {\n *          var request \x3d  new ProfileRequest();\n *          request.setGaiaId(this.getData(\x27profile-id\x27).string());\n *          return request;\n *        }\n *      }\n *    }\n *  }).then(function(get) {\n *    alert(get.afdata.profileData);\n *  });`\n */\nwiz.data.clients.appsframework.bindings.install \x3d function() {\n  wiz.atInterface.get(wiz.data.InitialDataInterface)\n      .setDefaultImplementationId(\n          wiz.data.clients.appsframework.services.INITIAL_DATA);\n  wiz.async.bindBatch({\n    data: wiz.data.clients.appsframework.bindings.data,\n    // TODO(b/30038909): Migrate users from \x27data\x27 to \x27afdata\x27.\n    afdata: wiz.data.clients.appsframework.bindings.data,\n    materializeInitialData:\n        wiz.data.clients.appsframework.bindings.materializeInitialData\n  });\n  wiz.async.bindBatch({\n    // Allows afdata_o to work in obfuscated mode.\n    \x27afdata_o\x27: wiz.data.clients.appsframework.bindings.data\n  });\n};\n\n\n/**\n * Installs the jsdata binding.\n * TODO(tomnguyen): Move the binding out of af data bindings and use it as\n * a generic framework binding.\n */\nwiz.data.clients.appsframework.bindings.installJsdata \x3d function() {\n  wiz.async.bindBatch({jsdata: wiz.data.clients.appsframework.bindings.jsdata});\n  wiz.async.bindBatch(\n      {nullableJsdata: wiz.data.clients.appsframework.bindings.nullableJsdata});\n};\n\n\n/**\n * Installs all required wiz data bindings.\n */\nwiz.data.clients.appsframework.bindings.installAll \x3d function() {\n  wiz.data.clients.appsframework.bindings.install();\n  wiz.data.clients.appsframework.bindings.installJsdata();\n};\n\n/**\n * Similar to jsdata, but applies a promise modifier that allows nullable.\n * @param {!wiz.async.Source} source\n * @param {!Object\x3cfunction(new:jspb.Message)|!{\n *       ctor: (function(new:jspb.Message)|!af.data.middleware.JsdataMessage),\n *\n *       onUpdate: (\n *           function(!jspb.Message, !wiz.event.EventType)|undefined),\n *       getRealInstance: (!wiz.common.FrameworkRestricted|undefined)\n *     }\x3e} aliasToCtorOrObject The complete\n *     map of data keys\n * @return {!Object\x3cstring, !goog.Promise\x3e}\n */\nwiz.data.clients.appsframework.bindings.nullableJsdata \x3d function(\n    source, aliasToCtorOrObject) {\n  const objMap \x3d wiz.data.clients.appsframework.bindings.jsdata(\n      source, aliasToCtorOrObject);\n  goog.object.forEach(objMap, (value, key, obj) \x3d\x3e {\n    obj[key] \x3d value.thenCatch(() \x3d\x3e null);\n  });\n  return objMap;\n};\n\n\n/**\n * Resolves proto constructors to the correct instances through jsdata\n * annotations in the DOM.\n * This requires a jsdata attribute on the same DOM node where the\n * Model is bound. Generate this by putting `{wizJsData($data)}` in\n * your soy.\n * Example {\n *   jsdata: {\n *      update: proto.updates.data.Update,\n *      stream: {\n *        ctor:  proto.stream.data.Stream,\n *        onUpdate: FooModel.prototype.onStreamUpdate_\n *      }\n *   }\n * }\n *\n * @param {!wiz.async.Source} source\n * @param {!Object\x3cfunction(new:jspb.Message)|!{\n *       ctor: (function(new:jspb.Message)|!af.data.middleware.JsdataMessage),\n *\n *       onUpdate: (\n *           function(!jspb.Message, !wiz.event.EventType)|undefined),\n *       getRealInstance: (!wiz.common.FrameworkRestricted|undefined)\n *     }\x3e} aliasToCtorOrObject The complete\n *     map of data keys\n * @return {!Object\x3cstring, !goog.Promise\x3e}\n */\nwiz.data.clients.appsframework.bindings.jsdata \x3d function(\n    source, aliasToCtorOrObject) {\n  var get \x3d wiz.async.get(\n      source,\n      {service: {resolver: wiz.data.clients.appsframework.services.RESOLVER}});\n  return goog.object.map(aliasToCtorOrObject, function(spec, alias) {\n    var ctor;\n    var onUpdate;\n    if (goog.typeOf(spec) \x3d\x3d \x27function\x27 ||\n        spec instanceof af.data.middleware.JsdataMessage) {\n      ctor \x3d spec;\n    } else {\n      goog.asserts.assertObject(spec);\n      ctor \x3d spec.ctor;\n      onUpdate \x3d spec.onUpdate;\n    }\n    if (ctor instanceof af.data.middleware.JsdataMessage) {\n      ctor \x3d ctor.messageCtor;\n    }\n    goog.asserts.assertFunction(\n        ctor, \x27Should pass in a proto constructor for \x27 + alias);\n    var messageXid \x3d af.data.middleware.JsdataMessage.getXid(ctor);\n    var modelOrController \x3d\n        /** @type {!wiz.ModelSource|!wiz.controller.Context} */ (source);\n    goog.asserts.assert(\n        modelOrController.getRoot || modelOrController.getRootElementRestricted,\n        \x27The jsdata binding is only supported for controllers and models\x27);\n    var element;\n    if (modelOrController.getRoot) {\n      var controller \x3d\n          /** @type {!wiz.controller.Context} */ (modelOrController);\n      element \x3d controller.getRoot().el();\n    } else {\n      element \x3d modelOrController.getRootElementRestricted(\n          wiz.common.FrameworkRestricted.I_AM_THE_FRAMEWORK);\n    }\n    if (onUpdate) {\n      var model \x3d /** @type {!wiz.ModelSource} */ (modelOrController);\n      goog.asserts.assert(\n          model.getRootElementRestricted,\n          \x27The jsdata binding onUpdate function is currently only supported \x27 +\n              \x27on wiz models.\x27);\n      goog.asserts.assertFunction(\n          onUpdate, \x27onUpdate property should be a function.\x27);\n      model.setDataUpdateHandler(messageXid, onUpdate);\n    }\n    var resolve \x3d function(response) {\n      var ctorWithType \x3d\n          /** @type {function(new: jspb.Message, !Array\x3d)} */ (ctor);\n      if (goog.isDef(spec.getRealInstance)) {\n        return response.service.resolver.resolve(\n            element, ctorWithType, spec.getRealInstance);\n      } else {\n        return response.service.resolver.resolve(element, ctorWithType);\n      }\n    };\n    if (goog.DEBUG) {\n      resolve.displayName \x3d \x27# jsdata: \x27 + messageXid;\n    }\n    return get.then(resolve);\n  });\n};\n\n/**\n * Fetches a list of data keys from the server using the apps framework\n * data service.\n */\nwiz.data.clients.appsframework.bindings.data \x3d wiz.data.clients.binding.create(\n    wiz.data.clients.appsframework.services.AF_DATA_FETCHER);\n\n\n/**\n * Materializes initial data key. This should typically only be called from\n * framework code.\n *\n * @param {!wiz.async.Source} source\n * @param {!wiz.async.RetrievableMap} aliasToUberDataRequest The complete\n *     map of data requests\n * @return {!Object}\n */\nwiz.data.clients.appsframework.bindings.materializeInitialData \x3d\n    wiz.data.clients.binding.create(\n        wiz.data.clients.appsframework.services.MATERIALIZE_INITIAL_DATA);\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/appsframework/bindings.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/wiz/base_wiz_bootstrap_module.js";
goog.loadModule("/** @enhanceable */\ngoog.module(\x27search.wiz.BaseWizBootstrapModule\x27);\n\nconst AbstractModuleManager \x3d goog.require(\x27goog.loader.AbstractModuleManager\x27);\nconst AppContext \x3d goog.require(\x27fava.AppContext\x27);\nconst BaseCssLoader \x3d goog.require(\x27fava.modules.BaseCssLoader\x27);\nconst BaseModule \x3d goog.require(\x27goog.module.BaseModule\x27);\nconst Deferred \x3d goog.require(\x27goog.async.Deferred\x27);\nconst InitialDataService \x3d goog.require(\x27wiz.data.clients.gws.InitialDataService\x27);\nconst MultiModulesetRegistry \x3d goog.require(\x27search.modules.MultiModulesetRegistry\x27);\nconst WizInjector \x3d goog.require(\x27wiz.inject.Injector\x27);\nconst WizManager \x3d goog.require(\x27wiz.Manager\x27);\nconst appsframeworkBindings \x3d goog.require(\x27wiz.data.clients.appsframework.bindings\x27);\nconst bootstrapDispatcher \x3d goog.require(\x27wiz.bootstrapDispatcher\x27);\nconst delayDeferred \x3d goog.require(\x27gws.delayDeferred\x27);\nconst extension \x3d goog.require(\x27fava.extension\x27);\nconst manager \x3d goog.require(\x27search.wiz.manager\x27);\nconst mothershipBindings \x3d goog.require(\x27search.mothership.bindings\x27);\nconst stateBinding \x3d goog.require(\x27search.wiz.stateBinding\x27);\nconst wizAsync \x3d goog.require(\x27wiz.async\x27);\nconst {getActionLogger} \x3d goog.require(\x27search.log.jsaction\x27);\n\n/**\n * The base module for bootstrapping wiz to the GWS base page.\n * This allows custom implementations to  supply the ModuleManager, and allows\n * overriding #initialize to facilitate any custom initialization.\n * @abstract\n */\nclass BaseWizBootstrapModule extends BaseModule {\n\n  constructor() {\n    super();\n    /** @private @const */\n    this.appContext_ \x3d new AppContext();\n\n    /**\n     * Deferred that resolves when the GWS Secondary XJS request resolves.\n     * This is used to block the Wiz framework from using modules we\x27ve bundled\n     * into the secondary request.\n     * @private\n     */\n    this.secondaryDeferred_ \x3d new Deferred();\n\n    this.moduleDeferred_ \x3d new Map();\n  }\n\n  /** @override */\n  initialize() {\n    // Initialize the Fava extensions.\n    extension.initialize(this.appContext_);\n\n    var moduleManager \x3d this.getModuleManager();\n    moduleManager.setModuleContext(this.appContext_);\n    this.appContext_.setModuleManager(moduleManager);\n\n    // Exports _F_installCss() to enable CSS late loading.\n    new BaseCssLoader(moduleManager).init();\n\n    InitialDataService.setAsDefaultImplementation();\n\n    // google.lmf is a run when the secondary JavaScript request completes.\n    google.lmf \x3d () \x3d\x3e {\n      // Resolve the secondaryDeferred_.  This tells any wiz entities that\n      // are blocking on the secondaryDeferred_ that they can be initialized\n      this.secondaryDeferred_.callback();\n\n      // Create a new deferred in case this logic gets run again.\n      // This can happen when there are subsequent \x22secondary\x22 request\n      // completes, e.g. during a JESR transition.\n      this.secondaryDeferred_ \x3d new Deferred();\n    };\n\n    // google.almf is a run when modules on add-on moduleset are loaded\n    // successfully\n    google.almf \x3d (moduleIds) \x3d\x3e {\n      for (const moduleId of moduleIds) {\n        if (this.moduleDeferred_.has(moduleId)) {\n          this.moduleDeferred_.get(moduleId).callback();\n        }\n      }\n    };\n\n    for (const addonModulesetInfo of\n             MultiModulesetRegistry.AddonModulesetInfoList) {\n      if (addonModulesetInfo.modulesetName) {\n        this.moduleDeferred_.set(\n            addonModulesetInfo.featureModule, new Deferred());\n      }\n    }\n\n    // Overrides the Wiz Injector load modules function to have the following\n    // behavior, for every load that Wiz requests:\n    //\n    // If google.lm is available, then the secondary XJS request has not yet\n    // been made by gws.deferred.init().\n    // Add the modules we wish to load with google.plm.\n    // This will cause pinto_quantum.html to bundle these modules with\n    // the secondary.  Return a map with a single Deferred that will resolve\n    // when the secondary XJS request completes.  This guarantees that the Wiz\n    // framework will wait until any requested controllers load before\n    // attempting to interact with them.\n    //\n    // Once google.lm is removed, just use the normal wiz module loading\n    // behavior.\n    WizInjector.getInstance().setLoadModulesFunction((injector, moduleIds) \x3d\x3e {\n      if (google.lm \x26\x26 google.plm) {\n        // These will be loaded in the secondary XJS request via deferred.js.\n        google.plm(moduleIds);\n\n        const result \x3d {};\n        for (const moduleId of moduleIds) {\n          if (this.moduleDeferred_.has(moduleId)) {\n            result[moduleId] \x3d this.moduleDeferred_.get(moduleId);\n          } else {\n            // By returning a deferred, we are telling the framework that they\n            // cannot use this module until that deferred is resolved by\n            // google.wmf.\n            result[\x27wm\x27] \x3d this.secondaryDeferred_;\n          }\n        }\n        return result;\n      } else {\n        return WizInjector.defaultLoadModulesFunction(injector, moduleIds);\n      }\n    });\n\n    bootstrapDispatcher(\n        window[\x27gws_wizbind\x27], window.document, this.appContext_,\n        this.getFlowFactory(), this.getNamespaceHandler(),\n        true /* skipDirtyCall, so we can call it ourselves and force it to be\n              * synchronous */,\n        getActionLogger());\n\n    appsframeworkBindings.installJsdata();\n\n    mothershipBindings.install();\n\n    // Replace the no-op implementations in search.wiz.manager with real Wiz\n    // implementations.\n    manager.init();\n\n    // Adds a mod codepath so that we can add experimental services without\n    // impacting production traffic.\n    BaseWizBootstrapModule.mod.experimentalServicesInit(\n        this.appContext_, moduleManager);\n\n    var wizManager \x3d WizManager.getManager(window.document);\n\n    // Used by Soy to mark the document as dirty at the end of rendering.\n    window[\x27wiz_progress\x27] \x3d goog.bind(wizManager.dirty, wizManager);\n\n    delayDeferred.executeFirst(() \x3d\x3e {\n      wizManager.synchronousDirty();\n    });\n\n    this.bindAsync();\n  }\n\n  /**\n   * Gets the module manager to use during initialization.\n   * @abstract\n   * @return {!AbstractModuleManager}\n   */\n  getModuleManager() {}\n\n  /**\n   * @return {function(!jsaction.EventInfo):!jsaction.ActionFlow|undefined} A\n   *     custom jsaction ActionFlow factory.\n   */\n  getFlowFactory() {\n    return undefined;\n  }\n\n  /**\n   * @return {function(!jsaction.ActionFlow)|undefined} A custom jsaction\n   *     handler for namespace actions (actions that include a . in them).\n   */\n  getNamespaceHandler() {\n    return undefined;\n  }\n\n  /**\n   * Register extra Wiz async functions.\n   */\n  bindAsync() {\n    wizAsync.bindBatch({\n      jsstate: stateBinding,\n    });\n  }\n}\n\n/**\n * A mod entrypoint that allows us to add experimental bootstrap logic for\n * rendering Wiz components behind a mod.\n * @type {{experimentalServicesInit:\n *     function(AppContext, AbstractModuleManager)}}\n */\nBaseWizBootstrapModule.mod \x3d {\n  experimentalServicesInit: function(appContext, moduleManager) {\n    // By default, do nothing.\n  },\n};\n\n\nexports \x3d BaseWizBootstrapModule;\n\n//# sourceURL\x3dhttps://qs/gws/js/wiz/base_wiz_bootstrap_module.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/fusion_bootstrap_module.js";
goog.loadModule("/**\n * @fileoverview FusionBootstrapModule allows Wiz to be initialized along side\n * gws.jsaction. This must be passed to\n * ModuleManager.getInstance().setModuleConstructor() before gws.jsaction\n * initializes.\n */\n\ngoog.module(\x27gws.jsaction_wiz.FusionBootstrapModule\x27);\n\nconst BaseWizBootstrapModule \x3d goog.require(\x27search.wiz.BaseWizBootstrapModule\x27);\nconst GwsActionFlow \x3d goog.require(\x27gws.jsaction.GwsActionFlow\x27);\nconst gwsJsaction \x3d goog.require(\x27gws.jsaction\x27);\nconst gwsModuleManager \x3d goog.require(\x27gws.moduleManager\x27);\n\n\n/** @final */\nclass FusionBootstrapModule extends BaseWizBootstrapModule {\n  /** @override */\n  getModuleManager() {\n    return gwsModuleManager.getModuleManager();\n  }\n\n  /**\n   * We need to provide a custom ActionFlow factor that will store the original\n   * eventInfo object so that we can re-use it when passing the ActionFlow from\n   * Wiz\x27s dispatcher to GWS\x27s dispatcher.\n   * @override\n   */\n  getFlowFactory() {\n    // Manually flip this to true so that other code can know that GwsActionFlow\n    // is used.\n    GwsActionFlow.enabled \x3d true;\n    return /** function(!jsaction.EventInfo):!jsaction.ActionFlow */ (\n        eventInfo \x3d\x3e new GwsActionFlow(eventInfo));\n  }\n\n  /**\n   * Wiz ignores namespace jsaction actions (actions that include a .) and all\n   * traditional GWS actions are namespaced, so we register a custom function\n   * with Wiz to intercept those events.\n   * @override\n   */\n  getNamespaceHandler() {\n    return gwsJsaction.dispatchFromWiz;\n  }\n}\n\nexports \x3d FusionBootstrapModule;\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/fusion_bootstrap_module.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/heirloom_jsaction_handlers.js";
goog.loadModule("/**\n * @fileoverview Common gws jsaction handlers available in Tier2.\n */\ngoog.module(\x27gws.jsaction.heirloomHandlers\x27);\n\nconst functions \x3d goog.require(\x27goog.functions\x27);\nconst gwsJsaction \x3d goog.require(\x27gws.jsaction\x27);\nconst jsaction \x3d goog.require(\x27jsaction\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\nconst {getActionLogger} \x3d goog.require(\x27search.log.jsaction\x27);\n\n\n/**\n * Wrapper for google.log function. Currently does not have the ability to\n * pass in a target element. Will do nothing, if data-ved is missing.\n * @param {!Element} element The element where the action was triggered.\n * @param {!Object\x3cstring, string\x3e} dataset The dataset for the element.\n * @package\n */\nfunction logHandler(element, dataset) {\n  const ved \x3d dataset[\x27ved\x27];\n  if (!!ved) {\n    google.log(dataset[\x27ct\x27], \x27\x26ved\x3d\x27 + ved, dataset[\x27src\x27]);\n  }\n}\n\n\n/**\n * Opens a new window.\n * @param {!Element} element The element where the action was triggered.\n * @param {!Object\x3cstring, string\x3e} dataset The dataset for the element.\n * @package\n */\nfunction popupHandler(element, dataset) {\n  const url \x3d dataset[\x27url\x27];\n  const target \x3d dataset[\x27target\x27] || \x27_blank\x27;\n  const options \x3d dataset[\x27opt\x27] || \x27\x27;\n  window.open(url, target, options);\n}\n\n\n/**\n * Calls the element\x27s select() method.\n * @param {!Element} element The element where the action was triggered.\n * @package\n */\nfunction selectHandler(element) {\n  if (goog.isFunction(element.select)) {\n    element.select();\n  }\n}\n\n\n/**\n * A namespace handler to fire custom action. This allows users to\n * fire custom action declaratively:\n *\n *   \x3cdiv jsaction\x3d\x22mousedown: fire.my_menu_collapsed\x22\x3e\x3c/div\x3e\n *\n * @param {jsaction.ActionFlow} actionFlow\n * @package\n */\nfunction fireCustomEvent(actionFlow) {\n  const target \x3d assert(actionFlow.node());\n  const split \x3d actionFlow.flowType().split(\x27.\x27);\n  assert(split.length \x3d\x3d 2, \x27Custom action type must not contain \\\x27.\\\x27\x27);\n  const type \x3d split[1];\n  const triggeringEvent \x3d actionFlow.event() || undefined;\n\n  getActionLogger().logDispatch(actionFlow);\n\n  jsaction.fireCustomEvent(target, type, undefined /* data */, triggeringEvent);\n}\n\n/**\n * Adds the handlers to the defaultHandlers. Should be called prior to\n * jsaction.init()\n */\nfunction init() {\n  gwsJsaction.fireHandler \x3d fireCustomEvent;\n  gwsJsaction.defaultHandlers \x3d {\n    \x27log\x27: logHandler,\n    \x27popup\x27: popupHandler,\n    \x27select\x27: selectHandler,\n    \x27true\x27: functions.TRUE,\n  };\n}\n\nexports \x3d {\n  logHandler,\n  popupHandler,\n  selectHandler,\n  fireCustomEvent,\n  init,\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/heirloom_jsaction_handlers.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/jsaction_handlers.js";
goog.loadModule("/**\n * @fileoverview Common gws jsaction handlers.\n */\ngoog.module(\x27gws.jsaction.handlers\x27);\n\nconst heirloomHandlers \x3d goog.require(\x27gws.jsaction.heirloomHandlers\x27);\nconst historyState \x3d goog.require(\x27gws.historyState\x27);\nconst jsaction \x3d goog.require(\x27gws.jsaction\x27);\nconst nav \x3d goog.require(\x27gws.nav\x27);\n\n\n/**\n * Wrapper for gws.historyState.goBack(), after firing gen_204 for logging.\n * @param {!Element} element The element where the action was triggered.\n * @param {!Object\x3cstring, string\x3e} dataset The dataset for the element.\n * @package\n */\nfunction backHandler(element, dataset) {\n  // Log interaction if there is data-ved logged on the element.\n  heirloomHandlers.logHandler(element, dataset);\n  historyState.goBack();\n}\n\n\n/**\n * Wrapper for common gws.nav.go function. If data-ved exists, append it\n * to the url, then navigate away.\n * @param {!Element} element The element where the action was triggered.\n * @param {!Object\x3cstring, string\x3e} dataset The dataset for the element.\n * @package\n */\nfunction goHandler(element, dataset) {\n  let url \x3d dataset[\x27url\x27];\n  const ved \x3d dataset[\x27ved\x27] || \x27\x27;\n  if (ved) {\n    url \x3d nav.addParam(\x27ved\x27, url, ved);\n  }\n  nav.go(url);\n}\n\n/**\n * Initializes the default handlers.\n */\nfunction init() {\n  // Include the heirloom handlers.\n  heirloomHandlers.init();\n  jsaction.defaultHandlers[\x27back\x27] \x3d backHandler;\n  jsaction.defaultHandlers[\x27go\x27] \x3d goHandler;\n}\n\nexports \x3d {\n  backHandler,\n  goHandler,\n  init,\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/jsaction_handlers.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/jsaction_wiz.js";
goog.loadModule("/**\n * @fileoverview This initializes Wiz such that it can run alongside the GWS\n * jsaction dispatcher.\n */\n\ngoog.module(\x27gws.jsactionWiz\x27);\n\nconst FusionBootstrapModule \x3d goog.require(\x27gws.jsaction_wiz.FusionBootstrapModule\x27);\nconst ModuleManager \x3d goog.require(\x27goog.module.ModuleManager\x27);\nconst errorLogger \x3d goog.require(\x27search.log.errorLogger\x27);\n/** @suppress {extraRequire} Needed for Wiz. */\ngoog.require(\x27wiz.inject.Registry\x27);\n\n\n/**\n * Initialize Wiz. This must be called inline because FusionBootstrapModule\n * must be setup during XJS parse in order to ensure the initial Wiz request\n * is merged with the secondary XJS request.\n *\n * For this to succeed, the \x27wb\x27 module must be disabled and Wiz jsaction must\n * be setup on the page. In gcl terms this means:\n *   Wiz.enable_wiz \x3d true\n *   Wiz.wb_module_enabled \x3d false\n *   Wiz.pinto_module \x3d false\n *   Wiz.wiz_via_jsaction_mod \x3d true\n *   Wiz.wiz_enabled_mod \x3d true\n */\nfunction init() {\n  if (window.document[\x27__wizdispatcher\x27]) {\n    // This can happen if the \x22b\x22 module is included on the page.\n    errorLogger.log(new Error(\x27Wiz already enabled.\x27));\n    return;\n  }\n  if (!window[\x27gws_wizbind\x27]) {\n    // The Wiz jsaction contract never got installed.  This should have happened\n    // in the base page.\n    // Return because Wiz will not work without the Wiz jsaction contract.\n    errorLogger.log(new Error(\x27Wiz enabled without wiz jsaction contract.\x27));\n    return;\n  }\n  ModuleManager.getInstance().setModuleConstructor(FusionBootstrapModule);\n}\n\nexports \x3d {init};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/jsaction_wiz.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/jsaction/jsaction_start.js";
goog.loadModule("/**\n * @fileoverview Bootstraps the JsAction pinto module.\n */\n\ngoog.module(\x27gws.jsactionStart\x27);\n\nconst handlers \x3d goog.require(\x27gws.jsaction.handlers\x27);\nconst jsaction \x3d goog.require(\x27gws.jsaction\x27);\nconst jsactionWiz \x3d goog.require(\x27gws.jsactionWiz\x27);\nconst moduleInterface \x3d goog.require(\x27gws.moduleInterface\x27);\n\njsactionWiz.init();\nhandlers.init();\n\nmoduleInterface.registerAlwaysActivatedScript(\x27jsa\x27, {\n  [moduleInterface.EventType.INIT]: jsaction.init,\n});\n\ngoog.exportSymbol(\x27google.jsa.ia\x27, jsaction.invokeAction);\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/jsaction/jsaction_start.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('jsa');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('jsa');

}catch(e){_DumpException(e)}
/* _Module_:syew */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syew');
var $googDebugFname="googledata/html/templates/gws/head/xjs/deferred/deferred.js";
goog.loadModule("/**\n * @fileoverview Initialize deferred inline JS stored in `google.y.first`\n * and `google.y`.\n */\n\ngoog.module(\x27gws.deferred\x27);\ngoog.module.declareLegacyNamespace();\n\nconst LogBuilder \x3d goog.require(\x27search.log.LogBuilder\x27);\nconst Logger \x3d goog.require(\x27goog.log.Logger\x27);\nconst error \x3d goog.require(\x27gws.error\x27);\nconst log \x3d goog.require(\x27goog.log\x27);\nconst moduleInterface \x3d goog.require(\x27gws.moduleInterface\x27);\nconst moduleManager \x3d goog.require(\x27gws.moduleManager\x27);\nconst nav \x3d goog.require(\x27gws.nav\x27);\n\n/** @type {?Logger} */\nconst logger \x3d log.getLogger(\x27gws.deferred\x27);\n\n\n/**\n * Assuming that inline JS like google.lm and google.y has been initialized,\n * exeucte JS that GWS needs to properly initialize the page. This includes:\n * - Load any pinto modules saved in google.lm.\n * - Initialize gws.moduleInterface if it is loaded.\n * - Execute anything in google.y and save its contents.\n * overrideDeferFunction should be called after this function.\n */\nfunction initPage() {\n  if (google.y.first \x26\x26 google.y.first.length) {\n    // This case should no longer exist, but just in case it does, it is being\n    // left in until the cleanup is confirmed.\n    // TODO(applmak): Remove this logic once we confirm it doesn\x27t run.\n    log.error(logger, \x27//TODO(applmak): delete me\x27);\n    executeFirst();\n  } else {\n    loadLateModules();\n    log.info(logger, \x27calling moduleInterface.init\x27);\n    moduleInterface.init();\n  }\n\n  cleanupLateModuleLoading();\n\n  // TODO(applmak): Remove this logic once we confirm it doesn\x27t run.\n  if (google.y.first) {\n    log.error(logger, \x27//TODO(applmak): delete me\x27);\n    const logBuilder \x3d new LogBuilder();\n    logBuilder.addData(\x27ct\x27, \x27gyfirst\x27)\n        .addData(\x27href\x27, nav.getLocation())\n        .addData(\x27ylen\x27, String(google.y.first.length))\n        .log();\n    delete google.y.first;\n  }\n\n  // Flush google.y.\n  executeQueued();\n  overrideDeferFunction();\n}\n\n/**\n * Replace google.plm with a function that will just immediately load the\n * requested modules.\n */\nfunction cleanupLateModuleLoading() {\n  google.plm \x3d modules \x3d\x3e moduleManager.loadAll(modules);\n  delete google.lm;\n  delete google.lmf;\n}\n\n/**\n * Executes all functions queued in `google.y.first`.\n * This should no longer be used, but it\x27s being left in for now defensively\n * in case pages still define it.\n */\nfunction executeFirst() {\n  // Call each function in y.first (e.g. Pinto module initialization).\n  let func;\n  for (let i \x3d 0; func \x3d google.y.first[i]; ++i) {\n    try {\n      func();\n    } catch (e) {\n      error.log(e, {\x27cause\x27: \x27deferp\x27});\n    }\n  }\n}\n\n/**\n * Load any pinto modules that have been saved in google.lm.\n * Modules in google.lm should only be called once google.pmc has been defined.\n */\nfunction loadLateModules() {\n  if (google.lm \x26\x26 google.lm.length) {\n    log.info(logger, `late loading modules in google.lm: ${google.lm}`);\n    moduleManager.loadAll(google.lm, google.lmf);\n  }\n}\n\n/**\n * Executes all functions queued in `google.y`.\n */\nfunction executeQueued() {\n  log.info(logger, \x27running functions in google.y\x27);\n  // Call each captured click\x27s callback.  The callback is\n  // recorded as an array [{id:string}|null, callback].\n  for (const i in google.y) {\n    if (google.y[i][1]) {\n      // If a callback was provided, call it on the context.\n      google.y[i][1].apply(google.y[i][0]);\n    }\n  }\n  google.y \x3d {};\n}\n\n\n/**\n * Redefines `google.x` (which queues functions in `google.y`) to\n * immediately call the callback parameter if it exists.\n * TODO(ruilopes): Deprecate the return type and remove support for !Element.\n * @param {!Element|{id:string}|null} context\n * @param {?function()} callback\n * @return {boolean} False, to suppress clicks queued via this function.\n */\nfunction execute(context, callback) {\n  if (callback) {\n    callback.apply(context);\n  }\n  return false;\n}\n\n\n/**\n * Turns `google.x` into the identity meta-function.\n */\nfunction overrideDeferFunction() {\n  goog.exportSymbol(\x27google.x\x27, execute);\n}\n\n\n/**\n * Empty the queue of pinto module load requests in google.lq. These are from\n * calls to google.load and google.loadAll before XJS was available. These loads\n * will happen sequentially.\n * @private\n */\nfunction flushLoadQueue() {\n  if (!google.lq) {\n    return;\n  }\n  const len \x3d google.lq.length;\n  for (let i \x3d 0; i \x3c len; ++i) {\n    const loadInfo \x3d google.lq[i];\n    const modules \x3d loadInfo[0];\n    const callback \x3d loadInfo[1];\n    if (loadInfo.length \x3d\x3d 3) {\n      const scope \x3d loadInfo[2];\n      log.info(logger, `loading one secondary module: ${modules[0]}`);\n      moduleManager.load(modules[0], callback, scope);\n    } else {\n      log.info(logger, `loading secondary modules: ${modules}`);\n      moduleManager.loadAll(modules, callback);\n    }\n  }\n  delete google.lq;\n}\n\n\n/**\n * Executes all deferred inline functions and sets up infrastructure for JESR.\n */\nfunction init() {\n  log.info(logger, \x27init called\x27);\n  flushLoadQueue();\n\n  // If google.pmc is not yet defined, we can\x27t process the deferred queue.\n  if (!google.pmc) {\n    log.info(logger, \x27no google.pmc, exporting to google.di\x27);\n    // Export this function so that the code that defines google.pmc can run it.\n    google.di \x3d init;\n    return;\n  }\n  delete google.di;\n\n  initPage();\n}\n\nexports \x3d {init};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/deferred/deferred.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syew');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syew');

}catch(e){_DumpException(e)}
/* _Module_:d */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('d');
var $googDebugFname="googledata/html/templates/gws/head/xjs/deferred/deferred_start.js";
goog.loadModule("goog.module(\x27gws.deferredStart\x27);\n\nconst deferred \x3d goog.require(\x27gws.deferred\x27);\nconst delayDeferred \x3d goog.require(\x27gws.delayDeferred\x27);\n\ndelayDeferred.executeSecond(deferred.init);\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/deferred/deferred_start.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('d');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('d');

}catch(e){_DumpException(e)}
/* _Module_:sy4m */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy4m');
var $googDebugFname="googledata/html/templates/gws/head/xjs/plugins/ads/common/util.js";
goog.loadModule("// Copyright 2013 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Utility classes for search ads.\n * @author sihuang@google.com (William Huang)\n */\n\ngoog.module(\x27gws.ads.common.util\x27);\ngoog.module.declareLegacyNamespace();\n\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst style \x3d goog.require(\x27goog.style\x27);\n\n\n/**\n * Checks whether an ad element is shown. An ad element is shown iff\n * - The ad element exists;\n * - The \x22display\x22 property is NOT \x22none\x22;\n * - The \x22visibility\x22 property is NOT \x22hidden\x22;\n * - The offset height of the element is greater than zero (offset height\n *   does not include margins).\n *\n * @param {Element|string} element The ID or object for the element to check.\n * @return {boolean|undefined} Whether the element is shown or undefined\n *     if the given element is null or undefined.\n */\nfunction isShown(element) {\n  if (goog.isString(element)) {\n    element \x3d dom.getElement(element);\n  }\n  if (!element) {\n    return undefined;\n  }\n  asserts.assertInstanceof(element, HTMLElement);\n  return style.getComputedStyle(element, \x27display\x27) !\x3d \x27none\x27 \x26\x26\n      style.getComputedStyle(element, \x27visibility\x27) !\x3d \x27hidden\x27 \x26\x26\n      element.offsetHeight \x3e 0;\n}\n\n\n/**\n * Measures the height of an ad section. Returns zero if the ad section does\n * not exist or is not shown.\n *\n * NOTE: This method does not consider margin collapse so the real height\n * might be bigger than the result height if there is margin collapse.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing for\n * detailed cases where margin collapse may occur.\n *\n * @param {string|Element} element Element ID or a DOM node.\n * @return {number} The height of the ad section specified by id.\n */\nfunction getHeight(element) {\n  const ads \x3d dom.getElement(element);\n  if (isShown(ads)) {\n    asserts.assertInstanceof(ads, HTMLElement);\n    const marginBox \x3d style.getMarginBox(ads);\n    // OffsetHeight only includes height, top and bottom paddings and top and\n    // bottom borders, but not top and bottom margins.\n    return ads.offsetHeight + marginBox.top + marginBox.bottom;\n  } else {\n    return 0;\n  }\n}\n\nexports \x3d {\n  isShown,\n  getHeight\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/plugins/ads/common/util.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy4m');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy4m');

}catch(e){_DumpException(e)}
/* _Module_:sy4u */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy4u');
var $googDebugFname="gws/js/url/url_state.js";
goog.loadModule("goog.module(\x27search.url.UrlState\x27);\n\nconst GwsUrl \x3d goog.require(\x27search.url.GwsUrl\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst urlParamKeys \x3d goog.require(\x27search.url.urlParamKeys\x27);\n\n// These are populated by UrlState.init().\n/** @type {string} */\nlet currentUrl;\n/** @type {!UrlState} */\nlet currentState;\n/** @type {!UrlState} */\nlet initialState;\n\n/**\n * This class represents a parsed URL, and keeps track of the parameters in the\n * search, parameters in the hash, the path, and other url metadata (scheme,\n * etc.). This class is the main entrypoint for parsing, updating, and\n * serializing back a URL.\n *\n * UrlState allows you to read and update parameters via a single Map that\n * combines both search and hash parameters. Only search parameters defined\n * as \x27pretty\x27 or \x27ugly\x27 in url_param_key_sets.yaml can be read via getParams,\n * however all params will be preserved in toString.\n *\n * If there are duplicate params, only the first one will be accessible via\n * getParams and the duplicates will not be included in toString.\n *\n * If the hash contains \x27pretty\x27 or \x27ugly\x27 parameters, they will not be\n * accessible via getParams and will be removed in the return value of toUrl.\n * @implements {Iterable\x3c!Array\x3cstring\x3e\x3e}\n */\nclass UrlState {\n  /**\n   * @param {string} url\n   */\n  constructor(url) {\n    /** @protected {!GwsUrl} */\n    this.url \x3d new GwsUrl(url);\n\n    // Strip any search params from the hash.\n    for (const key of this.url.searchParams.keys()) {\n      this.url.hashParams.delete(key);\n    }\n  }\n\n  /**\n   * @return {!UrlState} The UrlState of the current URL.\n   */\n  static getCurrent() {\n    const url \x3d dom.getWindow().location.href;\n    if (currentUrl !\x3d url) {\n      currentUrl \x3d url;\n      currentState \x3d new UrlState(currentUrl);\n    }\n    return currentState;\n  }\n\n  /**\n   * @return {!UrlState} The UrlState during the initial page load.\n   */\n  static getInitial() {\n    return initialState;\n  }\n\n  /**\n   * @param {string} key\n   * @return {boolean} True if this parameter key will go in the hash if toUrl\n   *     is called. True for any param that are not in url_parak_key_sets.yaml\n   */\n  static isHashParamKey(key) {\n    return key !\x3d UrlState.PATH \x26\x26 !UrlState.isSearchParamKey(key);\n  }\n\n  /**\n   * @param {string} key\n   * @return {boolean} True if this parameter key will go in the search if toUrl\n   *     is called.\n   */\n  static isSearchParamKey(key) {\n    // Only known pretty or ugly params defined in url_param_key_sets.yaml as\n    // \x27pretty\x27 or \x27ugly\x27 will return true.\n    return key !\x3d UrlState.PATH \x26\x26 urlParamKeys.isPrimaryParamKey(key);\n  }\n\n  /**\n   * @return {!UrlState.Mutable} A mutable copy of the UrlState.\n   */\n  mutable() {\n    return new UrlState.Mutable(this.toString());\n  }\n\n  /**\n   * Returns whether there is a value for a key in either the search or\n   * the hash depending on whether the key is primary or update.\n   * @param {string} key\n   * @return {boolean}\n   */\n  has(key) {\n    if (key \x3d\x3d UrlState.PATH) {\n      return true;\n    } else if (UrlState.isSearchParamKey(key)) {\n      return this.url.searchParams.has(key);\n    } else {\n      return this.url.hashParams.has(key);\n    }\n  }\n\n  /**\n   * Returns the parameter value for the key from either the search or\n   * the hash depending on whether the key is primary or update.\n   * @param {string} key\n   * @return {string|undefined}\n   */\n  get(key) {\n    if (key \x3d\x3d UrlState.PATH) {\n      return this.pathname();\n    } else if (UrlState.isSearchParamKey(key)) {\n      return this.url.searchParams.get(key);\n    } else {\n      return this.url.hashParams.get(key);\n    }\n  }\n\n  /**\n   * The protocol scheme of the URL, including the final \x27:\x27, e.g. \x27http:\x27\n   * @return {string}\n   */\n  protocol() {\n    return this.url.protocol;\n  }\n\n  /**\n   * The pathname of the URL.\n   * @return {string}\n   */\n  pathname() {\n    return this.url.pathname;\n  }\n\n  /**\n   * @param {boolean\x3d} relative If true, exclude all URL parts before the path.\n   * @return {string} A modification of the current URL that has been updated\n   *     with the provided params.\n   * @override\n   */\n  toString(relative \x3d false) {\n    return this.url.toString(relative);\n  }\n\n  /**\n   * Equality is defined as having all of the same base URL and parameters,\n   * regardless of whether they\x27re in the same order. If you need order\n   * equality, use toString() \x3d\x3d toString() instead.\n   * @param {!UrlState} urlState\n   * @param {boolean\x3d} ignoreOrigin\n   * @return {boolean}\n   */\n  equals(urlState, ignoreOrigin \x3d true) {\n    if (!ignoreOrigin \x26\x26\n        (this.url.protocol !\x3d urlState.url.protocol ||\n         this.url.hostname !\x3d urlState.url.hostname)) {\n      return false;\n    }\n    if (this.url.pathname !\x3d urlState.url.pathname ||\n        this.url.searchParams.size() !\x3d urlState.url.searchParams.size() ||\n        this.url.hashParams.size() !\x3d urlState.url.hashParams.size()) {\n      return false;\n    }\n    for (const [key, value] of urlState) {\n      if (value !\x3d this.get(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @return {!Iterator\x3c!Array\x3cstring\x3e\x3e}\n   */\n  [Symbol.iterator]() {\n    /**\n     * NOTE(twilkinson): We don\x27t use a generator because the polyfill is\n     * expensive.\n     * @type {!Array\x3c!Array\x3cstring\x3e\x3e}\n     */\n    const entriesArr \x3d [];\n    entriesArr.push([UrlState.PATH, this.url.pathname]);\n    for (const [key, value] of this.url.searchParams) {\n      if (UrlState.isSearchParamKey(key)) {\n        entriesArr.push([key, value]);\n      }\n    }\n    for (const entry of this.url.hashParams) {\n      entriesArr.push(entry);\n    }\n    return /** @type {!Iterable\x3c!Array\x3cstring\x3e\x3e} */ (\n        entriesArr)[Symbol.iterator]();\n  }\n\n  /**\n   * @package Visible for testing.\n   */\n  static init() {\n    currentUrl \x3d dom.getWindow().location.href;\n    currentState \x3d new UrlState(currentUrl);\n    initialState \x3d currentState;\n  }\n}\n\n/**\n * @const {string}\n */\nUrlState.PATH \x3d \x27/\x27;\n\n/**\n * A mutable version of UrlState. UrlState is immutable so that it can be\n * cached. To get a mutable copy of a UrlState, call mutable().\n */\nUrlState.Mutable \x3d class extends UrlState {\n  /**\n   * @param {string} url\n   */\n  constructor(url) {\n    super(url);\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @return {!UrlState.Mutable} this\n   */\n  set(key, value) {\n    if (key \x3d\x3d UrlState.PATH) {\n      this.url.pathname \x3d value;\n    } else if (UrlState.isSearchParamKey(key)) {\n      this.url.searchParams.set(key, value);\n    } else {\n      this.url.hashParams.set(key, value);\n    }\n    return this;\n  }\n\n  /**\n   * @param {string} key\n   * @return {!UrlState.Mutable} this\n   */\n  delete(key) {\n    if (key \x3d\x3d UrlState.PATH) {\n      this.url.pathname \x3d UrlState.PATH;\n    } else if (UrlState.isSearchParamKey(key)) {\n      this.url.searchParams.delete(key);\n    } else {\n      this.url.hashParams.delete(key);\n    }\n    return this;\n  }\n\n  /**\n   * This returns the underlying GwsUrl object. Mutations to the returned GwsUrl\n   * will also affect the UrlState.\n   * @return {!GwsUrl}\n   */\n  getUrl() {\n    return this.url;\n  }\n};\n\nUrlState.init();\n\nexports \x3d UrlState;\n\n//# sourceURL\x3dhttps://qs/gws/js/url/url_state.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy4u');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy4u');

}catch(e){_DumpException(e)}
/* _Module_:sye9 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sye9');
var $googDebugFname="googledata/html/templates/gws/head/xjs/csi/csi_common.js";
eval("/**\n * @fileoverview Common constants used by head.js and tail.js.\n */\n\ngoog.provide(\x27gws.csi.common\x27);\n\ngoog.require(\x27goog.log\x27);\n\ngoog.scope(function() {\nconst common \x3d gws.csi.common;\n\n/** @private {?goog.log.Logger} */\ncommon.logger_ \x3d goog.log.getLogger(\x27gws.csi.common\x27);\n\n/**\n * The host and path to which we should make CSI requests. Relative urls are\n * accepted.\n * @type {string}\n */\ncommon.csiBaseUri \x3d \x27/gen_204\x27;\n\n\n/**\n * Whether we send CSI beacons via navigator.sendBeacon or imgsrc.\n * If true, we use navigator.sendBeacon.\n * @type {boolean}\n */\ncommon.useNavSendBeacon \x3d false;\n\n\n/**\n * Whether we send CSI beacons via the new log transport at gws/js/log.\n * @type {boolean}\n */\ncommon.useNewLogTransport \x3d false;\n\n\n/**\n * Whether we send downlinMax attribute from navigator.connection\n * in the CSI beacon.\n * @type {boolean}\n */\ncommon.sendDownlinkMax \x3d false;\n\n/**\n * Whether secondary xjs load times should be tracked.\n * @type {boolean}\n */\ncommon.trackSecondaryXjsLoadTimes \x3d false;\n\n/**\n * @const {string} The start label.\n */\ncommon.LABEL_WSRT \x3d \x27wsrt\x27;\n\n\n/**\n * @const {string} The start label.\n */\ncommon.LABEL_START \x3d \x27start\x27;\n\n\n/**\n * @const {string} The ticks identifier.\n */\ncommon.TICKS \x3d \x27t\x27;\n\n\n/**\n * @const {string} The extra params identifier.\n */\ncommon.EXTRA \x3d \x27e\x27;\n\n/**\n * @const {string} The chrome API.\n */\ncommon.CHROME_API \x3d \x27chrome\x27;\n\n\n/**\n * @private {!Array\x3c!Function\x3e} Queue of callback functions to execute once csi\n *     module interface config data is available.\n */\ncommon.initializationCallbacks_ \x3d [];\n\n/**\n * @private {boolean} Whether module interface config has been initialized.\n */\ncommon.initialized_ \x3d false;\n\n/**\n * Decorates the passed function such that it only executes after the csi\n * module interface config is available.\n * @param {!Function} fn The function to decorate.\n * @return {!Function} The passed function, wrapped such that execution before\n *     module interface initialization is deferred until module interface\n *     configs become available.  Execution after initialization is passed\n *     through immediately.  The returned function always returns undefined.\n */\ncommon.runAfterConfigAvailable \x3d function(fn) {\n  // Not using arrow functions below because we have to use #apply anyway for\n  // argument binding.  Also using arrow functions would add needless\n  // transpilation bloat to output.\n  return function() {\n    const args \x3d arguments;\n    const that \x3d /** @type {!Object} */ (this);\n    if (common.initialized_) {\n      fn.apply(that, args);\n    } else {\n      common.initializationCallbacks_.push(function() {\n        fn.apply(that, args);\n      });\n    }\n  };\n};\n\n/**\n * Performs page initialization.\n * @param {!Object} config Module configuration options.\n */\ncommon.init \x3d function(config) {\n  goog.log.info(\n      common.logger_,\n      `CSI common init running with config: ${JSON.stringify(config)}`);\n\n  if (config[\x27cbu\x27]) {\n    common.csiBaseUri \x3d config[\x27cbu\x27];\n  }\n  if (config[\x27scvnsb\x27]) {\n    common.useNavSendBeacon \x3d config[\x27scvnsb\x27];\n  }\n  if (config[\x27scvnlt\x27]) {\n    common.useNewLogTransport \x3d config[\x27scvnlt\x27];\n  }\n  if (config[\x27dlm\x27]) {\n    common.sendDownlinkMax \x3d config[\x27dlm\x27];\n  }\n  if (config[\x27spm\x27]) {\n    common.trackSecondaryXjsLoadTimes \x3d true;\n  }\n\n  common.initialized_ \x3d true;\n\n  for (let i \x3d 0; i \x3c common.initializationCallbacks_.length; i++) {\n    common.initializationCallbacks_[i]();\n  }\n};\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/csi/csi_common.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sye9');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sye9');

}catch(e){_DumpException(e)}
/* _Module_:sye8 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sye8');
var $googDebugFname="googledata/html/templates/gws/head/xjs/csi/ads_csi.js";
eval("// Copyight 2012 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview A script for CSI in ads.\n * @author sihuang@google.com (William Huang)\n */\n\ngoog.provide(\x27gws.adsCsi\x27);\n\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27gws.ads.common.util\x27);\n\n\n/**\n * The ID for top block (including top ads and third units).\n * @private\n */\ngws.adsCsi.TOP_BLOCK_ID_ \x3d \x27tvcap\x27;\n\n\n/**\n * The ID for the across top block (including shopping unit).\n * @private\n */\ngws.adsCsi.ACROSS_TOP_BLOCK_ID_ \x3d \x27atvcap\x27;\n\n\n/**\n * The class for marking a block within tvcap/atvcap for excluding from\n * height calculations.\n * @private\n */\ngws.adsCsi.VCAP_SPECIAL_EXCLUDE_ \x3d \x27vcsx\x27;\n\n\n/**\n * The class for marking a block within vcsx for including in height\n * calculations.\n * @private\n */\ngws.adsCsi.VCAP_INCLUDE_ \x3d \x27vci\x27;\n\n\n/**\n * The class for marking a block that is not a descendant of tvcap/atvcap for\n * including in height calculations.\n * @private\n */\ngws.adsCsi.VCAP_SPECIAL_INCLUDE_ \x3d \x27vcsi\x27;\n\n\n/**\n * The class for marking a block within vcsi to be excluded from height\n * calculations.\n * @private\n */\ngws.adsCsi.VCAP_EXCLUDE_ \x3d \x27vcx\x27;\n\n\n/**\n * The ID for top ad block.\n * @private\n */\ngws.adsCsi.TOP_AD_ID_ \x3d \x27tads\x27;\n\n\n/**\n * The ID for bottom ad block.\n * @private\n */\ngws.adsCsi.BOTTOM_AD_ID_ \x3d \x27tadsb\x27;\n\n\n/**\n * This method is specifically for calculating the real height of the #tvcap\n * and #atvcap block. Instead of getting its offsetHeight and margins,\n * this method computes the heights of its content separately and add them up.\n * The reason why we are doing this is because of the margin collapse\n * (https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing).\n * See b/12857587.\n *\n * @param {string} containerId The container ID of the div.\n * @return {number} The height of #tvcap/#atvcap element or 0 if not exist.\n */\ngws.adsCsi.calculateVcapHeight \x3d function(containerId) {\n  const vcapContainer \x3d goog.dom.getElement(containerId);\n  if (!vcapContainer) {\n    return 0;\n  }\n  const content \x3d goog.dom.getChildren(vcapContainer);\n  if (!content || content.length \x3d\x3d 0) {\n    return 0;\n  }\n\n  let totalHeight \x3d 0;\n  for (let i \x3d 0; i \x3c content.length; ++i) {\n    totalHeight +\x3d gws.ads.common.util.getHeight(content[i]);\n  }\n\n  // For non-contiguous blocks within tvcap/atvcap, we can exclude sections\n  // from vcap height calculations.\n  const excludeBlocks \x3d goog.dom.getElementsByClass(\n      gws.adsCsi.VCAP_SPECIAL_EXCLUDE_, vcapContainer);\n  for (let j \x3d 0; j \x3c excludeBlocks.length; ++j) {\n    totalHeight -\x3d gws.ads.common.util.getHeight(excludeBlocks[j]);\n    // Within the excluded blocks, we can also re-include sections into vcap\n    // height calculations\n    const includeBlocks \x3d\n        goog.dom.getElementsByClass(gws.adsCsi.VCAP_INCLUDE_, excludeBlocks[j]);\n    for (let k \x3d 0; k \x3c includeBlocks.length; ++k) {\n      totalHeight +\x3d gws.ads.common.util.getHeight(includeBlocks[k]);\n    }\n  }\n\n  return totalHeight;\n};\n\n\n/**\n * This method is specifically for calculating the real height of the special\n * elements with class VCAP_SPECIAL_INCLUDE_ which are not descendants of #tvcap\n * and #atvcap. VCAP_EXCLUDE_ is used to re-exclude sections from vcap height\n * calculation. Instead of getting its offsetHeight and margins, this method\n * computes the height of its content separately and add them up. The reason why\n * we are doing this is because of the margin collapse\n * (https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing).\n * See b/12857587.\n *\n * @return {number} The height of specially included elements or 0 if not exist.\n */\ngws.adsCsi.calculateSpecialIncludeHeight \x3d function() {\n  let totalHeight \x3d 0;\n\n  const includeBlocks \x3d\n      goog.dom.getElementsByClass(gws.adsCsi.VCAP_SPECIAL_INCLUDE_);\n  for (let i \x3d 0; i \x3c includeBlocks.length; ++i) {\n    totalHeight +\x3d gws.ads.common.util.getHeight(includeBlocks[i]);\n    // Within the included blocks, we can also re-exclude sections into vcap\n    // height calculations\n    const excludeBlocks \x3d\n        goog.dom.getElementsByClass(gws.adsCsi.VCAP_EXCLUDE_, includeBlocks[i]);\n    for (let j \x3d 0; j \x3c excludeBlocks.length; ++j) {\n      totalHeight -\x3d gws.ads.common.util.getHeight(excludeBlocks[j]);\n    }\n  }\n\n  return totalHeight;\n};\n\n\n/**\n * Returns the reported heights of the top and bottom ad blocks, and then\n * makes a string in the form of\n * \x22tv.\x3ctvcap-height\x3e,t.\x3ctop-ad-height\x3e,b.\x3cbottom-ad-height\x3e\x22\n * and stores it in the given object. If any of the heights is 0, that part is\n * omitted. Any combination of TOP_BLOCK_ID_ and ACROSS_TOP_BLOCK_ID_ can have\n * height. Reported heights are rounded to the nearest integers for convenience.\n *\n * @return {string}\n */\ngws.adsCsi.getReportedHeights \x3d function() {\n  const topBlockHeight \x3d\n      Math.round(gws.adsCsi.calculateVcapHeight(gws.adsCsi.TOP_BLOCK_ID_));\n  const acrossTopBlockHeight \x3d Math.round(\n      gws.adsCsi.calculateVcapHeight(gws.adsCsi.ACROSS_TOP_BLOCK_ID_));\n  const specialIncludeHeight \x3d\n      Math.round(gws.adsCsi.calculateSpecialIncludeHeight());\n  const topAdHeight \x3d\n      Math.round(gws.ads.common.util.getHeight(gws.adsCsi.TOP_AD_ID_));\n  const bottomAdHeight \x3d\n      Math.round(gws.ads.common.util.getHeight(gws.adsCsi.BOTTOM_AD_ID_));\n\n  let heights \x3d [];\n  const topVcapHeight \x3d\n      acrossTopBlockHeight + topBlockHeight + specialIncludeHeight;\n  if (topVcapHeight) {\n    heights.push(\x27tv.\x27 + topVcapHeight);\n  }\n  if (topAdHeight) {\n    heights.push(\x27t.\x27 + topAdHeight);\n  }\n  if (bottomAdHeight) {\n    heights.push(\x27b.\x27 + bottomAdHeight);\n  }\n  return heights.join(\x27,\x27);\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/csi/ads_csi.js\n");

$googDebugFname=undefined;
var $googDebugFname="gws/js/viewport/above_the_fold.js";
goog.loadModule("goog.module(\x27search.viewport.isAboveTheFold\x27);\n\n/**\n * Tests if an element is \x22Above the Fold\x22. If requireHorizontallyInViewport is\n * true, \x22Above the Fold\x22 means the element would be visible to a user with\n * viewport at the top-left. If requireHorizontallyInViewport is false, \x22Above\n * the Fold\x22 means the element is within the vertical boundaries of a viewport\n * at the top-left, but may be offscreen horizontally.\n *\n * _WARNING: This is buggy in Internet Explorer._\n * TODO(b/68661315): Figure out what\x27s going on with IE.\n *\n * @param {?Element} element The element to test.\n * @param {boolean} requireHorizontallyInViewport If true, at least one pixel\n *     of the element must be within the viewport\x27s horizontal boundaries in\n *     order to be considered above the fold. If false, the horizontal position\n *     is not considered.\n * @return {boolean} True if the element is visible and any portion of\n *     it is in the viewport when scrolled to the top left of the page.\n */\nfunction isAboveTheFold(element, requireHorizontallyInViewport) {\n  if (!element || (element.style.display \x3d\x3d \x27none\x27)) {\n    return false;\n  }\n  if (document.defaultView \x26\x26 document.defaultView.getComputedStyle) {\n    const computedStyle \x3d document.defaultView.getComputedStyle(element);\n    if (computedStyle \x26\x26\n        (computedStyle[\x27visibility\x27] \x3d\x3d \x27hidden\x27 ||\n         computedStyle[\x27height\x27] \x3d\x3d \x270px\x27 || computedStyle[\x27width\x27] \x3d\x3d \x270px\x27)) {\n      return false;\n    }\n  }\n\n  // Not exactly sure why this is here but this looks like it\x27s\n  // supported everywhere now.\n  // http://caniuse.com/#search\x3dgetBoundingClientRect\n  // TODO(b/68661315): Remove if unnecessary.\n  if (!element.getBoundingClientRect) {\n    // Assume the element is in the viewport.\n    return true;\n  }\n\n  // getBoundingClientRect is off in IE:\n  // {@see http://stackoverflow.com/a/10231202}\n  // {@see goog.style.getBoundingClientRect_}\n  const rect \x3d element.getBoundingClientRect();\n  // This gives the ABSOLUTE position of the element.\n  // There is potentially a bug in IE10 on touch screens.\n  // {@see https://bugs.jquery.com/ticket/13416}\n  // {@see goog.dom.getDocumentScroll_}\n  const elementOffset \x3d {\n    x: rect.left + window.pageXOffset,\n    y: rect.top + window.pageYOffset,\n  };\n\n  // If the element is entirely above or to the left of the page,\n  // return false.\n  if (elementOffset.y + rect.height \x3c 0 ||\n      (requireHorizontallyInViewport \x26\x26 elementOffset.x + rect.width \x3c 0) ||\n      rect.height \x3c\x3d 0 || (requireHorizontallyInViewport \x26\x26 rect.width \x3c\x3d 0)) {\n    return false;\n  }\n  // Report whether the upper left corner of the element is within the\n  // viewport.\n  return (elementOffset.y \x3c\x3d\n          (window.innerHeight || document.documentElement.clientHeight)) \x26\x26\n      (!requireHorizontallyInViewport ||\n       (elementOffset.x \x3c\x3d\n        (window.innerWidth || document.documentElement.clientWidth)));\n}\n\nexports \x3d isAboveTheFold;\n\n//# sourceURL\x3dhttps://qs/gws/js/viewport/above_the_fold.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/csi/csi_tail_lib.js";
eval("/**\n * @fileoverview GWS-specific branched version of CSI. This code was branched\n * from the canonical version in //javascript/timing.\n *\n * @author jandrews@google.com (Jacob Hoffman-Andrews)\n * @author narayan@google.com (Narayan Kamath)\n */\n\ngoog.provide(\x27gws.csi.taillib\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.EventType\x27);\ngoog.require(\x27goog.labs.dom.PageVisibilityState\x27);\ngoog.require(\x27gws.adsCsi\x27);\ngoog.require(\x27gws.csi.common\x27);\ngoog.require(\x27gws.dom\x27);\ngoog.require(\x27search.cache.Namespace\x27);\ngoog.require(\x27search.cache.factory\x27);\ngoog.require(\x27search.latency.LatencyParams\x27);\ngoog.require(\x27search.log.LatencyLogBuilder\x27);\ngoog.require(\x27search.log.errorLogger\x27);\ngoog.require(\x27search.log.transport.Transport\x27);\ngoog.require(\x27search.url.UrlState\x27);\ngoog.require(\x27search.viewport.isAboveTheFold\x27);\ngoog.require(\x27storagecache.PersistentStorageType\x27);\n\ngoog.scope(function() {\nconst common \x3d gws.csi.common;\nconst tailLib \x3d gws.csi.taillib;\nconst isAboveTheFold \x3d goog.module.get(\x27search.viewport.isAboveTheFold\x27);\nconst ActionTypeValues \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).ActionTypeValues;\nconst CsiMetricKeys \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).CsiMetricKeys;\nconst MemoryParams \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).MemoryParams;\nconst ProtocolValues \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).ProtocolValues;\nconst SourceValues \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).SourceValues;\nconst WebLatencyParams \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).WebLatencyParams;\nconst LatencyLogBuilder \x3d goog.module.get(\x27search.log.LatencyLogBuilder\x27);\nconst Transport \x3d goog.module.get(\x27search.log.transport.Transport\x27);\nconst UrlState \x3d goog.module.get(\x27search.url.UrlState\x27);\n\n/**\n * The storage key for getting redirect start times.\n * @private {string}\n */\ntailLib.JS_REDIRECT_NAV_START_KEY_ \x3d \x27nvstrt\x27;\n\n\n/**\n * Returns the absolute difference between two numbers.\n * Implemented here in case Math.abs is not available everywhere, and this\n * can be compiled away.\n * @param {number} value1 The first value.\n * @param {number} value2 The second value.\n * @return {number} The absolute difference between value1 and value2.\n */\ntailLib.absoluteDifference \x3d function(value1, value2) {\n  return value1 \x3e value2 ? value1 - value2 : value2 - value1;\n};\n\n/**\n * Records a tick for an event in the given CSI collection.\n *\n * This differs from the global function google.tick in that this function takes\n * in the actual google.timers timer object as a parameter, instead of the name\n * of the timer (e.g. google.timers.load vs. \x27load\x27).  This is because we do not\n * necessarily have access to the name of the timer in this file but do have\n * access to the timer object itself.\n *\n * @param {!Object} timer The google.timers object in which the tick should be\n *     recorded (e.g. google.timers.load, google.timers.iml, google.timers.aft,\n *     etc.).\n * @param {!CsiMetricKeys} key The CSI metric to add.\n * @param {number\x3d} timestamp The Unix timestamp at which this tick occurred.\n *     If not specified, the current time will be used. Note that omitting\n *     this value allows the CSI implementation to use the highest-precision\n *     timer possible (e.g., window.performance.now), so a timestamp should\n *     only be specified explicitly if received externally from native code.\n */\ntailLib.addTick \x3d function(timer, key, timestamp \x3d google.time()) {\n  if (timer[common.TICKS]) {\n    timer[common.TICKS][key.clearcut] \x3d {\n      \x27key\x27: key,\n      \x27ts\x27: timestamp,\n    };\n  }\n};\n\n\n/**\n * Returns the absolute timestamp for a tick.\n * @param {!Object} timer A timer object containing the tick.\n * @param {!CsiMetricKeys} csiMetricKeys The CsiMetricKeys for the tick\n *     whose value is to be returned.\n * @return {?number} The value of the tick, or undefined if either the tick or\n * \x27start\x27 do not exist.\n */\ntailLib.getTimestamp \x3d function(timer, csiMetricKeys) {\n  // NOTE(b/64394692): There have been some cases in the past where\n  //   csiMetricKeys was undefined.\n  if (csiMetricKeys) {\n    const clearcutKey \x3d csiMetricKeys.clearcut;\n    if (timer[common.TICKS] \x26\x26 timer[common.TICKS][clearcutKey]) {\n      return timer[common.TICKS][clearcutKey][\x27ts\x27] || null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Returns the relative value for a tick.\n *\n * @param {!Object} timer A timer object containing the tick.\n * @param {!CsiMetricKeys} csiMetricKeys The CsiMetricKeys for the tick\n *     whose value is to be returned.\n * @return {?number} The value of the tick, or undefined if either the tick or\n * \x27start\x27 does not exist.\n */\ntailLib.getTick \x3d function(timer, csiMetricKeys) {\n  if (timer[common.TICKS]) {\n    const timestamp \x3d tailLib.getTimestamp(timer, csiMetricKeys);\n    const start \x3d timer[common.TICKS][common.LABEL_START];\n    if (goog.isDefAndNotNull(timestamp) \x26\x26 goog.isDefAndNotNull(start)) {\n      return tailLib.absoluteDifference(timestamp, start);\n    }\n    return null;\n  }\n  return null;\n};\n\n/**\n * Computes image metrics: image load time for ATF images, count of ATF images,\n * count of lazy-loaded ATF images, count of offscreen ATF inlined images, and\n * count of below-the-fold inlined images.\n *\n * @param {?Object\x3cstring, number\x3e} imageLoadTimes An object that maps from\n *     (image.id || image.src || image.name) to the load time for that image.\n * @return {!ImageMetrics} An object containing image metric values.\n * @private\n */\ntailLib.computeImageMetrics_ \x3d function(imageLoadTimes) {\n  const result \x3d {\n    atfCount: 0,\n    atfLoadTime: 0,\n    atfLazy: 0,\n    btfInlined: 0,\n    atfOffscreenInlined: 0\n  };\n  const images \x3d document.getElementsByTagName(\x27img\x27);\n  for (const image of images) {\n    const isLazyLoaded \x3d image.hasAttribute(\x27lazy-loaded\x27);\n    const isLateLoaded \x3d google.ldi \x26\x26 image.id \x26\x26 google.ldi[image.id];\n    const isInlineDeferred \x3d\n        image.hasAttribute(\x27data-deferred\x27) \x26\x26 !isLateLoaded;\n    if (isAboveTheFold(image, true)) {\n      if (!image.hasAttribute(\x27data-noaft\x27)) {\n        ++result.atfCount;\n        if (isLateLoaded || isLazyLoaded) {\n          ++result.atfLazy;\n        }\n        const imageId \x3d image.id || image.src || image.name;\n        const imageLoadTime \x3d imageLoadTimes \x26\x26 imageLoadTimes[imageId];\n        if (imageId \x26\x26 imageLoadTime \x26\x26 imageLoadTime \x3e result.atfLoadTime) {\n          result.atfLoadTime \x3d goog.asserts.assertNumber(imageLoadTime);\n        }\n      }\n    } else if (isInlineDeferred) {\n      if (isAboveTheFold(image, false)) {\n        // Horizontally offscreen but above the fold.\n        ++result.atfOffscreenInlined;\n      } else {\n        ++result.btfInlined;\n      }\n    }\n    // No longer needed.\n    image.removeAttribute(\x27data-deferred\x27);\n  }\n  return result;\n};\n\n/**\n * Computes and logs image latency metrics. Computes and logs AFT and PRT if\n * we have not already sent those metrics in an early CSI beacon.\n * @param {!LatencyLogBuilder} latencyLogBuilder\n * @param {!Object} timer A timer object containing the tick.\n * @param {string} sn The CSI service name to attach to the beacon.\n * @private\n */\ntailLib.logLatencyMetrics_ \x3d function(latencyLogBuilder, timer, sn) {\n  if (google.timers \x26\x26 google.timers.aft) {\n    const imageMetrics \x3d tailLib.computeImageMetrics_(google.timers.aft.t);\n    latencyLogBuilder.addData(\n        WebLatencyParams.TOTAL_IMAGES_VISIBLE, String(imageMetrics.atfCount));\n    latencyLogBuilder.addData(\n        WebLatencyParams.TOTAL_IMAGES_LATENCY_ERROR,\n        String(imageMetrics.atfLazy));\n    latencyLogBuilder.addData(\n        WebLatencyParams.TOTAL_IMAGES_INLINED_BTF,\n        String(imageMetrics.btfInlined));\n    latencyLogBuilder.addData(\n        WebLatencyParams.TOTAL_IMAGES_INLINED_ATF_OFFSCREEN,\n        String(imageMetrics.atfOffscreenInlined));\n    // If we\x27ve sent an Early CSI beacon, we don\x27t need to\n    // log AFT again in this code for sn\x3dweb only.\n    if (sn !\x3d SourceValues.WEB) {\n      const timestamp \x3d imageMetrics.atfLoadTime ||\n          tailLib.getTimestamp(timer, CsiMetricKeys.PAGE_READY_TIME);\n      if (timestamp) {\n        tailLib.addTick(timer, CsiMetricKeys.ABOVE_FOLD_TIME, timestamp);\n      }\n    }\n  }\n};\n\n/**\n * @typedef {{\n *   atfCount: number,\n *   atfLoadTime: number,\n *   atfLazy: number,\n *   btfInlined: number,\n *   atfOffscreenInlined: number,\n * }}\n */\nlet ImageMetrics;\n\n/**\n * Gets the navigation start time.\n *\n * @param {!PerformanceTiming} timing The browser performance object.\n * @return {number} The navigationStart time (or fetchStart if navigationStart\n *     is missing.)\n * @private\n */\ntailLib.getNavigationStart_ \x3d function(timing) {\n  return timing.navigationStart || timing.fetchStart;\n};\n\n\n/**\n * Computes additional metrics using html5\x27s Performance Timing interface.\n *\n * @param {!LatencyLogBuilder} latencyLogBuilder The Object to add metrics to\n * @param {number} start Timestamp taken when the JS at the top of the page is\n *     received and excecuted by the browser.\n * @param {number\x3d} wsrt The value of wsrt for this event.\n * @private\n */\ntailLib.logRtExtra_ \x3d function(latencyLogBuilder, start, wsrt \x3d undefined) {\n  /** @type {?PerformanceTiming} */\n  const timing \x3d window.performance \x26\x26 window.performance.timing;\n  if (timing) {\n    let jsRedirectTime \x3d 0;\n    const storage \x3d search.cache.factory.get(\n        storagecache.PersistentStorageType.SESSION,\n        search.cache.Namespace.JS_REDIRECT);\n    const navStart \x3d storage \x26\x26 storage.get(tailLib.JS_REDIRECT_NAV_START_KEY_);\n    if (typeof navStart \x3d\x3d \x27number\x27 \x26\x26 !isNaN(navStart)) {\n      jsRedirectTime \x3d tailLib.getNavigationStart_(timing) - navStart;\n    }\n    storage \x26\x26 storage.remove(tailLib.JS_REDIRECT_NAV_START_KEY_);\n    if (wsrt) {\n      latencyLogBuilder.addEntry(\n          CsiMetricKeys.WEB_SERVER_RESPONSE_TIME, wsrt + jsRedirectTime);\n    } else {\n      const ref \x3d tailLib.getNavigationStart_(timing);\n      if (ref \x26\x26 start) {\n        // wsrt: Web timing SRT.\n        latencyLogBuilder.addEntry(\n            CsiMetricKeys.WEB_SERVER_RESPONSE_TIME,\n            start - ref + jsRedirectTime);\n      }\n    }\n    if (jsRedirectTime) {\n      latencyLogBuilder.addEntry(\n          CsiMetricKeys.JS_REDIRECT_TIME, jsRedirectTime);\n    }\n    const timingVars \x3d [\n      [\x27connectEnd\x27, \x27connectStart\x27, CsiMetricKeys.CONNECTION_SETUP_TIME],\n      [\x27domainLookupEnd\x27, \x27domainLookupStart\x27, CsiMetricKeys.DNS_LOOKUP_TIME],\n      [\x27redirectEnd\x27, \x27redirectStart\x27, CsiMetricKeys.REDIRECT_TIME],\n      [\x27responseEnd\x27, \x27requestStart\x27, CsiMetricKeys.REQUEST_TIME],\n      [\x27responseEnd\x27, \x27responseStart\x27, CsiMetricKeys.RESPONSE_TIME],\n      [\x27connectEnd\x27, \x27secureConnectionStart\x27, CsiMetricKeys.SSL_TIME],\n      [\x27requestStart\x27, \x27navigationStart\x27, CsiMetricKeys.REQUEST_START_TIME],\n      [\x27fetchStart\x27, \x27navigationStart\x27, CsiMetricKeys.UNLOAD_TIME],\n      [\x27connectStart\x27, \x27navigationStart\x27, CsiMetricKeys.CONNECTION_START_TIME],\n      [\x27domInteractive\x27, \x27navigationStart\x27, CsiMetricKeys.DOM_INTERACTIVE_TIME],\n    ];\n    for (let i \x3d 0; i \x3c timingVars.length; i++) {\n      if (timing[timingVars[i][0]] \x26\x26 timing[timingVars[i][1]]) {\n        latencyLogBuilder.addEntry(\n            /** @type {CsiMetricKeys} */ (timingVars[i][2]),\n            timing[timingVars[i][0]] - timing[timingVars[i][1]]);\n      }\n    }\n  }\n};\n\n\n/**\n * Adds the connection data to the LatencyLogBuilder.\n * @param {!LatencyLogBuilder} latencyLogBuilder\n * @private\n */\ntailLib.logConnectionData_ \x3d function(latencyLogBuilder) {\n  // If we have a window.navigator.connection, use this to report the kind\n  // of connection being used.  This can be an enormous help in slicing\n  // latency results (especially mobile results) by connection flavor.\n  // This is available on Android Chrome, Android Browser and Android GSA.\n  //\n  // The window.navigator.connection object will look like:\n  //  {\n  //    \x22type\x22: \x223\x22,\n  //    \x22UNKNOWN\x22: \x220\x22,\n  //    \x22ETHERNET\x22: \x221\x22,\n  //    \x22WIFI\x22: \x222\x22,\n  //    \x22CELL_2G\x22: \x223\x22,\n  //    \x22CELL_3G\x22: \x224\x22\n  //  }\n  //\n  // where \x27type\x27 tells us the type of connection, and the other values give\n  // a legible interpretation of the connection type number.   The connection\n  // type is reported here as the legible version in the (all too likely)\n  // event that multiple browser vendors choose similar but not-quite-the-same\n  // mappings for numeric values.\n  //\n  // Thus, CSI from Android devices on mobileweb, mobilewebhp and AGSA will\n  // report a parameter such as \x22\x26conn\x3dCELL_3G\x22.  This will add 10 or 14 bytes\n  // to CSI traffic from these devices.\n  //\n  // Recent Android WebView versions don\x27t have the navigator.connection\n  // property, so if it is not present we also check whether we have agsa_ext\n  // exposed and use the value from there instead.\n\n  // Use goog.dom.getWindow() so that we can fake the window in testing.\n  const win \x3d goog.dom.getWindow();\n  const conn \x3d win.navigator \x26\x26 win.navigator.connection;\n\n  let connValue;\n  if (conn) {\n    // Get the numeric version of the connection type.\n    const connNumber \x3d conn.type;\n\n    // Reverse lookup of the numeric type to get the connection type name.\n    for (const connName in conn) {\n      if (connName !\x3d \x27type\x27 \x26\x26 conn[connName] \x3d\x3d connNumber) {\n        connValue \x3d connName;\n        break;\n      }\n    }\n    // In Chrome window.navigator.connection.type is a string describing the\n    // connection type. If we couldn\x27t perform the reverse lookup, then assume\n    // this is Chrome and send the type string in the conn argument. In some\n    // cases this will report the numerical value of type.\n    if (!goog.isDef(connValue)) {\n      connValue \x3d connNumber;\n    }\n    if (common.sendDownlinkMax \x26\x26 goog.isDef(conn.downlinkMax)) {\n      latencyLogBuilder.addData(\n          WebLatencyParams.NETWORK_DOWNLINK_MAX, String(conn.downlinkMax));\n    }\n  }\n  if (win.agsa_ext) {\n    // AGSA also exposes connection information via\n    // agsa_ext.getNetworkConnectionType.\n    //\n    // Like navigator.connection, getNetworkConnectionType will classify the\n    // traffic into one of these categories: 2G, 3G, 4G or WIFI\n    if (win.agsa_ext.getNetworkConnectionType) {\n      connValue \x3d win.agsa_ext.getNetworkConnectionType();\n    }\n    // Report the detailed connection type information if it is available. This\n    // function will return a value from\n    // google3/speech/service/s3/proto/mobile-user.proto.\n    //\n    // getDetailedNetworkConnectionType will return the actual network type\n    // instead of the class of the network.\n    if (win.agsa_ext.getDetailedNetworkConnectionType) {\n      latencyLogBuilder.addData(\n          WebLatencyParams.NETWORK_TYPE,\n          String(win.agsa_ext.getDetailedNetworkConnectionType()));\n    }\n  }\n  if (goog.isDef(connValue)) {\n    latencyLogBuilder.addData(\n        WebLatencyParams.CONNECTION_TYPE, String(connValue));\n  }\n};\n\n\n/**\n * Adds a set of parameters to the designated latencyLogBuilder. This is used to\n * add parameters that are already in object format such as the extra params in\n * a timer\n *\n * @param {!LatencyLogBuilder} latencyLogBuilder\n * @param {!Object\x3cstring, string\x3e} params\n * @private\n */\ntailLib.logParams_ \x3d function(latencyLogBuilder, params) {\n  for (const label in params) {\n    latencyLogBuilder.addData(label, params[label]);\n  }\n};\n\n/**\n * Adds a set of CSI metrics to the designated latencyLogBuilder. This is used\n * to add metrics that are already in object format, such as the ticks in a\n * google.timers timer object.\n * NOTE: This will only add the metrics if the \x27start\x27 tick is defined on the\n * timer.\n *\n * @param {!LatencyLogBuilder} latencyLogBuilder\n * @param {!Object} timer A google.timers timer object\n * @private\n */\ntailLib.logRtMetrics_ \x3d function(latencyLogBuilder, timer) {\n  // TODO(b/64571937): Here and elsewhere, create a typedef for google.timers\n  // timer objects so that functions that take in a timer can have stronger\n  // type checking.\n  const ticks \x3d timer[common.TICKS];\n  for (const clearcutKey in ticks) {\n    if (clearcutKey \x3d\x3d common.LABEL_START) {\n      continue;\n    }\n    const key \x3d ticks[clearcutKey].key;\n    const duration \x3d tailLib.getTick(timer, key);\n    if (key \x26\x26 duration) {\n      latencyLogBuilder.addEntry(key, duration);\n    } else if (!key) {\n      search.log.errorLogger.log(\n          new Error(\x27Undefined key on CsiMetricKey Proto\x27),\n          {errorContext: {k: clearcutKey}});\n    }\n  }\n};\n\n/**\n * Returns the LatencyLogBuilder that encodes all CSI timing information to\n * be sent to CSI servers for the given service and action.\n *\n * IMPORTANT NOTE: It also clears the stored timers for that action. So this\n * can be called ONLY once per timer. Please create a new timer for\n * recording more ticks after this has been called instead of reusing the\n * same timer. Adding support for not clearing the ticks (with consistent\n * semantics) needs more conditions hence increases CSI library code. We\n * also couldn\x27t find any compelling reason for adding support to call\n * \x27getReportLog_\x27 twice.\n *\n * @param {!Object} timer A timer object containing a series of ticks and a\n *     name.\n * @param {string\x3d} sn The CSI service name to attach to the beacon.\n * @param {!Transport\x3d} transport define the transport to use for the report\n * @return {?LatencyLogBuilder} The latencyLogBuilder that will report to csi.\n *     This may return null, indicating that we don\x27t want to send a beacon.\n * @private\n */\ntailLib.getReportLog_ \x3d function(timer, sn \x3d google.sn, transport \x3d undefined) {\n  // Create a new LatencyLogBuilder to store all of the metrics for the report.\n  // The transport passed in here determines how the csi report will be sent\n  // (i.e. gen_204 or Clearcut)\n  const latencyLogBuilder \x3d new LatencyLogBuilder(\n      /** @type {SourceValues} */ (sn), ActionTypeValues.CSI, transport);\n\n  // Add the extra params of the timer to latencyLogBuilder (e.g. \x27imn\x27)\n  tailLib.logParams_(latencyLogBuilder, timer[common.EXTRA]);\n\n  if (window.parent !\x3d window) {\n    latencyLogBuilder.addData(WebLatencyParams.WINDOW_IN_FRAME, \x271\x27);\n  }\n\n  tailLib.logConnectionData_(latencyLogBuilder);\n  tailLib.logLatencyMetrics_(latencyLogBuilder, timer, sn);\n\n  const ticks \x3d timer[common.TICKS];\n  const start \x3d ticks[common.LABEL_START];\n\n  tailLib.logRtMetrics_(latencyLogBuilder, timer);\n  tailLib.logRtExtra_(latencyLogBuilder, start, timer[common.LABEL_WSRT]);\n\n  delete ticks[common.LABEL_START];\n\n  const memInfo \x3d tailLib.getMemoryFootprint();\n  if (memInfo) {\n    latencyLogBuilder.addData(MemoryParams.MEMORY_PARAM, memInfo);\n  }\n  const workerStart \x3d tailLib.mod.getWorkerStart();\n  if (workerStart) {\n    latencyLogBuilder.addData(WebLatencyParams.WORKER_START, workerStart);\n  }\n\n  return latencyLogBuilder;\n};\n\n/**\n * Gets the JS memory footprint from the mod when the\n * mendel flag is enabled.\n * @return {string}\n */\ntailLib.getMemoryFootprint \x3d function() {\n  return \x27\x27;\n};\n\n\ntailLib.mod \x3d {\n  /**\n   * Send CSI data via Clearcut. Real implementation will be provided in a\n   * pinto mod. This is not the API we\x27d want in the long-term, but simply a\n   * way to get some experiment data on effectiveness of sending CSI via\n   * Clearcut.\n   * @param {string} uri The CSI beacon uri.\n   * @private\n   */\n  sendReportViaClearcut_(uri) {},\n\n  /**\n   * Gets the workerStart time when the mod is enabled.\n   * @return {string}\n   */\n  getWorkerStart() {\n    return \x27\x27;\n  },\n};\n\n/**\n * Sends report to CSI if the page is not in \x27prerender\x27 state.\n *\n * @param {!LatencyLogBuilder} latencyLogBuilder The LatencyLogBuilder that will\n *   send the report.\n * @return {boolean} true if the report is sent, false otherwise.\n * @private\n */\ntailLib.sendReportUnlessPrerendering_ \x3d function(latencyLogBuilder) {\n  if (gws.dom.getPageVisibilityMonitor().getVisibilityState() \x3d\x3d\n      goog.labs.dom.PageVisibilityState.PRERENDER) {\n    return false;\n  }\n  latencyLogBuilder.log();\n  return true;\n};\n\n\n/**\n * Sends a logging request to the CSI server for the given service and action.\n * Report is declared only if window[common.namespace] already exists. It may\n * not exist in cases where head is included only for a %age of users but tail\n * is statically compiled.\n *\n * IMPORTANT NOTE: It also clears the stored timers for that action. So this\n * can be called ONLY once per timer. Please create a new timer for recording\n * more ticks after a report has been sent instead of reusing the same timer.\n * The ticks and other measurements are cleared by default as otherwise\n * instrumentation bugs can cause them to be sent again and again.\n *\n * @param {!Object} timer Same as that of \x27getReportUri_\x27 method.\n * @param {string\x3d} sn The CSI service name to attach to the beacon.\n * @param {!Transport\x3d} transport The transport to use for the report\n */\ntailLib.report \x3d common.runAfterConfigAvailable(\n    (timer, sn \x3d undefined, transport \x3d undefined) \x3d\x3e {\n      tailLib.eventuallySendReport_(\n          tailLib.getReportLog_(timer, sn, transport));\n    });\n\n\n/**\n * Sends the report if the page is not in the \x27prerender\x27 visibility state. If\n * it is, then wait until we state transitions out of that state until sending\n * the report.\n *\n * @param {?LatencyLogBuilder} latencyLogBuilder Used to send csi report\n * @private\n */\ntailLib.eventuallySendReport_ \x3d function(latencyLogBuilder) {\n  // Return early if there is nothing to report\n  if (!latencyLogBuilder) {\n    return;\n  }\n\n  // Add an event listener to deal with pages that are prerendered.\n  // Browsers that don\x27t support the API will return null for\n  // getVisibilityState().\n  if (gws.dom.getPageVisibilityMonitor().getVisibilityState() \x3d\x3d\n      goog.labs.dom.PageVisibilityState.PRERENDER) {\n    // This acts as a safeguard in case the listener removal below fails\n    // for any reason. It ensures that the report is sent only the first\n    // time the listener is called i.e., when the document moved from\n    // prerender state. As per the spec, it can never reenter the prerender\n    // state.\n    let listenerExecuted \x3d false;\n\n    /**\n     * Event handler for page visibility state change. If the page is not\n     * in prerender state, it sends CSI report and removes the registered\n     * listener.\n     */\n    const listener \x3d function() {\n      if (listenerExecuted) {\n        return;\n      }\n\n      // Append additional param to identify beacons generated during\n      // prerendering.\n      latencyLogBuilder.addData(WebLatencyParams.PRERENDER, \x271\x27);\n\n      if (tailLib.sendReportUnlessPrerendering_(latencyLogBuilder)) {\n        listenerExecuted \x3d true;\n\n        // Remove the listener once the document moves from \x27prerender\x27\n        // state.\n        goog.events.unlisten(\n            gws.dom.getPageVisibilityMonitor(),\n            goog.events.EventType.VISIBILITYCHANGE, listener);\n      }\n    };\n    goog.events.listen(\n        gws.dom.getPageVisibilityMonitor(),\n        goog.events.EventType.VISIBILITYCHANGE, listener);\n    return;\n  }\n\n  latencyLogBuilder.log();\n  // Currently nothing is being done with the uri in this function, so we can\n  // pass in an empty string.\n  const uri \x3d \x27\x27;\n  tailLib.mod.sendReportViaClearcut_(uri);\n};\n\n\n/**\n * Wrapper function for CSI reporting. Additional processing can be added here\n * before the real report takes place. It calls tailLib.report to report all\n * the parameters.\n *\n * @param {!Object\x3d} timer An object containing the base CSI ticks.\n * @param {string\x3d} sn The CSI service name to attach to the beacon.\n * @param {!Transport\x3d} transport\n */\ntailLib.csiReport \x3d common.runAfterConfigAvailable(\n    (timer \x3d google.timers.load, sn \x3d undefined, transport \x3d undefined) \x3d\x3e {\n      const currentUrl \x3d UrlState.getCurrent();\n      // TODO(shengqian): this short-term fix intends to eliminate the latency\n      // noise of AGSA back navigation. Because current AGSA recommit the query\n      // when returning back to it, the introduced latency shouldn\x27t be counted.\n      // Furthermore, we want to compare new feature\n      // (go/simplify-agsa-history-management) with current latency\n      // measurements. This short-term fix will be removed once\n      // (go/simplify-agsa-history-management) fully launches.\n      const isAgsaBackNavigation \x3d currentUrl.get(\x27agsabk\x27);\n      if (isAgsaBackNavigation \x3d\x3d\x3d \x271\x27) {\n        return;\n      }\n\n      if (timer[common.TICKS]) {\n        // Propagate qsd param, for voice search speech duration.\n        // Note to code deleters: do not assess the value of this code by\n        // checking gwslog for searches with a qsd param on them.  This code may\n        // be used by a client \x22spoofing\x22 window.location.href with a qsd value\n        // that the server never saw.  (Checking CSI logs to see if we ever send\n        // CSI pings with qsd attached should be a good way to check if this\n        // code is still useful).\n        const qsd \x3d currentUrl.get(WebLatencyParams.QUERY_SPEECH_DURATION);\n        if (qsd \x26\x26 qsd.match(\x27^[0-9]+$\x27)) {\n          timer[common.EXTRA][WebLatencyParams.QUERY_SPEECH_DURATION] \x3d qsd;\n        }\n\n        // Ads specific instrumentation.\n        timer[common.EXTRA][WebLatencyParams.AD_HEIGHT] \x3d\n            gws.adsCsi.getReportedHeights();\n\n        // The real report. Put additional processing before this.\n        tailLib.report(timer, sn, transport);\n      }\n    });\n\n\n/**\n * Wrapper function for reporting an explicit set of CSI metrics.\n * @param {!Object\x3cstring, string\x3e} params A record of CGI parameters to be\n *     used in the logging query.\n * @param {string\x3d} sn The CSI service name to attach to the beacon.\n * @param {!Object\x3d} timer The google.timers timer object from which to obtain\n *     CSI metrics to be sent in the report.\n * @param {!Transport\x3d} transport\n */\ntailLib.minCsiReport \x3d function(\n    params, sn \x3d google.sn, timer \x3d undefined, transport \x3d undefined) {\n  const latencyLogBuilder \x3d new LatencyLogBuilder(\n      /** @type {!SourceValues} */ (sn), ActionTypeValues.CSI, transport);\n  tailLib.logParams_(latencyLogBuilder, params);\n  if (timer) {\n    tailLib.logRtMetrics_(latencyLogBuilder, timer);\n  }\n  latencyLogBuilder.log();\n};\n\n\n// Export all relevant symbols.\ngoog.exportSymbol(\x27google.report\x27, tailLib.report);\ngoog.exportSymbol(\x27google.csiReport\x27, tailLib.csiReport);\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/csi/csi_tail_lib.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sye8');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sye8');

}catch(e){_DumpException(e)}
/* _Module_:csi */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('csi');
var $googDebugFname="googledata/html/templates/gws/head/xjs/csi/csi_tail.js";
eval("/**\n * @fileoverview Contains JavaScript for collecting timing data via XJS. This\n * code runs inline in the csi_tail_module, which appears at (almost) the end of\n * the primary XJS response.\n *\n * Full documentation of GWS CSI events at http://go/gws-csi-timings.\n *\n * @author kylescholz@google.com (Kyle Scholz)\n */\n\ngoog.provide(\x27gws.csi.tail\x27);\n\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27gws.csi.api\x27);\ngoog.require(\x27gws.csi.common\x27);\ngoog.require(\x27gws.csi.shared.Milestone\x27);\n/** @suppress {extraRequire} csi_tail_lib.js exports google.csiReport. */\ngoog.require(\x27gws.csi.taillib\x27);\ngoog.require(\x27gws.moduleInterface\x27);\ngoog.require(\x27search.latency.LatencyParams\x27);\ngoog.require(\x27search.url.UrlState\x27);\n\ngoog.scope(function() {\nconst Milestone \x3d gws.csi.shared.Milestone;\nconst api \x3d gws.csi.api;\nconst common \x3d gws.csi.common;\nconst CsiMetricKeys \x3d\n    goog.module.get(\x27search.latency.LatencyParams\x27).CsiMetricKeys;\nconst UrlState \x3d goog.module.get(\x27search.url.UrlState\x27);\nconst tail \x3d gws.csi.tail;\n\n\n/** @private {?goog.log.Logger} */\ntail.logger_ \x3d goog.log.getLogger(\x27gws.csi\x27);\n\n/**\n * Adds timestamp of query-submission time to CSI\n *\n * QSB (and anybody else that wishes) is allowed to add a parameter\n * named \x22qsubts\x22 to a search URL for GWS.  This parameter is marked\n * in GWS as not to be propagated to subsequent page loads, so it\n * should not confuse the issue on subsequent page submits.\n * This parameter should be the number of milliseconds since the\n * Unix epoch.  The \x22qsubts\x22 parameter is added to the \x22load\x22\n * set of timers and reported in the CSI beacon as a delta between\n * the \x27start\x27 timestamp of the load timer - qsubts timestamp.\n * @private\n */\ntail.noteQuerySubmitTimestamp_ \x3d function() {\n  const qsubts \x3d UrlState.getCurrent().get(\x27qsubts\x27);\n  if (qsubts \x26\x26 qsubts.match(\x27^[0-9]+$\x27)) {\n    const querySubmitTimestamp \x3d parseInt(qsubts, 10);\n    if (querySubmitTimestamp \x3c\x3d goog.now()) {\n      google.tick(\n          \x27load\x27, CsiMetricKeys.QUERY_SUBMIT_TIMESTAMP, querySubmitTimestamp);\n      goog.log.info(\n          tail.logger_,\n          `CSI load tick - ${CsiMetricKeys.QUERY_SUBMIT_TIMESTAMP.gen204}`);\n    }\n  }\n};\n\n\ntail.init \x3d function() {\n  goog.log.info(tail.logger_, \x27CSI inline init running\x27);\n  // Only record CSI at the end of the primary XJS response if we haven\x27t\n  // already started a JESR bookmark or IG transition (or finished such a\n  // transition, if the bookmark/IG state already existed in JESR\x27s cache).\n  // Otherwise, the \x22load\x22 beacon will either be uninitialized (if waiting on a\n  // JESR network request) or initialized with a start tick after the base\n  // page\x27s \x22start\x22 tick, making the \x22xjs\x22 tick below meaningless (if JESR\n  // rendered from cache).\n  //\n  // Also, note that the CSI tail module executes even if CSI is disabled for a\n  // request, so we need to check that the CSI extern API is actually available.\n  if (api.isEnabled() \x26\x26 api.isBasePage()) {\n    // Record XJS Execution End.\n    google.tick(\x27load\x27, CsiMetricKeys.XJS_EXECUTION_END_TIME);\n    goog.log.info(\n        tail.logger_,\n        `CSI load tick - ${CsiMetricKeys.XJS_EXECUTION_END_TIME.gen204}`);\n    // Record search submit timing.\n    gws.csi.tail.noteQuerySubmitTimestamp_();\n\n    // Record XJS load time and unblock the XJS load event if we aren\x27t\n    // recording times for the secondary XJS response as well.\n    const xjsTimestamp \x3d google.time();\n    common.runAfterConfigAvailable(() \x3d\x3e {\n      if (!common.trackSecondaryXjsLoadTimes) {\n        google.tick(\x27load\x27, CsiMetricKeys.XJS_TIME, xjsTimestamp);\n        goog.log.info(\n            tail.logger_, `CSI load tick - ${CsiMetricKeys.XJS_TIME.gen204}`);\n        api.unblockLoadReport(Milestone.XJS_END);\n      }\n    })();\n  }\n};\n\n\ngws.moduleInterface.register(\x27csi\x27, {\n  [gws.moduleInterface.EventType.INIT]: config \x3d\x3e {\n    // See go/google-dot-x-csi-tail-init for more details. tail.init() never\n    // needs to be inlined as this registered function is called immediately.\n    tail.init();\n    common.init(config);\n  }\n});\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/csi/csi_tail.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('csi');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('csi');

}catch(e){_DumpException(e)}
/* _Module_:sy86 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy86');
var $googDebugFname="javascript/closure/html/utils.js";
eval("// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview HTML processing utilities for HTML in string form.\n */\n\ngoog.provide(\x27goog.html.utils\x27);\n\ngoog.require(\x27goog.string\x27);\n\n\n/**\n * Extracts plain text from HTML.\n *\n * This behaves similarly to extracting textContent from a hypothetical DOM\n * element containing the specified HTML.  Block-level elements such as div are\n * surrounded with whitespace, but inline elements are not.  Span is treated as\n * a block level element because it is often used as a container.  Breaking\n * spaces are compressed and trimmed.\n *\n * @param {string} value The input HTML to have tags removed.\n * @return {string} The plain text of value without tags, HTML comments, or\n *     other non-text content.  Does NOT return safe HTML!\n */\ngoog.html.utils.stripHtmlTags \x3d function(value) {\n  // TODO(tnicole): Make a version that extracts text attributes such as alt.\n  return goog.string.unescapeEntities(\n      goog.string.trim(\n          value\n              .replace(\n                  goog.html.utils.HTML_TAG_REGEX_,\n                  function(fullMatch, tagName) {\n                    return goog.html.utils.INLINE_HTML_TAG_REGEX_.test(\n                               tagName) ?\n                        \x27\x27 :\n                        \x27 \x27;\n                  })\n              .replace(/[\\t\\n ]+/g, \x27 \x27)));\n};\n\n\n/**\n * Matches all tags that do not require extra space.\n *\n * @private @const\n */\ngoog.html.utils.INLINE_HTML_TAG_REGEX_ \x3d\n    /^(?:abbr|acronym|address|b|em|i|small|strong|su[bp]|u)$/i;\n\n\n/**\n * Matches all tags, HTML comments, and DOCTYPEs in tag soup HTML.\n * By removing these, and replacing any \x27\x3c\x27 or \x27\x3e\x27 characters with\n * entities we guarantee that the result can be embedded into\n * an attribute without introducing a tag boundary.\n *\n * @private @const\n */\ngoog.html.utils.HTML_TAG_REGEX_ \x3d /\x3c[!\\/]?([a-z0-9]+)([\\/ ][^\x3e]*)?\x3e/gi;\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/utils.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy86');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy86');

}catch(e){_DumpException(e)}
/* _Module_:syx9 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syx9');
var $googDebugFname="java/com/google/gws/common/api/searchbox/protos/searchbox_config.jspb.js";
eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with \x27MSG_\x27 and isn\x27t a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\ngoog.provide(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\ngoog.require(\x27jspb.BinaryReader\x27);\ngoog.require(\x27jspb.BinaryWriter\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27xid\x27);\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array\x3d} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.gws.common.searchbox.protos.SearchboxConfig \x3d function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.gws.common.searchbox.protos.SearchboxConfig, jspb.Message);\nif (goog.DEBUG \x26\x26 !COMPILED) {\n  proto.gws.common.searchbox.protos.SearchboxConfig.displayName \x3d \x27proto.gws.common.searchbox.protos.SearchboxConfig\x27;\n}\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.messageXid \x3d xid(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_\x3cname\x3e, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean\x3d} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.toObject \x3d function(opt_includeInstance) {\n  return proto.gws.common.searchbox.protos.SearchboxConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.gws.common.searchbox.protos.SearchboxConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.toObject \x3d function(includeInstance, msg) {\n  var f, obj \x3d {\n    clientName: jspb.Message.getField(msg, 1),\n    requestIdentifier: jspb.Message.getField(msg, 2),\n    originalDisplayQuery: jspb.Message.getField(msg, 3),\n    dataSet: jspb.Message.getField(msg, 4),\n    focusOnLoad: jspb.Message.getField(msg, 5),\n    psuggestEnabled: jspb.Message.getField(msg, 6),\n    deviceHistoryEnabled: jspb.Message.getField(msg, 7),\n    richEntityThumbnailsEnabled: jspb.Message.getField(msg, 8)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance \x3d msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.gws.common.searchbox.protos.SearchboxConfig}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.deserializeBinary \x3d function(bytes) {\n  var reader \x3d new jspb.BinaryReader(bytes);\n  var msg \x3d new proto.gws.common.searchbox.protos.SearchboxConfig;\n  return proto.gws.common.searchbox.protos.SearchboxConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.gws.common.searchbox.protos.SearchboxConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.gws.common.searchbox.protos.SearchboxConfig}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.deserializeBinaryFromReader \x3d function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field \x3d reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setClientName(value);\n      break;\n    case 2:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setRequestIdentifier(value);\n      break;\n    case 3:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setOriginalDisplayQuery(value);\n      break;\n    case 4:\n      var value \x3d /** @type {string} */ (reader.readString());\n      msg.setDataSet(value);\n      break;\n    case 5:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setFocusOnLoad(value);\n      break;\n    case 6:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setPsuggestEnabled(value);\n      break;\n    case 7:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setDeviceHistoryEnabled(value);\n      break;\n    case 8:\n      var value \x3d /** @type {boolean} */ (reader.readBool());\n      msg.setRichEntityThumbnailsEnabled(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.serializeBinary \x3d function() {\n  var writer \x3d new jspb.BinaryWriter();\n  proto.gws.common.searchbox.protos.SearchboxConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.gws.common.searchbox.protos.SearchboxConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.serializeBinaryToWriter \x3d function(message, writer) {\n  var f \x3d undefined;\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 1));\n  if (f !\x3d null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 2));\n  if (f !\x3d null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 3));\n  if (f !\x3d null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f \x3d /** @type {?string} */ (jspb.Message.getField(message, 4));\n  if (f !\x3d null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 5));\n  if (f !\x3d null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 6));\n  if (f !\x3d null) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 7));\n  if (f !\x3d null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f \x3d /** @type {?boolean} */ (jspb.Message.getField(message, 8));\n  if (f !\x3d null) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string client_name \x3d 1;\n * @return {?string}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getClientName \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 1));\n};\n\n\n/** @param {?string|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setClientName \x3d function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearClientName \x3d function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasClientName \x3d function() {\n  return jspb.Message.getField(this, 1) !\x3d null;\n};\n\n\n/**\n * optional string request_identifier \x3d 2;\n * @return {?string}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getRequestIdentifier \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {?string|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setRequestIdentifier \x3d function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearRequestIdentifier \x3d function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasRequestIdentifier \x3d function() {\n  return jspb.Message.getField(this, 2) !\x3d null;\n};\n\n\n/**\n * optional string original_display_query \x3d 3;\n * @return {?string}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getOriginalDisplayQuery \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 3));\n};\n\n\n/** @param {?string|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setOriginalDisplayQuery \x3d function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearOriginalDisplayQuery \x3d function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasOriginalDisplayQuery \x3d function() {\n  return jspb.Message.getField(this, 3) !\x3d null;\n};\n\n\n/**\n * optional string data_set \x3d 4;\n * @return {?string}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getDataSet \x3d function() {\n  return /** @type {?string} */ (jspb.Message.getField(this, 4));\n};\n\n\n/** @param {?string|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setDataSet \x3d function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearDataSet \x3d function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasDataSet \x3d function() {\n  return jspb.Message.getField(this, 4) !\x3d null;\n};\n\n\n/**\n * optional bool focus_on_load \x3d 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getFocusOnLoad \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 5));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setFocusOnLoad \x3d function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearFocusOnLoad \x3d function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasFocusOnLoad \x3d function() {\n  return jspb.Message.getField(this, 5) !\x3d null;\n};\n\n\n/**\n * optional bool psuggest_enabled \x3d 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getPsuggestEnabled \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 6));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setPsuggestEnabled \x3d function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearPsuggestEnabled \x3d function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasPsuggestEnabled \x3d function() {\n  return jspb.Message.getField(this, 6) !\x3d null;\n};\n\n\n/**\n * optional bool device_history_enabled \x3d 7;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getDeviceHistoryEnabled \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 7));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setDeviceHistoryEnabled \x3d function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearDeviceHistoryEnabled \x3d function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasDeviceHistoryEnabled \x3d function() {\n  return jspb.Message.getField(this, 7) !\x3d null;\n};\n\n\n/**\n * optional bool rich_entity_thumbnails_enabled \x3d 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val \x3d\x3d\x3d true/false} in those cases.\n * @return {?boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.getRichEntityThumbnailsEnabled \x3d function() {\n  return /** @type {?boolean} */ (jspb.Message.getField(this, 8));\n};\n\n\n/** @param {?boolean|undefined} value */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.setRichEntityThumbnailsEnabled \x3d function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.clearRichEntityThumbnailsEnabled \x3d function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.prototype.hasRichEntityThumbnailsEnabled \x3d function() {\n  return jspb.Message.getField(this, 8) !\x3d null;\n};\n\n\n/**\n * @param {string} data The serialized JSON data in JSPB wire format.\n * @return {!proto.gws.common.searchbox.protos.SearchboxConfig}\n */\nproto.gws.common.searchbox.protos.SearchboxConfig.deserialize \x3d function(data) {\n  return jspb.Message.deserialize(proto.gws.common.searchbox.protos.SearchboxConfig, data);\n};\n\n\n\n//# sourceURL\x3dhttps://qs/java/com/google/gws/common/api/searchbox/protos/searchbox_config.jspb.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syx9');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syx9');

}catch(e){_DumpException(e)}
/* _Module_:iP7ptb */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('iP7ptb');
var $googDebugFname="searchbox/wiz/library/shared/constants.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.shared.constants\x27);\n\n/**\n * The suggestion types. Please keep it in sync with\n * //suggest/completeserver/suggest.proto, but only add the types referenced\n * from within the library.\n * @const @enum {number}\n */\nexports.SuggestionType \x3d {\n  QUERY: 0,\n  NAVIGATION: 5,\n  PERSONALIZED_QUERY: 35,\n  DEVICE_HISTORY: 41,\n  PERSONALIZED_NAVIGATION: 83,\n};\n\n/**\n * The suggestion subtypes. Please keep it in sync with\n * //suggest/completeserver/suggest.proto, but only add the types referenced\n * from within the library.\n * @const @enum {number}\n */\nexports.SuggestionSubtype \x3d {\n  SUBTYPE_PERSONAL: 39,\n  SUBTYPE_ANSWER: 70,\n  SUBTYPE_TRENDS: 143,\n};\n\n/**\n * The set of indices for serialized logging parameters, both core and those\n * added by optional LogWriter extensions (see constants.LogWriterIndices for\n * the allowed set of indices for those). These should be kept in sync with\n * LogIndex in google3/logs/searchbox/log_indices.h and\n * j/c/g/gws/common/impl/searchbox/logging/SearchboxStatsParser.java.\n * @enum {number}\n */\nexports.LogIndex \x3d {\n  CLIENT_NAME: 0,\n  SEARCH_METHOD: 1,\n  ASSISTED_QUERY: 2,\n  AVAILABLE_SUGGESTIONS: 3,\n  FIRST_EDIT_TIME: 4,\n  LAST_EDIT_TIME: 5,\n  SESSION_DURATION: 7,\n  INTERNAL_CACHE_HIT_COUNT: 10,\n  MAX_ROUND_TRIP_TIME: 14,\n  TOTAL_ROUND_TRIP_TIME: 15,\n  COMPRESSED_ROUND_TRIP_HISTOGRAM: 16,\n  CONNECTION_REJECTED_REQUEST_COUNT: 22,\n  INPUT_METHODS: 26,\n  REQUEST_IDENTIFIER: 28,\n  ZERO_PREFIX_SUGGESTIONS_COUNT: 33,\n  PREVIOUS_SUGGESTIONS: 35,\n};\n\n/**\n * The set of methods that can trigger a search action. Please keep in sync with\n * google3/logs/proto/searchbox/searchbox_stats.proto as well.\n * @enum {number}\n */\nexports.SearchMethod \x3d {\n  CLICKED_SUGGESTION: 1,\n  ENTER_KEY: 3,\n  SEARCH_BUTTON: 12,\n};\n\n/**\n * The set of supported input methods. Please keep in sync with\n * google3/logs/proto/searchbox/searchbox_stats.proto as well.\n * @enum {number}\n */\nexports.InputMethod \x3d {\n  KEYBOARD: 1,\n  PASTE: 2,\n  QUERY_BUILDER: 5,\n};\n\n/**\n * The set of @pintomodule components (i.e. Wiz objects) that are loaded by\n * searchbox. Only used for tracking load status. Note that the value of 1 is\n * already claimed as baked-in value in HTML, which means nothing has been\n * loaded.\n * @enum {number}\n */\nexports.SearchboxComponentId \x3d {\n  LOGGING_SERVICE: 2,\n  SUGGESTIONS_FETCHER_SERVICE: 3,\n  CLEAR_BUTTON_CONTROLLER: 4,\n  INPUT_BOX_CONTROLLER: 5,\n  SUGGESTION_DIALOG_SERVICE: 6,\n  SUGGESTIONS_BOX_CONTROLLER: 7,\n  SEARCHBOX_CONFIG_MODEL: 8,\n  CLIENT_ADAPTER_CONTROLLER: 9,\n  ZERO_PREFIX_INITIATOR_CONTROLLER: 10,\n  ZERO_PREFIX_CACHE_SERVICE: 11,\n  DEVICE_HISTORY_SERVICE: 12,\n  SUGGESTION_DIALOG_CONTROLLER: 13,\n  SNACK_BAR_CONTROLLER: 14,\n};\n\n/**\n * The set of preferences used by request advisors to vote on whether a fetch\n * request should be issued.  A single vote is sufficient to force or suppress a\n * request.  Higher numbers signify higher precedence (e.g. FORCE_REQUEST is\n * overruled upon SUPPRESS_REQUEST etc).  All registered advisors will be\n * called, regardless of the vote made by any particular advisor.\n * @enum {number}\n */\nexports.FetchPreference \x3d {\n  DONT_CARE: 1,\n  FORCE_REQUEST: 2,\n  FORCE_REQUEST_IGNORE_RESPONSE: 3,\n  SUPPRESS_REQUEST: 4\n};\n\n/**\n * The action button click types.\n * @const @enum {number}\n */\nexports.ActionButtonClickType \x3d {\n  REMOVE: 1,\n  QUERY_BUILDER: 2,\n};\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/constants.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('iP7ptb');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('iP7ptb');

}catch(e){_DumpException(e)}
/* _Module_:syxc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxc');
var $googDebugFname="searchbox/wiz/library/shared/suggestion.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.shared.Suggestion\x27);\n\nconst htmlUtils \x3d goog.require(\x27goog.html.utils\x27);\nconst jsonHybrid \x3d goog.require(\x27goog.json.hybrid\x27);\n\n/** @private @enum {number} */\nconst SuggestionField_ \x3d {\n  SUGGESTED_TEXT: 0,\n  TYPE: 1,\n  SUBTYPES: 2,\n  PARAMETERS: 3\n};\n\n/** @private @enum {string} */\nconst SharedParameterKey_ \x3d {\n  ANSWER_RESULT_KEY: \x27ansa\x27,\n  ICON_RESOURCE_ID: \x27zf\x27,\n  ICON_COLOR_FILTER_OVERRIDE: \x27zg\x27,\n  LINE_ONE_TEXT_OVERRIDE: \x27zh\x27,\n  LINE_TWO_TEXT_OVERRIDE: \x27zi\x27,\n  INTENT_URL: \x27zo\x27,\n  EXTRA_SEARCH_PARAMETERS: \x27zp\x27,\n  THUMBNAIL_ICON_URL: \x27zs\x27,\n  SUGGESTION_GROUP_KEY: \x27zl\x27\n};\n\n/** @package @const {!Array\x3cstring\x3e} */\nconst WHITELISTED_SUGGESTION_PARAMETERS \x3d [\n  SharedParameterKey_.LINE_ONE_TEXT_OVERRIDE,\n  SharedParameterKey_.LINE_TWO_TEXT_OVERRIDE,\n  SharedParameterKey_.EXTRA_SEARCH_PARAMETERS,\n  SharedParameterKey_.THUMBNAIL_ICON_URL\n];\n\n/** @private {number} */\nconst SEARCH_ICON_ID_ \x3d 43;\n\n/**\n * Defines the structure of the suggestion object.\n * @final\n */\nclass Suggestion {\n  /**\n   * @param {!Object} rawSuggestion The raw JSON suggestion content.\n   */\n  constructor(rawSuggestion) {\n    /** @private {!Object} */\n    this.rawSuggestion_ \x3d rawSuggestion;\n  }\n\n  /**\n   * @return {number} The icon resource ID of the suggestion or the search icon\n   *    ID if not found. The ID corresponds to //suggest/base/icon_config.proto.\n   */\n  getIconResourceId() {\n    return this.getParameter(\n        SharedParameterKey_.ICON_RESOURCE_ID, SEARCH_ICON_ID_);\n  }\n\n  /**\n   * @return {string} The color filter of the icon.\n   */\n  getIconColorFilter() {\n    return this.getParameter(\n        SharedParameterKey_.ICON_COLOR_FILTER_OVERRIDE, \x27\x27);\n  }\n\n  /**\n   * @return {string} The verbatim value of this suggestion. WARNING: the\n   * verbatim value is HTML unescaped, meaning \x22h \x26amp; \x3cb\x3em\x3c/b\x3e\x22 would become\n   * \x22h \x26 m\x22 after calling this. When you want to display the suggestion using\n   * this method, make sure you escape it to avoid XSS. See b/72203677 for\n   * details.\n   */\n  getVerbatim() {\n    return htmlUtils.stripHtmlTags(\n        this.rawSuggestion_[SuggestionField_.SUGGESTED_TEXT] || \x27\x27);\n  }\n\n  /**\n   * @return {string} The first line display of the suggestion.\n   */\n  getLineOne() {\n    return this.getParameter(\n        SharedParameterKey_.LINE_ONE_TEXT_OVERRIDE,\n        this.rawSuggestion_[SuggestionField_.SUGGESTED_TEXT] || \x27\x27);\n  }\n\n  /**\n   * @return {string} The second line display of the suggestion.\n   */\n  getLineTwo() {\n    return this.getParameter(SharedParameterKey_.LINE_TWO_TEXT_OVERRIDE, \x27\x27);\n  }\n\n  /**\n   * @return {string} The url of the thumbnail icon of the suggestion.\n   */\n  getThumbnailIconUrl() {\n    return this.getParameter(SharedParameterKey_.THUMBNAIL_ICON_URL, \x27\x27);\n  }\n\n  /**\n   * @return {number} The suggestion type. Defaults to plain query type.\n   */\n  getType() {\n    return this.rawSuggestion_[SuggestionField_.TYPE] || 0;\n  }\n\n  /**\n   * @return {Array\x3cnumber\x3e} The list of subtypes.\n   */\n  getSubtypes() {\n    return this.rawSuggestion_[SuggestionField_.SUBTYPES] || [];\n  }\n\n  /**\n   * @param {SharedParameterKey_|string} key The parameter key.\n   * @param {DATA\x3d} opt_defaultValue The default value when the key is not\n   *    present. If not specified, default to undefined.\n   * @return {DATA} The value of the parameter or default if not present.\n   * @template DATA\n   */\n  getParameter(key, opt_defaultValue) {\n    const parameters \x3d this.rawSuggestion_[SuggestionField_.PARAMETERS] || {};\n    return parameters[key] || opt_defaultValue;\n  }\n\n  /**\n   * @return {number} The suggestion group ID.\n   */\n  getSuggestionGroupId() {\n    return this.getParameter(SharedParameterKey_.SUGGESTION_GROUP_KEY, -1);\n  }\n\n  /**\n   * @return {string}\n   */\n  getIntentUrl() {\n    return this.getParameter(SharedParameterKey_.INTENT_URL, \x27\x27);\n  }\n\n  /**\n   * @return {!Object\x3cstring, string\x3e}\n   */\n  getExtraSearchParameters() {\n    return this.getParameter(SharedParameterKey_.EXTRA_SEARCH_PARAMETERS, {});\n  }\n\n  /**\n   * @return {string} JSON-string representation of whitelisted suggestion\n   *         parameters of the suggestion.\n   */\n  getWhitelistedSuggestionParameters() {\n    let suggestionParameters \x3d {};\n\n    for (const suggestionParameter of WHITELISTED_SUGGESTION_PARAMETERS) {\n      suggestionParameters[suggestionParameter] \x3d\n          this.getParameter(suggestionParameter);\n    }\n    try {\n      return jsonHybrid.stringify(suggestionParameters);\n    } catch (e) {\n      // Do nothing.\n    }\n    return \x27\x27;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isUniversal() {\n    return this.getParameter(SharedParameterKey_.ANSWER_RESULT_KEY, false);\n  }\n}\n\nexports \x3d Suggestion;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/suggestion.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxc');

}catch(e){_DumpException(e)}
/* _Module_:syxe */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxe');
var $googDebugFname="searchbox/wiz/library/shared/common.js";
goog.loadModule("goog.module(\x27searchbox.wiz.shared.common\x27);\n\nconst GoogEventType \x3d goog.require(\x27goog.events.EventType\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst {SuggestionSubtype} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\n\n/** @package @const {number} */\nconst TYPE_BACK_FORWARD \x3d 2;\n\n/**\n * A convenient tools to pass in the callback in order to set up backforward\n * cache monitoring.\n *\n * @param {Function} callback The callback that needs to be called when bfcache\n *     is triggered on page show.\n */\nexports.setUpBfCacheHandler \x3d callback \x3d\x3e {\n  window.addEventListener(\n      GoogEventType.PAGESHOW,\n      ev \x3d\x3e {\n        // NOTE: The PerformanceNavigation check is to work around the\n        // event.persisted bug for Chrome, see crbug.com/344507. Also see\n        // http://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigation\n        // for the reference of the navigation type. This bit is\n        // not reliable for Firefox, but the persisted bit is.\n        const navigation \x3d window.performance \x26\x26 window.performance.navigation;\n        if (ev.persisted ||\n            (navigation \x26\x26 navigation.type \x3d\x3d TYPE_BACK_FORWARD)) {\n          callback();\n        }\n      });\n};\n\n/**\n * @return {boolean} Whether there are refinements.\n */\nexports.hasRefinements \x3d () \x3d\x3e {\n  const refinements \x3d goog.getObjectByName(\x27google.pmc.sb_wiz.rfs\x27);\n  return refinements \x26\x26 goog.isArray(refinements) \x26\x26 refinements.length \x3e 0;\n};\n\n/**\n * Prevent event bubbling given an event object.\n * @param {Event} ev The event object.\n */\nexports.preventDefault \x3d (ev) \x3d\x3e {\n  ev.stopPropagation();\n  ev.cancelBubble \x3d ev.cancel \x3d true;\n  ev.stopImmediatePropagation();\n  ev.preventDefault();\n  ev.returnValue \x3d false;\n};\n\n/**\n * Normalize the query by applying these rules, in order:\n * (1) Strip leading whitespaces.\n * (2) Collapse multiple consecutive whitespaces.\n * (3) Lowercase the query, if applicable.\n *\n * @param {string} query The query to be normalized.\n * @return {string} The normalized query.\n */\nexports.normalizeQuery \x3d query \x3d\x3e {\n  // TODO(hackson): HTML Unescape it.\n  return query\n      // Collapse whitespace.\n      .replace(/[\\s\\xa0]+/g, \x27 \x27)\n      // Strip leading whitespace.\n      .replace(/^\\s+/g, \x27\x27)\n      .toLocaleLowerCase();\n};\n\n/**\n * @param {Suggestion} suggestion The suggestion.\n * @return {boolean} True if the suggestion should be skipped for saving\n *    locally.\n */\nexports.shouldSkipSaving \x3d suggestion \x3d\x3e {\n  return suggestion.getSubtypes().indexOf(\n      SuggestionSubtype.SUBTYPE_TRENDS) \x3e\x3d 0;\n};\n\n/**\n * Constructs a map of the CGI parameters from the given URL.  Note that if\n * there are arguments in both the query and the hash portions of the URL, only\n * the arguments from the hash will be used.\n * TODO(daverobishaw): Add config.cgiParserBehavior.\n * @param {string} url The URL to parse the CGI arguments from.\n * @return {Object\x3cstring, string\x3e} The map of CGI parameter values keyed by\n *     parameter name.\n */\nexports.extractParameters \x3d url \x3d\x3e {\n  const parameters \x3d {};\n  const delimiterPosition \x3d Math.max(url.indexOf(\x27?\x27), url.indexOf(\x27#\x27));\n  const cgiString \x3d url.substr(delimiterPosition + 1);\n  if (delimiterPosition \x3e\x3d 0 \x26\x26 cgiString) {\n    var pairs \x3d cgiString.split(\x27\x26\x27);\n    for (var i \x3d 0, pair, parts; i \x3c pairs.length; ++i) {\n      pair \x3d pairs[i];\n      if (pair) {\n        parts \x3d pair.split(\x27\x3d\x27);\n        parameters[parts[0]] \x3d parts[1] || \x27\x27;\n      }\n    }\n  }\n  return parameters;\n};\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/common.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxe');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxe');

}catch(e){_DumpException(e)}
/* _Module_:syxd */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxd');
var $googDebugFname="searchbox/wiz/library/shared/response.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.shared.Response\x27);\n\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\n\n/** @private @enum {number} */\nconst ResponseField_ \x3d {\n  SUGGESTIONS: 0,\n  PARAMETERS: 1\n};\n\n/**\n * Defines the structure of the response from the server.\n */\nclass Response {\n  /**\n   * param {!Object} rawResponse The raw JSON response content.\n   */\n  constructor(rawResponse) {\n    const rawSuggestions \x3d rawResponse[ResponseField_.SUGGESTIONS] || [];\n    /** @private {!Array\x3cSuggestion\x3e} */\n    this.suggestions_ \x3d [];\n    let rawSuggestion;\n    for (let i \x3d 0; rawSuggestion \x3d rawSuggestions[i++];) {\n      this.suggestions_.push(new Suggestion(rawSuggestion));\n    }\n\n    /** @private {!Object} */\n    this.parameters_ \x3d rawResponse[ResponseField_.PARAMETERS] || {};\n  }\n\n  /**\n   * @return {!Array\x3cSuggestion\x3e} The suggestions in the response.\n   */\n  getSuggestions() {\n    return this.suggestions_;\n  }\n\n  /**\n   * @param {string} key The response parameter key.\n   * @param {DATA\x3d} opt_defaultValue The default value when the key is not\n   *    present. If not specified, default to undefined.\n   * @return {DATA} The associated value for the key, or default value if the\n   *    key is not present.\n   * @template DATA\n   */\n  getParameter(key, opt_defaultValue) {\n    return this.parameters_[key] || opt_defaultValue;\n  }\n}\n\nexports \x3d Response;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/response.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxd');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxd');

}catch(e){_DumpException(e)}
/* _Module_:syxf */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxf');
var $googDebugFname="searchbox/wiz/library/services/device_history_service.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.services.DeviceHistoryService\x27);\n\nconst HTML5LocalStorage \x3d goog.require(\x27goog.storage.mechanism.HTML5LocalStorage\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst jsonHybrid \x3d goog.require(\x27goog.json.hybrid\x27);\nconst services \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst {SuggestionSubtype, SuggestionType} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\nconst {htmlEscape} \x3d goog.require(\x27goog.string\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\n/** @package @const {string} */\nconst DEVICE_HISTORY_KEY \x3d \x27sb_wiz.dh\x27;\n\n/** @package @const {string} */\nconst DEVICE_HISTORY_ANSWER_TYPE_KEY \x3d \x27sb_wiz.dhat\x27;\n\n/** @package @const {string} */\nconst DEVICE_HISTORY_SUGGESTION_PARAMETERS_KEY \x3d \x27sb_wiz.dhsp\x27;\n\n/** @package @const {number} */\nconst MAX_ENTRIES_SIZE \x3d 100;\n\n/** @package @const {number} */\nconst MAX_NUM_SUGGESTIONS \x3d 3;\n\n/** @package @const {string} */\nconst ENTRIES_SEPARATOR \x3d \x27\\t\x27;\n\n/** @package @const {string} */\nconst ICON_RESOURCE_ID \x3d \x27zf\x27;\n\n/** @package @const {number} */\nconst DEVICE_HISTORY_ICON_ID \x3d 27;\n\n/** @package @const {string} */\nconst PREFETCH_QUERY_PARAM \x3d \x27pfq\x27;\n\n/** @package @const {string} */\nconst QUERY_HAS_ANSWER_PARAM \x3d \x27qha\x27;\n\n/** @package @const {string} */\nconst ANSWER_KEY \x3d \x27ansa\x27;\n\n/** @package @const {string} */\nconst NO_ANSWER_TYPE \x3d \x270\x27;\n\n/** @package @const {string} */\nconst NO_SUGGESTION_PARAMETERS \x3d \x27{}\x27;\n\n/** @package @const {!RegExp} */\nconst REACTIVE_DEVICE_HISTORY_KEY_PATTERN \x3d\n    /msuggest\\.history\\.([^\\.]*)\\.history/g;\n\n/** @package @const {string} */\nconst REACTIVE_DEVICE_HISTORY_SYNC_TIME_KEY \x3d \x27sb_mob.rdhst\x27;\n\n/** @package @const {string} */\nconst WIZ_DEVICE_HISTORY_SYNC_TIME_KEY \x3d \x27sb_wiz.wdhst\x27;\n\nclass DeviceHistoryService extends Service {\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private {HTML5LocalStorage} */\n    this.storage_ \x3d new HTML5LocalStorage();\n\n    /** @private @const {boolean} */\n    this.isAvailable_ \x3d this.storage_.isAvailable();\n\n    this.maybeSyncReactiveDeviceHistory_();\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} suggestionText\n   * @param {Array\x3cnumber\x3e\x3d} subtypes\n   * @param {Object\x3d} parameters\n   * @return {Suggestion}\n   * @private\n   */\n  createSuggestion_(query, suggestionText, subtypes \x3d [], parameters \x3d {}) {\n    let unmatchedText \x3d suggestionText.substr(query.length);\n    // We need to escape the query to avoid XSS. See b/72203677.\n    if (unmatchedText) {\n      unmatchedText \x3d \x27\x3cb\x3e\x27 + htmlEscape(unmatchedText) + \x27\x3c/b\x3e\x27;\n    }\n    if (!parameters[ICON_RESOURCE_ID]) {\n      parameters[ICON_RESOURCE_ID] \x3d DEVICE_HISTORY_ICON_ID;\n    }\n    return new Suggestion([\n        htmlEscape(query) + unmatchedText,\n        SuggestionType.DEVICE_HISTORY,\n        subtypes,\n        parameters]);\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   * @param {!SearchboxConfig} searchboxConfig\n   * @param {number\x3d} maxNumSuggestions\n   * @return {!Array\x3cSuggestion\x3e}\n   * @private\n   */\n  search_(\n      query, dataset, searchboxConfig,\n      maxNumSuggestions \x3d MAX_NUM_SUGGESTIONS) {\n    if (!this.isAvailable_) {\n      return [];\n    }\n    try {\n      const historyKey \x3d this.getHistoryKey_(dataset);\n      const queryEntriesString \x3d (this.storage_.get(historyKey) || \x27\x27).trim();\n      const suggestionParametersKey \x3d this.getSuggestionParametersKey_(dataset);\n      const parametersEntriesString \x3d\n          (this.storage_.get(suggestionParametersKey) || \x27\x27).trim();\n\n      if (!queryEntriesString || !parametersEntriesString) {\n        return [];\n      }\n\n      const deviceHistorySuggestions \x3d [];\n      // Normalize the query first.\n      const normalizedQuery \x3d common.normalizeQuery(query);\n      const queryEntries \x3d queryEntriesString.split(ENTRIES_SEPARATOR);\n      const parametersEntries \x3d\n          parametersEntriesString.split(ENTRIES_SEPARATOR);\n\n      for (let i \x3d 0; i \x3c queryEntries.length; ++i) {\n        const queryEntry \x3d queryEntries[i];\n        // We only want the query to be proper prefix of the queryEntry, so we\n        // exclude the echo case.\n        if (queryEntry.startsWith(normalizedQuery) \x26\x26\n            queryEntry !\x3d normalizedQuery) {\n          if (searchboxConfig.getRichEntityThumbnailsEnabled()) {\n            deviceHistorySuggestions.push(this.createSuggestion_(\n                normalizedQuery, queryEntry, [],\n                jsonHybrid.parse(parametersEntries[i])));\n          } else {\n            deviceHistorySuggestions.push(\n                this.createSuggestion_(normalizedQuery, queryEntry));\n          }\n          if (deviceHistorySuggestions.length \x3d\x3d maxNumSuggestions) {\n            break;\n          }\n        }\n      }\n\n      return deviceHistorySuggestions;\n    } catch (e) {\n      return [];\n    }\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   * @param {!SearchboxConfig} searchboxConfig\n   * @return {Object}\n   */\n  getAdditionalRequestInfo(query, dataset, searchboxConfig) {\n    const deviceHistorySuggestions \x3d\n        this.search_(query, dataset, searchboxConfig, 1);\n    if (!deviceHistorySuggestions.length) {\n      return null;\n    }\n    const topSuggestion \x3d deviceHistorySuggestions[0].getVerbatim();\n\n    // First, attach the prefetch query for device history.\n    const additionalRequestInfo \x3d {\n      [PREFETCH_QUERY_PARAM]: topSuggestion,\n    };\n\n    // Then, update the answer type of it.\n    if (this.isAvailable_) {\n      try {\n        const answerKeys \x3d\n            (this.storage_.get(this.getAnswerKey_(dataset)) || \x27\x27)\n            .trim()\n            .split(ENTRIES_SEPARATOR);\n        const entriesString \x3d\n            (this.storage_.get(this.getHistoryKey_(dataset)) || \x27\x27)\n            .trim()\n            .split(ENTRIES_SEPARATOR);\n        const index \x3d entriesString.indexOf(topSuggestion);\n        if (index !\x3d -1 \x26\x26 goog.isDefAndNotNull(answerKeys[index])) {\n          if (answerKeys[index] \x3d\x3d NO_ANSWER_TYPE) {\n            return null;\n          }\n          additionalRequestInfo[QUERY_HAS_ANSWER_PARAM] \x3d answerKeys[index];\n        }\n      } catch (e) {\n        // Do nothing.\n      }\n    }\n    return additionalRequestInfo;\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   * @param {Response} response\n   * @param {!SearchboxConfig} searchboxConfig\n   */\n  editResponse(query, dataset, response, searchboxConfig) {\n    const deviceHistorySuggestions \x3d\n        this.search_(query, dataset, searchboxConfig);\n    const suggestions \x3d response.getSuggestions();\n    for (let i \x3d deviceHistorySuggestions.length - 1; i \x3e\x3d 0; --i) {\n      // First, dedupe the suggestions when necessary;\n      for (let j \x3d 0; j \x3c suggestions.length; ++j) {\n        const suggestion \x3d suggestions[j];\n        if (suggestion.getVerbatim() \x3d\x3d\n            deviceHistorySuggestions[i].getVerbatim()) {\n          suggestions.splice(j, 1);\n          // Attempt to merge in the universal suggestions for the top device\n          // history suggestion.\n          if (i \x3d\x3d 0 \x26\x26 suggestion.isUniversal()) {\n            deviceHistorySuggestions[i] \x3d this.createSuggestion_(\n                query,\n                deviceHistorySuggestions[i].getVerbatim(),\n                [SuggestionSubtype.SUBTYPE_ANSWER],\n                {\n                  [ANSWER_KEY]: suggestion.getParameter(ANSWER_KEY),\n                });\n          }\n          break;\n        }\n      }\n      suggestions.unshift(deviceHistorySuggestions[i]);\n    }\n    // TODO(hackson): Do we want to keep a cap? The cap varies depends on\n    // whether entity suggestions presents in the response.\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   */\n  deleteQuery(query, dataset) {\n    if (!query || !this.isAvailable_) {\n      return;\n    }\n    // Normalize the query first.\n    const normalizedQuery \x3d common.normalizeQuery(query);\n\n    const historyKey \x3d this.getHistoryKey_(dataset);\n    const answerKey \x3d this.getAnswerKey_(dataset);\n    const suggestionParametersKey \x3d this.getSuggestionParametersKey_(dataset);\n\n    try {\n      let entries \x3d (this.storage_.get(historyKey) || \x27\x27).trim();\n      let answerKeys \x3d (this.storage_.get(answerKey) || \x27\x27)\n          .trim()\n          .split(ENTRIES_SEPARATOR);\n      let suggestionParametersEntries \x3d\n          (this.storage_.get(suggestionParametersKey) || \x27\x27)\n              .trim()\n              .split(ENTRIES_SEPARATOR);\n\n      // Remove the entry, if it exists.\n      if (entries) {\n        // Remove the query answer key.\n        const index \x3d entries.split(ENTRIES_SEPARATOR).indexOf(normalizedQuery);\n        if (index \x3e\x3d 0) {\n          answerKeys.splice(index, 1);\n          suggestionParametersEntries.splice(index, 1);\n        }\n\n        entries \x3d (ENTRIES_SEPARATOR + entries + ENTRIES_SEPARATOR).replace(\n            ENTRIES_SEPARATOR + normalizedQuery + ENTRIES_SEPARATOR,\n            ENTRIES_SEPARATOR);\n      }\n      this.storage_.set(historyKey, entries.trim());\n      this.storage_.set(answerKey, answerKeys.join(ENTRIES_SEPARATOR).trim());\n      this.storage_.set(\n          suggestionParametersKey,\n          suggestionParametersEntries.join(ENTRIES_SEPARATOR).trim());\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   * @param {string\x3d} answerType\n   * @param {string\x3d} suggestionParameters\n   */\n  saveQuery(query, dataset, answerType \x3d \x27\x27, suggestionParameters \x3d \x27\x27) {\n    // Normalize the query first. Trim it because we collapse trailing space.\n    const normalizedQuery \x3d common.normalizeQuery(query).trim();\n\n    if (!normalizedQuery || !this.isAvailable_) {\n      return;\n    }\n    const historyKey \x3d this.getHistoryKey_(dataset);\n    const answerKey \x3d this.getAnswerKey_(dataset);\n    const suggestionParametersKey \x3d this.getSuggestionParametersKey_(dataset);\n\n    try {\n      const entries \x3d (this.storage_.get(historyKey) || \x27\x27)\n          .trim()\n          .split(ENTRIES_SEPARATOR);\n\n      const answerKeys \x3d (this.storage_.get(answerKey) || \x27\x27)\n          .trim()\n          .split(ENTRIES_SEPARATOR);\n\n      const suggestionParametersEntries \x3d\n          (this.storage_.get(suggestionParametersKey) || \x27\x27)\n              .trim()\n              .split(ENTRIES_SEPARATOR);\n\n      // Bust the device history since the size doesn\x27t match.\n      if (suggestionParametersEntries.length !\x3d entries.length ||\n          answerKeys.length !\x3d entries.length) {\n        this.storage_.clear();\n        return;\n      }\n\n      // Remove the entry, if it exists.\n      const index \x3d entries.indexOf(normalizedQuery);\n      if (index \x3e\x3d 0) {\n        // Keep the additional info if the existing entry has.\n        if (answerKeys[index] \x26\x26 !answerType) {\n          answerType \x3d answerKeys[index];\n        }\n        if (suggestionParametersEntries[index] \x26\x26 !suggestionParameters) {\n          suggestionParameters \x3d suggestionParametersEntries[index];\n        }\n        entries.splice(index, 1);\n        answerKeys.splice(index, 1);\n        suggestionParametersEntries.splice(index, 1);\n      }\n\n      entries.unshift(normalizedQuery);\n      answerKeys.unshift(answerType || NO_ANSWER_TYPE);\n      suggestionParametersEntries.unshift(\n          suggestionParameters || NO_SUGGESTION_PARAMETERS);\n\n      // Limit the size of the device history.\n      entries.splice(MAX_ENTRIES_SIZE);\n      this.storage_.set(historyKey, entries.join(ENTRIES_SEPARATOR).trim());\n      answerKeys.splice(MAX_ENTRIES_SIZE);\n      this.storage_.set(answerKey, answerKeys.join(ENTRIES_SEPARATOR).trim());\n      suggestionParametersEntries.splice(MAX_ENTRIES_SIZE);\n      this.storage_.set(\n          suggestionParametersKey,\n          suggestionParametersEntries.join(ENTRIES_SEPARATOR).trim());\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * @param {string} dataset\n   * @return {string}\n   * @private\n   */\n  getHistoryKey_(dataset) {\n    return DEVICE_HISTORY_KEY + \x27.\x27 + (dataset || \x27\x27);\n  }\n\n  /**\n   * @param {string} dataset\n   * @return {string}\n   * @private\n   */\n  getAnswerKey_(dataset) {\n    return DEVICE_HISTORY_ANSWER_TYPE_KEY + \x27.\x27 + (dataset || \x27\x27);\n  }\n\n  /**\n   * @param {string} dataset\n   * @return {string}\n   * @private\n   */\n  getSuggestionParametersKey_(dataset) {\n    return DEVICE_HISTORY_SUGGESTION_PARAMETERS_KEY + \x27.\x27 + (dataset || \x27\x27);\n  }\n\n  /** @private */\n  maybeSyncReactiveDeviceHistory_() {\n    if (!this.isAvailable_) {\n      // Nothing to sync.\n      return;\n    }\n\n    try {\n      const wizSyncTime \x3d this.storage_.get(WIZ_DEVICE_HISTORY_SYNC_TIME_KEY);\n      const reactiveSyncTime \x3d\n          this.storage_.get(REACTIVE_DEVICE_HISTORY_SYNC_TIME_KEY);\n      if (wizSyncTime \x26\x26 wizSyncTime \x3e reactiveSyncTime) {\n        // Sync\x27ed.\n        return;\n      }\n\n      const size \x3d this.storage_.getCount();\n\n      for (let i \x3d 0; i \x3c size; ++i) {\n        const key \x3d assert(this.storage_.key(i));\n        const matched \x3d REACTIVE_DEVICE_HISTORY_KEY_PATTERN.exec(key);\n        if (!matched) {\n          continue;\n        }\n        const dataset \x3d matched[1] || \x27\x27;\n\n        // We don\x27t support any mode other than web and images.\n        if (dataset !\x3d \x27\x27 \x26\x26 dataset !\x3d \x27i\x27) {\n          continue;\n        }\n\n        const queries \x3d assert(this.storage_.get(key));\n        const length \x3d dataset.split(ENTRIES_SEPARATOR).length;\n        const historyKey \x3d this.getHistoryKey_(dataset);\n        const answerKey \x3d this.getAnswerKey_(dataset);\n        const suggestionParametersKey \x3d\n            this.getSuggestionParametersKey_(dataset);\n\n        this.storage_.set(historyKey, queries);\n        this.storage_.set(\n            answerKey,\n            Array(length).fill(NO_ANSWER_TYPE).join(ENTRIES_SEPARATOR));\n        this.storage_.set(\n            suggestionParametersKey,\n            Array(length)\n                .fill(NO_SUGGESTION_PARAMETERS)\n                .join(ENTRIES_SEPARATOR));\n      }\n\n      // Update Wiz\x27s sync time.\n      this.storage_.set(\n          WIZ_DEVICE_HISTORY_SYNC_TIME_KEY, goog.now().toString());\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n}\n\nregisterService(services.DEVICE_HISTORY, DeviceHistoryService);\nexports \x3d DeviceHistoryService;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/device_history_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxf');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxf');

}catch(e){_DumpException(e)}
/* _Module_:xpltpb */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('xpltpb');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('xpltpb');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('xpltpb');

}catch(e){_DumpException(e)}
/* _Module_:sy71 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy71');
var $googDebugFname="javascript/closure/crypt/hash.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See goog.crypt.Sha1 and goog.crypt.Md5 for sample implementations.\n *\n * @author azzie@google.com (Marcin Marszalek)\n */\n\ngoog.provide(\x27goog.crypt.Hash\x27);\n\n\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\ngoog.crypt.Hash \x3d function() {\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  this.blockSize \x3d -1;\n};\n\n\n/**\n * Resets the internal accumulator.\n */\ngoog.crypt.Hash.prototype.reset \x3d goog.abstractMethod;\n\n\n/**\n * Adds a byte array (array with values in [0-255] range) or a string (must\n * only contain 8-bit, i.e., Latin1 characters) to the internal accumulator.\n *\n * Many hash functions operate on blocks of data and implement optimizations\n * when a full chunk of data is readily available. Hence it is often preferable\n * to provide large chunks of data (a kilobyte or more) than to repeatedly\n * call the update method with few tens of bytes. If this is not possible, or\n * not feasible, it might be good to provide data in multiplies of hash block\n * size (often 64 bytes). Please see the implementation and performance tests\n * of your favourite hash.\n *\n * @param {Array\x3cnumber\x3e|Uint8Array|string} bytes Data used for the update.\n * @param {number\x3d} opt_length Number of bytes to use.\n */\ngoog.crypt.Hash.prototype.update \x3d goog.abstractMethod;\n\n\n/**\n * @return {!Array\x3cnumber\x3e} The finalized hash computed\n *     from the internal accumulator.\n */\ngoog.crypt.Hash.prototype.digest \x3d goog.abstractMethod;\n\n//# sourceURL\x3dhttps://qs/javascript/closure/crypt/hash.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy71');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy71');

}catch(e){_DumpException(e)}
/* _Module_:sykz */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sykz');
var $googDebugFname="javascript/closure/crypt/md5.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview MD5 cryptographic hash.\n * Implementation of http://tools.ietf.org/html/rfc1321 with common\n * optimizations and tweaks (see http://en.wikipedia.org/wiki/MD5).\n *\n * Usage:\n *   var md5 \x3d new goog.crypt.Md5();\n *   md5.update(bytes);\n *   var hash \x3d md5.digest();\n *\n * Performance:\n *   Chrome 23              ~680 Mbit/s\n *   Chrome 13 (in a VM)    ~250 Mbit/s\n *   Firefox 6.0 (in a VM)  ~100 Mbit/s\n *   IE9 (in a VM)           ~27 Mbit/s\n *   Firefox 3.6             ~15 Mbit/s\n *   IE8 (in a VM)           ~13 Mbit/s\n *\n * @author mschilder@google.com (Marius Schilder)\n * @author azzie@google.com (Marcin Marszalek)\n */\n\ngoog.provide(\x27goog.crypt.Md5\x27);\n\ngoog.require(\x27goog.crypt.Hash\x27);\n\n\n\n/**\n * MD5 cryptographic hash constructor.\n * @constructor\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Md5 \x3d function() {\n  goog.crypt.Md5.base(this, \x27constructor\x27);\n\n  this.blockSize \x3d 512 / 8;\n\n  /**\n   * Holds the current values of accumulated A-D variables (MD buffer).\n   * @type {!Array\x3cnumber\x3e}\n   * @private\n   */\n  this.chain_ \x3d new Array(4);\n\n  /**\n   * A buffer holding the data until the whole block can be processed.\n   * @type {!Array\x3cnumber\x3e}\n   * @private\n   */\n  this.block_ \x3d new Array(this.blockSize);\n\n  /**\n   * The length of yet-unprocessed data as collected in the block.\n   * @type {number}\n   * @private\n   */\n  this.blockLength_ \x3d 0;\n\n  /**\n   * The total length of the message so far.\n   * @type {number}\n   * @private\n   */\n  this.totalLength_ \x3d 0;\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Md5, goog.crypt.Hash);\n\n\n/**\n * Integer rotation constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array\x3cnumber\x3e}\n * @private\n *\ngoog.crypt.Md5.S_ \x3d [\n  7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n  5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n  4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n  6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21\n];\n */\n\n/**\n * Sine function constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array\x3cnumber\x3e}\n * @private\n *\ngoog.crypt.Md5.T_ \x3d [\n  0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\n  0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n  0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n  0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\n  0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n  0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n  0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\n  0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\n  0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\n  0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\n  0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\n  0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\n  0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\n];\n */\n\n\n/** @override */\ngoog.crypt.Md5.prototype.reset \x3d function() {\n  this.chain_[0] \x3d 0x67452301;\n  this.chain_[1] \x3d 0xefcdab89;\n  this.chain_[2] \x3d 0x98badcfe;\n  this.chain_[3] \x3d 0x10325476;\n\n  this.blockLength_ \x3d 0;\n  this.totalLength_ \x3d 0;\n};\n\n\n/**\n * Internal compress helper function. It takes a block of data (64 bytes)\n * and updates the accumulator.\n * @param {Array\x3cnumber\x3e|Uint8Array|string} buf The block to compress.\n * @param {number\x3d} opt_offset Offset of the block in the buffer.\n * @private\n */\ngoog.crypt.Md5.prototype.compress_ \x3d function(buf, opt_offset) {\n  if (!opt_offset) {\n    opt_offset \x3d 0;\n  }\n\n  // We allocate the array every time, but it\x27s cheap in practice.\n  var X \x3d new Array(16);\n\n  // Get 16 little endian words. It is not worth unrolling this for Chrome 11.\n  if (goog.isString(buf)) {\n    for (var i \x3d 0; i \x3c 16; ++i) {\n      X[i] \x3d (buf.charCodeAt(opt_offset++)) |\n          (buf.charCodeAt(opt_offset++) \x3c\x3c 8) |\n          (buf.charCodeAt(opt_offset++) \x3c\x3c 16) |\n          (buf.charCodeAt(opt_offset++) \x3c\x3c 24);\n    }\n  } else {\n    for (var i \x3d 0; i \x3c 16; ++i) {\n      X[i] \x3d (buf[opt_offset++]) | (buf[opt_offset++] \x3c\x3c 8) |\n          (buf[opt_offset++] \x3c\x3c 16) | (buf[opt_offset++] \x3c\x3c 24);\n    }\n  }\n\n  var A \x3d this.chain_[0];\n  var B \x3d this.chain_[1];\n  var C \x3d this.chain_[2];\n  var D \x3d this.chain_[3];\n  var sum \x3d 0;\n\n  /*\n   * This is an abbreviated implementation, it is left here commented out for\n   * reference purposes. See below for an unrolled version in use.\n   *\n  var f, n, tmp;\n  for (var i \x3d 0; i \x3c 64; ++i) {\n\n    if (i \x3c 16) {\n      f \x3d (D ^ (B \x26 (C ^ D)));\n      n \x3d i;\n    } else if (i \x3c 32) {\n      f \x3d (C ^ (D \x26 (B ^ C)));\n      n \x3d (5 * i + 1) % 16;\n    } else if (i \x3c 48) {\n      f \x3d (B ^ C ^ D);\n      n \x3d (3 * i + 5) % 16;\n    } else {\n      f \x3d (C ^ (B | (~D)));\n      n \x3d (7 * i) % 16;\n    }\n\n    tmp \x3d D;\n    D \x3d C;\n    C \x3d B;\n    sum \x3d (A + f + goog.crypt.Md5.T_[i] + X[n]) \x26 0xffffffff;\n    B +\x3d ((sum \x3c\x3c goog.crypt.Md5.S_[i]) \x26 0xffffffff) |\n         (sum \x3e\x3e\x3e (32 - goog.crypt.Md5.S_[i]));\n    A \x3d tmp;\n  }\n   */\n\n  /*\n   * This is an unrolled MD5 implementation, which gives ~30% speedup compared\n   * to the abbreviated implementation above, as measured on Chrome 11. It is\n   * important to keep 32-bit croppings to minimum and inline the integer\n   * rotation.\n   */\n  sum \x3d (A + (D ^ (B \x26 (C ^ D))) + X[0] + 0xd76aa478) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 7) \x26 0xffffffff) | (sum \x3e\x3e\x3e 25));\n  sum \x3d (D + (C ^ (A \x26 (B ^ C))) + X[1] + 0xe8c7b756) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 12) \x26 0xffffffff) | (sum \x3e\x3e\x3e 20));\n  sum \x3d (C + (B ^ (D \x26 (A ^ B))) + X[2] + 0x242070db) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 17) \x26 0xffffffff) | (sum \x3e\x3e\x3e 15));\n  sum \x3d (B + (A ^ (C \x26 (D ^ A))) + X[3] + 0xc1bdceee) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 22) \x26 0xffffffff) | (sum \x3e\x3e\x3e 10));\n  sum \x3d (A + (D ^ (B \x26 (C ^ D))) + X[4] + 0xf57c0faf) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 7) \x26 0xffffffff) | (sum \x3e\x3e\x3e 25));\n  sum \x3d (D + (C ^ (A \x26 (B ^ C))) + X[5] + 0x4787c62a) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 12) \x26 0xffffffff) | (sum \x3e\x3e\x3e 20));\n  sum \x3d (C + (B ^ (D \x26 (A ^ B))) + X[6] + 0xa8304613) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 17) \x26 0xffffffff) | (sum \x3e\x3e\x3e 15));\n  sum \x3d (B + (A ^ (C \x26 (D ^ A))) + X[7] + 0xfd469501) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 22) \x26 0xffffffff) | (sum \x3e\x3e\x3e 10));\n  sum \x3d (A + (D ^ (B \x26 (C ^ D))) + X[8] + 0x698098d8) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 7) \x26 0xffffffff) | (sum \x3e\x3e\x3e 25));\n  sum \x3d (D + (C ^ (A \x26 (B ^ C))) + X[9] + 0x8b44f7af) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 12) \x26 0xffffffff) | (sum \x3e\x3e\x3e 20));\n  sum \x3d (C + (B ^ (D \x26 (A ^ B))) + X[10] + 0xffff5bb1) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 17) \x26 0xffffffff) | (sum \x3e\x3e\x3e 15));\n  sum \x3d (B + (A ^ (C \x26 (D ^ A))) + X[11] + 0x895cd7be) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 22) \x26 0xffffffff) | (sum \x3e\x3e\x3e 10));\n  sum \x3d (A + (D ^ (B \x26 (C ^ D))) + X[12] + 0x6b901122) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 7) \x26 0xffffffff) | (sum \x3e\x3e\x3e 25));\n  sum \x3d (D + (C ^ (A \x26 (B ^ C))) + X[13] + 0xfd987193) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 12) \x26 0xffffffff) | (sum \x3e\x3e\x3e 20));\n  sum \x3d (C + (B ^ (D \x26 (A ^ B))) + X[14] + 0xa679438e) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 17) \x26 0xffffffff) | (sum \x3e\x3e\x3e 15));\n  sum \x3d (B + (A ^ (C \x26 (D ^ A))) + X[15] + 0x49b40821) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 22) \x26 0xffffffff) | (sum \x3e\x3e\x3e 10));\n  sum \x3d (A + (C ^ (D \x26 (B ^ C))) + X[1] + 0xf61e2562) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 5) \x26 0xffffffff) | (sum \x3e\x3e\x3e 27));\n  sum \x3d (D + (B ^ (C \x26 (A ^ B))) + X[6] + 0xc040b340) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 9) \x26 0xffffffff) | (sum \x3e\x3e\x3e 23));\n  sum \x3d (C + (A ^ (B \x26 (D ^ A))) + X[11] + 0x265e5a51) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 14) \x26 0xffffffff) | (sum \x3e\x3e\x3e 18));\n  sum \x3d (B + (D ^ (A \x26 (C ^ D))) + X[0] + 0xe9b6c7aa) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 20) \x26 0xffffffff) | (sum \x3e\x3e\x3e 12));\n  sum \x3d (A + (C ^ (D \x26 (B ^ C))) + X[5] + 0xd62f105d) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 5) \x26 0xffffffff) | (sum \x3e\x3e\x3e 27));\n  sum \x3d (D + (B ^ (C \x26 (A ^ B))) + X[10] + 0x02441453) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 9) \x26 0xffffffff) | (sum \x3e\x3e\x3e 23));\n  sum \x3d (C + (A ^ (B \x26 (D ^ A))) + X[15] + 0xd8a1e681) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 14) \x26 0xffffffff) | (sum \x3e\x3e\x3e 18));\n  sum \x3d (B + (D ^ (A \x26 (C ^ D))) + X[4] + 0xe7d3fbc8) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 20) \x26 0xffffffff) | (sum \x3e\x3e\x3e 12));\n  sum \x3d (A + (C ^ (D \x26 (B ^ C))) + X[9] + 0x21e1cde6) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 5) \x26 0xffffffff) | (sum \x3e\x3e\x3e 27));\n  sum \x3d (D + (B ^ (C \x26 (A ^ B))) + X[14] + 0xc33707d6) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 9) \x26 0xffffffff) | (sum \x3e\x3e\x3e 23));\n  sum \x3d (C + (A ^ (B \x26 (D ^ A))) + X[3] + 0xf4d50d87) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 14) \x26 0xffffffff) | (sum \x3e\x3e\x3e 18));\n  sum \x3d (B + (D ^ (A \x26 (C ^ D))) + X[8] + 0x455a14ed) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 20) \x26 0xffffffff) | (sum \x3e\x3e\x3e 12));\n  sum \x3d (A + (C ^ (D \x26 (B ^ C))) + X[13] + 0xa9e3e905) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 5) \x26 0xffffffff) | (sum \x3e\x3e\x3e 27));\n  sum \x3d (D + (B ^ (C \x26 (A ^ B))) + X[2] + 0xfcefa3f8) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 9) \x26 0xffffffff) | (sum \x3e\x3e\x3e 23));\n  sum \x3d (C + (A ^ (B \x26 (D ^ A))) + X[7] + 0x676f02d9) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 14) \x26 0xffffffff) | (sum \x3e\x3e\x3e 18));\n  sum \x3d (B + (D ^ (A \x26 (C ^ D))) + X[12] + 0x8d2a4c8a) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 20) \x26 0xffffffff) | (sum \x3e\x3e\x3e 12));\n  sum \x3d (A + (B ^ C ^ D) + X[5] + 0xfffa3942) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 4) \x26 0xffffffff) | (sum \x3e\x3e\x3e 28));\n  sum \x3d (D + (A ^ B ^ C) + X[8] + 0x8771f681) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 11) \x26 0xffffffff) | (sum \x3e\x3e\x3e 21));\n  sum \x3d (C + (D ^ A ^ B) + X[11] + 0x6d9d6122) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 16) \x26 0xffffffff) | (sum \x3e\x3e\x3e 16));\n  sum \x3d (B + (C ^ D ^ A) + X[14] + 0xfde5380c) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 23) \x26 0xffffffff) | (sum \x3e\x3e\x3e 9));\n  sum \x3d (A + (B ^ C ^ D) + X[1] + 0xa4beea44) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 4) \x26 0xffffffff) | (sum \x3e\x3e\x3e 28));\n  sum \x3d (D + (A ^ B ^ C) + X[4] + 0x4bdecfa9) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 11) \x26 0xffffffff) | (sum \x3e\x3e\x3e 21));\n  sum \x3d (C + (D ^ A ^ B) + X[7] + 0xf6bb4b60) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 16) \x26 0xffffffff) | (sum \x3e\x3e\x3e 16));\n  sum \x3d (B + (C ^ D ^ A) + X[10] + 0xbebfbc70) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 23) \x26 0xffffffff) | (sum \x3e\x3e\x3e 9));\n  sum \x3d (A + (B ^ C ^ D) + X[13] + 0x289b7ec6) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 4) \x26 0xffffffff) | (sum \x3e\x3e\x3e 28));\n  sum \x3d (D + (A ^ B ^ C) + X[0] + 0xeaa127fa) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 11) \x26 0xffffffff) | (sum \x3e\x3e\x3e 21));\n  sum \x3d (C + (D ^ A ^ B) + X[3] + 0xd4ef3085) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 16) \x26 0xffffffff) | (sum \x3e\x3e\x3e 16));\n  sum \x3d (B + (C ^ D ^ A) + X[6] + 0x04881d05) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 23) \x26 0xffffffff) | (sum \x3e\x3e\x3e 9));\n  sum \x3d (A + (B ^ C ^ D) + X[9] + 0xd9d4d039) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 4) \x26 0xffffffff) | (sum \x3e\x3e\x3e 28));\n  sum \x3d (D + (A ^ B ^ C) + X[12] + 0xe6db99e5) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 11) \x26 0xffffffff) | (sum \x3e\x3e\x3e 21));\n  sum \x3d (C + (D ^ A ^ B) + X[15] + 0x1fa27cf8) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 16) \x26 0xffffffff) | (sum \x3e\x3e\x3e 16));\n  sum \x3d (B + (C ^ D ^ A) + X[2] + 0xc4ac5665) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 23) \x26 0xffffffff) | (sum \x3e\x3e\x3e 9));\n  sum \x3d (A + (C ^ (B | (~D))) + X[0] + 0xf4292244) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 6) \x26 0xffffffff) | (sum \x3e\x3e\x3e 26));\n  sum \x3d (D + (B ^ (A | (~C))) + X[7] + 0x432aff97) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 10) \x26 0xffffffff) | (sum \x3e\x3e\x3e 22));\n  sum \x3d (C + (A ^ (D | (~B))) + X[14] + 0xab9423a7) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 15) \x26 0xffffffff) | (sum \x3e\x3e\x3e 17));\n  sum \x3d (B + (D ^ (C | (~A))) + X[5] + 0xfc93a039) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 21) \x26 0xffffffff) | (sum \x3e\x3e\x3e 11));\n  sum \x3d (A + (C ^ (B | (~D))) + X[12] + 0x655b59c3) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 6) \x26 0xffffffff) | (sum \x3e\x3e\x3e 26));\n  sum \x3d (D + (B ^ (A | (~C))) + X[3] + 0x8f0ccc92) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 10) \x26 0xffffffff) | (sum \x3e\x3e\x3e 22));\n  sum \x3d (C + (A ^ (D | (~B))) + X[10] + 0xffeff47d) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 15) \x26 0xffffffff) | (sum \x3e\x3e\x3e 17));\n  sum \x3d (B + (D ^ (C | (~A))) + X[1] + 0x85845dd1) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 21) \x26 0xffffffff) | (sum \x3e\x3e\x3e 11));\n  sum \x3d (A + (C ^ (B | (~D))) + X[8] + 0x6fa87e4f) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 6) \x26 0xffffffff) | (sum \x3e\x3e\x3e 26));\n  sum \x3d (D + (B ^ (A | (~C))) + X[15] + 0xfe2ce6e0) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 10) \x26 0xffffffff) | (sum \x3e\x3e\x3e 22));\n  sum \x3d (C + (A ^ (D | (~B))) + X[6] + 0xa3014314) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 15) \x26 0xffffffff) | (sum \x3e\x3e\x3e 17));\n  sum \x3d (B + (D ^ (C | (~A))) + X[13] + 0x4e0811a1) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 21) \x26 0xffffffff) | (sum \x3e\x3e\x3e 11));\n  sum \x3d (A + (C ^ (B | (~D))) + X[4] + 0xf7537e82) \x26 0xffffffff;\n  A \x3d B + (((sum \x3c\x3c 6) \x26 0xffffffff) | (sum \x3e\x3e\x3e 26));\n  sum \x3d (D + (B ^ (A | (~C))) + X[11] + 0xbd3af235) \x26 0xffffffff;\n  D \x3d A + (((sum \x3c\x3c 10) \x26 0xffffffff) | (sum \x3e\x3e\x3e 22));\n  sum \x3d (C + (A ^ (D | (~B))) + X[2] + 0x2ad7d2bb) \x26 0xffffffff;\n  C \x3d D + (((sum \x3c\x3c 15) \x26 0xffffffff) | (sum \x3e\x3e\x3e 17));\n  sum \x3d (B + (D ^ (C | (~A))) + X[9] + 0xeb86d391) \x26 0xffffffff;\n  B \x3d C + (((sum \x3c\x3c 21) \x26 0xffffffff) | (sum \x3e\x3e\x3e 11));\n\n  this.chain_[0] \x3d (this.chain_[0] + A) \x26 0xffffffff;\n  this.chain_[1] \x3d (this.chain_[1] + B) \x26 0xffffffff;\n  this.chain_[2] \x3d (this.chain_[2] + C) \x26 0xffffffff;\n  this.chain_[3] \x3d (this.chain_[3] + D) \x26 0xffffffff;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.update \x3d function(bytes, opt_length) {\n  if (!goog.isDef(opt_length)) {\n    opt_length \x3d bytes.length;\n  }\n  var lengthMinusBlock \x3d opt_length - this.blockSize;\n\n  // Copy some object properties to local variables in order to save on access\n  // time from inside the loop (~10% speedup was observed on Chrome 11).\n  var block \x3d this.block_;\n  var blockLength \x3d this.blockLength_;\n  var i \x3d 0;\n\n  // The outer while loop should execute at most twice.\n  while (i \x3c opt_length) {\n    // When we have no data in the block to top up, we can directly process the\n    // input buffer (assuming it contains sufficient data). This gives ~30%\n    // speedup on Chrome 14 and ~70% speedup on Firefox 6.0, but requires that\n    // the data is provided in large chunks (or in multiples of 64 bytes).\n    if (blockLength \x3d\x3d 0) {\n      while (i \x3c\x3d lengthMinusBlock) {\n        this.compress_(bytes, i);\n        i +\x3d this.blockSize;\n      }\n    }\n\n    if (goog.isString(bytes)) {\n      while (i \x3c opt_length) {\n        block[blockLength++] \x3d bytes.charCodeAt(i++);\n        if (blockLength \x3d\x3d this.blockSize) {\n          this.compress_(block);\n          blockLength \x3d 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    } else {\n      while (i \x3c opt_length) {\n        block[blockLength++] \x3d bytes[i++];\n        if (blockLength \x3d\x3d this.blockSize) {\n          this.compress_(block);\n          blockLength \x3d 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    }\n  }\n\n  this.blockLength_ \x3d blockLength;\n  this.totalLength_ +\x3d opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.digest \x3d function() {\n  // This must accommodate at least 1 padding byte (0x80), 8 bytes of\n  // total bitlength, and must end at a 64-byte boundary.\n  var pad \x3d new Array(\n      (this.blockLength_ \x3c 56 ? this.blockSize : this.blockSize * 2) -\n      this.blockLength_);\n\n  // Add padding: 0x80 0x00*\n  pad[0] \x3d 0x80;\n  for (var i \x3d 1; i \x3c pad.length - 8; ++i) {\n    pad[i] \x3d 0;\n  }\n  // Add the total number of bits, little endian 64-bit integer.\n  var totalBits \x3d this.totalLength_ * 8;\n  for (var i \x3d pad.length - 8; i \x3c pad.length; ++i) {\n    pad[i] \x3d totalBits \x26 0xff;\n    totalBits /\x3d 0x100;  // Don\x27t use bit-shifting here!\n  }\n  this.update(pad);\n\n  var digest \x3d new Array(16);\n  var n \x3d 0;\n  for (var i \x3d 0; i \x3c 4; ++i) {\n    for (var j \x3d 0; j \x3c 32; j +\x3d 8) {\n      digest[n++] \x3d (this.chain_[i] \x3e\x3e\x3e j) \x26 0xff;\n    }\n  }\n  return digest;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/crypt/md5.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sykz');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sykz');

}catch(e){_DumpException(e)}
/* _Module_:syxg */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxg');
var $googDebugFname="searchbox/wiz/library/shared/request.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.shared.Request\x27);\n\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\n\n/**\n * Basic structure of the request with relevant information to get suggestions.\n */\nclass Request {\n  /**\n   * @param {string} query The query to retrieve suggestions.\n   * @param {number} caretPosition The caret position.\n   */\n  constructor(query, caretPosition) {\n    /** @private {string} */\n    this.query_ \x3d query;\n\n    /** @private {string} */\n    this.normalizedQuery_ \x3d common.normalizeQuery(query);\n\n    /** @private {number} */\n    this.caretPosition_ \x3d this.normalizeCaretPosition_(caretPosition);\n\n    /** @private {number} */\n    this.timestamp_ \x3d goog.now();\n  }\n\n  /**\n   * @return {string}\n   */\n  getQuery() {\n    return this.query_;\n  }\n\n  /**\n   * @return {string}\n   */\n  getNormalizedQuery() {\n    return this.normalizedQuery_;\n  }\n\n  /**\n   * @return {number}\n   */\n  getCaretPosition() {\n    return this.caretPosition_;\n  }\n\n  /**\n   * @return {number}\n   */\n  getTimestamp() {\n    return this.timestamp_;\n  }\n\n  /**\n   * @param {number} caretPosition\n   * @return {number}\n   * @private\n   */\n  normalizeCaretPosition_(caretPosition) {\n    caretPosition \x3d Math.min(caretPosition, this.query_.length);\n\n    // There won\x27t be any collapse for caret position if query string is empty\n    // or if there is no selection or cursor.\n    if (!this.query_) {\n      return caretPosition;\n    }\n\n    // Only the prefix up to the cursor would affect its final position.\n    const prefix \x3d this.query_.substr(0, caretPosition);\n\n    // Splits prefix string into blocks of consecutive whitespaces.\n    for (const whitespacesBlock of prefix.split(/[^\\s]+/)) {\n      // The first element can be an empty string. Otherwise, since each block\n      // of length k is reduced to 1 space, we offset the caret position by\n      // k - 1.\n      caretPosition -\x3d Math.max(whitespacesBlock.length - 1, 0);\n    }\n\n    // Removes one more char for leading space.\n    if (prefix.match(/^\\s+/)) {\n      caretPosition--;\n    }\n\n    return caretPosition;\n  }\n}\n\nexports \x3d Request;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/request.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxg');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxg');

}catch(e){_DumpException(e)}
/* _Module_:syxh */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxh');
var $googDebugFname="javascript/closure/crypt/hmac.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Implementation of HMAC in JavaScript.\n *\n * Usage:\n *   var hmac \x3d new goog.crypt.Hmac(new goog.crypt.sha1(), key, 64);\n *   var digest \x3d hmac.getHmac(bytes);\n *\n * @author aa@google.com (Aaron Boodman)\n * @author benyu@google.com (Jige Yu) - port to closure\n */\n\n\ngoog.provide(\x27goog.crypt.Hmac\x27);\n\ngoog.require(\x27goog.crypt.Hash\x27);\n\n\n\n/**\n * @constructor\n * @param {!goog.crypt.Hash} hasher An object to serve as a hash function.\n * @param {Array\x3cnumber\x3e} key The secret key to use to calculate the hmac.\n *     Should be an array of not more than `blockSize` integers in\n       {0, 255}.\n * @param {number\x3d} opt_blockSize Optional. The block size `hasher` uses.\n *     If not specified, uses the block size from the hasher, or 16 if it is\n *     not specified.\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Hmac \x3d function(hasher, key, opt_blockSize) {\n  goog.crypt.Hmac.base(this, \x27constructor\x27);\n\n  /**\n   * The underlying hasher to calculate hash.\n   *\n   * @type {!goog.crypt.Hash}\n   * @private\n   */\n  this.hasher_ \x3d hasher;\n\n  this.blockSize \x3d opt_blockSize || hasher.blockSize || 16;\n\n  /**\n   * The outer padding array of hmac\n   *\n   * @type {!Array\x3cnumber\x3e}\n   * @private\n   */\n  this.keyO_ \x3d new Array(this.blockSize);\n\n  /**\n   * The inner padding array of hmac\n   *\n   * @type {!Array\x3cnumber\x3e}\n   * @private\n   */\n  this.keyI_ \x3d new Array(this.blockSize);\n\n  this.initialize_(key);\n};\ngoog.inherits(goog.crypt.Hmac, goog.crypt.Hash);\n\n\n/**\n * Outer padding byte of HMAC algorith, per http://en.wikipedia.org/wiki/HMAC\n *\n * @type {number}\n * @private\n */\ngoog.crypt.Hmac.OPAD_ \x3d 0x5c;\n\n\n/**\n * Inner padding byte of HMAC algorith, per http://en.wikipedia.org/wiki/HMAC\n *\n * @type {number}\n * @private\n */\ngoog.crypt.Hmac.IPAD_ \x3d 0x36;\n\n\n/**\n * Initializes Hmac by precalculating the inner and outer paddings.\n *\n * @param {Array\x3cnumber\x3e} key The secret key to use to calculate the hmac.\n *     Should be an array of not more than `blockSize` integers in\n       {0, 255}.\n * @private\n */\ngoog.crypt.Hmac.prototype.initialize_ \x3d function(key) {\n  if (key.length \x3e this.blockSize) {\n    this.hasher_.update(key);\n    key \x3d this.hasher_.digest();\n    this.hasher_.reset();\n  }\n  // Precalculate padded and xor\x27d keys.\n  var keyByte;\n  for (var i \x3d 0; i \x3c this.blockSize; i++) {\n    if (i \x3c key.length) {\n      keyByte \x3d key[i];\n    } else {\n      keyByte \x3d 0;\n    }\n    this.keyO_[i] \x3d keyByte ^ goog.crypt.Hmac.OPAD_;\n    this.keyI_[i] \x3d keyByte ^ goog.crypt.Hmac.IPAD_;\n  }\n  // Be ready for an immediate update.\n  this.hasher_.update(this.keyI_);\n};\n\n\n/** @override */\ngoog.crypt.Hmac.prototype.reset \x3d function() {\n  this.hasher_.reset();\n  this.hasher_.update(this.keyI_);\n};\n\n\n/** @override */\ngoog.crypt.Hmac.prototype.update \x3d function(bytes, opt_length) {\n  this.hasher_.update(bytes, opt_length);\n};\n\n\n/** @override */\ngoog.crypt.Hmac.prototype.digest \x3d function() {\n  var temp \x3d this.hasher_.digest();\n  this.hasher_.reset();\n  this.hasher_.update(this.keyO_);\n  this.hasher_.update(temp);\n  return this.hasher_.digest();\n};\n\n\n/**\n * Calculates an HMAC for a given message.\n *\n * @param {Array\x3cnumber\x3e|Uint8Array|string} message  Data to Hmac.\n * @return {!Array\x3cnumber\x3e} the digest of the given message.\n */\ngoog.crypt.Hmac.prototype.getHmac \x3d function(message) {\n  this.reset();\n  this.update(message);\n  return this.digest();\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/crypt/hmac.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/library/services/logging_service.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.services.LoggingService\x27);\n\nconst Hmac \x3d goog.require(\x27goog.crypt.Hmac\x27);\nconst Md5 \x3d goog.require(\x27goog.crypt.Md5\x27);\nconst Request \x3d goog.require(\x27searchbox.wiz.shared.Request\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst base64 \x3d goog.require(\x27goog.crypt.base64\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst googObject \x3d goog.require(\x27goog.object\x27);\nconst services \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst {InputMethod, LogIndex, SearchMethod} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\n/** @private @const {number} */\nconst DEFAULT_ZERO_PREFIX_SUGGESTION_COUNT_ \x3d -1;\n\n/** @private @const {string} */\nconst TYPE_SUBTYPE_DELIMITOR_ \x3d \x27i\x27;\n\n/** @private @const {string} */\nconst GROUP_DELIMITOR_ \x3d \x27j\x27;\n\n/** @private @const {string} */\nconst LENGTH_DELIMITOR_ \x3d \x27l\x27;\n\n/** @private @const {string} */\nconst FIELD_DELIMITOR_ \x3d \x27.\x27;\n\n/**\n * RegExp to detect trailing delimiter characters in the serialized parameter.\n * @private @const {!RegExp}\n */\nconst TRAILING_DELIMITER_PATTERN_ \x3d /\\.+$/;\n\n/** @private @const {Md5} */\nconst HASHER_ \x3d new Md5();\n\n/** @private @const {number} */\nconst BLOCK_SIZE_ \x3d 64;\n\n/** @private @const {number} */\nconst SIGNATURE_LENGTH_ \x3d 8;\n\n/** @private @const {string} */\nconst LOGGING_TOKEN_KEY_ \x3d \x27q\x27;\n\n/** @private @const {string} */\nconst ORIGINAL_QUERY_PARAMETER_ \x3d \x27oq\x27;\n\n/** @private @const {string} */\nconst SERIALIZED_PARAMETERS_ \x3d \x27gs_l\x27;\n\n/** @package @const {Array\x3cnumber\x3e} */\nconst HISTOGRAM_INDEX_MAPPER \x3d [\n    0,  // 0-99.\n    1,  // 100-199.\n    2,  // 200-299.\n    3,  // 300-399.\n    4,  // 400-499.\n    5, 5,  // 500-699.\n    6, 6, 6,  // 700-999.\n    7, 7, 7, 7, 7,  // 1000-1499.\n    8, 8, 8, 8, 8   // 1500-1999 (UNBOUNDED_BIN_THRESHOLD_).\n];\n\n/** @package @const {number} */\nconst UNBOUNDED_BIN_THRESHOLD \x3d HISTOGRAM_INDEX_MAPPER.length * 100 - 1;\n\n/** @package @const {number} */\nconst UNBOUNDED_BIN_INDEX \x3d\n  HISTOGRAM_INDEX_MAPPER[HISTOGRAM_INDEX_MAPPER.length - 1] + 1;\n\nclass LoggingService extends Service {\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private {number} */\n    this.zeroPrefixSuggestionCount_ \x3d DEFAULT_ZERO_PREFIX_SUGGESTION_COUNT_;\n\n    /** @private {string} */\n    this.assistedQuery_ \x3d \x27\x27;\n\n    /** @private {string} */\n    this.loggingToken_ \x3d goog.getObjectByName(\x27google.pmc.sb_wiz.stok\x27) || \x27\x27;\n\n    /** @private {!Object\x3cstring, boolean\x3e} */\n    this.seenDescriptors_ \x3d {};\n\n    /** @private {!Array\x3cstring\x3e} */\n    this.availableDescriptors_ \x3d [];\n\n    /** @private {number} */\n    this.firstEditTime_ \x3d 0;\n\n    /** @private {number} */\n    this.lastEditTime_ \x3d 0;\n\n    /** @private {number} */\n    this.totalRoundTripTimeMs_ \x3d 0;\n\n    /** @private {!Array\x3cnumber\x3e} */\n    this.roundTripTimeHistogram_ \x3d /** @type {!Array\x3cnumber\x3e} */ (\n        new Array(UNBOUNDED_BIN_INDEX + 1).fill(0));\n\n    /** @private {number} */\n    this.maxRoundTripTimeMs_ \x3d 0;\n\n    /** @private {number} */\n    this.sessionStartTime_ \x3d goog.now();\n\n    /** @private {Object\x3cInputMethod, boolean\x3e} */\n    this.inputMethods_ \x3d {};\n\n    /** @private {number} */\n    this.cacheHitCount_ \x3d 0;\n\n    /** @private {number} */\n    this.connectionRejectedRequestCount_ \x3d 0;\n\n    this.setUpBfCacheHandler_();\n  }\n\n  /**\n   * Sets up the BF cache handler.\n   * @private\n   */\n  setUpBfCacheHandler_() {\n    // When it is navigated through bfcache, reset all the logging state.\n    common.setUpBfCacheHandler(() \x3d\x3e this.resetLoggingState());\n  }\n\n  /**\n   * Reset the logging state.\n   */\n  resetLoggingState() {\n    this.zeroPrefixSuggestionCount_ \x3d DEFAULT_ZERO_PREFIX_SUGGESTION_COUNT_;\n    this.assistedQuery_ \x3d \x27\x27;\n    this.loggingToken_ \x3d goog.getObjectByName(\x27google.pmc.sb_wiz.stok\x27) || \x27\x27;\n    this.seenDescriptors_ \x3d {};\n    this.availableDescriptors_.length \x3d 0;\n    this.firstEditTime_ \x3d 0;\n    this.lastEditTime_ \x3d 0;\n    this.totalRoundTripTimeMs_ \x3d 0;\n    this.roundTripTimeHistogram_ \x3d /** @type{!Array\x3cnumber\x3e} */ (\n        new Array(UNBOUNDED_BIN_INDEX + 1).fill(0));\n    this.maxRoundTripTimeMs_ \x3d 0;\n    this.sessionStartTime_ \x3d goog.now();\n    this.inputMethods_ \x3d {};\n    this.cacheHitCount_ \x3d 0;\n    this.connectionRejectedRequestCount_ \x3d 0;\n  }\n\n  /**\n   * @param {string} originalQuery The original query.\n   * @param {SearchMethod} searchMethod The search method.\n   * @param {SearchboxConfig} searchboxConfig The searchbox config.\n   * @return {!Object\x3cstring, ?string\x3e} The map of parameter key-value pairs\n   *    for logging.\n   */\n  getLoggingParameters(originalQuery, searchMethod, searchboxConfig) {\n    const loggingParameters \x3d {};\n    loggingParameters[ORIGINAL_QUERY_PARAMETER_] \x3d originalQuery;\n    loggingParameters[SERIALIZED_PARAMETERS_] \x3d\n        this.getSerializedParameters_(\n            originalQuery, searchMethod, searchboxConfig);\n    return loggingParameters;\n  }\n\n  /**\n   * @param {string} originalQuery The original query.\n   * @param {SearchMethod} searchMethod The search method.\n   * @param {SearchboxConfig} searchboxConfig The searchbox config.\n   * @return {string} The serialized logging parameter.\n   * @private\n   */\n  getSerializedParameters_(originalQuery, searchMethod, searchboxConfig) {\n    const entries \x3d [];\n    entries[LogIndex.CLIENT_NAME] \x3d searchboxConfig.getClientName();\n    entries[LogIndex.SEARCH_METHOD] \x3d searchMethod;\n    entries[LogIndex.ASSISTED_QUERY] \x3d this.assistedQuery_;\n    entries[LogIndex.AVAILABLE_SUGGESTIONS] \x3d\n        this.getAvailableSuggestions_();\n    entries[LogIndex.FIRST_EDIT_TIME] \x3d\n        this.getRelativeDuration_(this.firstEditTime_);\n    entries[LogIndex.LAST_EDIT_TIME] \x3d\n        this.getRelativeDuration_(this.lastEditTime_);\n    entries[LogIndex.SESSION_DURATION] \x3d goog.now() - this.sessionStartTime_;\n    entries[LogIndex.MAX_ROUND_TRIP_TIME] \x3d this.maxRoundTripTimeMs_;\n    entries[LogIndex.TOTAL_ROUND_TRIP_TIME] \x3d this.totalRoundTripTimeMs_;\n    entries[LogIndex.COMPRESSED_ROUND_TRIP_HISTOGRAM] \x3d\n        this.getCompressedRoundTripTimeHistogram_();\n    entries[LogIndex.INPUT_METHODS] \x3d\n        googObject.getKeys(this.inputMethods_).join(GROUP_DELIMITOR_);\n    entries[LogIndex.INTERNAL_CACHE_HIT_COUNT] \x3d this.cacheHitCount_;\n    entries[LogIndex.CONNECTION_REJECTED_REQUEST_COUNT] \x3d\n        this.connectionRejectedRequestCount_;\n    if (searchboxConfig.hasRequestIdentifier()) {\n      entries[LogIndex.REQUEST_IDENTIFIER] \x3d\n          searchboxConfig.getRequestIdentifier();\n    }\n    if (this.zeroPrefixSuggestionCount_ !\x3d\n        DEFAULT_ZERO_PREFIX_SUGGESTION_COUNT_) {\n      entries[LogIndex.ZERO_PREFIX_SUGGESTIONS_COUNT] \x3d\n          this.zeroPrefixSuggestionCount_;\n    }\n    entries[LogIndex.PREVIOUS_SUGGESTIONS] \x3d this.getPreviousSuggestions_();\n    // TODO(hackson): Fill in the rest of the logging parameters.\n    const serializedParameters \x3d entries\n        .join(FIELD_DELIMITOR_)\n        .replace(TRAILING_DELIMITER_PATTERN_, \x27\x27);\n\n    const signature \x3d this.getSignature_(originalQuery, serializedParameters);\n\n    return serializedParameters + FIELD_DELIMITOR_ + signature;\n  }\n\n  /**\n   * @param {string} originalQuery The original query.\n   * @param {string} serializedParameters The serialized string of\n   *    searchbox logging parameters.\n   * @return {string} The computed signature string (Base64-encoded).\n   * @private\n   */\n  getSignature_(originalQuery, serializedParameters) {\n    if (this.loggingToken_) {\n      const blob \x3d originalQuery + serializedParameters;\n      const key \x3d base64.decodeStringToByteArray(this.loggingToken_);\n\n      // Sign the concatenated string using the key.\n      const hmac \x3d new Hmac(assert(HASHER_), key, BLOCK_SIZE_);\n      hmac.update(blob);\n      const signature \x3d hmac.digest().slice(0, SIGNATURE_LENGTH_);\n      return base64.encodeByteArray(signature);\n    }\n    return \x27\x27;\n  }\n\n  /**\n   * @param {string} query The query.\n   * @param {Response} response The rendered response.\n   */\n  markResponseRendered(query, response) {\n    if (!query.trim()) {\n      this.setZeroPrefixSuggestionCount_(response.getSuggestions().length);\n    }\n    this.updateAvailableSuggestions_(response.getSuggestions());\n  }\n\n  /**\n   * @param {Array\x3cSuggestion\x3e} suggestions The list of suggestions.\n   * @private\n   */\n  updateAvailableSuggestions_(suggestions) {\n    this.availableDescriptors_.length \x3d 0;\n    let suggestion;\n    for (let i \x3d 0; suggestion \x3d suggestions[i++];) {\n      const descriptor \x3d this.getDescriptor_(\n          suggestion.getType(), suggestion.getSubtypes());\n      this.availableDescriptors_.push(descriptor);\n      this.seenDescriptors_[descriptor] \x3d true;\n    }\n  }\n\n  /**\n   * @param {number} index The selected suggestion index.\n   */\n  setAssistedQuery(index) {\n    this.assistedQuery_ \x3d index + \x27\x27;\n  }\n\n  /**\n   * Computes and returns the encoded available-suggestions value from the\n   * currently-displayed list of suggestion objects.\n   * Example: for a list of suggestions:\n   *   +------+----------+\n   *   | type | subtypes |\n   *   +------+----------+\n   *   | 5    | none     |\n   *   | 5    | none     |\n   *   | 3    | 7, 12    |\n   *   | 3    | 7, 12    |\n   *   | 10   | none     |\n   *   | 6    | 10       |\n   *   +------+----------+\n   * available-suggestions string is \x225l2j3i7i12l2j10j6i10\x22\n   * where \x27i\x27 and \x27l\x27 (lowercase \x27L\x27) are used as type/subtype delimiters\n   * and \x27j\x27 is used as group delimiter.\n   * TODO(hackson): Support source logging.\n   *\n   * @return {string} The encoded available-suggestions value.\n   * @private\n   */\n  getAvailableSuggestions_() {\n    const descriptors \x3d [];\n    let lastDescriptor \x3d null;\n    let lastDescriptorCount \x3d 0;\n    // We only add length delimitor when there are multiple identical\n    // descriptors.\n    const lengthSuffixGenerator \x3d\n        (count) \x3d\x3e { return count \x3e 1 ? LENGTH_DELIMITOR_ + count : \x27\x27; };\n    let descriptor;\n    for (let i \x3d 0;\n        descriptor \x3d this.availableDescriptors_[i++];) {\n      if (descriptor \x3d\x3d lastDescriptor) {\n        lastDescriptorCount++;\n      } else {\n        if (lastDescriptorCount) {\n          descriptors.push(\n            lastDescriptor + lengthSuffixGenerator(lastDescriptorCount));\n        }\n        lastDescriptor \x3d descriptor;\n        lastDescriptorCount \x3d 1;\n      }\n    }\n    if (lastDescriptorCount) {\n      descriptors.push(\n        lastDescriptor + lengthSuffixGenerator(lastDescriptorCount));\n    }\n    return descriptors.join(GROUP_DELIMITOR_);\n  }\n\n  /**\n   * Computes and returns the encoded previous-suggestions value from the\n   * all rendered suggestion objects in the entire searchbox session. Note\n   * that the type and subtypes pair must not be intersecting with available\n   * suggestions.\n   * Example: for a list of suggestions:\n   *   +------+----------+\n   *   | type | subtypes |\n   *   +------+----------+\n   *   | 5    | none     |\n   *   | 5    | none     |\n   *   | 3    | 7, 12    |\n   *   | 3    | 7, 12    |\n   *   | 10   | none     |\n   *   | 6    | 10       |\n   *   +------+----------+\n   * And a list of previously shown (including current list of) suggestions:\n   *   +------+----------+\n   *   | type | subtypes |\n   *   +------+----------+\n   *   | 5    | none     |\n   *   | 3    | 7, 12    |\n   *   | 10   | none     |\n   *   | 6    | 10       |\n   *   | 5    | 2        |\n   *   | 1    | none     |\n   *   | 2    | 3, 4     |\n   *   +------+----------+\n   * previous-suggestions string is \x225i2j1j2i3i4\x22, where \x27i\x27 is used as\n   * type/subtype delimiters and \x27j\x27 is used as group delimiter.\n   * TODO(hackson): Support source logging.\n   *\n   * @return {string} The encoded previous-suggestions value.\n   * @private\n   */\n  getPreviousSuggestions_() {\n    const previousSuggestionsDescriptors \x3d this.seenDescriptors_;\n    let descriptor;\n    for (let i \x3d 0;\n        descriptor \x3d this.availableDescriptors_[i++];) {\n      if (descriptor in previousSuggestionsDescriptors) {\n        delete previousSuggestionsDescriptors[descriptor];\n      }\n    }\n    let value \x3d \x27\x27;\n    for (let descriptor in previousSuggestionsDescriptors) {\n      value +\x3d (value ? GROUP_DELIMITOR_ : \x27\x27) + descriptor;\n    }\n    return value;\n  }\n\n  /**\n   * @param {number} type The suggestion type.\n   * @param {Array\x3cnumber\x3e} subtypes The suggestion subtypes.\n   * @return {string} The formatted descriptor.\n   * @private\n   */\n  getDescriptor_(type, subtypes) {\n    let descriptor \x3d type + \x27\x27;\n    if (subtypes \x26\x26 subtypes.length) {\n      descriptor +\x3d\n          TYPE_SUBTYPE_DELIMITOR_ + subtypes.join(TYPE_SUBTYPE_DELIMITOR_);\n    }\n    return descriptor;\n  }\n\n  /**\n   * @param {number} count The number of zero prefix suggestions shown.\n   * @private\n   */\n  setZeroPrefixSuggestionCount_(count) {\n    this.zeroPrefixSuggestionCount_ \x3d count;\n  }\n\n  setZeroPrefixSuggestionsEnabled() {\n    this.zeroPrefixSuggestionCount_ \x3d\n        Math.max(this.zeroPrefixSuggestionCount_, 0);\n  }\n\n  updateEditEvent() {\n    const now \x3d goog.now();\n    if (this.firstEditTime_ \x3d\x3d 0) {\n      this.firstEditTime_ \x3d now;\n    }\n    this.lastEditTime_ \x3d now;\n  }\n\n  /**\n   * @param {Request} request The request to compute the round trip time.\n   */\n  updateRoundTripTime(request) {\n    const roundTripTime \x3d goog.now() - request.getTimestamp();\n    const index \x3d roundTripTime \x3e UNBOUNDED_BIN_THRESHOLD ?\n        UNBOUNDED_BIN_INDEX :\n        HISTOGRAM_INDEX_MAPPER[Math.floor(roundTripTime / 100)];\n\n    this.totalRoundTripTimeMs_ +\x3d roundTripTime;\n    this.maxRoundTripTimeMs_ \x3d\n        Math.max(this.maxRoundTripTimeMs_, roundTripTime);\n    ++this.roundTripTimeHistogram_[index];\n  }\n\n  /**\n   * @return {string} The compressed round trip time histogram\n   * @private\n   */\n  getCompressedRoundTripTimeHistogram_() {\n    const compressedHistogram \x3d [];\n    let numEmptyBuckets \x3d 0;\n    let bucketIndex \x3d -1;\n    for (const count of this.roundTripTimeHistogram_) {\n      ++bucketIndex;\n      if (count \x3d\x3d 0) {\n        numEmptyBuckets++;\n        continue;\n      }\n      let prefix \x3d \x27\x27;\n      if (numEmptyBuckets \x3d\x3d 1) {\n        prefix \x3d \x270\x27 + GROUP_DELIMITOR_;\n      } else if (numEmptyBuckets \x3e 1) {\n        prefix \x3d bucketIndex + \x27-\x27;\n      }\n      compressedHistogram.push(prefix + count);\n      numEmptyBuckets \x3d 0;\n    }\n    return compressedHistogram.join(GROUP_DELIMITOR_);\n  }\n\n  /**\n   * @param {number} duration\n   * @return {number} The actual duration relative to the session start time.\n   * @private\n   */\n  getRelativeDuration_(duration) {\n    return Math.max(duration - this.sessionStartTime_, 0);\n  }\n\n  /**\n   * Updates the logging token carried from the response.\n   * @param {Response} response\n   */\n  updateLoggingToken(response) {\n    this.loggingToken_ \x3d\n        response.getParameter(LOGGING_TOKEN_KEY_) || this.loggingToken_;\n  }\n\n  /**\n   * Registers an input method used.\n   * @param {InputMethod} inputMethod The used input method.\n   */\n  addInputMethod(inputMethod) {\n    this.inputMethods_[inputMethod] \x3d true;\n  }\n\n  /**\n   * Increase the cache hit count.\n   */\n  incrementCacheHitCount() {\n    this.cacheHitCount_++;\n  }\n\n  /**\n   * Increase the number of Suggest requests rejected by the connection.\n   */\n  incrementConnectionRejectedRequestCount() {\n    this.connectionRejectedRequestCount_++;\n  }\n}\n\nregisterService(services.LOGGING, LoggingService);\nexports \x3d LoggingService;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/logging_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxh');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxh');

}catch(e){_DumpException(e)}
/* _Module_:syxi */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxi');
var $googDebugFname="searchbox/wiz/library/events/events.js";
goog.loadModule("/**\n * @pintomodule\n * Defines various custom Wiz events for components\x27 event handling.\n */\ngoog.module(\x27searchbox.wiz.events\x27);\n\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst wizEvent \x3d goog.require(\x27wiz.event\x27);\n\n/**\n * Dispatched to clear the input box.\n * @const {!wizEvent.EventType\x3cundefined\x3e}\n */\nexports.clearInput \x3d wizEvent.declare(\x27searchbox.wiz.events.clearInput\x27);\n\n/**\n * Dispatched to notify input is changed.\n * @const {!wizEvent.EventType\x3cundefined\x3e}\n */\nexports.inputChanged \x3d wizEvent.declare(\x27searchbox.wiz.events.inputChanged\x27);\n\n/**\n * Dispatched to notify the input gains focus.\n * @const {!wizEvent.EventType\x3cundefined\x3e}\n */\nexports.inputFocused \x3d wizEvent.declare(\x27searchbox.wiz.events.inputFocused\x27);\n\n/**\n * Dispatched to notify a redirection is necessary.\n * @const {!wizEvent.EventType\x3cstring\x3e}\n */\nexports.redirect \x3d wizEvent.declare(\x27searchbox.wiz.events.redirect\x27);\n\n/**\n * @typedef {{\n *   query: string,\n *   parameters: !Object\x3cstring, string\x3e,\n *   answerType: string,\n *   skipSave: (boolean|undefined),\n *   suggestionParameters: string,\n * }}\n */\nlet SearchData;\n\n/** @typedef {SearchData} */\nexports.SearchData;\n\n/**\n * Dispatched to perform a search.\n * @const {!wizEvent.EventType\x3c!SearchData\x3e}\n */\nexports.search \x3d wizEvent.declare(\x27searchbox.wiz.events.search\x27);\n\n/**\n * @typedef {{\n *   suggestion: !Suggestion,\n *   actionType: number,\n * }}\n */\nlet ActionClickData;\n\n/** @typedef {ActionClickData} */\nexports.ActionClickData;\n\n/**\n * Dispatched to perform an action button click.\n * @const {!wizEvent.EventType\x3c!ActionClickData\x3e}\n */\nexports.actionButtonClicked \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.actionButtonClicked\x27);\n\n/**\n * Dispatched to perform a suggestion long click.\n * @const {!wizEvent.EventType\x3c!Suggestion\x3e}\n */\nexports.onSuggestionLongClick \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.onSuggestionLongClick\x27);\n\n/**\n * @typedef {{\n *   suggestion: Suggestion,\n *   content: string,\n *   feedbackUrl: (string|undefined),\n *   showFeedback: (boolean|undefined),\n *   showCancel: (boolean|undefined),\n *   showOk: (boolean|undefined),\n *   showDelete: (boolean|undefined),\n * }}\n */\nlet DialogData;\n\n/** @typedef {DialogData} */\nexports.DialogData;\n\n/**\n * Dispatched to decorate the long click dialog.\n * @const {!wizEvent.EventType\x3c!DialogData\x3e}\n */\nexports.decorateDialog \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.decorateDialog\x27);\n\n/**\n * Dispatched to handle suggestion deletion.\n * @const {!wizEvent.EventType\x3c!Suggestion\x3e}\n */\nexports.deleteSuggestion \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.deleteSuggestion\x27);\n\n/**\n * Dispatched to handle suggestion deletion failure.\n * @const {!wizEvent.EventType\x3cundefined\x3e}\n */\nexports.deleteFailed \x3d wizEvent.declare(\x27searchbox.wiz.events.deleteFailed\x27);\n\n/**\n * Dispatched to trigger input field focus.\n * @const {!wizEvent.EventType\x3cundefined\x3e}\n */\nexports.triggerFocus \x3d wizEvent.declare(\x27searchbox.wiz.events.triggerFocus\x27);\n\n/**\n * Dispatched to handle suggestions visibility change. Note that this is an\n * event to trigger changes when suggestions are shown/hidden, instead of\n * changing suggestions\x27 visibility.\n * @const {!wizEvent.EventType\x3cboolean\x3e}\n */\nexports.suggestionsShown \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.suggestionsShown\x27);\n\n/**\n * Dispatched to toggle suggestions box\x27s visibility.\n * @const {!wizEvent.EventType\x3cboolean\x3e}\n */\nexports.toggleSuggestionsBox \x3d wizEvent.declare(\n    \x27searchbox.wiz.events.toggleSuggestionsBox\x27);\n\n/**\n * Dispatched to handle key events.\n * @const {!wizEvent.EventType\x3cnumber\x3e}\n */\nexports.keyDown \x3d wizEvent.declare(\x27searchbox.wiz.events.keyDown\x27);\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/events/events.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxi');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxi');

}catch(e){_DumpException(e)}
/* _Module_:syfu */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syfu');
var $googDebugFname="javascript/apps/wiz/common/factory_method.js";
eval("/**\n * @visibility {//javascript/apps/wiz:__subpackages__}\n */\ngoog.provide(\x27wiz.factoryMethod\x27);\n\n\n/**\n * Uncompiled-mode support for the Wiz factory methods\n * (`wiz.controller`, `wiz.model`, etc.).\n * \x3cp\x3e\n * In compiled modes, calls to Wiz factory methods are transformed and removed\n * by JSCompiler (and this function becomes dead code). In uncompiled modes,\n * Wiz must produce equivalent behavior through runtime tricks.\n * This function takes the user-supplied arguments to Wiz factory methods,\n * along with some internal metadata, returning a constructor that subclasses\n * the appropriate base class (`wiz.Controller`, `wiz.Model`, etc.)\n * and which will be instantiated asynchronously by the framework.\n *\n * @param {function(new: B, ...)} baseClass Framework-supplied base class\n *     (`wiz.Controller`, `wiz.Model`, etc.).\n * @param {function(\n *     !fava.services.ServiceId\x3cT\x3e,\n *     (!wiz.async.Request|undefined),\n *     function(new: T, ...))} initFunction Framework-supplied init function\n *     (`wiz.controller.init`, `wiz.model.init`, etc.)\n *     used to initialize the Wiz object after it is instantiated.\n * @param {!fava.services.ServiceId\x3cT\x3e} key User-supplied key for this type of\n *     Wiz object.\n * @param {(function(this:T, !wiz.async.Response):undefined|!wiz.async.Request)\x3d}\n *     opt_initializerOrGetParam User-supplied initializer function\n *     for the Wiz object, or an object literal as passed to\n *     `wiz.async.get`.\n * @param {function(this:T, !wiz.async.Response):undefined\x3d} opt_initializer\n *     User-supplied initializer function for the Wiz object.\n * @return {function(new: T, ...)} Constructor for a Wiz object that\n *     inherits from B.\n * @template T, B\n */\nwiz.factoryMethod \x3d function(\n    baseClass, initFunction, key, opt_initializerOrGetParam, opt_initializer) {\n  var getParam;\n  var initializer;\n  if (typeof opt_initializerOrGetParam \x3d\x3d \x27function\x27) {\n    initializer \x3d opt_initializerOrGetParam;\n  } else {\n    getParam \x3d opt_initializerOrGetParam;\n    initializer \x3d opt_initializer;\n  }\n\n  if (goog.DEBUG \x26\x26 initializer) {\n    initializer.displayName \x3d String(key) + \x27.initializer\x27;\n  }\n\n  // The typeof an ES6 class is \x27function\x27. But according to the spec\n  // (http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.tostring),\n  // (class{}).toString() must start with \x27class\x27.\n  // This check does not work in FF because of this bug:\n  // (https://bugzilla.mozilla.org/show_bug.cgi?id\x3d1216630).\n  // Tests with ES6 classes on FF must be transpiled first.\n  var isES6 \x3d initializer \x26\x26 initializer.toString().indexOf(\x27class\x27) \x3d\x3d\x3d 0;\n\n  /**\n   * Wrapper constructor around the framework-supplied base class.\n   * There are currently two parameter modes for this wrapper. One is the mode\n   * where there is one parameter (keyOrDeps) and a mode where there are\n   * 3-4. In most cases (uncompiled or compiled) there is only one parameter.\n   * However there are many tests that use the old method and these need\n   * to be cleaned up before we can delete the other three parameters.\n   * TODO(b/36371805): Clean this up and remove multi-param signature.\n   * @param {?} keyOrDeps\n   * @param {!Element} element Root node to which the Wiz object is attached.\n   * @param {!wiz.Dispatcher} dispatcher The dispatcher that is instantiating\n   *     this controller.\n   * @param {?} response\n   * @constructor\n   */\n  var Wrapper \x3d function(keyOrDeps, element, dispatcher, response) {\n    // In the general case, there is usually only one argument, but this is\n    // done to keep in compat mode with existing tests.\n    var superClassFirstArg \x3d keyOrDeps.super_response || keyOrDeps;\n    var initializerArg \x3d keyOrDeps.super_response ? keyOrDeps : response;\n    var super_response \x3d response \x26\x26 response.super_response;\n    // Use the old method of calling the base class constructor because\n    // goog.base will compile away to the wrong base class.\n    Wrapper.superClass_.constructor.call(\n        this, superClassFirstArg, element, dispatcher, super_response);\n    if (!isES6) {\n      initializer \x26\x26 initializer.call(this, initializerArg);\n    } else {\n      // If the initializer is an ES6 class, we cannot call its constructor\n      // on a custom receiver as in the other branch. But we can get close\n      // by setting the prototype of its prototype to be this instance.\n      // Property lookups will go up the prototype chain as normal.\n      Object[\x27setPrototypeOf\x27](initializer.prototype, this);\n      var ctor \x3d /** @type {function(new: ?, ...)} */ (initializer);\n      var tmp \x3d new ctor(keyOrDeps, element, dispatcher, initializerArg);\n      // Export state of instance back to the Wiz object.\n      // Its methods have already been exported by patchPrototype_.\n      Object.assign(this, tmp);\n    }\n  };\n  var inherits \x3d goog.inherits;\n  inherits(Wrapper, baseClass);\n  initFunction(key, getParam, Wrapper);\n  wiz.patchPrototype_(/** @type {!Function} */(initializer), Wrapper);\n  return Wrapper;\n};\n\n/**\n * Patches existing properties from the initializer\x27s prototype onto the\n * Wiz object\x27s prototype.\n * \x3cp\x3e\n * Typically, initializers are declared anonymously inline with the Wiz\n * factory method call, so there is nowhere to define prototype properties\n * and this method is a no-op.\n * \x3cp\x3e\n * However, JSCompiler is allowed to call Wiz factory methods with non-inline\n * initializers, in order to transpile ES6 classes. Original source code like\n * \x3ccode\x3e\n * wiz.controller(\x27blah\x27, class {\n *   onClick() {}\n * });\n * \x3c/code\x3e\n * is transpiled to something like\n * \x3ccode\x3e\n * var $synthetic \x3d function() {};\n * $synthetic.prototype.onClick \x3d function() {};\n * wiz.controller(\x27blah\x27, $synthetic);\n * \x3c/code\x3e\n * In order for the `onClick` handler not to be lost, we must inspect\n * the prototype of the passed-in initializer and copy its properties\n * to the prototype of the object that is returned by {@link wiz.controller}.\n *\n * @param {!Function} initializer The initializer.\n * @param {function(new: B, ...)} ctor The Wiz object constructor.\n * @suppress {checkTypes}\n * @private\n * @template B\n */\nwiz.patchPrototype_ \x3d function(initializer, ctor) {\n  if (!initializer || !initializer.prototype) {\n    return;\n  }\n  if (\x27getOwnPropertyNames\x27 in Object) {\n    // ES6 methods are nonenumerable, so they don\x27t show up in for..in loops.\n    // Use Object.getOwnPropertyNames instead.\n    Object.getOwnPropertyNames(initializer.prototype)\n        .filter(function(method) { return method !\x3d\x3d \x27constructor\x27; })\n        .forEach(function(method) {\n          ctor.prototype[method] \x3d initializer.prototype[method];\n        });\n  } else {\n    for (var method in initializer.prototype) {\n      ctor.prototype[method] \x3d initializer.prototype[method];\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/common/factory_method.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syfu');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syfu');

}catch(e){_DumpException(e)}
/* _Module_:syfv */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syfv');
var $googDebugFname="javascript/apps/wiz/controller/controller.js";
eval("/**\n * @fileoverview WizControllers manage a DOM subtree and handle events\n * dispatched on that tree by JsAction.\n *\n * Controllers are defined in templates and should never be manually\n * instantiated. They are loaded when triggered by events and are\n * inherently constructed asynchronously.\n */\ngoog.provide(\x27wiz.abstractController\x27);\ngoog.provide(\x27wiz.controller\x27);\ngoog.provide(\x27wiz.controller.Context\x27);\ngoog.provide(\x27wiz.controller.InitializerFunction\x27);\ngoog.provide(\x27wiz.controller.init\x27);\n\ngoog.require(\x27fava.services.ServiceId\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.async.Deferred\x27);\ngoog.require(\x27goog.async.DeferredList\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27wiz.Controller\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.async.Source\x27);\ngoog.require(\x27wiz.context\x27);\ngoog.require(\x27wiz.controllers\x27);\n/**\n * @suppress {extraRequire} Force the built in events to be available for every\n *     wiz application.\n */\ngoog.require(\x27wiz.event.events\x27);\ngoog.require(\x27wiz.factoryMethod\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.lifecycle.ModelNotFoundError\x27);\ngoog.require(\x27wiz.lifecycle.getModel\x27);\n/**\n * @suppress {extraRequire} Required by controller implementers when using the\n *     at-wizaction annotation.\n */\ngoog.require(\x27xid\x27);\n/**\n * @suppress {extraRequire} Force this essentially empty class to be available\n *     for every wiz application as a type.\n */\ngoog.require(\x27xid.Reference\x27);\n\n\n/**\n * Creates a new constructor for a controller.\n * USAGE: Refer to wiz.service.\n *\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {(wiz.controller.InitializerFunction|!wiz.async.Request)\x3d}\n *     opt_initializerOrGetParam Custom initializer function for the controller\n *     or an object literal as passed to `wiz.async.get`.\n * @param {wiz.controller.InitializerFunction\x3d} opt_initializer Custom\n *     initializer function for the controller.\n * @return {function(new: T, ...)} Constructor for a controller that\n *     inherits from wiz.Controller.\n * @template T\n */\nwiz.controller \x3d function(key, opt_initializerOrGetParam, opt_initializer) {\n  goog.asserts.assert(key, \x27The key to wiz.controller must be defined\x27);\n  return wiz.factoryMethod(\n      wiz.Controller, wiz.controller.init, key, opt_initializerOrGetParam,\n      opt_initializer);\n};\n\n\n/**\n * @param {!fava.services.ServiceId\x3cT\x3e|undefined} key\n * @param {?wiz.async.Request|undefined} getParam\n *     an object literal as passed to `wiz.async.get`.\n * @param {Function!} controller\n * @template T\n * @public\n */\nwiz.controller.init \x3d function(key, getParam, controller) {\n  wiz.Object.addCommonCtorProps(controller);\n  wiz.finalizeControllerConstructor_(controller);\n\n  /**\n   * Make every controller support the wakeup action that can be referenced by\n   * jsaction events to trigger instantiation of the controller. Use this to\n   * instantiate a controller when it becomes very likely that it will soon be\n   * needed. I.e. when a user hovers a link that has a click handler in the\n   * controller.\n   * @wizaction\n   */\n  controller.prototype.wakeup \x3d\n      controller.prototype.wakeup || goog.nullFunction;\n\n  if (key) {\n    controller.displayName \x3d key;\n    wiz.inject.Injector.getInstance().register(key, controller);\n  }\n\n  /**\n   * @return {!wiz.async.Request} response\n   * @nocollapse\n   */\n  controller.deps \x3d controller.deps || goog.functions.constant(getParam || {});\n\n  if (key) {\n    /**\n     * Returns a goog.async.Deferred that will be fulfilled when the\n     * controller has been created and its initialization is complete.\n     * This method is not extracted into the dispatcher because of a forbidden\n     * dep between wiz.Dispatcher and wiz.controller.\n     * TODO(tomnguyen) Move wiz.controller.Context into a different file.\n     *\n     * @param {!fava.services.ServiceId} key Service key for the controller.\n     * @param {!Element} element Root node to which the controller is attached.\n     * @param {!wiz.Dispatcher} dispatcher The dispatcher that is instantiating\n     * @return {!goog.async.Deferred\x3c?\x3e} response\n     */\n    controller.create \x3d function(key, element, dispatcher) {\n      const context \x3d\n          new wiz.controller.Context(key, element, dispatcher, controller);\n      return wiz.Object.create(key, controller, context);\n    };\n  }\n};\n\n\n/**\n * Creates a new constructor for an abstract controller. This controller cannot\n * be directly instantiated.\n * While it is optional, new abstract controllers should provide a service id.\n * @param {(!fava.services.ServiceId\x3cT\x3e|wiz.controller.InitializerFunction|\n *     !wiz.async.Request)\x3d} opt_keyOrInitializerOrGetParam\n * @param {(wiz.controller.InitializerFunction|!wiz.async.Request)\x3d}\n *     opt_initializerOrGetParam Custom initializer function for the controller\n *     or an object literal as passed to `wiz.async.get`.\n * @param {wiz.controller.InitializerFunction\x3d} opt_initializer Custom\n *     initializer function for the controller.\n * @return {function(new: T, ...)} Constructor for a controller that\n *     inherits from wiz.Controller.\n * @template T\n */\nwiz.abstractController \x3d function(\n    opt_keyOrInitializerOrGetParam, opt_initializerOrGetParam,\n    opt_initializer) {\n  var key;\n  if (opt_keyOrInitializerOrGetParam instanceof fava.services.ServiceId) {\n    key \x3d opt_keyOrInitializerOrGetParam;\n  } else {\n    var tmp \x3d opt_initializerOrGetParam;\n    opt_initializerOrGetParam \x3d opt_keyOrInitializerOrGetParam;\n    opt_initializer \x3d\n        /** @type {undefined|wiz.controller.InitializerFunction} */ (tmp);\n  }\n\n  return wiz.factoryMethod(\n      wiz.Controller, wiz.abstractController.init,\n      /** @type {!fava.services.ServiceId} */ (key), opt_initializerOrGetParam,\n      opt_initializer);\n};\n\n/**\n * @param {!fava.services.ServiceId\x3cT\x3e|undefined} key\n * @param {!wiz.async.Request|undefined} getParam\n *     an object literal as passed to `wiz.async.get`.\n * @param {function(new: T, ...)} controller\n * @template T\n * @public\n */\nwiz.abstractController.init \x3d function(key, getParam, controller) {\n  wiz.controller.init(key, getParam, controller);\n};\n\n/**\n * Type of the function passed to `wiz.controller` as initializer.\n * The `wiz.async.Response` param is available if the function was\n * called with a `wiz.async.Request`.\n * If the function returns a deferred, the dispatcher will hold dispatching\n * events to the controller until the deferred is resolved.\n * @typedef {function(this:wiz.Controller, !wiz.async.Response):undefined}\n */\nwiz.controller.InitializerFunction;\n\n\n/**\n * You should never have to call this from user code.\n * @param {!Function} ctor\n * @private\n */\nwiz.finalizeControllerConstructor_ \x3d function(ctor) {\n  // For Wiz Es6 classes, it is possible that the wizaction map has already\n  // been constructed in optimized mode. If so, just reuse the existing map\n  // and don\x27t create a new one.\n  if (!ctor[\x27prototype\x27].wizaction) {\n    // Give this controller class its own wizaction map. The prototype key is\n    // quoted to work around a warning in gjslint that forbids assigning\n    // objects to prototype members, because that creates implicit static\n    // members. Here this is intended.\n    ctor[\x27prototype\x27].wizaction \x3d {};\n  }\n  // Be aware that in the case of inheritance this will be called in the\n  // wrong spot for uncompiled code. Do not add anything here unless the\n  // change can live with that circumstance.\n};\n\n\n/**\n * A class used to provide \x22context\x22 when resolving a wiz objects\x27s\n * dependencies.\n * @final\n * @implements {wiz.async.Source}\n */\nwiz.controller.Context \x3d goog.defineClass(wiz.Object.Context, {\n  /**\n   * @param {!fava.services.ServiceId} key\n   * @param {!Element} element\n   * @param {!wiz.Dispatcher} dispatcher The dispatcher that is instantiating\n   * @param {!Function} injectingConstructor\n   */\n  constructor: function(key, element, dispatcher, injectingConstructor) {\n    wiz.controller.Context.base(\n        this, \x27constructor\x27, key, undefined, injectingConstructor);\n\n    /** @const @private */\n    this.element_ \x3d element;\n\n    /** @const @private */\n    this.dispatcher_ \x3d dispatcher;\n\n    /**\n     * @const @private {!wiz.Controller.Cache}\n     */\n    this.cache_ \x3d new wiz.Controller.Cache();\n  },\n\n  /** @override @final */\n  getAppContext: function() {\n    return this.dispatcher_.getAppContext();\n  },\n\n  /** @override @final */\n  getOptionalAppContext: function() {\n    return this.dispatcher_.getOptionalAppContext();\n  },\n\n  /** @override */\n  getContext: function(key) {\n    return wiz.context.get(this.element_, key);\n  },\n\n  /** @return {!wiz.Dispatcher} */\n  getDispatcher: function() {\n    return this.dispatcher_;\n  },\n\n  /**\n   * Gets the root element of the controller.\n   * @return {!wiz.Query.One} wiz.Query object for the root element of the\n   *     controller.\n   * @final\n   */\n  getRoot: function() {\n    if (this.cache_.root) {\n      return this.cache_.root;\n    }\n    return this.cache_.root \x3d new wiz.Query.One(this.element_);\n  },\n\n  /**\n   * Gets the data passed in via {@code data-} attributes from the controller\n   * for the specified key.\n   * @param {string} key Key for the data value.\n   * @return {!wiz.Query.Data} Value of the data.\n   * @override\n   * @final\n   */\n  getData: function(key) {\n    return this.getRoot().getData(key);\n  },\n\n  /**\n   * Returns the nearest model of the given type.\n   * @param {!fava.services.ServiceId\x3cT\x3e} key\n   * @return {!goog.async.Deferred\x3cT\x3e}\n   * @template T\n   */\n  getModel: function(key) {\n    return wiz.lifecycle\n        .getModel(this.element_, key, this.getOptionalAppContext())\n        .addErrback(e \x3d\x3e {\n          if (e instanceof wiz.lifecycle.ModelNotFoundError) {\n            e.message +\x3d \x27 requested by \x27 + this;\n          }\n          return e;\n        });\n  },\n\n  /**\n   * Return the controller for a given named element. Optionally takes in a\n   * callback to fire immediately after the controller is retrieved.\n   * @param {string|!Element} elementOrName JsName or the DOM element of the\n   *     controller element.\n   * @param {(function(!wiz.Controller):undefined)\x3d} opt_callback\n   * @return {!goog.async.Deferred\x3c!wiz.Controller\x3e} Deferred controller result.\n   * @final\n   */\n  getController: function(elementOrName, opt_callback) {\n    if (elementOrName.tagName) {\n      var d \x3d this.dispatcher_.getController(\n          /** @type {!Element} */ (elementOrName));\n      if (opt_callback) {\n        d.addCallback(opt_callback);\n      }\n      return d;\n    }\n    goog.asserts.assertString(elementOrName);\n\n    return this.getControllers(elementOrName)\n        .addCallback(function(controllers) {\n          if (controllers.length \x3d\x3d 0) {\n            throw new Error(\n                \x27Missing element with jsname \x3c\x27 + elementOrName +\n                \x27\x3e. Controller \x3c\x27 + this + \x27\x3e\x27 +\n                (goog.DEBUG ? \x27. More information \x27 +\n                         \x27http://go/wiz-errors#not-found-in-dom-scope\x27 :\n                              \x27\x27));\n          }\n          if (opt_callback) {\n            opt_callback(controllers[0]);\n          }\n          return controllers[0];\n        }, this);\n  },\n\n\n  /**\n   * Return the controllers for a multiple named elements. Optionally takes in a\n   * callback to fire immediately after the controller is retrieved.\n   * @param {string} name JsName of the controller element.\n   * @param {(function(!Array\x3c!wiz.Controller\x3e):undefined)\x3d} opt_callback\n   * @return {!goog.async.Deferred\x3c!Array\x3c!wiz.Controller\x3e\x3e} Deferred controller\n   *     results.\n   * @final\n   */\n  getControllers: function(name, opt_callback) {\n    var controllers \x3d [];\n    var elements \x3d this.getElements(name);\n    var currentControllerRoot \x3d this.getRoot().el();\n    if (elements.size() \x3d\x3d 0 \x26\x26\n        currentControllerRoot.ownerDocument.readyState \x3d\x3d \x27loading\x27) {\n      // If we found nothing and the document isn\x27t fully loaded yet, try again\n      // after it loaded.\n      // This reduces the likelihood of a race condition where controller\n      // injection during page load with cached JS fails.\n      var d \x3d new goog.async.Deferred();\n      goog.events.listenOnce(\n          currentControllerRoot.ownerDocument, \x27readystatechange\x27, function() {\n            this.getControllers(name, opt_callback)\n                .addCallbacks(\n                    function(c) {\n                      d.callback(c);\n                    },\n                    function(e) {\n                      d.errback(e);\n                    });\n          }, false, this);\n      return d;\n    }\n    elements.each(goog.bind(function(el) {\n      goog.asserts.assert(\n          wiz.controllers.getControllerRoot(el, true) !\x3d currentControllerRoot,\n          \x27A controller retrieved via getController should never be equal to\x27 +\n              \x27 the current controller. jsname\x3d\x27 + name);\n      controllers.push(this.dispatcher_.getController(el));\n    }, this));\n    var dlist \x3d goog.async.DeferredList.gatherResults(controllers);\n    if (opt_callback) {\n      dlist.addCallback(opt_callback);\n    }\n    return dlist;\n  },\n\n  /**\n   * Gets the descendent elements of the controller with the specified jsname.\n   * @param {string} name jsname of the elements.\n   * @return {!wiz.Query} wiz.Query object with the elements matching the name.\n   * @final\n   */\n  getElements: function(name) {\n    return wiz.Controller.getElementsInControllerScope(this.element_, name);\n  }\n\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syfv');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syfv');

}catch(e){_DumpException(e)}
/* _Module_:syfw */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syfw');
var $googDebugFname="javascript/apps/wiz/controller/registry.js";
goog.loadModule("/**\n * @fileoverview Provides registration methods for Wiz ES6 controllers.\n * Each registration method binds the service ID of a Wiz object to its\n * constructor and applies class specific logic. The Wiz Id generator also\n * uses these registration methods to generate the right namespaces for the\n * Wiz Ids.\n */\ngoog.module(\x27wiz.controller.registry\x27);\ngoog.module.declareLegacyNamespace();\n\nconst ServiceId \x3d goog.require(\x27fava.services.ServiceId\x27);\nconst controller \x3d goog.require(\x27wiz.controller\x27);\n\n\n/**\n * Registers an abstract controller class, which is generally used as a base\n * class for one or more concrete controller classes. Since the given class is\n * not instantiable, it will not be associated with a Wiz ID.\n * @param {Function!} ctor\n * @return {Function!}\n */\nexports.registerAbstractController \x3d (ctor) \x3d\x3e {\n  controller.init(undefined, undefined, ctor);\n  return ctor;\n};\n\n\n/**\n * Registers a concrete controller class.\n * @param {!ServiceId\x3cT\x3e} id\n * @param {function(new:T, ?)} ctor\n * @return {function(new:T, ?)}\n * @template T\n */\nexports.registerController \x3d (id, ctor) \x3d\x3e {\n  controller.init(id, undefined, ctor);\n  return ctor;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/controller/registry.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syfw');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syfw');

}catch(e){_DumpException(e)}
/* _Module_:syxo */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxo');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/input_box_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.InputBoxController\x27);\n\nconst LoggingService \x3d goog.require(\x27searchbox.wiz.services.LoggingService\x27);\nconst Query \x3d goog.require(\x27wiz.Query\x27);\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst googEvents \x3d goog.require(\x27goog.events\x27);\nconst googStyle \x3d goog.require(\x27goog.style\x27);\nconst libraryServices \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst scheduler \x3d goog.require(\x27search.task.scheduler\x27);\nconst {InputMethod} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {isAndroid, isIos} \x3d goog.require(\x27goog.labs.userAgent.platform\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/** @package @const {number} */\nconst MAX_SCROLL_ATTEMPTS \x3d 5;\n\n/** @package @const {number} */\nconst SCROLL_ATTEMPTS_INTERVAL_MS \x3d 70;\n\n/**\n * The controller to handle the input element.\n * @final\n */\nclass InputBoxController extends WizController {\n  static deps() {\n    return {\n      service: {\n        logging: libraryServices.LOGGING,\n      },\n    };\n  }\n\n  /** @param {!controllers.InputBoxControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private @const {Element} */\n    this.inputElement_ \x3d this.getRoot().find(\x27[name\x3dq]\x27).el();\n\n    /** @private {Element} */\n    this.elementToScrollTo_ \x3d this.getRoot()\n        .closest(Query.Matchers.byTagName(\x27form\x27))\n        .el();\n\n    /** @private @const {!LoggingService} */\n    this.logging_ \x3d response.service.logging;\n\n    /** @private @const {boolean} */\n    this.isIos_ \x3d isIos();\n\n    /** @private @const {boolean} */\n    this.isAndroid_ \x3d isAndroid();\n\n    /** @private {boolean} */\n    this.shouldScroll_ \x3d false;\n\n    /** @private {?string} */\n    this.lastKnownChangedQuery_ \x3d null;\n\n    /** @private {string} */\n    this.initialQuery_ \x3d this.inputElement_.value;\n\n    /** @private {boolean} */\n    this.preventDefaultOnTouchEnd_ \x3d false;\n\n    this.bindWindowEvents_();\n  }\n\n  /**\n   * @param {string} value\n   * @param {boolean\x3d} noEventsTriggered True if no event should be fired.\n   *    Defaults to false.\n   * @param {boolean\x3d} updateTiming True if edit timing should be updated.\n   *    Defaults to true. Note that if noEventsTriggered is false, this param is\n   *    ignored.\n   */\n  overrideInput(value, noEventsTriggered \x3d false, updateTiming \x3d true) {\n    const inputChanged \x3d this.inputElement_.value !\x3d value;\n    this.inputElement_.value \x3d value;\n    if (noEventsTriggered) {\n      return;\n    }\n    this.focus();\n    if (inputChanged) {\n      this.inputChanged(updateTiming);\n    } else {\n      // input change would update the last known query. If this doesn\x27t happen,\n      // we still wanted to update it here.\n      this.lastKnownChangedQuery_ \x3d value;\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  getValue() {\n    return this.inputElement_.value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getCaretPosition() {\n    // For IME like GBoard, text would be in a span where a selection range is\n    // defined for that word even though the user did not explicitly make\n    // selection.\n    return this.inputElement_.selectionEnd;\n  }\n\n  focus() {\n    this.inputElement_.focus();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isFocused() {\n    return this.inputElement_ \x3d\x3d\x3d document.activeElement;\n  }\n\n  /**\n   * @param {string} initialQuery\n   */\n  setInitialQuery(initialQuery) {\n    this.initialQuery_ \x3d initialQuery;\n  }\n\n  /**\n   * @param {boolean\x3d} updateTiming True if timing should be updated. Defaults\n   *    to true.\n   * @wizaction\n   */\n  inputChanged(updateTiming \x3d true) {\n    if (this.lastKnownChangedQuery_ \x3d\x3d this.getValue()) {\n      // No input change so we bail out.\n      return;\n    }\n    this.logging_.addInputMethod(InputMethod.KEYBOARD);\n    this.lastKnownChangedQuery_ \x3d this.getValue();\n    if (updateTiming) {\n      this.logging_.updateEditEvent();\n    }\n    this.trigger(events.inputChanged);\n  }\n\n  /**\n   * @wizaction\n   */\n  inputFocused() {\n    this.shouldScroll_ \x3d true;\n    if (!this.isAndroid_) {\n      // Only perform scrolling for non Android devices, see bindWindowEvents_\n      // for more details.\n      this.scrollToTop_();\n    }\n    this.trigger(events.inputFocused);\n  }\n\n  /**\n   * @wizaction\n   * @param {!wiz.Event} ev\n   */\n  inputTouchStarted(ev) {\n    if (!this.isIos_) {\n      return;\n    }\n    // There are several iOS bugs involving focusing on text fields. On all\n    // iOS6+ browsers, focusing causes a forced reposition of the input field in\n    // the middle of the available vertical space, defeating our effort to\n    // scroll it to the top. On iOS7 UIWebViews, used in Chrome for iOS aka\n    // Bling, the focus event often fails to fire at all. We work around these\n    // by forcing focus on touchstart for all of iOS.\n    if (document.activeElement !\x3d this.inputElement_) {\n      this.inputElement_.focus();\n      common.preventDefault(ev.event);\n      // Since it\x27s clicking on the input field, it would trigger a scroll.\n      // For iOS 11.3+, touchstart is a passive event, meaning that prevent\n      // default is not taking effect, and touchend would be fired to trigger\n      // click on shifted elements (shortcut or suggestions). We defer the\n      // prevent default on touchend instead to avoid the mistap. See b/73820530\n      // for more details.\n      this.preventDefaultOnTouchEnd_ \x3d true;\n    }\n  }\n\n  /**\n   * @wizaction\n   */\n  logPaste() {\n    this.logging_.addInputMethod(InputMethod.PASTE);\n  }\n\n  /**\n   * @param {number\x3d} attempts\n   * @private\n   */\n  scrollToTop_(attempts \x3d 1) {\n    const y \x3d googStyle.getPageOffsetTop(this.elementToScrollTo_);\n    if (y \x3e\x3d 0) {\n      window.scrollTo(0, y);\n    }\n    if (attempts \x3e 1) {\n      scheduler.setTimeout(\n          () \x3d\x3e this.scrollToTop_(attempts - 1), SCROLL_ATTEMPTS_INTERVAL_MS);\n    }\n  }\n\n  /** @private */\n  bindWindowEvents_() {\n    // set up bfcache monitoring.\n    common.setUpBfCacheHandler(\n        () \x3d\x3e this.inputElement_.value \x3d this.initialQuery_);\n\n    // Attach resize event handler. There are two major use cases:\n    // (1) Android: Defer scrolling to resize event, so that the click won\x27t be\n    //     mistriggered *after* scrolling.\n    // (2) iOS: Attempt several scrolling event for a given period. This is to\n    //     work around the scrolling-loss after device rotation bug, see\n    //     b/17166656.\n    googEvents.listen(\n        window, googEvents.EventType.RESIZE, () \x3d\x3e {\n          if (!this.shouldScroll_) {\n            return;\n          }\n          if (this.isAndroid_) {\n            this.scrollToTop_();\n          } else if (this.isIos_) {\n            this.scrollToTop_(MAX_SCROLL_ATTEMPTS);\n          }\n        });\n\n    // Set up deferred prevent default on touchend to avoid mistap on iOS 11.3+.\n    // See b/73820530 for more details.\n    googEvents.listen(\n        window, googEvents.EventType.TOUCHEND, e \x3d\x3e {\n          if (this.preventDefaultOnTouchEnd_) {\n            common.preventDefault(e.getBrowserEvent());\n          }\n          this.preventDefaultOnTouchEnd_ \x3d false;\n        });\n\n    // Note that resize event is triggered even when scrolling on page happens,\n    // so we are going to add another touchmove handler to disable scrolling\n    // effect.\n    googEvents.listen(\n        window, googEvents.EventType.TOUCHMOVE, () \x3d\x3e {\n          this.shouldScroll_ \x3d false;\n        });\n  }\n}\n\nregisterController(controllers.INPUT_BOX, InputBoxController);\nexports \x3d InputBoxController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/input_box_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxo');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxo');

}catch(e){_DumpException(e)}
/* _Module_:QfiAub */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('QfiAub');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('QfiAub');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('QfiAub');

}catch(e){_DumpException(e)}
/* _Module_:syxn */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxn');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/clear_button_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.ClearButtonController\x27);\n\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/**\n * The controller to handle the input clearing.\n * @final\n */\nclass ClearButtonController extends WizController {\n  /** @param {!controllers.ClearButtonControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n  }\n\n  /**\n   * @param {boolean} isVisible\n   */\n  updateVisibility(isVisible) {\n    this.getRoot().el().style.visibility \x3d isVisible ? \x27\x27 : \x27hidden\x27;\n  }\n\n  /**\n   * @param {wiz.Event} ev\n   * @wizaction\n   */\n  clearInput(ev) {\n    // This is needed to make focus on iOS works. See b/65254827.\n    common.preventDefault(ev.event);\n    this.trigger(events.clearInput);\n  }\n}\n\nregisterController(controllers.CLEAR_BUTTON, ClearButtonController);\nexports \x3d ClearButtonController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/clear_button_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxn');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxn');

}catch(e){_DumpException(e)}
/* _Module_:if1iFc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('if1iFc');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('if1iFc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('if1iFc');

}catch(e){_DumpException(e)}
/* _Module_:sy3r */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3r');
var $googDebugFname="javascript/wireless/events/eventtype.js";
eval("// Copyright 2010 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of event type and related helper functions.\n */\n\ngoog.provide(\x27wireless.events.EventType\x27);\n\n\n\n/**\n * Unique event types.\n * @enum {string}\n */\nwireless.events.EventType \x3d {};\n\n\n/**\n * Counter used to generate unique IDs for each call to createEventType.\n * @type {number}\n * @private\n */\nwireless.events.EventType.counter_ \x3d 0;\n\n\n/**\n * Given a desired event type, get an event type that is guaranteed to be\n * unique. Overriden by compiler to generate small, unique IDs.\n * @param {string} eventTypeName The desired event type name.\n * @return {wireless.events.EventType} The event type.\n */\nwireless.events.EventType.create \x3d function(eventTypeName) {\n  return /** @type {wireless.events.EventType} */ (\n      eventTypeName + \x27_\x27 + wireless.events.EventType.counter_++);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/events/eventtype.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/wireless/events/listenercoalescer.js";
eval("/**\n * @fileoverview An object which provides the ability to coalesce event handlers\n * for performance reasons.  Experimentation on iOS7 safari found that adding\n * one event handler that ran for 15 ms resulted in smoother scrolling than 15\n * event handlers which took 1 ms each.  Thus coalescing 15 handlers into one\n * improved scrolling performance and smoothness.\n *\n * @author Daniel Brotherston (danbrotherston@google.com)\n */\n\ngoog.provide(\x27wireless.events.ListenerCoalescer\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.events.EventLike\x27);\ngoog.require(\x27goog.log\x27);\n\n\n\n/**\n * An EventTarget object which provides the ability to coalesce event\n * handlers for performance reasons.\n * @param {!EventTarget} element The event target to coalesce events for.\n * @constructor\n */\nwireless.events.ListenerCoalescer \x3d function(element) {\n  /**\n   * The element which is the event target to coalesce events for.\n   * @type {!EventTarget}\n   * @private\n   */\n  this.element_ \x3d element;\n\n  goog.asserts.assert(\n      !this.element_[wireless.events.ListenerCoalescer.TARGET_PROPERTY_]);\n\n  // Assign this object to the element.\n  this.element_[wireless.events.ListenerCoalescer.TARGET_PROPERTY_] \x3d this;\n\n  /**\n   * Mapping to keep track of if there is an event handler running.\n   * @private {!Object.\x3cnumber\x3e}\n   */\n  this.eventInProgress_ \x3d {};\n\n  /**\n   * Mapping to store the subscribers to each event type.\n   * @private {!Object.\x3c!Array.\x3c!Function\x3e|undefined\x3e}\n   */\n  this.eventSubscribers_ \x3d {};\n\n  /**\n   * Bound event handlers for each event type, allows handlers to be added and\n   * removed from the DOM element.\n   * @private {!Object.\x3c!Function\x3e}\n   */\n  this.boundEventHandlers_ \x3d {};\n};\n\n\n\n/**\n * Constant property name to store the coalescing event target property for dom\n * elements.\n * @private {string}\n */\nwireless.events.ListenerCoalescer.TARGET_PROPERTY_ \x3d \x27_wect\x27;\n\n\n/**\n * Logger to log exceptions during event handling.\n * @private {goog.log.Logger}\n */\nwireless.events.ListenerCoalescer.prototype.logger_ \x3d\n    goog.log.getLogger(\x27wireless.events.ListenerCoalescer\x27);\n\n\n/**\n * Returns the coalescingEventTarget object associated with the provided event\n * target.\n * @param {!EventTarget} target The event target to get the coalescing event\n *     target for.\n * @return {!wireless.events.ListenerCoalescer} The associated coalescing\n *     event target.\n */\nwireless.events.ListenerCoalescer.getListenerCoalescer \x3d\n    function(target) {\n  var targetProperty \x3d wireless.events.ListenerCoalescer.TARGET_PROPERTY_;\n  if (!target[targetProperty]) {\n    new wireless.events.ListenerCoalescer(target);\n  }\n\n  return target[targetProperty];\n};\n\n\n/**\n * Event handler for an eventType.\n * @param {string} eventType The type of the event to handle.\n * @param {Event} e The Event object.\n * @private\n */\nwireless.events.ListenerCoalescer.prototype.handleEvent_ \x3d\n    function(eventType, e) {\n  if (this.eventInProgress_[eventType] \x3d\x3d undefined) {\n    this.eventInProgress_[eventType] \x3d 0;\n  }\n\n  var oldEventInProgress \x3d this.eventInProgress_[eventType];\n  this.eventInProgress_[eventType]++;\n  // This is done intentionally, we must copy the array pointer into a local\n  // variable so that if one of the event handlers modifies the list of\n  // subscribers by adding or removing a handler, it can clone the array without\n  // upsetting iteration here.\n  var eventSubscribers \x3d this.eventSubscribers_[eventType];\n  var numSubscribers \x3d eventSubscribers.length;\n  var exception;\n  for (var i \x3d 0; i \x3c numSubscribers; i++) {\n\n    try {\n      eventSubscribers[i](e);\n    } catch (ex) {\n      goog.log.warning(this.logger_, \x27Exception during event processing.\x27, ex);\n      exception \x3d exception || ex;\n    }\n  }\n  this.eventInProgress_[eventType]--;\n\n  goog.asserts.assert(this.eventInProgress_[eventType] \x3d\x3d oldEventInProgress);\n  goog.asserts.assert(this.eventInProgress_[eventType] \x3e\x3d 0);\n\n  if (exception) {\n    throw exception;\n  }\n};\n\n\n/**\n * Returns a bound event handler for the given type and capture.\n * @param {string} eventType The type of the event to handle.\n * @return {!Function} The event handler for this event type and capture, it\n *     will remain the same so it can be added and removed.\n * @private\n */\nwireless.events.ListenerCoalescer.prototype.getOrCreateEventHandler_ \x3d\n    function(eventType) {\n  if (!this.boundEventHandlers_[eventType]) {\n    this.boundEventHandlers_[eventType] \x3d\n        goog.bind(this.handleEvent_, this, eventType);\n  }\n\n  return this.boundEventHandlers_[eventType];\n};\n\n\n/**\n * Gets the event type key given an event type and capture value.\n * @param {wireless.events.EventType|string} eventType The name of the event to\n *     get the key for.\n * @param {boolean} capture The capture value for this event key.\n * @return {string} The event type key to store event handlers.\n * @private\n */\nwireless.events.ListenerCoalescer.prototype.getEventTypeKey_ \x3d\n    function(eventType, capture) {\n  return eventType + \x27:\x27 + (capture ? \x27capture\x27 : \x27bubble\x27);\n};\n\n\n/**\n * Adds a coalesced EventHandler to this target.\n * @param {wireless.events.EventType|string} eventType The event type to listen\n *     for.\n * @param {function(Event)|function(!Event)} handler The event callback.\n * @param {boolean\x3d} opt_capture True if the listener should get events on the\n *     capture phase.\n */\nwireless.events.ListenerCoalescer.prototype.subscribeToEvent \x3d\n    function(eventType, handler, opt_capture) {\n  var capture \x3d !!opt_capture;\n  var eventTypeKey \x3d this.getEventTypeKey_(eventType, capture);\n\n  if (!this.eventSubscribers_[eventTypeKey]) {\n    this.eventSubscribers_[eventTypeKey] \x3d [];\n    this.element_.addEventListener(eventType,\n        this.getOrCreateEventHandler_(eventTypeKey), capture);\n  }\n\n  // This is currently safe during an event handler, because this will push an\n  // event on the end of the list, and thus the event handler loop iteration\n  // will never get to it, or the event has already removed a handler and this\n  // is pushing onto an entirely new list.\n  this.eventSubscribers_[eventTypeKey].push(handler);\n};\n\n\n/**\n * Removes an event handler from the object of the given type and removes the\n * coaleseced handler if there are no sub-handlers remaining.\n * @param {wireless.events.EventType|string} eventType The event type to listen\n *     for.\n * @param {function(Event)|function(!Event)} handler The event callback.\n * @param {boolean\x3d} opt_capture True if the listener should get events on the\n *     capture phase.\n */\nwireless.events.ListenerCoalescer.prototype.unsubscribeFromEvent \x3d\n    function(eventType, handler, opt_capture) {\n  var capture \x3d !!opt_capture;\n  var eventTypeKey \x3d this.getEventTypeKey_(eventType, capture);\n  if (!this.eventSubscribers_[eventTypeKey]) {\n    return;\n  }\n  if (this.eventInProgress_[eventTypeKey]) {\n    // This is done in order to support the case where the an event handler\n    // removes an event handler during its execution.  If a remove is called\n    // during handling of an event, we clone the array so we can modify it\n    // without upsetting the execution of other handlers.\n    this.eventSubscribers_[eventTypeKey] \x3d\n        this.eventSubscribers_[eventTypeKey].slice(0);\n  }\n\n  var index \x3d this.eventSubscribers_[eventTypeKey].indexOf(handler);\n  if (index !\x3d -1) {\n    this.eventSubscribers_[eventTypeKey].splice(index, 1);\n  }\n\n  if (this.eventSubscribers_[eventTypeKey].length \x3d\x3d 0) {\n    this.eventSubscribers_[eventTypeKey] \x3d undefined;\n    this.element_.removeEventListener(eventType,\n        this.getOrCreateEventHandler_(eventTypeKey), capture);\n  }\n};\n\n\n/**\n * Fires handlers for the element with an EventLike object.\n * @param {!goog.events.EventLike} event An EventLike object which must have a\n *     type field.\n * @param {boolean\x3d} opt_capture True if the listener should get events on the\n *     capture phase.\n */\nwireless.events.ListenerCoalescer.prototype.fire \x3d\n    function(event, opt_capture) {\n  // Return if the event does not specify a type.\n  if (!event.type) {\n    return;\n  }\n\n  // Return if there is no bound handler.\n  var capture \x3d !!opt_capture;\n  var eventTypeKey \x3d this.getEventTypeKey_(event.type, capture);\n  if (!this.boundEventHandlers_[eventTypeKey]) {\n    return;\n  }\n\n  var handler \x3d this.getOrCreateEventHandler_(eventTypeKey);\n  handler(/** @type {!Event} */ (event));\n}\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/events/listenercoalescer.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/wireless/events/events.js";
eval("// Copyright 2010 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Common events related helpers.\n */\n\ngoog.provide(\x27wireless.events\x27);\n\ngoog.require(\x27wireless.events.EventType\x27);\ngoog.require(\x27wireless.events.ListenerCoalescer\x27);\n\n\n/**\n * Removes an event listener from an element.  Events which were listened to\n * with opt_removeHandlerOnFocus cannot be unobserved.\n * @param {!EventTarget} element The element to add the listener to.\n * @param {wireless.events.EventType|string} eventType The event type to listen\n *     for.\n * @param {function(Event)|function(!Event)} handler The event callback.\n * @param {boolean\x3d} opt_capture True if the listener should get events on the\n *     capture phase.\n */\nwireless.events.unobserve \x3d function(element, eventType, handler, opt_capture) {\n  var listenerCoalescer \x3d\n      wireless.events.ListenerCoalescer.getListenerCoalescer(element);\n  listenerCoalescer.unsubscribeFromEvent(eventType, handler, opt_capture);\n};\n\n\n/**\n * Add an event listener to an element.\n * @param {!EventTarget} element The element to add the listener to.\n * @param {wireless.events.EventType|string} eventType The event type to listen\n *     for.\n * @param {function(Event)|function(!Event)} handler The event callback.\n * @param {boolean\x3d} opt_capture True if the listener should get events on the\n *     capture phase.\n * @param {boolean\x3d} opt_removeHandlerOnFocus True if you want the handler to be\n *     removed when there is any focus event, and added back on blur events.\n */\nwireless.events.observe \x3d function(element, eventType, handler, opt_capture,\n                                   opt_removeHandlerOnFocus) {\n  // Event listening functions require actual boolean values.\n  var listenerCoalescer \x3d\n      wireless.events.ListenerCoalescer.getListenerCoalescer(element);\n  listenerCoalescer.subscribeToEvent(eventType, handler, opt_capture);\n\n  if (opt_removeHandlerOnFocus) {\n    var addFunction \x3d function() {\n      listenerCoalescer.subscribeToEvent(eventType, handler, opt_capture);\n    };\n\n    var removeFunction \x3d function() {\n      listenerCoalescer.unsubscribeFromEvent(eventType, handler, opt_capture);\n    };\n\n    wireless.events.addRemoveOnFocusHandlers_(\n        element, addFunction, removeFunction);\n  }\n};\n\n\n/**\n * Adds handlers which will remove the handler when the  DOM element recieves\n * focus.\n * @param {!EventTarget} element The element to add the listener to.\n * @param {Function} addFunction The function to use to add the listener.\n * @param {Function} removeFunction The function to use to remove the listener.\n * @private\n */\nwireless.events.addRemoveOnFocusHandlers_ \x3d\n    function(element, addFunction, removeFunction) {\n  // This allows you to remove event handlers when any child element gains\n  // focus. This is necessary for touch event handlers on iOS 4.2, as we see\n  // that native textarea behavior (such as dismissing spelling corrections) are\n  // buggy when there exists a parent element with a touch event handler. If\n  // this events file were to offer a stopObserving function, then this logic\n  // below will need to be modified to stop adding/removing the event handler on\n  // focus/blur.\n  // \x27DOMFocusIn\x27 is the same as \x27focus\x27 except it is propagated up the DOM.\n  element.addEventListener(\x27DOMFocusIn\x27, function(e) {\n    // Remove event listener for TEXTAREA only. Input fields and any elements\n    // with a tabindex set can also gain focus. Elements with tabindex can\n    // gain focus and never blur, causing the touchstart listener to be\n    // removed but never added back. See wireless.events.clickbuster and\n    // b/5415375.\n    if (e.target \x26\x26 e.target.tagName \x3d\x3d \x27TEXTAREA\x27) {\n      addFunction();\n    }\n  }, false /* capture */);\n  // \x27DOMFocusOut\x27 is the same as \x27blur\x27 except it is propagated up the DOM.\n  element.addEventListener(\x27DOMFocusOut\x27, function(e) {\n    if (e.target \x26\x26 e.target.tagName \x3d\x3d \x27TEXTAREA\x27) {\n      removeFunction();\n    }\n  }, false /* capture */);\n};\n\n\n/**\n * Fire an event at an element. This should not be used if you want any special\n * event details included, like mouse coordinates. For those kind of events you\n * should use a more specific event initialization function like initMouseEvent.\n * This function can be used to fire custom events. For example:\n * - var eventType \x3d wireless.events.createEventType(\x27custom:event\x27);\n * - wireless.events.fire(element, eventType);\n * This example would fire an event with type \x3d\x3d \x27custom:event\x27. This can be\n * useful for decoupling your objects and sending events through the DOM rather\n * than implementing callbacks or publish/subscribe models.\n * @param {!EventTarget} element The element to fire the event at.\n * @param {wireless.events.EventType} eventType The type of event that should\n *      be fired.\n * @param {!Object} sender The context responsible for sending the event.\n * @param {*\x3d} opt_extraArg The event can carry one optional argument.\n */\nwireless.events.fire \x3d function(element, eventType, sender, opt_extraArg) {\n  var event \x3d document.createEvent(\x27HTMLEvents\x27);\n  event.initEvent(eventType, true, true);\n  event.sender \x3d sender;\n  event.extraArg \x3d opt_extraArg;\n  element.dispatchEvent(event);\n};\n\n\n/**\n * Clear the keyboard focus of the currently focused element (if there is one).\n * If there is no currently focused element then this function will do nothing.\n * For most browsers this will cause the keyboard to be dismissed.\n */\nwireless.events.blurFocusedElement \x3d function() {\n  var focusedEl \x3d document.querySelector(\x27*:focus\x27);\n  if (!focusedEl) {\n    return;\n  }\n  focusedEl.blur();\n};\n\n\n/**\n * Forces a blur on a dummy textarea in hopes of more reliably dismissing the\n * keyboard. Use this function to workaround cases where blur does not naturally\n * dismiss the on screen keyboard. An example of this is in iOS 5 where blurring\n * while focus is on contentEditable divs does not cause the keyboard to hide.\n * This function provides a workaround for this bug. rjfioravanti has filed a\n * bug with Apple about this. See b/5644027 for more details.\n */\nwireless.events.forceBlur \x3d function() {\n  var dummy \x3d document.createElement(\x27textarea\x27);\n\n  // This textarea needs to be positioned at the current window scroll value\n  // so that no scrolling happens when focus is called on the dummy.\n  var topPos \x3d window.scrollY;\n  // Positioning at the current x-value is required to fix b/12193002. Without\n  // this, iOS attempts to refocus the screen when the next textarea is\n  // selected, but it doesn\x27t refocus properly and ends up positioning the\n  // cursor off-screen.\n  var leftPos \x3d window.scrollX;\n  dummy.style.cssText \x3d\n      \x27position:absolute;left:\x27 + leftPos + \x27px;top:\x27 + topPos + \x27px;\x27;\n  document.body.appendChild(dummy);\n  dummy.focus();\n  document.body.removeChild(dummy);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/events/events.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/wireless/util/device.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utils for device detection.\n */\n\ngoog.provide(\x27wireless.device\x27);\n\ngoog.require(\x27goog.string\x27);\n\n\n/**\n * Gets the browser\x27s user agent. Using this function allows tests to inject\n * the user agent.\n * @return {string} The user agent.\n */\nwireless.device.getUserAgent \x3d function() {\n  return navigator.userAgent;\n};\n\n\n/**\n * The regular expression for detecting an iPhone or iPod.\n * @type {!RegExp}\n * @private\n */\nwireless.device.IPHONE_USERAGENT_REGEX_ \x3d /iPhone|iPod/;\n\n\n/**\n * Determines if the current device is an iPhone or iPod.\n * @return {boolean} True if the current device is an iPhone or iPod.\n */\nwireless.device.isIPhone \x3d function() {\n  return wireless.device.IPHONE_USERAGENT_REGEX_.test(\n      wireless.device.getUserAgent());\n};\n\n\n/**\n * Determines if the current device is an iPad.\n * @return {boolean} True if the current device is an iPad.\n */\nwireless.device.isIPad \x3d function() {\n  return goog.string.contains(wireless.device.getUserAgent(), \x27iPad\x27);\n};\n\n\n/**\n * The regular expression for detecting an iPhone or iPod or iPad.\n * @type {!RegExp}\n * @private\n */\nwireless.device.IOS_USERAGENT_REGEX_ \x3d /iPhone|iPod|iPad/;\n\n\n/**\n * Determines if the current device is an iPhone or iPod or iPad.\n *\n * TODO(hoainguyen): Rename this to isIos(), since it may or may not be the\n *     Safari browser. For example, it may be a WebView, iOS GSA, or iOS Chrome.\n *\n * @return {boolean} True if the current device is an iPhone or iPod or iPad.\n */\nwireless.device.isMobileSafari \x3d function() {\n  return wireless.device.IOS_USERAGENT_REGEX_.test(\n      wireless.device.getUserAgent());\n};\n\n\n/**\n * Determines if we are running on iOS, but within a WebView instead of within\n * the Safari browser. This does not work for iOS 3.x or before (will return\n * false).\n * @return {boolean} True if the current device is iOS and the context is within\n *     a WebView, instead of within Safari itself.\n */\nwireless.device.isIosWebView \x3d function() {\n  var userAgent \x3d wireless.device.getUserAgent();\n\n  if (wireless.device.isMobileSafari()) {  // Means \x22is iOS\x22.\n    // TODO(hoainguyen): Improve this, if we discover a better way to detect it.\n    var isSafari \x3d goog.string.contains(userAgent, \x27Safari\x27) \x26\x26\n        goog.string.contains(userAgent, \x27Version\x27);\n    // This test only works for iOS 4+. We return false for earlier versions.\n    return !isSafari \x26\x26\n        wireless.device.getAppleOsVersion() \x3e\x3d wireless.device.getVersion(4);\n  } else {\n    // Not iOS.\n    return false;\n  }\n};\n\n\n/**\n * The regular expression for detecting an iPhone or iPod or iPad simulator.\n * @type {!RegExp}\n * @private\n */\nwireless.device.APPLE_SIMULATOR_USERAGENT_REGEX_ \x3d /iP.*Simulator/;\n\n\n/**\n * Determines if the current device is the iP* Simulator.\n * @return {boolean} True if the current device is an iP* Simulator.\n */\nwireless.device.isAppleSimulator \x3d function() {\n  return wireless.device.APPLE_SIMULATOR_USERAGENT_REGEX_.test(\n      wireless.device.getUserAgent());\n};\n\n\n/**\n * Determines if the current device is an Android.\n * @return {boolean} True if the current device is an Android.\n */\nwireless.device.isAndroid \x3d function() {\n  return goog.string.contains(wireless.device.getUserAgent(), \x27Android\x27);\n};\n\n\n/**\n * Includes Android and Desktop chrome but not iOS Chrome (CriOS) since CriOS\n * acts like Safari for the most part.\n * @return {boolean} True if the current browser is Chrome but not iOS Chrome.\n */\nwireless.device.isChrome \x3d function() {\n  return goog.string.contains(wireless.device.getUserAgent(), \x27Chrome/\x27);\n};\n\n\n/**\n * Determines if the current browser is Andoird Chrome.\n * From https://developers.google.com/chrome/mobile/docs/user-agent .\n * @return {boolean} True if the current browser is Andoird Chrome.\n */\nwireless.device.isAndroidChrome \x3d function() {\n  return wireless.device.isAndroid() \x26\x26 wireless.device.isChrome();\n};\n\n\n/**\n * Determines if the current device is WebOS WebKit.\n * @return {boolean} True if the current device is WebOS WebKit.\n */\nwireless.device.isWebOs \x3d function() {\n  return goog.string.contains(wireless.device.getUserAgent(), \x27webOS\x27);\n};\n\n\n/**\n * The regular expression for detecting a Kindle Fire in desktop mode.\n * @type {!RegExp}\n * @private\n */\nwireless.device.KINDLE_FIRE_DESKTOP_USERAGENT_REGEX_ \x3d /Mac OS X.+Silk\\//;\n\n\n/**\n * Determines if the current device is a Kindle Fire in desktop mode.\n * @return {boolean} True if the current device is a Kindle Fire in desktop\n *     mode.\n */\nwireless.device.isKindleFireDesktop \x3d function() {\n  return wireless.device.KINDLE_FIRE_DESKTOP_USERAGENT_REGEX_.test(\n      wireless.device.getUserAgent());\n};\n\n\n/**\n * The regular expression for detecting a device running IE 10 or later.\n * @type {!RegExp}\n * @private\n */\nwireless.device.IE_10_OR_LATER_USERAGENT_REGEX_ \x3d /MSIE 1\\d/;\n\n\n/**\n * Determines if the current device is running IE 10 or later.\n * @return {boolean} True if the current device running IE 10 or later.\n */\nwireless.device.isIE10OrLater \x3d function() {\n  return wireless.device.IE_10_OR_LATER_USERAGENT_REGEX_.test(\n      wireless.device.getUserAgent());\n};\n\n\n/**\n * Creates a version number from 4 int pieces. Valid input must convert to an\n * integer between 0 and 127.\n * @param {*} opt_a The major version.\n * @param {*} opt_b The minor version.\n * @param {*} opt_c The revision number.\n * @param {*} opt_d The build number.\n * @return {number} A representation of the version.\n */\nwireless.device.getVersion \x3d function(opt_a, opt_b, opt_c, opt_d) {\n  // We want to allow implicit conversion of any type to number while avoiding\n  // compiler warnings about the type.\n  return /** @type {number} */ (opt_a) \x3c\x3c 21 |\n      /** @type {number} */ (opt_b) \x3c\x3c 14 |\n      /** @type {number} */ (opt_c) \x3c\x3c 7 |\n      /** @type {number} */ (opt_d);\n};\n\n\n/**\n * The regular expression for matching the iPhone/iPad version. Only matches 2.0\n * and up.\n * @type {!RegExp}\n * @private\n */\nwireless.device.APPLE_OS_VERSION_REGEX_ \x3d /OS (\\d+)_(\\d+)(?:_(\\d+))?/;\n\n\n/**\n * Gets the iPhone/iPad OS version. Does not work for 1.0 or 1.1.\n * @return {number} The OS version.\n */\nwireless.device.getAppleOsVersion \x3d function() {\n  var groups \x3d wireless.device.APPLE_OS_VERSION_REGEX_.exec(\n      wireless.device.getUserAgent()) || [];\n  groups.shift();\n  return wireless.device.getVersion.apply(null, groups);\n};\n\n\n/**\n * The regular expression for matching the Android version. Only known to work\n * on 2 and up on Android browser.\n * @type {!RegExp}\n * @private\n */\nwireless.device.ANDROID_OS_VERSION_REGEX_ \x3d /Android (\\d+)\\.(\\d+)(?:\\.(\\d+))?/;\n\n\n/**\n * The regular expression for matching the Chrome version.\n * @type {!RegExp}\n * @private\n */\nwireless.device.CHROME_VERSION_REGEX_ \x3d /Chrome\\/([0-9.]+)/;\n\n\n/**\n * Gets the Android OS version.\n * @return {number} The OS version.\n */\nwireless.device.getAndroidOsVersion \x3d function() {\n  var groups \x3d wireless.device.ANDROID_OS_VERSION_REGEX_.exec(\n      wireless.device.getUserAgent()) || [];\n  groups.shift();\n  return wireless.device.getVersion.apply(null, groups);\n};\n\n\n/**\n * True if the browser suppresses touchmoves until such time as suficient\n * distance has occurred from the touch start. It is used by a browser to only\n * send a single touchmove before scrolling starts so that the JS knows that\x27s\n * the last chance it will get to supress scrolling.\n * Note: This is only true if the touchstart has not been previously been\n * preventDefaulted. In this case slop touch moves are not supressed (at least\n * in Chrome).\n * As of March 2014, non-safari browsers do supress slop touch moves.\n * go/touch-event-behavior-details-across-browsers\n * @return {boolean}\n */\nwireless.device.browserSupressesSlopTouchMoves \x3d function() {\n  return !wireless.device.isMobileSafari();\n};\n\n\n/**\n * Checks whether this device that requires the hack to always use click events\n * because the browser\x27s touchmove handling is broken.\n * Currently set to Android \x3e\x3d 4.0.3.\n * @return {boolean} True if the hack is required.\n */\nwireless.device.browserHasBrokenTouchMoveEvents \x3d function() {\n  return wireless.device.isAndroid() \x26\x26\n      !wireless.device.isAndroidChrome() \x26\x26\n      wireless.device.getAndroidOsVersion() \x3e\x3d ((4 \x3c\x3c 21) | (3 \x3c\x3c 7));\n};\n\n\n/**\n * Checks whether this device has buggy clientX/clientY variables on its\n * touchstart events. See\n * https://code.google.com/p/chromium/issues/detail?id\x3d141840\n * Currently set to Android Chrome \x3d\x3d 18.*.*.*.\n * @return {boolean} True if clientX/clientY variables are buggy.\n */\nwireless.device.browserHasBrokenTouchStartClientCoords \x3d function() {\n  return wireless.device.isAndroidChrome() \x26\x26\n      wireless.device.getChromeMajorVersion_() \x3d\x3d 18;\n};\n\n\n/**\n * @return {number} The Chrome major version number or NaN if none could be\n *     found.\n * @private\n */\nwireless.device.getChromeMajorVersion_ \x3d function() {\n  return +wireless.device.getChromeVersion_().split(\x27.\x27)[0];\n};\n\n\n/**\n * Gets the Chrome version number.\n * @return {string} The Chrome version number.\n * @private\n */\nwireless.device.getChromeVersion_ \x3d function() {\n  var arr \x3d wireless.device.CHROME_VERSION_REGEX_.exec(\n      wireless.device.getUserAgent());\n  return arr ? arr[1] : \x27\x27;\n};\n\n\n/**\n * There\x27s a bug in the WebOS WebKit canvas context rotate method, rotation\n * goes in the opposite direction. This is expected to be fixed in the future,\n * but currently all versions have this bug.\n *\n * TODO(mvanouwerkerk): Add check for browser version once bug has been fixed.\n *\n * @return {boolean} True if the canvas context rotation bug is present.\n */\nwireless.device.hasInverseCanvasRotationBug \x3d wireless.device.isWebOs;\n\n\n/**\n * There\x27s a bug in the WebOS WebKit canvas context arc method.\n * For some directions it can not draw an arc across the positive x access.\n * i.e. when the angle wraps through 2 pi/ 0.\n * I presume all versions currently have this bug.\n *\n * TODO(petermayo): Add check for browser version once bug has been fixed.\n *\n * @return {boolean} True if the canvas arc angle bug is present.\n */\nwireless.device.hasNonWrappingCanvasArcBug \x3d wireless.device.isWebOs;\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/util/device.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/wireless/events/touch.js";
eval("// Copyright 2010 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Common touch events related helpers.\n */\n\ngoog.provide(\x27wireless.events.touch\x27);\n\ngoog.require(\x27goog.events.BrowserFeature\x27);\ngoog.require(\x27goog.math.Coordinate\x27);\ngoog.require(\x27wireless.device\x27);\ngoog.require(\x27wireless.events\x27);\n\n\n\n/** @define {boolean} Skips client-side touchevents detection. */\nwireless.events.touch.ASSUME_SUPPORTS_TOUCHES \x3d false;\n\n\n/**\n * Tests whether touches are supported. Indirection for testing support.\n * Use wireless.events.touch.SUPPORTS_TOUCHES.\n * @private\n * @return {boolean} Whether the touch api is supported.\n */\nwireless.events.touch.supportsTouches_ \x3d function() {\n  return wireless.events.touch.ASSUME_SUPPORTS_TOUCHES ||\n      goog.events.BrowserFeature.TOUCH_ENABLED ||\n      wireless.device.isMobileSafari() || wireless.device.isAndroid() ||\n      wireless.device.isKindleFireDesktop();\n};\n\n\n/**\n * Tests whether Microsoft\x27s Pointer-based touches are supported. Indirection\n * for testing support.\n * Use wireless.events.touch.SUPPORTS_POINTER.\n * @private\n * @return {boolean} Whether the pointer api is supported.\n */\nwireless.events.touch.supportsPointer_ \x3d function() {\n  // Use feature detection only, in case IE is running in Compatibility Mode.\n  return window.navigator.msPointerEnabled;\n};\n\n\n/**\n * Whether the browser supports Apple-style touches. We don\x27t do feature\n * detection because it doesn\x27t work correctly on certain desktop browsers\n * (Chrome as of now). We also don\x27t use Closure\x27s goog.useragent to avoid code\n * bloat.\n * @type {boolean}\n */\nwireless.events.touch.SUPPORTS_TOUCHES \x3d\n    wireless.events.touch.supportsTouches_();\n\n\n/**\n * Whether the browser supports Microsoft\x27s Pointer-based touches.\n * @see http://blogs.msdn.com/b/ie/archive/2011/09/20/touch-input-for-ie10-and-metro-style-apps.aspx\n * @type {boolean}\n */\nwireless.events.touch.SUPPORTS_POINTER \x3d\n    wireless.events.touch.supportsPointer_();\n\n\n/**\n * Start event name.\n * @type {string}\n */\nwireless.events.touch.START_EVENT \x3d wireless.events.touch.SUPPORTS_TOUCHES ?\n    \x27touchstart\x27 : wireless.events.touch.SUPPORTS_POINTER ?\n        \x27MSPointerDown\x27 : \x27mousedown\x27;\n\n\n/**\n * Move event name.\n * @type {string}\n */\nwireless.events.touch.MOVE_EVENT \x3d wireless.events.touch.SUPPORTS_TOUCHES ?\n    \x27touchmove\x27 : wireless.events.touch.SUPPORTS_POINTER ? \x27MSPointerMove\x27 :\n        \x27mousemove\x27;\n\n\n/**\n * End event name.\n * @type {string}\n */\nwireless.events.touch.END_EVENT \x3d wireless.events.touch.SUPPORTS_TOUCHES ?\n    \x27touchend\x27 : wireless.events.touch.SUPPORTS_POINTER ? \x27MSPointerUp\x27 :\n        \x27mouseup\x27;\n\n\n/**\n * Cancel event name.\n * @type {string}\n */\nwireless.events.touch.CANCEL_EVENT \x3d wireless.events.touch.SUPPORTS_POINTER ?\n    \x27MSPointerCancel\x27 : \x27touchcancel\x27;\n\n\n/**\n * Helper method to attach event listeners to a node.\n * @param {Element} node The node to attach listeners to.\n * @param {function(!Event)|function(!TouchEvent)} onStart The start event\n *     callback.\n * @param {function(!Event)|function(!TouchEvent)} onMove The move event\n *     callback.\n * @param {function(!Event)|function(!TouchEvent)} onEnd The end event callback.\n * @param {function(!Event)|function(!TouchEvent)} onCancel The cancel event\n *     callback.\n * @param {boolean\x3d} opt_capture True if the the listeners should be on the\n *     capture phase.\n * @param {boolean\x3d} opt_removeHandlerOnFocus True if you want the handler to be\n *     removed when there is any focus event, and added back on blur events.\n */\nwireless.events.touch.addEventListeners \x3d function(node, onStart, onMove,\n    onEnd, onCancel, opt_capture, opt_removeHandlerOnFocus) {\n  if (!wireless.events.touch.SUPPORTS_TOUCHES \x26\x26\n      !wireless.events.touch.SUPPORTS_POINTER) {\n    onStart \x3d wireless.events.touch.mouseToTouchCallback(onStart);\n    onMove \x3d wireless.events.touch.mouseToTouchCallback(onMove);\n    onEnd \x3d wireless.events.touch.mouseToTouchCallback(onEnd);\n  }\n  var target \x3d /** @type {!EventTarget} */ (node);\n  var capture \x3d !!opt_capture;\n  wireless.events.observe(target, wireless.events.touch.START_EVENT, onStart,\n      capture, opt_removeHandlerOnFocus);\n  wireless.events.observe(target, wireless.events.touch.MOVE_EVENT, onMove,\n      capture, opt_removeHandlerOnFocus);\n  wireless.events.observe(target, wireless.events.touch.END_EVENT, onEnd,\n      capture, opt_removeHandlerOnFocus);\n  wireless.events.observe(target, wireless.events.touch.CANCEL_EVENT, onCancel,\n      capture, opt_removeHandlerOnFocus);\n};\n\n\n/**\n * Wraps a callback with translations of mouse events to touch events. Use this\n * function to invoke your callback that expects touch events after touch events\n * are created from the actual mouse events.\n * @param {function(!TouchEvent)} callback The event callback.\n * @return {function(!Event)} The wrapping callback.\n */\nwireless.events.touch.mouseToTouchCallback \x3d function(callback) {\n  return function(e) {\n    e.touches \x3d [];\n    e.targetTouches \x3d [];\n    e.changedTouches \x3d [];\n    if (e.type \x3d\x3d wireless.events.touch.END_EVENT) {\n      e.changedTouches[0] \x3d e;\n    } else {\n      e.touches[0] \x3d e;\n      e.targetTouches[0] \x3d e;\n      e.changedTouches[0] \x3d e;\n    }\n    callback(e);\n  };\n};\n\n\n/**\n * Gets the coordinates of a touch\x27s location relative to the window\x27s viewport.\n * @param {!Touch|!Event} input The input, either a touch object or an event\n *     object.\n * @return {!goog.math.Coordinate} The touch coordinate relative to the\n *     viewport.\n */\nwireless.events.touch.getClientCoordinate \x3d function(input) {\n  if (wireless.device.browserHasBrokenTouchStartClientCoords()) {\n    return new goog.math.Coordinate(input.clientX,\n                                    input.pageY - window.scrollY);\n  } else {\n    return new goog.math.Coordinate(input.clientX, input.clientY);\n  }\n};\n\n\n/**\n * Given a touch or pointer event, return the unified touches lists.\n * On browsers supporting the iOS touch API this is event.touches.  Otherwise\n * it is an array of the event itself.\n * @param {!Event} e The touch or pointer event.\n * @return {!Array.\x3cEvent\x3e|!TouchList} The touches list.\n */\nwireless.events.touch.getTouches \x3d function(e) {\n  // NOTE(mgaiman): As of the Windows 8 release preview, getPointerList() has\n  // been removed, so there\x27s now no way to inspect other pointers from a given\n  // pointer event.  For now in Windows 8, we\x27re punting and just assuming only\n  // one pointer is around.  This isn\x27t great and hopefully MS will provide a\n  // better API eventually.\n  return e.touches || [e];\n};\n\n\n/**\n * Given a touch or pointer event, return the unified changed touches list.\n * On browsers supporting the iOS touch API this is event.changedTouches.  On\n * browsers supporting MSPointer this is an array of the event itself.\n * See http://msdn.microsoft.com/en-us/library/windows/apps/hh441233.aspx for\n * details on MSPointerEvents.\n * @param {!Event} e The touch or pointer event.\n * @return {!Array.\x3c!Event\x3e|!TouchList} The changed touches list.\n */\nwireless.events.touch.getChangedTouches \x3d function(e) {\n  return (wireless.events.touch.SUPPORTS_POINTER ?\n      [e] : e.changedTouches) || [];\n};\n\n\n/**\n * Given a touch or pointer event, return the unified target touches list.\n * On browsers supporting the iOS touch API this is event.targetTouches.  On\n * browsers supporting MSPointer this is an array of the event itself.\n * See http://msdn.microsoft.com/en-us/library/windows/apps/hh441233.aspx for\n * details on MSPointerEvents.\n * @param {!Event} e The touch or pointer event.\n * @return {!Array.\x3c!Event\x3e|!TouchList} The touches list.\n */\nwireless.events.touch.getTargetTouches \x3d function(e) {\n  return (wireless.events.touch.SUPPORTS_POINTER ? [e] : e.targetTouches) || [];\n};\n\n\n/**\n * Given a touch or pointer event, return the unique identifier for that event.\n * @param {!Touch|!MSPointerEvent} e The touch or pointer event.\n * @return {number} The identifier.\n */\nwireless.events.touch.getTouchId \x3d function(e) {\n  return wireless.events.touch.SUPPORTS_POINTER ?\n      /** @type {!MSPointerEvent} */ (e).pointerId :\n      /** @type {!Touch} */ (e).identifier;\n};\n\n\n/**\n * Given a touch or pointer event, return the number of touches associated with\n * the event.\n * @param {!Event} e The touch or pointer event.\n * @return {number} The touch count.\n */\nwireless.events.touch.getTouchCount \x3d function(e) {\n  return wireless.events.touch.getTouches(e).length;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/events/touch.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3r');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3r');

}catch(e){_DumpException(e)}
/* _Module_:sy3s */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3s');
var $googDebugFname="javascript/wireless/events/clickbuster.js";
eval("// Copyright 2010 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview This file contains a click buster implementation, which is a\n * behavior that prevents native clicks from firing at undesirable times. There\n * are two scenarios where we may want to \x27bust\x27 a click.\n *\n * Buttons implemented with touch events usually have click handlers as well.\n * This is because sometimes touch events stop working, and the click handler\n * serves as a fallback. Here we use a click buster to prevent the native click\n * from firing if the touchend event was succesfully handled.\n *\n * When native scrolling behavior is disabled (see wireless.fx.Scroller), click\n * events will fire after the touchend event when the drag sequence is\n * complete. The click event also happens to fire at the location of the\n * touchstart event which can lead to some very strange behavior.\n *\n * This class puts a single click handler on the body, and calls preventDefault\n * on the click event if we detect that there was a touchend event that already\n * fired in the same spot recently.\n */\n\ngoog.provide(\x27wireless.events.clickbuster\x27);\n\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27wireless.device\x27);\ngoog.require(\x27wireless.events\x27);\ngoog.require(\x27wireless.events.touch\x27);\n\n\n/**\n * @define {boolean} Whether to assume the browser will correctly handle the\n *     touch end prevent default case and disable click busting.\n */\ngoog.define(\n    \x27wireless.events.clickbuster.ASSUME_USES_TOUCH_END_PREVENT_DEFAULT\x27, false);\n\n\n/**\n * The logger for this package.\n * @private {goog.log.Logger}\n */\nwireless.events.clickbuster.logger_ \x3d\n    goog.log.getLogger(\x27wireless.events.clickbuster\x27);\n\n\n/**\n * The list of coordinates that we use to measure the distance of clicks from.\n * If a click is within the distance threshold of any of these coordinates then\n * we allow the click.\n * @type {Array.\x3cnumber\x3e}\n * @private\n */\nwireless.events.clickbuster.coordinates_;\n\n\n/**\n * The last time preventGhostClick was called.\n * @type {number}\n * @private\n */\nwireless.events.clickbuster.lastPreventedTime_;\n\n\n/**\n * The threshold for how long we allow a click to occur after a touchstart.\n * @type {number}\n * @private\n */\nwireless.events.clickbuster.TIME_THRESHOLD_ \x3d 2500;\n\n\n/**\n * The threshold for how close a click has to be to the saved coordinate for us\n * to allow it.\n * @type {number}\n * @private\n */\nwireless.events.clickbuster.DISTANCE_THRESHOLD_ \x3d 25;\n\n\n/**\n * Callback to call when a click is busted.\n * @type {function()|undefined}\n * @private\n */\nwireless.events.clickbuster.onBustCallback_;\n\n\n/**\n * Cached value of canUseTouchEndPreventDefault. This prevents evaluating a\n * regex on every touch event.\n * @type {boolean|undefined}\n * @private\n */\nwireless.events.clickbuster.canUseTouchEndPreventDefaultCache_;\n\n\n/**\n * This handler will prevent the default behavior for any clicks unless the\n * click is within the distance threshold of one of the temporary allowed\n * coordinates.\n * @param {Event} e The click event.\n * @private\n */\nwireless.events.clickbuster.onClick_ \x3d function(e) {\n  // If there were no calls to preventGhostClick in the last 2.5s then we should\n  // not event consider busting any clicks.\n  if (goog.now() - wireless.events.clickbuster.lastPreventedTime_ \x3e\n      wireless.events.clickbuster.TIME_THRESHOLD_) {\n    return;\n  }\n\n  var coord \x3d\n      wireless.events.touch.getClientCoordinate(/** @type {!Event} */ (e));\n  // On desktop webkit browsers, clicking on a label element will cause another\n  // click event to be fired on the associated input element. We don\x27t want to\n  // bust that click. Depending on the browser, it will have a coordinate of\n  // either 0,0 or use negative numbers.\n  if (coord.x \x3c 1 \x26\x26 coord.y \x3c 1) {\n    goog.log.warning(wireless.events.clickbuster.logger_,\n        \x27Not busting click on label elem at (\x27 +\n          coord.x + \x27, \x27 + coord.y + \x27)\x27);\n    return;\n  }\n\n  for (var i \x3d 0; i \x3c wireless.events.clickbuster.coordinates_.length; i +\x3d 2) {\n    if (wireless.events.clickbuster.hitTest_(\n        wireless.events.clickbuster.coordinates_[i],\n        wireless.events.clickbuster.coordinates_[i + 1],\n        coord.x, coord.y)) {\n      // Remove the coordinate so that we don\x27t allow any more clicks from this\n      // coordinate.\n      wireless.events.clickbuster.coordinates_.splice(i, i + 2);\n      return;\n    }\n  }\n  goog.log.warning(wireless.events.clickbuster.logger_,\n    \x27busting click at \x27 + coord.x + \x27, \x27 + coord.y);\n  // Stop the click event from being handled by anything else.\n  e.stopPropagation();\n\n  // Stop the click from being resolved by the browser, for example to\n  // follow a link.\n  e.preventDefault();\n\n  var onBustCallback \x3d wireless.events.clickbuster.onBustCallback_;\n  if (onBustCallback) {\n    onBustCallback();\n  }\n};\n\n\n/**\n * This handler will temporarily allow a click to occur near the touch event\x27s\n * coordinates.\n * @param {!Event} e The touchstart event.\n * @private\n */\nwireless.events.clickbuster.onTouchStart_ \x3d function(e) {\n  var coord \x3d wireless.events.touch.getClientCoordinate(\n      wireless.events.touch.getTouches(e)[0]);\n\n  wireless.events.clickbuster.coordinates_.push(coord.x, coord.y);\n\n  window.setTimeout(function() {\n        wireless.events.clickbuster.removeCoordinate_(coord.x, coord.y);\n        wireless.events.clickbuster.onBustCallback_ \x3d undefined;\n      }, wireless.events.clickbuster.TIME_THRESHOLD_\n  );\n};\n\n\n/**\n * This is the actual hit test for whether a coordinate is within the\n * distance threshold of an event.\n * @param {number} x The x value of the coordinate.\n * @param {number} y The y value of the coordinate.\n * @param {number} eventX The x value of the event.\n * @param {number} eventY The y value of the evnet.\n * @return {boolean} True if the event is within threshold.\n * @private\n */\nwireless.events.clickbuster.hitTest_ \x3d function(x, y, eventX, eventY) {\n  var threshold \x3d wireless.events.clickbuster.DISTANCE_THRESHOLD_;\n  return Math.abs(eventX - x) \x3c threshold \x26\x26 Math.abs(eventY - y) \x3c threshold;\n};\n\n\n\n/**\n * Remove one specified coordinate from the coordinates array.\n * @param {number} x The x value of the coordinate.\n * @param {number} y The y value of the coordinate.\n * @private\n */\nwireless.events.clickbuster.removeCoordinate_ \x3d function(x, y) {\n  for (var i \x3d 0; i \x3c wireless.events.clickbuster.coordinates_.length; i +\x3d 2) {\n    if (wireless.events.clickbuster.coordinates_[i] \x3d\x3d x \x26\x26\n        wireless.events.clickbuster.coordinates_[i + 1] \x3d\x3d y) {\n      wireless.events.clickbuster.coordinates_.splice(i, i + 2);\n      return;\n    }\n  }\n};\n\n\n/**\n * @return {boolean} True iff calling preventDefault on touchEnd events causes\n *     the subsequent click event to be surpressed. This makes it possible to\n *     skip the ClickBuster logic entirely.\n * @private\n */\nwireless.events.clickbuster.canUseTouchEndPreventDefault_ \x3d function() {\n  if (!goog.isDef(\n      wireless.events.clickbuster.canUseTouchEndPreventDefaultCache_)) {\n    wireless.events.clickbuster.canUseTouchEndPreventDefaultCache_ \x3d\n        wireless.device.getAppleOsVersion() \x3e\x3d wireless.device.getVersion(6) ||\n        wireless.events.clickbuster.ASSUME_USES_TOUCH_END_PREVENT_DEFAULT;\n  }\n  return wireless.events.clickbuster.canUseTouchEndPreventDefaultCache_;\n\n};\n\n/**\n * Calls preventDefault on the event if the browser will correctly prevent the\n * subsequent click event, otherwise call preventGhostClick.\n * @param {number} x The x value of the click coordinate to prevent.\n * @param {number} y The y value of the click coordinate to prevent.\n * @param {Event} e The touch event to surpress click events from.\n * @param {function()\x3d} opt_onBustCallback A callback to be called if a ghost\n *     click is prevented. This callback is removed when the allowable zone is\n *     removed.\n * @suppress {deprecated}\n */\nwireless.events.clickbuster.preventGhostClickWithEvent \x3d\n    function(x, y, e, opt_onBustCallback) {\n  if (e \x26\x26 wireless.events.clickbuster.canUseTouchEndPreventDefault_()) {\n    e.preventDefault();\n    if (opt_onBustCallback) {\n      opt_onBustCallback();\n    }\n  } else {\n    wireless.events.clickbuster.preventGhostClick(x, y, opt_onBustCallback);\n  }\n};\n\n/**\n * Registers new touches to create temporary \x22allowable zones\x22 and registers new\n * clicks to be prevented unless they fall in one of the current \x22allowable\n * zones\x22. Note that if the touchstart and touchend locations are different, it\n * is still possible for a ghost click to be fired if you called preventDefault\n * on all touchmove events. In this case the ghost click will be fired at the\n * location of the touchstart event, so the coordinate you pass in should be the\n * coordinate of the touchstart.\n * @deprecated As of iOS 6, calling preventDefault on a touchEnd event will\n *     correctly supress the subsequent click event. Prefer using\n *     `preventGhostClickWithEvent` to get this optimization.\n * @param {number} x The x value of the click coordinate to prevent.\n * @param {number} y The y value of the click coordinate to prevent.\n * @param {function()\x3d} opt_onBustCallback A callback to be called if a ghost\n *     click is prevented. This callback is removed when the allowable zone is\n *     removed.\n */\nwireless.events.clickbuster.preventGhostClick \x3d\n    function(x, y, opt_onBustCallback) {\n  // First time this is called the following occurs:\n  //   1) Attaches a handler to touchstart events so that each touch will\n  //      temporarily create an \x22allowable zone\x22 for clicks to occur in.\n  //   2) Attaches a handler to click events so that each click will be\n  //      prevented unless it is in an \x22allowable zone\x22.\n  //\n  // Every time this is called (including the first) the following occurs:\n  //   1) Removes an allowable zone that contains the specified coordinate.\n  //\n  // How this enables click busting:\n  //   1) User performs first click.\n  //     - No attached touchstart handler yet.\n  //     - preventGhostClick is called before the click event occurs, it\n  //       attaches the touchstart and click handlers.\n  //     - The click handler captures the user\x27s click event and prevents it\n  //       from propagating since there is no \x22allowable zone\x22.\n  //\n  //   2) User performs subsequent, to-be-busted click.\n  //     - touchstart event triggers the attached handler and creates a\n  //       temporary \x22allowable zone\x22.\n  //     - preventGhostClick is called and removes the \x22allowable zone\x22.\n  //     - The click handler captures the user\x27s click event and prevents it\n  //       from propagating since there is no \x22allowable zone\x22.\n  //\n  //   3) User performs a should-not-be-busted click.\n  //     - touchstart event triggers the attached handler and creates a\n  //       temporary \x22allowable zone\x22.\n  //     - The click handler captures the user\x27s click event and allows it to\n  //       propagate since the click falls in the \x22allowable zone\x22.\n\n  wireless.events.clickbuster.onBustCallback_ \x3d opt_onBustCallback;\n\n  if (!wireless.events.clickbuster.coordinates_) {\n    // Listen to clicks on capture phase so they can be busted before anything\n    // else gets a chance to handle them.\n    document.addEventListener(\x27click\x27, wireless.events.clickbuster.onClick_,\n                              true);\n\n    // Listen to touchstart on capture phase since it must be called prior to\n    // every click or else we will accidentally prevent the click even if we\n    // don\x27t call preventGhostClick.\n    var startFn \x3d wireless.events.clickbuster.onTouchStart_;\n    if (!wireless.events.touch.SUPPORTS_TOUCHES \x26\x26\n        !wireless.events.touch.SUPPORTS_POINTER) {\n      startFn \x3d wireless.events.touch.mouseToTouchCallback(startFn);\n    }\n    wireless.events.observe(document, wireless.events.touch.START_EVENT,\n        startFn, true /* capture */, true /* removeHandlerOnFocus */);\n    wireless.events.clickbuster.coordinates_ \x3d [];\n  }\n\n  // Above all other rules, we won\x27t bust any clicks if there wasn\x27t some call\n  // to preventGhostClick in the last time threshold.\n  wireless.events.clickbuster.lastPreventedTime_ \x3d goog.now();\n\n  // Remove one allowable coordinate that is within the distance threshold to\n  // the ghost click so that it can be busted.\n  for (var i \x3d 0; i \x3c wireless.events.clickbuster.coordinates_.length; i +\x3d 2) {\n    if (wireless.events.clickbuster.hitTest_(\n        wireless.events.clickbuster.coordinates_[i],\n        wireless.events.clickbuster.coordinates_[i + 1],\n        x, y)) {\n      // Instead of looking for a specific coordinate to remove, we look for a\n      // coordinate that is within the distance threshold. One reason for this\n      // is because a user can move their finger slightly between the touchstart\n      // and the actual click.\n      wireless.events.clickbuster.coordinates_.splice(i, i + 2);\n      return;\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/events/clickbuster.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3s');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3s');

}catch(e){_DumpException(e)}
/* _Module_:sy3t */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy3t');
var $googDebugFname="javascript/wireless/fx/dragvelocity.js";
eval("// Copyright 2012 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Calculates the velocity associated with user drag events.\n *\n * This behavior will NOT perform the actual dragging (redrawing the element)\n * for you, this responsibility is left to the client code.\n *\n * The properties of the drag sequence are the horizontal and vertical drag\n * delta, defined as the horizontal/vertical difference of the start touch\n * position and the last touch position. The class also reports the end velocity\n * of the drag, that can be used to implement momentum animation.\n *\n * @see wireless.events.DragHandler for a usage example.\n */\n\ngoog.provide(\x27wireless.fx.DragVelocity\x27);\n\ngoog.require(\x27goog.math.Coordinate\x27);\n\n\n/**\n * Calculates the velocity based on user drag actions. This class simply\n * provides the velocity, it does not update any on screen elements.\n * @constructor\n */\nwireless.fx.DragVelocity \x3d function() {\n  /**\n   * An array of tuples where the first item is the horizontal component of a\n   * recent relevant move and the second item is the move\x27s time stamp. Old\n   * moves are removed based on the max tracking time and when direction\n   * changes. Used to determine the end velocity of a drag.\n   * @type {!Array.\x3cnumber\x3e}\n   * @private\n   */\n  this.recentMovesX_ \x3d [];\n\n  /**\n   * An array of tuples where the first item is the vertical component of a\n   * recent relevant move and the second item is the move\x27s time stamp. Old\n   * moves are removed based on the max tracking time and when direction\n   * changes. Used to determine the end velocity of a drag.\n   * @type {!Array.\x3cnumber\x3e}\n   * @private\n   */\n  this.recentMovesY_ \x3d [];\n};\n\n\n/**\n * The maximum number of ms to track a drag move. After a move is older than\n * this value, it will be ignored in velocity calculations.\n * @type {number}\n * @private\n */\nwireless.fx.DragVelocity.MAX_RECENT_TIME_ \x3d 250;\n\n\n/**\n * The maximum number of recent moves to track.\n * @type {number}\n * @private\n */\nwireless.fx.DragVelocity.MAX_RECENT_LENGTH_ \x3d 5;\n\n\n/**\n * The maximum velocity to return, in pixels per millisecond, that is used to\n * guard against errors in calculating end velocity of a drag. This is a very\n * fast drag velocity.\n * @type {number}\n * @private\n */\nwireless.fx.DragVelocity.MAXIMUM_VELOCITY_ \x3d 5;\n\n\n/**\n * The velocity to return, in pixel per millisecond, when the time stamps on the\n * events are erroneous. The browser can return bad time stamps if the thread\n * is blocked for the duration of the drag. This is a low velocity to prevent\n * the content from moving quickly after a slow drag. It is less jarring if the\n * content moves slowly after a fast drag.\n * @type {number}\n * @private\n */\nwireless.fx.DragVelocity.VELOCITY_FOR_INCORRECT_EVENTS_ \x3d 1;\n\n\n/**\n * The last touch x delta. Used to determine the end velocity of a drag.\n * @type {number|undefined}\n * @private\n */\nwireless.fx.DragVelocity.prototype.lastMoveX_;\n\n\n/**\n * The last touch y delta. Used to determine the end velocity of a drag.\n * @type {number|undefined}\n * @private\n */\nwireless.fx.DragVelocity.prototype.lastMoveY_;\n\n\n/**\n * Start touch is recorded when the gesture is started. For drag, however, we\n * need to know the inital start touch position (i.e., the position when the\n * touch has been placed), in order to give the delegate the information about\n * the initial drag (the drag occured before the gesture has actually started).\n * This variable at first holds the x coordinate of the initial touch position,\n * and only after the delegate is called it is updated to the touch position\n * at the moment the gesture is started.\n * @type {number|undefined}\n * @private\n */\nwireless.fx.DragVelocity.prototype.dragStartTouchX_;\n\n\n/**\n * Same as above, but for coordinate y.\n * @type {number|undefined}\n * @private\n */\nwireless.fx.DragVelocity.prototype.dragStartTouchY_;\n\n\n/**\n * Prepares for a new round of drag velocity calculations.\n * @param {number} x The x coordinate of the start.\n * @param {number} y The y coordinate of the start.\n * @param {number} timeStamp The time stamp in milliseconds.\n */\nwireless.fx.DragVelocity.prototype.handleStart \x3d function(x, y, timeStamp) {\n  this.recentMovesX_.length \x3d this.recentMovesY_.length \x3d 0;\n  this.recentMovesX_.push(x, timeStamp);\n  this.recentMovesY_.push(y, timeStamp);\n\n  // Save the initial position of the touch.\n  this.dragStartTouchX_ \x3d x;\n  this.dragStartTouchY_ \x3d y;\n};\n\n\n/**\n * Updates the velocity based on movement.\n * @param {number} x The x coordinate of the movement.\n * @param {number} y The y coordinate of the movement.\n * @param {number} timeStamp The time stamp associated with the movement, in\n *     milliseconds.\n * @return {goog.math.Coordinate} The velocity of this move. Velocity is\n *     defined as deltaXY / deltaTime where deltaXY is the difference between\n *     current position and the oldest recent position, and deltaTime is the\n *     difference between current time stamp and the oldest recent time stamp.\n */\nwireless.fx.DragVelocity.prototype.handleMove \x3d function(x, y, timeStamp) {\n  var lastX \x3d this.recentMovesX_[this.recentMovesX_.length - 2];\n  var lastY \x3d this.recentMovesY_[this.recentMovesY_.length - 2];\n  var moveX \x3d lastX - x;\n  var moveY \x3d lastY - y;\n\n  this.removeMovesInWrongDirection_(\n      /** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesX_), this.lastMoveX_,\n      moveX);\n  this.removeMovesInWrongDirection_(\n      /** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesY_), this.lastMoveY_,\n      moveY);\n  this.removeOldMoves_(\n      /** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesX_), timeStamp);\n  this.removeOldMoves_(\n      /** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesY_), timeStamp);\n  this.recentMovesX_.push(x, timeStamp);\n  this.recentMovesY_.push(y, timeStamp);\n\n  this.lastMoveX_ \x3d moveX;\n  this.lastMoveY_ \x3d moveY;\n\n  return this.calculateVelocity_(x, y, timeStamp);\n};\n\n\n/**\n * Filters the provided recent moves array to remove all moves except the\n * last if the move direction has changed.\n * @param {!Array.\x3cnumber\x3e} recentMoves An array of tuples where the first\n *     item is the x or y component of the recent touch and the second item\n *     is the touch time stamp.\n * @param {number|undefined} lastMove The x or y component of the preceding\n *     move.\n * @param {number} recentMove The x or y component of the most recent move.\n * @private\n */\nwireless.fx.DragVelocity.prototype.removeMovesInWrongDirection_ \x3d\n    function(recentMoves, lastMove, recentMove) {\n  if (lastMove \x26\x26 recentMove \x26\x26 recentMoves.length \x3e 2 \x26\x26\n      (lastMove \x3e 0 ^ recentMove \x3e 0)) {\n    recentMoves.splice(0, recentMoves.length - 2);\n  }\n};\n\n\n/**\n * Filters the provided recent moves array to remove all moves older than\n * the max tracking time or the 5th most recent touch.\n * @param {!Array.\x3cnumber\x3e} recentMoves An array of tuples where the first\n *     item is the start x or y component of the recent move and the second item\n *     is the touch time stamp.\n * @param {number} recentTime The time of the most recent event.\n * @private\n */\nwireless.fx.DragVelocity.prototype.removeOldMoves_ \x3d\n    function(recentMoves, recentTime) {\n  while (recentMoves.length \x26\x26 recentTime - recentMoves[1] \x3e\n      wireless.fx.DragVelocity.MAX_RECENT_TIME_ ||\n      recentMoves.length \x3e\n          wireless.fx.DragVelocity.MAX_RECENT_LENGTH_ * 2) {\n    recentMoves.splice(0, 2);\n  }\n};\n\n/**\n* Updates the velocity based on the end of movement.\n* @param {number\x3d} opt_x The x coordinate of the movement, if available.\n* @param {number\x3d} opt_y The y coordinate of the movement, if available.\n* @param {number\x3d} opt_timeStamp The time stamp associated with the movement, in\n*     milliseconds, if available.\n* @return {!goog.math.Coordinate|undefined} The velocity of this move. Velocity\n*     is defined as deltaXY / deltaTime where deltaXY is the difference between\n*     current position and the oldest recent position, and deltaTime is the\n*     difference between current time stamp and the oldest recent time stamp.\n*/\nwireless.fx.DragVelocity.prototype.handleEnd \x3d function(\n      opt_x, opt_y, opt_timeStamp) {\n  if (goog.isDef(opt_x) \x26\x26 goog.isDef(opt_y) \x26\x26 opt_timeStamp) {\n    this.removeOldMoves_(/** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesX_),\n                         opt_timeStamp);\n    this.removeOldMoves_(/** @type {!Array.\x3cnumber\x3e} */ (this.recentMovesY_),\n                         opt_timeStamp);\n    return this.calculateVelocity_(/** @type {number} */ (opt_x),\n        /** @type {number} */ (opt_y), opt_timeStamp);\n  }\n};\n\n\n/**\n * Calculates and returns the velocity of the drag. Velocity is defined as\n * deltaXY / deltaTime where deltaXY is the difference between current position\n * and the oldest recent position, and deltaTime is the difference between\n * current time stamp and the oldest recent time stamp.\n * @param {number} x The end x coordinate of the touch.\n * @param {number} y The end y coordinate of the touch.\n * @param {number} time The end time of the touch.\n * @return {!goog.math.Coordinate} The velocity as a coordinate.\n * @private\n */\nwireless.fx.DragVelocity.prototype.calculateVelocity_ \x3d\n    function(x, y, time) {\n  var velocityX \x3d this.recentMovesX_.length ?\n      (x - this.recentMovesX_[0]) /\n      (time - this.recentMovesX_[1]) : 0;\n  var velocityY \x3d this.recentMovesY_.length ?\n      (y - this.recentMovesY_[0]) /\n      (time - this.recentMovesY_[1]) : 0;\n\n  velocityX \x3d this.correctVelocity_(velocityX);\n  velocityY \x3d this.correctVelocity_(velocityY);\n\n  return new goog.math.Coordinate(velocityX, velocityY);\n};\n\n\n/**\n * Correct erroneous velocities by capping the velocity if we think it\x27s too\n * high, or setting it to a default velocity if know that the event data is bad.\n * @param {number} velocity The x or y velocity component.\n * @return {number} The corrected velocity.\n * @private\n */\nwireless.fx.DragVelocity.prototype.correctVelocity_ \x3d function(velocity) {\n  var absVelocity \x3d Math.abs(velocity);\n\n  // We add to recent touches for each touchstart and touchmove. If we have\n  // fewer than 3 touches (6 entries), we assume that the thread was blocked for\n  // the duration of the drag and we received events in quick succession with\n  // the wrong time stamps.\n  if (absVelocity \x3e wireless.fx.DragVelocity.MAXIMUM_VELOCITY_) {\n    absVelocity \x3d this.recentMovesY_.length \x3c 6 ?\n        wireless.fx.DragVelocity.VELOCITY_FOR_INCORRECT_EVENTS_ :\n            wireless.fx.DragVelocity.MAXIMUM_VELOCITY_;\n  }\n  return absVelocity * (velocity \x3c 0 ? -1 : 1);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/fx/dragvelocity.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy3t');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy3t');

}catch(e){_DumpException(e)}
/* _Module_:sy40 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy40');
var $googDebugFname="javascript/wireless/dom/dom.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Some common utilities for working with DOM elements that are\n * not available in Closure, or are too bloated in Closure.\n */\n\ngoog.provide(\x27wireless.dom\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.userAgent\x27);\n\n\n// TODO(agrieve): Consider setting the default values of these defines based on\n//     goog.userAgent.ASSUME_MOBILE_WEBKIT.\n\n/**\n * @define {boolean} Whether to do a runtime check for\n *     Element.getElementsByClassName.\n */\nwireless.dom.ASSUME_NATIVE_GET_ELEMENTS_BY_CLASS_NAME \x3d false;\n\n\n/**\n * @define {boolean} Whether to do a runtime check for Element.textContent.\n *     S60 does not support textContent.\n */\nwireless.dom.ASSUME_NATIVE_TEXT_CONTENT \x3d false;\n\n\n/**\n * @define {boolean} Whether to do a runtime check for Element.innerText.\n *     Firefox \x3c 3.0 does not support innerText.\n */\nwireless.dom.ASSUME_NATIVE_INNER_TEXT \x3d false;\n\n\n/**\n * @define {boolean} Whether to do a runtime check for Element.outerHTML.\n *     Firefox does not support outerHTML, but Webkit \x26 IE do.\n */\nwireless.dom.ASSUME_NATIVE_OUTER_HTML \x3d false;\n\n\n/**\n * @define {boolean} Whether adding style/script tags to the head will cause\n *     them to execute properly.\n */\nwireless.dom.ASSUME_TAG_INJECTION_WORKS \x3d false;\n\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). Same as goog.dom.insertSiblingBefore, except asserts that refNode\n * has a parent.\n * @param {Node|undefined} newNode Node to insert.\n * @param {Node|undefined} refNode Reference node to insert before.\n */\nwireless.dom.insertSiblingBefore \x3d function(newNode, refNode) {\n  goog.asserts.assert(newNode, \x27insertSiblingBefore: newNode is missing.\x27);\n  goog.asserts.assert(refNode, \x27insertSiblingBefore: refNode is missing.\x27);\n  goog.asserts.assert(refNode.parentNode,\n      \x27insertSiblingBefore: refNode has no parent.\x27);\n  refNode.parentNode.insertBefore(newNode, refNode);\n};\n\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). Same as goog.dom.insertSiblingAfter, except asserts that refNode\n * has a parent.\n * @param {Node|undefined} newNode Node to insert.\n * @param {Node|undefined} refNode Reference node to insert after.\n */\nwireless.dom.insertSiblingAfter \x3d function(newNode, refNode) {\n  goog.asserts.assert(newNode, \x27insertSiblingAfter: newNode is missing.\x27);\n  goog.asserts.assert(refNode, \x27insertSiblingAfter: refNode is missing.\x27);\n  goog.asserts.assert(refNode.parentNode,\n      \x27insertSiblingAfter: refNode has no parent.\x27);\n  refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n};\n\n\n/**\n * Replaces a node in the DOM tree. Same as goog.dom.replaceNode, except asserts\n * that refNode has a parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\nwireless.dom.replaceNode \x3d function(newNode, oldNode) {\n  goog.asserts.assert(newNode, \x27replaceNode: newNode is missing.\x27);\n  goog.asserts.assert(oldNode, \x27replaceNode: oldNode is missing.\x27);\n  goog.asserts.assert(oldNode.parentNode,\n      \x27replaceNode: oldNode has no parent.\x27);\n  oldNode.parentNode.replaceChild(newNode, oldNode);\n};\n\n\n/**\n * Sets the outerHTML of the given node to the given value.\n * @param {Node} node Node to set outerHTML on.\n * @param {string} value The value.\n */\nwireless.dom.setOuterHtml \x3d function(node, value) {\n  goog.asserts.assert(node, \x27setOuterHtml: node is missing.\x27);\n  if (wireless.dom.ASSUME_NATIVE_OUTER_HTML || \x27outerHTML\x27 in node) {\n    node.outerHTML \x3d value;\n  } else {\n    node.innerHTML \x3d value;\n    while (node.firstChild) {\n      wireless.dom.insertSiblingBefore(node.firstChild, node);\n    }\n    goog.dom.removeNode(node);\n  }\n};\n\n\n/**\n * Returns a set of elements whose class names matches searchClass.\n * @param {string} searchClass className to search for.\n * @param {Node|undefined} node Element to search on.\n * @return {!Array.\x3c!HTMLElement\x3e|!NodeList} Contains the elements matching\n *     searchClass.\n */\nwireless.dom.getElementsByClassName \x3d function(searchClass, node) {\n  goog.asserts.assert(searchClass,\n      \x27getElementsByClassName: searchClass is missing.\x27);\n  goog.asserts.assert(node,\n      \x27getElementsByClassName: node is missing. searchClass\x3d\x27 + searchClass);\n\n  if (!wireless.dom.ASSUME_NATIVE_GET_ELEMENTS_BY_CLASS_NAME \x26\x26\n      !node.getElementsByClassName) {\n    return /** @type {!Array.\x3cHTMLElement\x3e} */ (\n        goog.dom.getElementsByTagNameAndClass(\x27*\x27, searchClass,\n                                              /** @type {!Element} */ (node)));\n  }\n  var ret \x3d node.getElementsByClassName(searchClass);\n  // Check for browser bugs. These cases have occurred in the past.\n  goog.asserts.assert(ret, \x22Browser\x27s getElementsByClassName() returned null.\x22);\n  if (goog.DEBUG) {\n    for (var i \x3d 0, il \x3d ret.length; i \x3c il; i++) {\n      goog.asserts.assert(ret[i], \x27getElementsByClassName: Element \x27 + i +\n                          \x27 is missing! searchClass\x3d\x27 + searchClass);\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Returns the first element in the results array of a call to\n * getElementsByClassName.\n * @param {string} searchClass className to search for.\n * @param {Node|undefined} node Element to search on.\n * @return {!HTMLElement|undefined} 1st element matching searchClass; undefined\n *     if none found.\n */\nwireless.dom.getFirstElementByClassName \x3d function(searchClass, node) {\n  return wireless.dom.getElementsByClassName(searchClass, node)[0];\n};\n\n\n/**\n * Returns the text content of the given node.\n * @param {Node|undefined} node The node for which the text content should be\n *     returned.\n * @return {string} The text content of the given HTML node.\n */\nwireless.dom.getText \x3d function(node) {\n  goog.asserts.assert(node, \x27getText: node is undefined.\x27);\n  if (wireless.dom.ASSUME_NATIVE_TEXT_CONTENT) {\n    return node.textContent;\n  } else if (wireless.dom.ASSUME_NATIVE_INNER_TEXT) {\n    return node.innerText;\n  }\n  return node.textContent || node.innerText || \x27\x27;\n};\n\n\n/**\n * Sets the text content of the given node.\n * @param {Node} node The node on which to set the new text content.\n * @param {string} value The new text content.\n */\nwireless.dom.setText \x3d function(node, value) {\n  goog.asserts.assert(node, \x27setText: node is undefined.\x27);\n  if (wireless.dom.ASSUME_NATIVE_TEXT_CONTENT) {\n    node.textContent \x3d value;\n  } else if (wireless.dom.ASSUME_NATIVE_INNER_TEXT) {\n    node.innerText \x3d value;\n  } else if (typeof node.textContent \x3d\x3d \x27string\x27) {\n    node.textContent \x3d value;\n  } else {\n    node.innerText \x3d value;\n  }\n};\n\n\n/**\n * Computes the absolute X offset of the left of the element.\n * @param {Node} node The element.\n * @param {Node} opt_offsetParent Ancestor to be relative to.\n * @return {number} The absolute X offset from the left of the element.\n */\nwireless.dom.calculateAbsoluteOffsetLeft \x3d function(node, opt_offsetParent) {\n  goog.asserts.assert(node, \x27calculateAbsoluteOffsetLeft: node is undefined.\x27);\n  goog.asserts.assert(node.offsetParent,\n      \x27calculateAbsoluteOffsetLeft: node.offsetParent is null. Node must be \x27 +\n      \x27attached to the DOM and must not be display:none.\x27);\n  opt_offsetParent \x3d opt_offsetParent || document.body;\n  var left \x3d node.offsetLeft;\n  var parent \x3d node.offsetParent;\n  while (parent !\x3d opt_offsetParent) {\n    left +\x3d parent.offsetLeft;\n    parent \x3d parent.offsetParent;\n  }\n  return left;\n};\n\n\n/**\n * Computes the absolute X offset of the right of the element.\n * @param {Node} node The element.\n * @param {Node} opt_offsetParent Ancestor to be relative to.\n * @return {number} The absolute X offset from the right of the element.\n */\nwireless.dom.calculateAbsoluteOffsetRight \x3d function(node, opt_offsetParent) {\n  goog.asserts.assert(node, \x27calculateAbsoluteOffsetRight: node is undefined.\x27);\n  goog.asserts.assert(node.offsetParent,\n      \x27calculateAbsoluteOffsetRight: node.offsetParent is null. Node must be \x27 +\n      \x27attached to the DOM and must not be display:none.\x27);\n  opt_offsetParent \x3d opt_offsetParent || document.body;\n  var right \x3d opt_offsetParent.offsetWidth - node.offsetLeft - node.offsetWidth;\n  var parent \x3d node.offsetParent;\n  while (parent !\x3d opt_offsetParent) {\n    right -\x3d parent.offsetLeft;\n    parent \x3d parent.offsetParent;\n  }\n  return right;\n};\n\n\n/**\n * Computes the absolute Y offset of the top of the element.\n * @param {Node} node The element.\n * @param {Node} opt_offsetParent Ancestor to be relative to.\n * @return {number} The absolute Y offset from the top of the element.\n */\nwireless.dom.calculateAbsoluteOffsetTop \x3d function(node, opt_offsetParent) {\n  goog.asserts.assert(node, \x27calculateAbsoluteOffsetTop: node is undefined.\x27);\n  goog.asserts.assert(node.offsetParent,\n      \x27calculateAbsoluteOffsetTop: node.offsetParent is null. Node must be \x27 +\n      \x27attached to the DOM and must not be display:none.\x27);\n  opt_offsetParent \x3d opt_offsetParent || document.body;\n  var top \x3d node.offsetTop;\n  var parent \x3d node.offsetParent;\n  while (parent !\x3d opt_offsetParent) {\n    top +\x3d parent.offsetTop;\n    parent \x3d parent.offsetParent;\n  }\n  return top;\n};\n\n\n/**\n * Returns a regular expression for matching the given class name within a\n *     whitespace-separated list of class names.\n * @param {string} className The class name to find.\n * @return {RegExp} The regular expression.\n * @private\n */\nwireless.dom.makeClassNameRegExp_ \x3d function(className) {\n  return new RegExp(\x27(?:^| +)\x27 + className + \x27(?:$| +)\x27);\n};\n\n\n/**\n * Returns whether the given element contains the given class name.\n * @param {Node} node The node whose className to examine.\n * @param {string} className The class name to search for.\n * @return {boolean} Whether the given element contains the given class name.\n */\nwireless.dom.hasClass \x3d function(node, className) {\n  goog.asserts.assert(node, \x27hasClass: node is undefined.\x27);\n  return wireless.dom.makeClassNameRegExp_(className).test(node.className);\n};\n\n\n/**\n * Removes the given class name(s) from the element and then adds one back on\n * based on the useFirst parameter. If useFirst is false and no secondClass\n * is given, then no classes are added back on.\n * @param {Node|undefined} node The node to change the class of.\n * @param {*} useFirst True if the class name should use firstClass, false to\n *     use secondClass.\n * @param {string} firstClass The class name to be toggled or removed.\n * @param {string} opt_secondClass The class name to be toggled between.\n */\nwireless.dom.toggleClass \x3d\n    function(node, useFirst, firstClass, opt_secondClass) {\n  goog.asserts.assert(node, \x27toggleClass: node is undefined.\x27);\n  var firstClassRegExp \x3d wireless.dom.makeClassNameRegExp_(firstClass);\n  var secondClass \x3d opt_secondClass || \x27\x27;\n  var secondClassRegExp \x3d wireless.dom.makeClassNameRegExp_(secondClass);\n\n  if ((useFirst \x3d\x3d firstClassRegExp.test(node.className) \x26\x26\n      (!opt_secondClass ||\n          (useFirst !\x3d secondClassRegExp.test(node.className))))) {\n    // Return if this code should not make any changes to this node\x27s class.\n    return;\n  }\n\n  // Remove both class names.\n  var className \x3d node.className.replace(\n      firstClassRegExp, \x27 \x27).replace(secondClassRegExp, \x27 \x27);\n\n  node.className \x3d className + \x27 \x27 + (useFirst ? firstClass : secondClass);\n};\n\n\n/**\n * Creates a node of the given type and with the given contents and adds it to\n * the head.\n * @param {string} nodeName The node name of the element to create.\n * @param {string} nodeContents The value of the node.\n * @return {Node} The newly created node.\n * @private\n */\nwireless.dom.addNodeToHead_ \x3d function(nodeName, nodeContents) {\n  var element \x3d document.createElement(nodeName);\n  var propToSet \x3d goog.userAgent.WEBKIT ? \x27innerText\x27 : \x27innerHTML\x27;\n  element[propToSet] \x3d nodeContents;\n  return document.getElementsByTagName(\x27head\x27)[0].appendChild(element);\n};\n\n\n/**\n * If opt_regExp is given, then walks up the parents of the given node until one\n * is found where where node[propertyName] matches the RegExp.\n * If opt_regExp is not given, then walks up the parents of the given node until\n * one is found where node[propertyName] evaluates to true.\n * @param {Node|undefined} node The node to start iterating from. This function\n *     is a no-op when null/undefined.\n * @param {string} propertyName The property name to look for.\n * @param {RegExp\x3d} opt_regExp The pattern that node[propertyName] must match.\n * @return {Node|undefined} The found node, or undefined if none was found.\n */\nwireless.dom.findFirstAncestorWithProperty \x3d\n    function(node, propertyName, opt_regExp) {\n  while (node) {\n    var value \x3d node[propertyName];\n    // Check for empty string in addition to the regular expression to avoid\n    // having undefined being cast to a string when node \x3d\x3d document.\n    if (value \x26\x26 (!opt_regExp || opt_regExp.test(value))) {\n      return node;\n    }\n    node \x3d node.parentNode;\n  }\n};\n\n\n/**\n * Walks up the parents of the given node until one one is found with the given\n * class name.\n * @param {Node|undefined} node The node to start iterating from. This function\n *     is a no-op when null/undefined.\n * @param {string} className The class name to search for.\n * @return {Node|undefined} The found node, or undefined if none was found.\n */\nwireless.dom.findFirstAncestorWithClass \x3d function(node, className) {\n  var classNameRegExp \x3d wireless.dom.makeClassNameRegExp_(className);\n  return wireless.dom.findFirstAncestorWithProperty(node, \x27className\x27,\n      classNameRegExp);\n};\n\n\n/**\n * Walks up the parents of the given node until the last one with the given\n * class name is found.\n * @param {Node|undefined} node The node to start iterating from. This function\n *     is a no-op when null/undefined.\n * @param {string} className The class name to search for.\n * @return {Node|undefined} The found node, or undefined if none was found.\n */\nwireless.dom.findLastAncestorWithClass \x3d function(node, className) {\n  var ret;\n  while (node) {\n    node \x3d wireless.dom.findFirstAncestorWithClass(node, className);\n    if (node) {\n      ret \x3d node;\n      node \x3d node.parentNode;\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Whether a node contains another node. Copied from goog.dom.contains and\n * stripped of unnecessary logic for mobile.\n * @param {Node} parent The node that should contain the other node.\n * @param {Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendent node.\n */\nwireless.dom.contains \x3d function(parent, descendant) {\n  // W3C DOM Level 3\n  if (goog.userAgent.WEBKIT) {\n    return parent.contains(descendant);\n  } else {\n    // This does not work for iPhone 2.2.1 we just use .contains for all WebKit\n    // browsers. Firefox works only with this method.\n    return parent \x3d\x3d descendant ||\n        !!(parent.compareDocumentPosition(descendant) \x26 16);\n  }\n};\n\n/**\n * Forces the element to be repainted. Used to get around issues with dom\n * not always being repainted when dom elements are updated.\n * @param {Node} node The node that needs to be repainted.\n */\nwireless.dom.forceRepaint \x3d function(node) {\n  // We are setting a garbage variable on the window so this line is not\n  // lost due to compiler optimization.\n  // Querying the offsetHeight seems to redraw the element.\n  window[\x27_bug\x27] \x3d node.offsetHeight;\n};\n\n\n/**\n * If the node passed in is a textNode, this will return the parent which we\n * assume is a proper element node. If the node passed in is an element, then\n * this is just an identity function.\n * @param {!Node} node The node to get the element from.\n * @return {!Element} The node as an element.\n */\nwireless.dom.getAsElement \x3d function(node) {\n  if (!wireless.dom.isElement(node)) {\n    node \x3d /** @type {!Node} */ (node.parentNode);\n    goog.asserts.assert(node \x26\x26 node.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT,\n                        \x27Expecting the node type to be ELEMENT.\x27);\n  }\n  return /** @type {!Element} */ (node);\n};\n\n\n/**\n * Tests if a node is an element.\n * @param {Node|undefined} node The node to test.\n * @return {boolean} True if the object is an element, false otherwise.\n */\nwireless.dom.isElement \x3d function(node) {\n  return !!node \x26\x26 node.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/dom/dom.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy40');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy40');

}catch(e){_DumpException(e)}
/* _Module_:sy41 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy41');
var $googDebugFname="javascript/wireless/ui/fastbutton.js";
eval("// Copyright 2009 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Button that responds faster by using the more sensitive touch\n * events. Also adds an optional pressed state and long click interaction.\n *\n * @author mvanouwerkerk@google.com (Michael van Ouwerkerk)\n */\n\ngoog.provide(\x27wireless.ui.FastButton\x27);\n\ngoog.require(\x27goog.math.Coordinate\x27);\ngoog.require(\x27wireless.dom\x27);\ngoog.require(\x27wireless.events.touch\x27);\n\n\n\n/**\n * Used for instantiating the buttons.\n * @param {Element} element The element to be used as a button.\n * @param {!Function} clickHandler The function to call when a click action\n *     is recognized.\n * @param {boolean\x3d} opt_useClickEvent Wait for the click event to fire before\n *     executing the click handler. This is slower than using only\n *     touch events, but in some cirumstances it is more reliable. To be\n *     precise, if you\x27d use only the touch events and in response change the\n *     layout of the page and reveal an input or textarea element in the same\n *     place, then after the touch events are finished a focus event will be\n *     fired on the revealed element and this cannot be prevented and stopped.\n *     It will be focused and bring up a soft keyboard. So if you have a button\n *     that can create this edge case then set this parameter to true. The\n *     pressed state will still be set the moment the touch interaction starts.\n * @param {boolean\x3d} opt_propagateTouch Propagate the touch-start event. If not\n *     set, we stop propagation of the touch-start event so that nested\n *     FastButtons (and similar scenarios) won\x27t cause double-triggering.\n *     However, if your FastButton is inside of a JavaScript Scroller (for\n *     example), then you\x27ll need to set this parameter, so the event will\n *     continue to propagate into the Scroller.\n * @constructor\n */\nwireless.ui.FastButton \x3d function(element, clickHandler, opt_useClickEvent,\n    opt_propagateTouch) {\n  this.useClickEvent \x3d !!opt_useClickEvent;\n\n  /**\n   * If set, we propagate the touch-start event, otherwise we stop propagation\n   * of touch-start beyond this control.\n   * @private {boolean}\n   */\n  this.propagateTouch_ \x3d !!opt_propagateTouch;\n\n  // If the click event will be used to clear the long touch timer, its delay\n  // must be longer so that it does not fire before a regular click.\n  // TODO(mvanouwerkerk): Try clearing the long click timer in the touchend\n  // event so that this delay does not need to be increased. The click event is\n  // used for executing the click handler but the touchend event can still be\n  // usd for other things.\n  if (this.useClickEvent) {\n    this.longClickDelay \x3d Math.max(800, this.longClickDelay);\n  }\n\n  /**\n   * The button element.\n   * @type {Element} The element.\n   */\n  this.element \x3d element;\n\n  /**\n   * The function to be called when a click action is recognized.\n   * @type {function(this:wireless.ui.FastButton, Event)}\n   */\n  this.onclick \x3d clickHandler;\n\n  // Use touch events for browsers the use the iOS touch model.  Let IE10\n  // devices use the mouse code path.\n  if (wireless.events.touch.SUPPORTS_TOUCHES) {\n    element.ontouchstart \x3d /** @type {function(this:Element, (Event|null))} */\n        (goog.bind(this.onButtonTouchStart_, this));\n  } else {\n    element.onmousedown \x3d goog.bind(this.onButtonMouseDown_, this);\n  }\n\n  // For IE10, disable the default browser touch actions.  This\x27ll improve touch\n  // performance.\n  if (wireless.events.touch.SUPPORTS_POINTER) {\n    element.style.msTouchAction \x3d \x27none\x27;\n  }\n\n  // Always set a click handler, to make Safari happy. Otherwise it goes\n  // searching for a click target and is likely to execute a click action on\n  // a nearby normal link, button, or input.\n  //\n  // In addition, Safari has a bug where on occasion it stops firing touch\n  // events. In that case, the click event will be handled as a fallback.\n  // Usually, the touch events will start firing again in response to a page\n  // redraw, and the user won\x27t notice that anything out of the ordinary\n  // happend for this one click.\n  //\n  // In the common case, any interaction is handled using touch events,\n  // and the following click will be stopped by the ghost click buster.\n  //\n  // @bug 2368696\n  element.onclick \x3d goog.bind(this.onButtonClick_, this);\n};\n\n\n/**\n * The list of touch coordinates that have been collected since the last click\n * event was fired on the page.\n * @private {!Array.\x3cgoog.math.Coordinate\x3e} The list of recent coordinates where\n *     a touch interaction was started.\n */\nwireless.ui.FastButton.touchStartCoords_ \x3d [];\n\n\n/**\n * Stops the click event at document level during the capture phase if it looks\n * like it resulted from a touch interaction that was already handled by a\n * button. This can happen, for example, when a button is touched and in\n * response the layout of the page is changed to reveal a clickable element\n * underneath. If the click event is not stopped, the underlying click target\n * would be activated unintentionally.\n */\n// TODO(nthomas): Refactor to use wireless.events.clickbuster, which was\n// extracted from this implementation.\nwireless.ui.FastButton.initGhostClickBuster \x3d function() {\n  // The problem only arises when using touch events.\n  if (!wireless.events.touch.SUPPORTS_TOUCHES) {\n    return;\n  }\n\n  document.addEventListener(\n      \x27click\x27, wireless.ui.FastButton.ghostClickListener_, true);\n};\n\n\n/**\n * @param {Event} event The click event object.\n * @private\n */\nwireless.ui.FastButton.ghostClickListener_ \x3d function(event) {\n  var touchStartCoords \x3d wireless.ui.FastButton.touchStartCoords_;\n  var clickCoord \x3d new goog.math.Coordinate(event.clientX, event.clientY);\n  for (var i \x3d 0, touchCoord; touchCoord \x3d touchStartCoords[i]; i++) {\n    if (goog.math.Coordinate.distance(touchCoord, clickCoord) \x3c 25) {\n\n      // Stop the click event from being handled by anything else.\n      event.stopPropagation();\n\n      // Stop the click from being resolved by the browser, for example to\n      // follow a link.\n      event.preventDefault();\n    }\n  }\n};\n\n\n/**\n * Adds a coordinate to watch for ghost clicks for a limited amount of time.\n * @param {!goog.math.Coordinate} touchCoord A coordinate object.\n */\nwireless.ui.FastButton.watchCoordinateForGhostClick \x3d function(touchCoord) {\n  var touchCoords \x3d wireless.ui.FastButton.touchStartCoords_;\n  touchCoords.push(touchCoord);\n\n  // Drop the coordinate after some time because click events don\x27t get fired\n  // that long after the touch events, ordinarily it\x27s around a second after.\n  // This way the array never becomes too long.\n  window.setTimeout(function() {\n    var index \x3d touchCoords.indexOf(touchCoord);\n    if (index !\x3d -1) {\n      touchCoords.splice(index, 1);\n    }\n  }, 2500);\n};\n\n\n/**\n * The CSS class to be added when the button is pressed. If it is undefined\n * then no class manipulation will be done.\n * @type {string|undefined}\n */\nwireless.ui.FastButton.prototype.pressedClassName;\n\n\n/**\n * The limit in pixels of how much movement to allow before rejecting the\n * interaction as a click.\n * @type {number}\n */\nwireless.ui.FastButton.prototype.motionTolerance \x3d 12;\n\n\n/**\n * The time in milliseconds to wait before accepting an interaction as the\n * start of a potential click. If there is no such delay (a value of zero)\n * then the button pressed state will show faster but also every flick and\n * scroll interaction will trigger the pressed state briefly.\n * @type {number}\n */\nwireless.ui.FastButton.prototype.hoverDelay \x3d 100;\n\n\n/**\n * The time in milliseconds after an interaction starts at which the long\n * click action is called.\n * @type {number}\n */\nwireless.ui.FastButton.prototype.longClickDelay \x3d 500;\n\n\n/**\n * Handler for the long click action. A long click happens when the user holds\n * down the button for a while. If a long click has been fired, no regular\n * click will be fired anymore when the user releases the button. By default no\n * long click behavior is defined.\n *\n * An example of long click behavior is to show a context menu.\n * @type {function(this:wireless.ui.FastButton)|undefined}\n */\nwireless.ui.FastButton.prototype.onlongclick;\n\n\n/**\n * If set, FastButton will call this function to determine if it should cancel\n * its click event. This may be necessary, for example, if there are standard\n * links/buttons inside the FastButton, which would otherwise be unreached\n * because of preventDefault/stopPropagation.\n *\n * @type {function(Event):boolean|undefined}\n */\nwireless.ui.FastButton.prototype.verifyClickEvent;\n\n\n/**\n * Whether to use the click event instead of touch events for determining\n * whether a click action has occurred.\n * @type {boolean|undefined}\n */\nwireless.ui.FastButton.prototype.useClickEvent;\n\n\n/**\n * The coordinate where the interaction started.\n * @private {goog.math.Coordinate}\n */\nwireless.ui.FastButton.prototype.touchStartCoord_;\n\n\n/**\n * The timer id for the delayed hover action.\n * @private {number|undefined}\n */\nwireless.ui.FastButton.prototype.hoverTimer_;\n\n\n/**\n * The timer id for the long click action.\n * @private {number|undefined}\n */\nwireless.ui.FastButton.prototype.longClickTimer_;\n\n\n/**\n * Whether an interaction is in progress.\n * @private {boolean|undefined}\n */\nwireless.ui.FastButton.prototype.isActive_;\n\n\n/**\n * Removes all DOM references, uninstalling this fast button instance.\n */\nwireless.ui.FastButton.prototype.dispose \x3d function() {\n  if (wireless.events.touch.SUPPORTS_TOUCHES) {\n    this.element.ontouchstart \x3d null;\n  } else {\n    this.element.onmousedown \x3d null;\n  }\n\n  this.element.onclick \x3d null;\n};\n\n\n/**\n * Handler for the touchstart event.\n * @param {!TouchEvent} event A touch event.\n * @private\n */\nwireless.ui.FastButton.prototype.onButtonTouchStart_ \x3d function(event) {\n  if (this.verifyClickEvent \x26\x26 !this.verifyClickEvent(event)) {\n    // If event is cancelled do nothing.\n    return;\n  }\n  // Multi touch is not supported.\n  if (wireless.events.touch.getTouchCount(event) \x3e 1) {\n    return;\n  }\n  if (!this.propagateTouch_) {\n    event.stopPropagation();\n  }\n  this.isActive_ \x3d true;\n\n  if (!this.useClickEvent) {\n    this.element.ontouchend \x3d goog.bind(this.onButtonClick_, this);\n    document.body.addEventListener(\x27touchend\x27,\n        this.getBoundResetState_(), false);\n  }\n\n  document.body.addEventListener(\x27touchmove\x27,\n      this.getBoundOnBodyTouchMove_(), false);\n  document.body.addEventListener(\x27touchcancel\x27,\n      this.getBoundResetState_(), false);\n\n  this.scheduleLongClick_();\n\n  var touch \x3d event.touches[0];\n  this.touchStartCoord_ \x3d\n      new goog.math.Coordinate(touch.clientX, touch.clientY);\n\n  if (this.hoverDelay) {\n    this.hoverTimer_ \x3d window.setTimeout(\n        goog.bind(this.setPressed, this, true), this.hoverDelay);\n  } else {\n    this.setPressed(true);\n  }\n\n  if (!this.useClickEvent) {\n    // When not using the click event it is necessary to track the touch\n    // coordinate and silence any click event that is generated there.\n    wireless.ui.FastButton.watchCoordinateForGhostClick(this.touchStartCoord_);\n  }\n};\n\n\n/**\n * Handler for the mousedown event. Used by the browsers that don\x27t follow the\n * touch event code path.\n * @param {Event} event An event object.\n * @private\n */\nwireless.ui.FastButton.prototype.onButtonMouseDown_ \x3d function(event) {\n  if (this.verifyClickEvent \x26\x26 !this.verifyClickEvent(event)) {\n    // If event is cancelled do nothing.\n    return;\n  }\n  if (!this.propagateTouch_) {\n    event.stopPropagation();\n  }\n  this.isActive_ \x3d true;\n  this.scheduleLongClick_();\n  this.setPressed(true);\n};\n\n\n/**\n * Handler for the click event.\n * @param {Event} event An event object.\n * @return {boolean} false, to signal that the event has been handled.\n * @private\n */\nwireless.ui.FastButton.prototype.onButtonClick_ \x3d function(event) {\n  if (this.verifyClickEvent \x26\x26\n      !this.verifyClickEvent(event)) {\n    // If click is cancelled, we don\x27t stop propagation and don\x27t prevent\n    // default action.\n    this.resetState_();\n    return true;\n  }\n  // IE8 sends events with no event object.\n  if (event) {\n    // The gesture that generated a touchend event could have been initiated\n    // outside of the button, so make sure the button is actively handling an\n    // interaction. In contrast, a valid click event can occur without any prior\n    // events being fired, so it should always be handled.\n    if (event.type \x3d\x3d \x27touchend\x27 \x26\x26 !this.isActive_) {\n      return false;\n    }\n\n    // Stop the event propagation; this event should not be handled again.\n    event.stopPropagation();\n  }\n  this.setPressed(true);\n\n  // To allow time for the pressed state (which was enabled above) to be\n  // rendered, only reset the button state and call the click handler\n  // asynchronously. It may look strange to set the pressed state and then\n  // remove it right after during the reset, but the click handler may take any\n  // amount of time to execute. To give the user some feedback that the touch\n  // was recognized, the pressed state is rendered immediately and the reset\n  // method and the click handler are called asynchronously.\n  window.setTimeout(goog.bind(\n      /** @this {wireless.ui.FastButton} */ function() {\n        this.resetState_();\n        if (this.verifyTapHitTarget_()) {\n          this.onclick(event);\n        }\n      }, this), 0);\n\n  // Return false since this handler is attached directly (onclick \x3d ...).\n  return false;\n};\n\n\n/**\n * Handles the touchmove event on the body element. Ensures that no short or\n * long touches are executed if the user is moving a lot, for example scrolling\n * the page.\n * @param {!TouchEvent} event A touch event.\n * @private\n */\nwireless.ui.FastButton.prototype.onBodyTouchMove_ \x3d function(event) {\n  // Multi touch is not supported.\n  if (wireless.events.touch.getTouchCount(event) \x3e 1) {\n    this.resetState_();\n    return;\n  }\n\n  var touch \x3d wireless.events.touch.getTouches(event)[0];\n  var touchMoveCoord \x3d\n      new goog.math.Coordinate(touch.clientX, touch.clientY);\n  if (this.touchStartCoord_ \x26\x26\n      goog.math.Coordinate.distance(this.touchStartCoord_, touchMoveCoord) \x3e\n          this.motionTolerance) {\n    this.resetState_();\n  }\n};\n\n\n/**\n * Returns the bound body touchmove event handler. Instantiates it if\n * necessary.\n * @return {function()} The handler.\n * @private\n */\nwireless.ui.FastButton.prototype.getBoundOnBodyTouchMove_ \x3d function() {\n  if (!this.boundOnBodyTouchMove_) {\n    this.boundOnBodyTouchMove_ \x3d goog.bind(this.onBodyTouchMove_, this);\n  }\n  return this.boundOnBodyTouchMove_;\n};\n\n\n/**\n * Does some cleanup so no old event listeners keep hanging around and the\n * button is ready to be used again.\n * @private\n */\nwireless.ui.FastButton.prototype.resetState_ \x3d function() {\n  window.clearTimeout(this.hoverTimer_);\n  window.clearTimeout(this.longClickTimer_);\n  this.setPressed(false);\n  this.isActive_ \x3d false;\n  if (document.body.removeEventListener) {\n    document.body.removeEventListener(\x27touchmove\x27,\n        this.getBoundOnBodyTouchMove_(), false);\n    document.body.removeEventListener(\x27touchend\x27,\n        this.getBoundResetState_(), false);\n    document.body.removeEventListener(\x27touchcancel\x27,\n        this.getBoundResetState_(), false);\n  }\n};\n\n\n/**\n * Returns the bound resetState_ method. Binds it if necessary.\n * @return {function()} A function.\n * @private\n */\nwireless.ui.FastButton.prototype.getBoundResetState_ \x3d function() {\n  if (!this.boundResetState_) {\n    this.boundResetState_ \x3d goog.bind(this.resetState_, this);\n  }\n  return this.boundResetState_;\n};\n\n\n/**\n * Sets the pressed state by adding or removing the pressed class.\n * @param {boolean} pressed Whether the pressed class must be added or removed.\n * @protected\n */\nwireless.ui.FastButton.prototype.setPressed \x3d function(pressed) {\n  if (!this.pressedClassName) {\n    return;\n  }\n  if (pressed \x26\x26 !this.verifyTapHitTarget_()) {\n    // Don\x27t set the pressed state to ON, if our position doesn\x27t match our\n    // intended target.\n    return;\n  }\n  wireless.dom.toggleClass(this.element, pressed, this.pressedClassName);\n};\n\n\n/**\n * Verifies that the last detected X and Y positions map correctly to our target\n * element.\n * @return {boolean} Whether the last detected tap position matches the target.\n * @private\n */\nwireless.ui.FastButton.prototype.verifyTapHitTarget_ \x3d function() {\n  if (!document.elementFromPoint || !this.touchStartCoord_ ||\n      !goog.isDef(this.touchStartCoord_.x)) {\n    // Verified, unless enough information is available to prove otherwise.\n    return true;\n  }\n  var element \x3d document.elementFromPoint(this.touchStartCoord_.x,\n                                          this.touchStartCoord_.y);\n  while (element) {\n    if (element \x3d\x3d this.element) {\n      // Verified true: our expected element was hit.\n      return true;\n    }\n    element \x3d element.parentNode;\n  }\n  // Verified false: tap doesn\x27t match the expected target.\n  return false;\n};\n\n\n/**\n * If there is one, schedules the long click action to be executed after a\n * delay.\n * @private\n */\nwireless.ui.FastButton.prototype.scheduleLongClick_ \x3d function() {\n  if (!this.onlongclick) {\n    return;\n  }\n\n  this.longClickTimer_ \x3d window.setTimeout(goog.bind(function() {\n    this.isActive_ \x3d false;\n    this.onlongclick();\n  }, this), this.longClickDelay);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/wireless/ui/fastbutton.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy41');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy41');

}catch(e){_DumpException(e)}
/* _Module_:sy8l */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy8l');
var $googDebugFname="googledata/html/templates/gws/head/xjs/touch/eventregistry.js";
eval("// Copyright 2012 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview Handles the mapping of higher-level event registrations to\n * lower-level event registrations.\n * PACKAGE PRIVATE FOR gws.touch.\n * @author mgaiman@google.com (Michael Gaiman)\n */\n\ngoog.provide(\x27gws.touch.eventRegistry\x27);\ngoog.provide(\x27gws.touch.eventRegistry.EventListener\x27);\ngoog.provide(\x27gws.touch.eventRegistry.ListenerTuple\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.events\x27);\n\n\n\n/**\n * Used to register and unregister events.\n * @param {!Element} target The target of the event registration.\n * @param {string} type The event type.\n * @param {Function} callback The callback of the event.\n * @constructor\n */\ngws.touch.eventRegistry.ListenerTuple \x3d function(target, type, callback) {\n  /**\n   * The target of the event registration.\n   * @type {!Element}\n   */\n  this.target \x3d target;\n\n  /**\n   * The event type.\n   * @type {string}\n   */\n  this.type \x3d type;\n\n  /**\n   * The callback of the event.\n   * @type {Function}\n   */\n  this.callback \x3d callback;\n};\n\n\n/**\n * The listeners associated with a specific higher-level event registration.\n * @typedef {Array\x3c!gws.touch.eventRegistry.ListenerTuple|!Function\x3e}\n * @private\n */\ngws.touch.eventRegistry.EventListener;\n\n\n/**\n * Maps all targets to the listeners registered on them.  Specifically it maps\n * target id strings to gws.touch.EventListener_ (which are arrays of\n * gws.touch.eventRegistry.ListenerTuples).\n * @private {!Map}\n */\ngws.touch.eventRegistry.listenerMap_ \x3d new Map();\n\n\n/**\n * Used to generate IDs that map elements to event listener tuples so that\n * event listeners can later be removed.\n * This should be a valid classname and a valid regular expression.\n * @type {string}\n * @private\n */\ngws.touch.eventRegistry.LISTENER_ID_PREFIX_ \x3d \x27gt\x27;\n\n\n/**\n * The property on a target element that maps to a list of the IDs associated\n * with the target.\n * @type {string}\n * @private\n */\ngws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_ \x3d \x27_GTL_\x27;\n\n\n/**\n * Used to create uniqueness among listener ids.\n * @type {number}\n * @private\n */\ngws.touch.eventRegistry.listenerIdSuffix_ \x3d 0;\n\n\n/**\n * Registers the event listener and returns the signature for use with removing\n * it later.\n * @param {!Element|!HTMLBodyElement} el The target element.\n * @param {string} type The event type registered.\n * @param {function(!Event)} callback The callback function.\n * @param {!EventListenerOptions|boolean\x3d} options An options object or a\n *     boolean for the capture option. If not specified, defaults to false.\n * @return {!gws.touch.eventRegistry.ListenerTuple} The tuple for use with\n *     adding to the registry.\n * @package\n */\ngws.touch.eventRegistry.addEventListener \x3d function(\n    el, type, callback, options) {\n  let cb \x3d event \x3d\x3e callback(event.getBrowserEvent());\n  goog.events.listen(el, type, cb, options || false);\n  return new gws.touch.eventRegistry.ListenerTuple(el, type, cb);\n};\n\n\n/**\n * Adds the listeners to the listener map and adds a newly generated listener id\n * to the target\x27s classnames.\n * @param {!Element} target The target of the new event listeners.\n * @param {!gws.touch.eventRegistry.EventListener} listener The event listener\n *     to register.\n * @return {string} The newly generated listener id used for removing these\n *     event listeners.\n */\ngws.touch.eventRegistry.put \x3d function(target, listener) {\n  var id \x3d gws.touch.eventRegistry.LISTENER_ID_PREFIX_ +\n      gws.touch.eventRegistry.listenerIdSuffix_++;\n  gws.touch.eventRegistry.listenerMap_.set(id, listener);\n  if (!(gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_ in target)) {\n    target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_] \x3d [];\n  }\n  target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_].push(id);\n\n  return id;\n};\n\n\n/**\n * Gets the ListenerTuple associated with the id provided.\n * @param {string} id The listener ID from the put method.\n * @return {!gws.touch.eventRegistry.EventListener|undefined} The event listener\n *     or undefined if there\x27s no listener associated with that ID.\n */\ngws.touch.eventRegistry.get \x3d function(id) {\n  return /** @type {!gws.touch.eventRegistry.EventListener|undefined} */ (\n      gws.touch.eventRegistry.listenerMap_.get(id));\n};\n\n\n/**\n * Removes the event listener and performs associated cleanup.\n * @param {string} listenerId The id returned from one of the\n *     gws.touch.add*Listener methods.\n * @param {!EventListenerOptions|boolean\x3d} options An options object or a\n *     boolean for the capture option. If not specified, defaults to false.\n */\ngws.touch.eventRegistry.removeListener \x3d function(listenerId, options \x3d false) {\n  var listeners \x3d gws.touch.eventRegistry.get(listenerId);\n  if (!listeners || !listeners.length) {\n    return;\n  }\n\n  var listener;\n  var target \x3d null;\n  for (var i \x3d 0; i \x3c listeners.length; i++) {\n    listener \x3d listeners[i];\n    if (listener instanceof gws.touch.eventRegistry.ListenerTuple) {\n      goog.events.unlisten(\n          listener.target, listener.type, listener.callback, options);\n      target \x3d listener.target;\n    } else {\n      listener();\n    }\n  }\n\n  gws.touch.eventRegistry.listenerMap_.delete(listenerId);\n  if (target \x26\x26 gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_ in target) {\n    goog.array.remove(\n        target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_], listenerId);\n  }\n};\n\n\n/**\n * Removes all active event listeners (registered via gws.touch) from the target\n * element provided.\n * @param {!Element} target The element to remove listeners from.\n */\ngws.touch.eventRegistry.removeListenersByTarget \x3d function(target) {\n  var ids \x3d target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_] || [];\n  for (var i \x3d ids.length - 1; i \x3e\x3d 0; i--) {\n    // Note: gws.touch.removeListener may remove the id from the ids array.\n    gws.touch.eventRegistry.removeListener(ids[i]);\n  }\n  target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_] \x3d [];\n};\n\n\n/**\n * Performs internal cleanup but doesn\x27t actually remove listeners\n * associated with the target.  This is useful if the target has been completely\n * removed from the DOM and this is the only remaining live reference to it.\n * This is not needed if gws.touch.eventRegistry.removeAllListeners(target) is\n * called.\n * @param {!Element} target The target to cleanup.\n */\ngws.touch.eventRegistry.quickRemove \x3d function(target) {\n  var ids \x3d target[gws.touch.eventRegistry.LISTENER_ID_LIST_PROPERTY_] || [];\n  for (var i \x3d 0, id; id \x3d ids[i]; i++) {\n    gws.touch.eventRegistry.removeListener(id);\n  }\n};\n\n\n/**\n * Removes all active event listeners (registered via gws.touch).\n * This should be done on soft page transitions, but isn\x27t needed on hard\n * transitions.\n */\ngws.touch.eventRegistry.removeAllListeners \x3d function() {\n  var ids \x3d gws.touch.eventRegistry.getIds_();\n  for (var i \x3d 0, id; id \x3d ids[i]; i++) {\n    gws.touch.eventRegistry.removeListener(id);\n  }\n  // Should be empty, but just to be double-sure.\n  gws.touch.eventRegistry.listenerMap_.clear();\n};\n\n\n/**\n * @return {!Array\x3cstring\x3e} A list of all currently registered listener IDs.\n * @private\n */\ngws.touch.eventRegistry.getIds_ \x3d function() {\n  return [...gws.touch.eventRegistry.listenerMap_.keys()];\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/touch/eventregistry.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/touch/base.js";
eval("// Copyright 2012 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview Events and enums that support gws.touch.\n * @author mgaiman@google.com (Michael Gaiman)\n */\n\ngoog.provide(\x27gws.touch.Direction\x27);\ngoog.provide(\x27gws.touch.Event\x27);\ngoog.provide(\x27gws.touch.PinchEvent\x27);\ngoog.provide(\x27gws.touch.SwipeEvent\x27);\ngoog.provide(\x27gws.touch.TapEvent\x27);\ngoog.provide(\x27gws.touch.TouchEvent\x27);\ngoog.provide(\x27gws.touch.Touches\x27);\ngoog.provide(\x27gws.touch.Type\x27);\n\n\n/**\n * An enumeration of the available event types.  These are accessed via\n * the type property of any events passed to fired event callback functions.\n * @enum {number}\n */\ngws.touch.Type \x3d {\n  TAP: 1,\n  SWIPE: 3,\n  PINCH: 4,\n  TOUCH_START: 5,\n  TOUCH_MOVE: 6,\n  TOUCH_END: 7\n};\n\n\n/**\n * An enumeration of available swipe directions.\n * Note: Left and right are still left and right in RTL, they are not reversed.\n * @enum {number}\n */\ngws.touch.Direction \x3d {\n  // Note: vertical directions are odd, horizontal are even, and cardinal\n  // directions have higher values than axis directions.  These assumptions are\n  // used in direction processing code.\n  ANY: 0,\n  VERTICAL: 1,\n  HORIZONTAL: 2,\n  UP: 3,\n  LEFT: 4,\n  DOWN: 5,\n  RIGHT: 6\n};\n\n\n/**\n * Enumeration of touches.  Currently just ANY is defined which can be passed to\n * the add*Listener methods to indicate that any number of touches are allowed\n * for this event.\n * @enum {number}\n */\n// Note: this is a hack to trick gjslint into not requiring that\n// goog.provide(\x27gws.touch\x27); is in this file, which would cause circular\n// dependency pains.\ngws.touch.Touches \x3d {\n  ANY: -1\n};\n\n\n\n/**\n * Base event.\n * @param {!gws.touch.Type} type The event type.\n * @param {!Event} rawEvent The underlying browser event.\n * @param {!Element} target The event target.\n * @constructor\n */\ngws.touch.Event \x3d function(type, rawEvent, target) {\n  /**\n   * The event type for this event.\n   * @type {!gws.touch.Type}\n   */\n  this.type \x3d type;\n\n  /**\n   * The underlying browser event.\n   * @type {!Event}\n   */\n  this.rawEvent \x3d rawEvent;\n\n  /**\n   * The event target.\n   * @type {!Element}\n   */\n  this.target \x3d target;\n};\n\n\n\n/**\n * Event for taps, double taps, and triple taps.\n * @param {!Event} rawEvent The underlying browser event.\n * @param {!Element} target The event target.\n * @param {number} x The x coordinate of the tap.\n * @param {number} y The y coordinate of the tap.\n * @constructor\n * @extends {gws.touch.Event}\n */\ngws.touch.TapEvent \x3d function(rawEvent, target, x, y) {\n  gws.touch.TapEvent.base(\n      this, \x27constructor\x27, gws.touch.Type.TAP, rawEvent, target);\n\n  /**\n   * The x coordinate of the tap in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.x \x3d x;\n\n  /**\n   * The y coordinate of the tap in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.y \x3d y;\n};\ngoog.inherits(gws.touch.TapEvent, gws.touch.Event);\n\n\n\n/**\n * Event for swipes.\n * @param {!Event} rawEvent The underlying browser event.\n * @param {!Element} target The event target.\n * @param {gws.touch.Direction} direction The direction of this swipe.\n * @param {number} touches The number of fingers touching the device.\n * @param {number} startX The x coordinate of the initial touch action.\n * @param {number} startY The y coordinate of the initial touch action.\n * @param {number} x The current x coordinate of the touch.\n * @param {number} y The current y coordinate of the touch.\n * @param {number} velocityX The velocity of the touch swipe action.\n *     Velocity is in number of pixels / millisecond.\n * @param {number} velocityY The velocity of the touch swipe action.\n *     Velocity is in number of pixels / millisecond.\n * @constructor\n * @extends {gws.touch.Event}\n */\ngws.touch.SwipeEvent \x3d function(\n    rawEvent, target, direction, touches, startX, startY, x, y, velocityX,\n    velocityY) {\n  gws.touch.SwipeEvent.base(\n      this, \x27constructor\x27, gws.touch.Type.SWIPE, rawEvent, target);\n\n  /**\n   * The direction of the swipe.  It will be a specific direction, one of LEFT,\n   * RIGHT, UP, DOWN, or ANY if unknown.\n   * @type {gws.touch.Direction}\n   */\n  this.direction \x3d direction;\n\n  /**\n   * The axis direction of the swipe -- HORIZONTAL, VERTICAL, or ANY.\n   * @type {gws.touch.Direction}\n   */\n  this.axisDirection \x3d this.getAxisDirection_(direction);\n\n  /**\n   * The number of fingers touching the device during this swipe.\n   * @type {number}\n   */\n  this.touches \x3d touches;\n\n  /**\n   * The x coordinate of the initial touch start in pixels from the top left of\n   * the screen.\n   * @type {number}\n   */\n  this.startX \x3d startX;\n  /**\n   * The y coordinate of the initial touch start in pixels from the top left of\n   * the screen.\n   * @type {number}\n   */\n  this.startY \x3d startY;\n\n  /**\n   * The x coordinate of the touch in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.x \x3d x;\n\n  /**\n   * The y coordinate of the touch in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.y \x3d y;\n\n  /**\n   * The speed in the x direction as measured in pixels per millisecond.\n   * @see {wireless.fx.DragVelocity}\n   * @type {number}\n   */\n  this.velocityX \x3d velocityX;\n\n  /**\n   * The speed in the y direction as measured in pixels per millisecond.\n   * @see {wireless.fx.DragVelocity}\n   * @type {number}\n   */\n  this.velocityY \x3d velocityY;\n};\ngoog.inherits(gws.touch.SwipeEvent, gws.touch.Event);\n\n\n/**\n * @return {boolean} True if the direction is along the vertical axis\n *      (UP, DOWN, or VERTICAL).\n */\ngws.touch.SwipeEvent.prototype.isVertical \x3d function() {\n  return this.direction % 2 \x3d\x3d 1;\n};\n\n\n/**\n * Given a direction, return the axis direction (vertical or horizontal) of that\n * direction.\n * @param {gws.touch.Direction} direction The direction.\n * @return {gws.touch.Direction} The axis direction.\n * @private\n */\ngws.touch.SwipeEvent.prototype.getAxisDirection_ \x3d function(direction) {\n  if (direction \x3d\x3d gws.touch.Direction.ANY) {\n    return direction;\n  }\n\n  return direction % 2 ? gws.touch.Direction.VERTICAL :\n                         gws.touch.Direction.HORIZONTAL;\n};\n\n\n\n/**\n * Event for pinches.\n * @param {!Event} rawEvent The underlying browser event.\n * @param {!Element} target The event target.\n * @param {number} scale The relative scale of the pinch.  The initial pinch\n *     width has a value of 1.0, smaller widths have values less than 1.0 (down\n *     to 0 when the fingers touch), larger widths have values greater than 1.0.\n * @param {number} rotation The delta rotation since the first pinch event of\n *     the gesture, in degrees, where clockwise is positive and\n *     counter-clockwise is negative.\n * @param {number} axis The axis of rotation in degrees between 0 and 360,\n *      clockwise starting at the x axis.\n * @param {number} x The current x coordinate representing the pinch (centered\n *     between pinch points).\n * @param {number} y The current y coordinate representing the pinch (centered\n *     between pinch points).\n * @constructor\n * @extends {gws.touch.Event}\n */\ngws.touch.PinchEvent \x3d function(rawEvent, target, scale, rotation, axis, x, y) {\n  gws.touch.PinchEvent.base(\n      this, \x27constructor\x27, gws.touch.Type.PINCH, rawEvent, target);\n\n  /**\n   * The relative scale of the pinch.  The initial pinch width has a value of\n   * 1.0, smaller widths have values less than 1.0 (down to 0 when the fingers\n   * touch), larger widths have values greater than 1.0.\n   * @type {number}\n   */\n  this.scale \x3d scale;\n\n  /**\n   * The delta rotation since the start of the gesture, in degrees, where\n   * clockwise is positive and counter-clockwise is negative.\n   * @type {number}\n   */\n  this.rotation \x3d rotation;\n\n  /**\n   * The axis of rotation in degrees between 0 and 360, clockwise starting at\n   * the x axis.\n   * @type {number}\n   */\n  this.axis \x3d axis;\n\n  /**\n   * The x coordinate at the center of the pinch in pixels from the top left of\n   * the screen.\n   * @type {number}\n   */\n  this.x \x3d x;\n\n  /**\n   * The y coordinate at the center of the pinch in pixels from the top left of\n   * the screen.\n   * @type {number}\n   */\n  this.y \x3d y;\n};\ngoog.inherits(gws.touch.PinchEvent, gws.touch.Event);\n\n\n\n/**\n * Event for touches.\n * @param {!gws.touch.Type} type The event type.\n * @param {!Event} rawEvent The underlying browser event.\n * @param {!Element} target The event target.\n * @param {number} touches The number of touch points associated with this\n *     event.\n * @param {number} x The current x coordinate of the touch.\n * @param {number} y The current y coordinate of the touch.\n * @constructor\n * @extends {gws.touch.Event}\n */\ngws.touch.TouchEvent \x3d function(type, rawEvent, target, touches, x, y) {\n  gws.touch.TouchEvent.base(this, \x27constructor\x27, type, rawEvent, target);\n\n  /**\n   * The number of touch points for the given touch event.\n   * @type {number}\n   */\n  this.touches \x3d touches;\n\n  /**\n   * The x coordinate of the touch in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.x \x3d x;\n\n  /**\n   * The y coordinate of the touch in pixels from the top left of the screen.\n   * @type {number}\n   */\n  this.y \x3d y;\n};\ngoog.inherits(gws.touch.TouchEvent, gws.touch.Event);\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/touch/base.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/math/line.js";
eval("// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview Represents a line in 2D space.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\ngoog.provide(\x27goog.math.Line\x27);\n\ngoog.require(\x27goog.math\x27);\ngoog.require(\x27goog.math.Coordinate\x27);\n\n\n\n/**\n * Object representing a line.\n * @param {number} x0 X coordinate of the start point.\n * @param {number} y0 Y coordinate of the start point.\n * @param {number} x1 X coordinate of the end point.\n * @param {number} y1 Y coordinate of the end point.\n * @struct\n * @constructor\n * @final\n */\ngoog.math.Line \x3d function(x0, y0, x1, y1) {\n  /**\n   * X coordinate of the first point.\n   * @type {number}\n   */\n  this.x0 \x3d x0;\n\n  /**\n   * Y coordinate of the first point.\n   * @type {number}\n   */\n  this.y0 \x3d y0;\n\n  /**\n   * X coordinate of the first control point.\n   * @type {number}\n   */\n  this.x1 \x3d x1;\n\n  /**\n   * Y coordinate of the first control point.\n   * @type {number}\n   */\n  this.y1 \x3d y1;\n};\n\n\n/**\n * @return {!goog.math.Line} A copy of this line.\n */\ngoog.math.Line.prototype.clone \x3d function() {\n  return new goog.math.Line(this.x0, this.y0, this.x1, this.y1);\n};\n\n\n/**\n * Tests whether the given line is exactly the same as this one.\n * @param {goog.math.Line} other The other line.\n * @return {boolean} Whether the given line is the same as this one.\n */\ngoog.math.Line.prototype.equals \x3d function(other) {\n  return this.x0 \x3d\x3d other.x0 \x26\x26 this.y0 \x3d\x3d other.y0 \x26\x26 this.x1 \x3d\x3d other.x1 \x26\x26\n      this.y1 \x3d\x3d other.y1;\n};\n\n\n/**\n * @return {number} The squared length of the line segment used to define the\n *     line.\n */\ngoog.math.Line.prototype.getSegmentLengthSquared \x3d function() {\n  var xdist \x3d this.x1 - this.x0;\n  var ydist \x3d this.y1 - this.y0;\n  return xdist * xdist + ydist * ydist;\n};\n\n\n/**\n * @return {number} The length of the line segment used to define the line.\n */\ngoog.math.Line.prototype.getSegmentLength \x3d function() {\n  return Math.sqrt(this.getSegmentLengthSquared());\n};\n\n\n/**\n * Computes the interpolation parameter for the point on the line closest to\n * a given point.\n * @param {number|goog.math.Coordinate} x The x coordinate of the point, or\n *     a coordinate object.\n * @param {number\x3d} opt_y The y coordinate of the point - required if x is a\n *     number, ignored if x is a goog.math.Coordinate.\n * @return {number} The interpolation parameter of the point on the line\n *     closest to the given point.\n * @private\n */\ngoog.math.Line.prototype.getClosestLinearInterpolation_ \x3d function(x, opt_y) {\n  var y;\n  if (x instanceof goog.math.Coordinate) {\n    y \x3d x.y;\n    x \x3d x.x;\n  } else {\n    y \x3d opt_y;\n  }\n\n  var x0 \x3d this.x0;\n  var y0 \x3d this.y0;\n\n  var xChange \x3d this.x1 - x0;\n  var yChange \x3d this.y1 - y0;\n\n  return ((Number(x) - x0) * xChange + (Number(y) - y0) * yChange) /\n      this.getSegmentLengthSquared();\n};\n\n\n/**\n * Returns the point on the line segment proportional to t, where for t \x3d 0 we\n * return the starting point and for t \x3d 1 we return the end point.  For t \x3c 0\n * or t \x3e 1 we extrapolate along the line defined by the line segment.\n * @param {number} t The interpolation parameter along the line segment.\n * @return {!goog.math.Coordinate} The point on the line segment at t.\n */\ngoog.math.Line.prototype.getInterpolatedPoint \x3d function(t) {\n  return new goog.math.Coordinate(\n      goog.math.lerp(this.x0, this.x1, t), goog.math.lerp(this.y0, this.y1, t));\n};\n\n\n/**\n * Computes the point on the line closest to a given point.  Note that a line\n * in this case is defined as the infinite line going through the start and end\n * points.  To find the closest point on the line segment itself see\n * {@see #getClosestSegmentPoint}.\n * @param {number|goog.math.Coordinate} x The x coordinate of the point, or\n *     a coordinate object.\n * @param {number\x3d} opt_y The y coordinate of the point - required if x is a\n *     number, ignored if x is a goog.math.Coordinate.\n * @return {!goog.math.Coordinate} The point on the line closest to the given\n *     point.\n */\ngoog.math.Line.prototype.getClosestPoint \x3d function(x, opt_y) {\n  return this.getInterpolatedPoint(\n      this.getClosestLinearInterpolation_(x, opt_y));\n};\n\n\n/**\n * Computes the point on the line segment closest to a given point.\n * @param {number|goog.math.Coordinate} x The x coordinate of the point, or\n *     a coordinate object.\n * @param {number\x3d} opt_y The y coordinate of the point - required if x is a\n *     number, ignored if x is a goog.math.Coordinate.\n * @return {!goog.math.Coordinate} The point on the line segment closest to the\n *     given point.\n */\ngoog.math.Line.prototype.getClosestSegmentPoint \x3d function(x, opt_y) {\n  return this.getInterpolatedPoint(\n      goog.math.clamp(this.getClosestLinearInterpolation_(x, opt_y), 0, 1));\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/math/line.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/touch/touchimpl.js";
eval("// Copyright 2012 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview The delegate base, which defines the function headers for all\n * touch event implementations.\n * Do not use directly -- instead use the static functions in gws.touch.\n * @author mgaiman@google.com (Michael Gaiman)\n */\n\ngoog.provide(\x27gws.touch.TouchImpl\x27);\n\ngoog.require(\x27fava.delegate.Delegate\x27);\ngoog.require(\x27goog.math.Line\x27);\ngoog.require(\x27gws.touch.Direction\x27);\n\n\n\n/**\n * Delegate base for the various event touch implementations.\n * @extends {fava.delegate.Delegate}\n * @param {gws.touch.Touch} delegator The delegator.\n * @constructor\n */\ngws.touch.TouchImpl \x3d function(delegator) {\n  gws.touch.TouchImpl.base(this, \x27constructor\x27, delegator);\n};\ngoog.inherits(gws.touch.TouchImpl, fava.delegate.Delegate);\n\n\n/**\n * Used instead of infinity when a pinch gesture scales from nothing to\n * something.\n * @type {number}\n * @protected\n */\ngws.touch.TouchImpl.LARGE_SCALE \x3d 10;\n\n\n/**\n * Default delegate method to use in case no delegate mod is registered.\n * @return {string}\n * @private\n */\ngws.touch.TouchImpl.DEFAULT_METHOD_ \x3d function() {\n  return \x27DEFAULT_ID\x27;\n};\n\n\n/**\n * Listens for single taps on the target element.\n * @param {!Element} target The target element.\n * @param {function((!gws.touch.TapEvent|!KeyboardEvent))} callback Called when\n * the user taps on the target element. Falls back to clicks or ENTER keydowns.\n * @param {?boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @param {?boolean\x3d} opt_dontPropagateTouch Whether the touch events should\n *     stop propagating.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.TouchImpl.prototype.addTapListener \x3d\n    fava.delegate.Delegate.callFirst(gws.touch.TouchImpl.DEFAULT_METHOD_);\n\n\n/**\n * Listens for swipes on the target element.\n * @param {!Element} target The target element.\n * @param {function(!gws.touch.SwipeEvent)} callback Called continuously as the\n *     user swipes on the target element.\n * @param {?function(!gws.touch.SwipeEvent)\x3d} opt_startCallback Called once when\n *     the user begins a swipe on the target element, ie on touch start.\n * @param {?function(!gws.touch.SwipeEvent)\x3d} opt_endCallback Called once when\n *     the user ends a swipe action on the target element, ie on touch end.\n * @param {gws.touch.Direction\x3d} opt_direction If provided, limit callbacks to\n *     only occur in that direction.  If defined together with a start callback,\n *     the start callback may still be called as the direction will be unknown\n *     at that point.\n * @param {number\x3d} opt_numTouches The number of fingers down for the swipe.\n *     The default is 1. Use gws.touch.Touches.ANY to signify any number of\n *     touches is acceptable.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.TouchImpl.prototype.addSwipeListener \x3d\n    fava.delegate.Delegate.callFirst(gws.touch.TouchImpl.DEFAULT_METHOD_);\n\n\n/**\n * Listens for pinch gestures on the target element.\n * @param {!Element} target The target element.\n * @param {function(!gws.touch.PinchEvent)} callback Called continuously as the\n *     user pinches on the target element.\n * @param {?function(!gws.touch.PinchEvent)\x3d} opt_startCallback Called once when\n *     the user begins a pinch action on the target element.\n * @param {?function(!gws.touch.PinchEvent)\x3d} opt_endCallback Called once when\n *     the user ends a pinch action on the target element.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.TouchImpl.prototype.addPinchListener \x3d\n    fava.delegate.Delegate.callFirst(gws.touch.TouchImpl.DEFAULT_METHOD_);\n\n\n/**\n * Listens for lower-level touchstart/move/end events (or the local platform\n * equivalents).\n * @param {!Element} target The target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_callback Called continuously\n *     as the user touchmoves on the target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_startCallback Called once when\n *     the user begins a pinches on the target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_endCallback Called once when\n *     the user ends a pinches action on the target element.\n * @param {number\x3d} opt_numTouches The number of fingers down for the touch.\n *     The default is 1. Use gws.touch.Touches.ANY to signify any number of\n *     touches is acceptable.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @param {!EventListenerOptions|boolean\x3d} opt_options An options object or a\n *     boolean for the capture option. If not specified, defaults to false.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.TouchImpl.prototype.addTouchListener \x3d\n    fava.delegate.Delegate.callFirst(gws.touch.TouchImpl.DEFAULT_METHOD_);\n\n\n/**\n * Gets the current direction given the velocity of the touch.\n * @param {goog.math.Coordinate} v The velocity in the x and y axes.\n * @return {gws.touch.Direction} The predominant direction.\n * @protected\n */\ngws.touch.TouchImpl.getDirectionFromVelocity \x3d function(v) {\n  if (!v || (v.x \x3d\x3d 0 \x26\x26 v.y \x3d\x3d 0)) {\n    return gws.touch.Direction.ANY;\n  }\n\n  var ax \x3d Math.abs(v.x);\n  var ay \x3d Math.abs(v.y);\n\n  if (ax \x3e ay) {\n    if (v.x \x3e 0) {\n      return gws.touch.Direction.RIGHT;\n    } else {\n      return gws.touch.Direction.LEFT;\n    }\n  } else {\n    if (v.y \x3e 0) {\n      return gws.touch.Direction.DOWN;\n    } else {\n      return gws.touch.Direction.UP;\n    }\n  }\n};\n\n\n/**\n * Tests to see if the testDirection is a valid direction using validDirection\n * as a guide.  If validDirection is an axis direction (horizontal or vertical)\n * then testDirection just needs to be along that direction.  If validDirection\n * is an axis direction then testDirection must match that direction.\n * @param {gws.touch.Direction} testDirection The direction to test.\n * @param {gws.touch.Direction} validDirection The direction used to test\n *     testDirection as described above.\n * @return {boolean} True if valid, false otherwise.\n * @protected\n */\ngws.touch.TouchImpl.isValidDirection \x3d function(testDirection, validDirection) {\n  // All directions are valid with ANY.\n  if (validDirection \x3d\x3d gws.touch.Direction.ANY) {\n    return true;\n  }\n\n  // If the valid direction is an axis direction then we just care that\n  // current direction is along that axis (in either direction).\n  if (validDirection \x3c\x3d gws.touch.Direction.HORIZONTAL \x26\x26\n      testDirection % 2 \x3d\x3d validDirection % 2) {\n    return true;\n  }\n\n  // Otherwise, they must match.\n  return testDirection \x3d\x3d validDirection;\n};\n\n\n/**\n * Calculates the axis of rotation given two points.\n * @param {number} x1 The x coordinate of the first point.\n * @param {number} y1 The y coordinate of the first point.\n * @param {number} x2 The x coordinate of the second point.\n * @param {number} y2 The y coordinate of the second point.\n * @return {number} The axis of rotation in degrees between 0 and 360, clockwise\n *     starting at the x axis.\n * @protected\n */\ngws.touch.TouchImpl.calculateAxis \x3d function(x1, y1, x2, y2) {\n  // Calculates the axis from -180 to 180.\n  var axis \x3d Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n  // Reset it to be between 0 and 360.\n  if (axis \x3c 0) {\n    axis \x3d 360 + axis;\n  }\n  return axis;\n};\n\n\n/**\n * Calculates the change between two angles.\n * @param {number} a1 The first angle, in degrees between 0 and 360.\n * @param {number} a2 The second angle, in degrees between 0 and 360.\n * @return {number} The delta rotation in degrees, where clockwise is positive\n * and counter-clockwise is negative.\n * @protected\n */\ngws.touch.TouchImpl.calculateAngleDelta \x3d function(a1, a2) {\n  return a2 - a1;\n};\n\n\n/**\n * Given two points, find the point that centers them.\n * @param {number} x1 The x coordinate of the first point.\n * @param {number} y1 The y coordinate of the first point.\n * @param {number} x2 The x coordinate of the second point.\n * @param {number} y2 The y coordinate of the second point.\n * @return {!goog.math.Coordinate} The center point.\n * @protected\n */\ngws.touch.TouchImpl.calculateCenterPoint \x3d function(x1, y1, x2, y2) {\n  return new goog.math.Line(x1, y1, x2, y2).getInterpolatedPoint(.5);\n};\n\n\n/**\n * Given two sets of points, calculates the amount that the second set has\n * scaled from the first set.\n * @param {number} x1 The x coordinate of the first point.\n * @param {number} y1 The y coordinate of the first point.\n * @param {number} x2 The x coordinate of the second point.\n * @param {number} y2 The y coordinate of the second point.\n * @param {number} x3 The x coordinate of the third point.\n * @param {number} y3 The y coordinate of the third point.\n * @param {number} x4 The x coordinate of the fourth point.\n * @param {number} y4 The y coordinate of the fourth point.\n * @return {number} The scale factor as a positive number.\n * @protected\n */\ngws.touch.TouchImpl.calculateScale \x3d function(x1, y1, x2, y2, x3, y3, x4, y4) {\n  var scale \x3d new goog.math.Line(x3, y3, x4, y4).getSegmentLength() /\n      new goog.math.Line(x1, y1, x2, y2).getSegmentLength();\n  return isNaN(scale) ?\n      1 :\n      isFinite(scale) ? scale : gws.touch.TouchImpl.LARGE_SCALE;\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/touch/touchimpl.js\n");

$googDebugFname=undefined;
var $googDebugFname="googledata/html/templates/gws/head/xjs/touch/touch.js";
eval("// Copyright 2012 Google Inc.  All Rights Reserved.\n\n/**\n * @fileoverview Support touch gestures via underlying iOS-like touch and\n * gesture APIs as well as MSPointer-like touch and gesture APIs.\n * Use the gws.touch static functions. (They will delegate to the platform-\n * appropriate *Impl class.) Do not use the *Impl classes directly.\n * @author mgaiman@google.com (Michael Gaiman)\n */\n\ngoog.provide(\x27gws.touch\x27);\ngoog.provide(\x27gws.touch.Touch\x27);\n\ngoog.require(\x27fava.delegate.Delegate\x27);\ngoog.require(\x27fava.delegate.Delegator\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27gws.touch.TouchImpl\x27);\ngoog.require(\x27gws.touch.eventRegistry\x27);\n\n\n/**\n * Delegator for gws.touch implementations. The correct implementation of the\n * gws.touch library registers itself with this fava delegator, which delegates\n * calls from gws.touch functions to the registered implementation.\n * @constructor\n */\ngws.touch.Touch \x3d function() {\n  /**\n   * The delegate will be initialized by makeDelegator().\n   * @private {!gws.touch.TouchImpl}\n   */\n  this.delegate_;\n\n  fava.delegate.Delegator.makeDelegator(this);\n};\nfava.delegate.Delegate.setBase(gws.touch.TouchImpl, gws.touch.Touch);\ngoog.addSingletonGetter(gws.touch.Touch);\n\n\n/**\n * Accessor to delegate_.\n * @return {!gws.touch.TouchImpl} The delegate, which contains the implemented\n *     versions of gws.touch.TouchImpl\x27s methods.\n * @private\n */\ngws.touch.Touch.prototype.getDelegate_ \x3d function() {\n  return goog.asserts.assert(this.delegate_);\n};\n\n\n/**\n * Listens for single taps on the target element.\n * @param {!Element} target The target element.\n * @param {function((!gws.touch.TapEvent|!KeyboardEvent))} callback Called when\n *     the user taps on the target element. Falls back to clicks or ENTER\n *     keydowns.\n * @param {?boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @param {?boolean\x3d} opt_dontPropagateTouch Whether the touch events should\n *     stop propagating.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.addTapListener \x3d function(\n    target, callback, opt_dontPreventGhostClicks, opt_dontPropagateTouch) {\n  // TODO(rshearer): IE10/Windows8 devices are likely to be using PointerImpl\n  // *and* a keyboard, so create a KeyboardImpl that MouseTouchImpl and\n  // PointerTouchImpl extend from.\n  return gws.touch.getTouchImpl_().addTapListener(\n      target, callback, opt_dontPreventGhostClicks, opt_dontPropagateTouch);\n};\n\n\n/**\n * Listens for swipes on the target element.\n * @param {!Element} target The target element.\n * @param {function(!gws.touch.SwipeEvent)} callback Called continuously as the\n *     user swipes on the target element.\n * @param {?function(!gws.touch.SwipeEvent)\x3d} opt_startCallback Called once when\n *     the user begins a swipe on the target element, ie on touch start.\n * @param {?function(!gws.touch.SwipeEvent)\x3d} opt_endCallback Called once when\n *     the user ends a swipe action on the target element, ie on touch end.\n * @param {gws.touch.Direction\x3d} opt_direction If provided, limit callbacks to\n *     only occur in that direction.  If defined together with a start callback,\n *     the start callback may still be called as the direction will be unknown\n *     at that point.\n * @param {number\x3d} opt_numTouches The number of fingers down for the swipe.\n *     The default is 1. Use gws.touch.Touches.ANY to signify any number of\n *     touches is acceptable.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.addSwipeListener \x3d function(\n    target, callback, opt_startCallback, opt_endCallback, opt_direction,\n    opt_numTouches, opt_dontPreventGhostClicks) {\n  return gws.touch.getTouchImpl_().addSwipeListener(\n      target, callback, opt_startCallback, opt_endCallback, opt_direction,\n      opt_numTouches, opt_dontPreventGhostClicks);\n};\n\n\n/**\n * Listens for pinch gestures on the target element.\n * @param {!Element} target The target element.\n * @param {function(!gws.touch.PinchEvent)} callback Called continuously as the\n *     user pinches on the target element.\n * @param {?function(!gws.touch.PinchEvent)\x3d} opt_startCallback Called once when\n *     the user begins a pinch action on the target element.\n * @param {?function(!gws.touch.PinchEvent)\x3d} opt_endCallback Called once when\n *     the user ends a pinch action on the target element.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.addPinchListener \x3d function(\n    target, callback, opt_startCallback, opt_endCallback,\n    opt_dontPreventGhostClicks) {\n  return gws.touch.getTouchImpl_().addPinchListener(\n      target, callback, opt_startCallback, opt_endCallback,\n      opt_dontPreventGhostClicks);\n};\n\n\n/**\n * Listens for lower-level touchstart/move/end events (or the local platform\n * equivalents).\n * @param {!Element} target The target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_callback Called continuously\n *     as the user touchmoves on the target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_startCallback Called once when\n *     the user begins a pinches on the target element.\n * @param {?function(!gws.touch.TouchEvent)\x3d} opt_endCallback Called once when\n *     the user ends a pinches action on the target element.\n * @param {number\x3d} opt_numTouches The number of fingers down for the touch.\n *     The default is 1. Use gws.touch.Touches.ANY to signify any number of\n *     touches is acceptable.\n * @param {boolean\x3d} opt_dontPreventGhostClicks Whether click events triggered\n *     by the touch events should not be cancelled.\n * @param {!EventListenerOptions|boolean\x3d} opt_options An options object or a\n *     boolean for the capture option. If not specified, defaults to false.\n * @return {string} The identifier for the event listener.  Can be\n *     provided to gws.touch.removeListener to remove the event listener.\n */\ngws.touch.addTouchListener \x3d function(\n    target, opt_callback, opt_startCallback, opt_endCallback, opt_numTouches,\n    opt_dontPreventGhostClicks, opt_options) {\n  return gws.touch.getTouchImpl_().addTouchListener(\n      target, opt_callback, opt_startCallback, opt_endCallback, opt_numTouches,\n      opt_dontPreventGhostClicks, opt_options);\n};\n\n\n/**\n * Removes the event listener and performs associated cleanup.\n * @param {string} listenerId The id returned from one of the\n *     gws.touch.add*Listener methods.\n * @param {!EventListenerOptions|boolean\x3d} options An options object or a\n *     boolean for the capture option. If not specified, defaults to false.\n */\ngws.touch.removeListener \x3d function(listenerId, options \x3d false) {\n  gws.touch.eventRegistry.removeListener(listenerId, options);\n};\n\n\n/**\n * Removes all active event listeners (registered via gws.touch) from the target\n * element provided.\n * @param {!Element} target The element to remove listeners from.\n */\ngws.touch.removeListenersByTarget \x3d function(target) {\n  gws.touch.eventRegistry.removeListenersByTarget(target);\n};\n\n\n/**\n * Performs internal cleanup but doesn\x27t actually remove listeners\n * associated with the target.  This is useful if the target has been completely\n * removed from the DOM and this is the only remaining live reference to it.\n * This is not needed if gws.touch.removeAllListeners(target) is called.\n * @param {!Element} target The target to cleanup.\n */\ngws.touch.quickRemove \x3d function(target) {\n  gws.touch.eventRegistry.quickRemove(target);\n};\n\n\n/**\n * Removes all active event listeners (registered via gws.touch).\n * This should be done on soft page transitions, but isn\x27t needed on hard\n * transitions.\n */\ngws.touch.removeAllListeners \x3d function() {\n  gws.touch.eventRegistry.removeAllListeners();\n};\n\n\n/**\n * Static method for accessing the delegate, so that we can call the correct\n * implementation code for this device.\n * @return {!gws.touch.TouchImpl} The touch implementation to use.\n * @private\n */\ngws.touch.getTouchImpl_ \x3d function() {\n  return gws.touch.Touch.getInstance().getDelegate_();\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/touch/touch.js\n");

$googDebugFname=undefined;

var $googDebugFname="googledata/html/templates/gws/head/xjs/touch/iostouchimpl.js";
eval("// Copyright 2012 Google Inc. All Rights Reserved.\n\n/**\n * Implements the API provided publically in gws.touch for devices that support\n * iOS-style touch events.\n * Do not use this class directly -- instead use the static functions defined\n * in gws.touch.\n * @modName {iosTouchLib}\n * @mods {gws.touch.TouchImpl}\n * @author mgaiman@google.com (Michael Gaiman)\n */\n\ngoog.provide(\x27gws.touch.IosTouchImpl\x27);\n\ngoog.require(\x27fava.delegate.Delegate\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27gws.touch.Direction\x27);\ngoog.require(\x27gws.touch.PinchEvent\x27);\ngoog.require(\x27gws.touch.SwipeEvent\x27);\ngoog.require(\x27gws.touch.TapEvent\x27);\ngoog.require(\x27gws.touch.TouchEvent\x27);\ngoog.require(\x27gws.touch.TouchImpl\x27);\ngoog.require(\x27gws.touch.Touches\x27);\ngoog.require(\x27gws.touch.Type\x27);\ngoog.require(\x27gws.touch.eventRegistry\x27);\ngoog.require(\x27wireless.events.clickbuster\x27);\ngoog.require(\x27wireless.fx.DragVelocity\x27);\ngoog.require(\x27wireless.ui.FastButton\x27);\n\n\n\n/**\n * @constructor\n * @param {gws.touch.Touch} delegator The delegator.\n * @extends {gws.touch.TouchImpl}\n */\ngws.touch.IosTouchImpl \x3d function(delegator) {\n  gws.touch.IosTouchImpl.base(this, \x27constructor\x27, delegator);\n};\ngoog.inherits(gws.touch.IosTouchImpl, gws.touch.TouchImpl);\nfava.delegate.Delegate.register(gws.touch.IosTouchImpl, gws.touch.TouchImpl);\n\n\n/**\n * @override\n */\ngws.touch.IosTouchImpl.prototype.addTapListener \x3d function(\n    target, callback, opt_dontPreventGhostClicks, opt_dontPropagateTouch) {\n  // Punt out to the wireless FastButton.  It has a ton of domain logic for this\n  // that seems wasteful to duplicate here.\n\n  var innerCallback \x3d function(e) {\n    var x, y;\n    if (e.touches \x26\x26 e.touches.length) {\n      // Standard touchstart event.\n      x \x3d e.touches[0].screenX;\n      y \x3d e.touches[0].screenY;\n    } else if (e.changedTouches \x26\x26 e.changedTouches.length) {\n      // For when FastButton passes a touchend event.\n      x \x3d e.changedTouches[0].screenX;\n      y \x3d e.changedTouches[0].screenY;\n      if (!opt_dontPreventGhostClicks) {\n        wireless.events.clickbuster.preventGhostClick(x, y);\n      }\n    } else {\n      // FastButton will occasionally pass the actual click event back.\n      x \x3d e.screenX;\n      y \x3d e.screenY;\n    }\n    callback(new gws.touch.TapEvent(e, target, x, y));\n  };\n\n  var fastButton \x3d new wireless.ui.FastButton(\n      target, innerCallback, undefined, !opt_dontPropagateTouch);\n\n  return gws.touch.eventRegistry.put(\n      target, [goog.bind(fastButton.dispose, fastButton)]);\n};\n\n\n/**\n * @override\n */\ngws.touch.IosTouchImpl.prototype.addSwipeListener \x3d function(\n    target, callback, opt_startCallback, opt_endCallback, opt_direction,\n    opt_numTouches, opt_dontPreventGhostClicks) {\n  var direction \x3d opt_direction || gws.touch.Direction.ANY;\n  var numTouches \x3d opt_numTouches || 1;\n  var startX, startY, lastX, lastY, currentDirection;\n  var dragVelocity \x3d new wireless.fx.DragVelocity();\n\n  var touchstartCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.touches);\n    startX \x3d lastX \x3d e.touches[0].screenX;\n    startY \x3d lastY \x3d e.touches[0].screenY;\n    lastX \x3d startX;\n    lastY \x3d startY;\n    currentDirection \x3d gws.touch.Direction.ANY;\n    dragVelocity.handleStart(startX, startY, e.timeStamp);\n\n    if (opt_startCallback) {\n      opt_startCallback(new gws.touch.SwipeEvent(\n          e, target, gws.touch.Direction.ANY, e.touches.length, startX, startY,\n          lastX, lastY, 0, 0));\n    }\n  };\n\n  var touchmoveCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.touches);\n    lastX \x3d e.touches[0].screenX;\n    lastY \x3d e.touches[0].screenY;\n    var v \x3d\n        goog.asserts.assert(dragVelocity.handleMove(lastX, lastY, e.timeStamp));\n    currentDirection \x3d gws.touch.TouchImpl.getDirectionFromVelocity(v);\n    if (!gws.touch.TouchImpl.isValidDirection(currentDirection, direction)) {\n      return;\n    }\n\n    callback(new gws.touch.SwipeEvent(\n        e, target, currentDirection, e.touches.length, startX, startY, lastX,\n        lastY, v.x, v.y));\n  };\n\n  // TODO(mgaiman): Make this more gracefully handle lost end events.\n  var touchendCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.changedTouches);\n    // Reuse the direction from the last move event.\n    if (!gws.touch.TouchImpl.isValidDirection(currentDirection, direction)) {\n      return;\n    }\n\n    var v \x3d dragVelocity.handleEnd(lastX, lastY, e.timeStamp);\n    if (opt_endCallback) {\n      opt_endCallback(new gws.touch.SwipeEvent(\n          e, target, currentDirection, e.changedTouches.length, startX, startY,\n          e.changedTouches[0].screenX, e.changedTouches[0].screenY, v ? v.x : 0,\n          v ? v.y : 0));\n    }\n    if (!opt_dontPreventGhostClicks) {\n      wireless.events.clickbuster.preventGhostClick(startX, startY);\n    }\n  };\n\n  var listeners \x3d [\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchstart\x27, touchstartCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchmove\x27, touchmoveCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchend\x27, touchendCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchcancel\x27, touchendCallback)\n  ];\n\n  return gws.touch.eventRegistry.put(target, listeners);\n};\n\n\n/**\n * @override\n */\ngws.touch.IosTouchImpl.prototype.addPinchListener \x3d function(\n    target, callback, opt_startCallback, opt_endCallback,\n    opt_dontPreventGhostClicks) {\n  var startX1, startY1, startX2, startY2, startAxis, lastAxis, lastDeltaAngle,\n      lastScale, lastCenter;\n  var gestureInProgress \x3d false;\n  var touchstartCallback \x3d function(/** !Event */ e) {\n    goog.asserts.assert(e.touches);\n    if (!e.touches || e.touches.length !\x3d 2) {\n      return;\n    }\n    gestureInProgress \x3d true;\n\n    startX1 \x3d e.touches[0].screenX;\n    startY1 \x3d e.touches[0].screenY;\n    startX2 \x3d e.touches[1].screenX;\n    startY2 \x3d e.touches[1].screenY;\n    startAxis \x3d lastAxis \x3d\n        gws.touch.TouchImpl.calculateAxis(startX1, startY1, startX2, startY2);\n    lastCenter \x3d gws.touch.TouchImpl.calculateCenterPoint(\n        startX1, startY1, startX2, startY2);\n    lastScale \x3d 1;\n    lastDeltaAngle \x3d 0;\n    if (opt_startCallback) {\n      opt_startCallback(new gws.touch.PinchEvent(\n          e, target, lastScale, lastDeltaAngle, lastAxis, lastCenter.x,\n          lastCenter.y));\n    }\n  };\n\n  var touchmoveCallback \x3d function(/** !Event */ e) {\n    goog.asserts.assert(e.touches);\n    if (!e.touches || e.touches.length !\x3d 2) {\n      return;\n    }\n\n    var x1 \x3d e.touches[0].screenX;\n    var y1 \x3d e.touches[0].screenY;\n    var x2 \x3d e.touches[1].screenX;\n    var y2 \x3d e.touches[1].screenY;\n\n    lastScale \x3d gws.touch.TouchImpl.calculateScale(\n        startX1, startY1, startX2, startY2, x1, y1, x2, y2);\n    lastAxis \x3d gws.touch.TouchImpl.calculateAxis(x1, y1, x2, y2);\n    lastDeltaAngle \x3d\n        gws.touch.TouchImpl.calculateAngleDelta(startAxis, lastAxis);\n    lastCenter \x3d gws.touch.TouchImpl.calculateCenterPoint(x1, y1, x2, y2);\n    callback(new gws.touch.PinchEvent(\n        e, target, lastScale, lastDeltaAngle, lastAxis, lastCenter.x,\n        lastCenter.y));\n  };\n\n  // TODO(mgaiman): Make this more gracefully handle lost end events.\n  var touchendCallback \x3d function(/** !Event */ e) {\n    goog.asserts.assert(e.touches);\n    if (!e.touches || e.touches.length || !gestureInProgress) {\n      return;\n    }\n    gestureInProgress \x3d false;\n    if (opt_endCallback) {\n      // Given that we only get to this point where there are no more fingers\n      // on the screen, and as such we no longer have touch points, we reuse\n      // the previous values (from either touchmove or touchstart).\n      opt_endCallback(new gws.touch.PinchEvent(\n          e, target, lastScale, lastDeltaAngle, lastAxis, lastCenter.x,\n          lastCenter.y));\n    }\n  };\n\n  var listeners \x3d [\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchstart\x27, touchstartCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchmove\x27, touchmoveCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchend\x27, touchendCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchcancel\x27, touchendCallback)\n  ];\n\n  return gws.touch.eventRegistry.put(target, listeners);\n};\n\n\n/**\n * @override\n */\ngws.touch.IosTouchImpl.prototype.addTouchListener \x3d function(\n    target, opt_callback, opt_startCallback, opt_endCallback, opt_numTouches,\n    opt_dontPreventGhostClicks, opt_options) {\n  var numTouches \x3d opt_numTouches || 1;\n  var startX, startY;\n  var touchstartCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.touches);\n    startX \x3d e.touches[0].screenX;\n    startY \x3d e.touches[0].screenY;\n\n    if (opt_startCallback) {\n      opt_startCallback(new gws.touch.TouchEvent(\n          gws.touch.Type.TOUCH_START, e, target, e.touches.length, startX,\n          startY));\n    }\n  };\n\n  var touchmoveCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.touches);\n    if (opt_callback) {\n      opt_callback(new gws.touch.TouchEvent(\n          gws.touch.Type.TOUCH_MOVE, e, target, e.touches.length,\n          e.touches[0].screenX, e.touches[0].screenY));\n    }\n  };\n\n  var touchendCallback \x3d function(/** !Event */ e) {\n    if (!gws.touch.IosTouchImpl.eventHasValidTouchCount_(\n            /** @type {!TouchEvent} */ (e), numTouches)) {\n      return;\n    }\n\n    goog.asserts.assert(e.changedTouches);\n    if (opt_endCallback) {\n      opt_endCallback(new gws.touch.TouchEvent(\n          gws.touch.Type.TOUCH_END, e, target, e.changedTouches.length,\n          e.changedTouches[0].screenX, e.changedTouches[0].screenY));\n    }\n    if (!opt_dontPreventGhostClicks) {\n      wireless.events.clickbuster.preventGhostClick(startX, startY);\n    }\n  };\n\n  var listeners \x3d [\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchstart\x27, touchstartCallback, opt_options),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchmove\x27, touchmoveCallback, opt_options),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchend\x27, touchendCallback),\n    gws.touch.eventRegistry.addEventListener(\n        target, \x27touchcancel\x27, touchendCallback)\n  ];\n\n  return gws.touch.eventRegistry.put(target, listeners);\n};\n\n\n/**\n * Ensure the event has the right number of touch points.\n * @param {!TouchEvent} e The touch event.\n * @param {number} numTouches The number of expected touches.\n *     gws.touch.Touches.ANY for any.\n * @return {boolean} True if it is valid, false otherwise.\n * @private\n */\ngws.touch.IosTouchImpl.eventHasValidTouchCount_ \x3d function(e, numTouches) {\n  return numTouches \x3d\x3d gws.touch.Touches.ANY ||\n      goog.asserts.assert(e.touches).length \x3d\x3d numTouches ||\n      // For touchend, check e.changedTouches instead.\n      (goog.asserts.assert(e.touches).length \x3d\x3d 0 \x26\x26\n       goog.asserts.assert(e.changedTouches).length \x3d\x3d numTouches);\n};\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/touch/iostouchimpl.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy8l');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy8l');

}catch(e){_DumpException(e)}
/* _Module_:sydt */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sydt');
var $googDebugFname="javascript/closure/html/sanitizer/attributewhitelist.js";
eval("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview Contains the attribute whitelists for use in the Html\n * sanitizer.\n */\n\ngoog.provide(\x27goog.html.sanitizer.AttributeSanitizedWhitelist\x27);\ngoog.provide(\x27goog.html.sanitizer.AttributeWhitelist\x27);\n\n\n/**\n * A whitelist for attributes that are always safe and allowed by default.\n * The sanitizer only applies whitespace trimming to these.\n * @const @dict {boolean}\n */\ngoog.html.sanitizer.AttributeWhitelist \x3d {\n  \x27* ARIA-CHECKED\x27: true,\n  \x27* ARIA-COLCOUNT\x27: true,\n  \x27* ARIA-COLINDEX\x27: true,\n  \x27* ARIA-DESCRIBEDBY\x27: true,\n  \x27* ARIA-DISABLED\x27: true,\n  \x27* ARIA-LABEL\x27: true,\n  \x27* ARIA-LABELLEDBY\x27: true,\n  \x27* ARIA-READONLY\x27: true,\n  \x27* ARIA-REQUIRED\x27: true,\n  \x27* ARIA-ROWCOUNT\x27: true,\n  \x27* ARIA-ROWINDEX\x27: true,\n  \x27* ARIA-SELECTED\x27: true,\n  \x27* ABBR\x27: true,\n  \x27* ACCEPT\x27: true,\n  \x27* ACCESSKEY\x27: true,\n  \x27* ALIGN\x27: true,\n  \x27* ALT\x27: true,\n  \x27* AUTOCOMPLETE\x27: true,\n  \x27* AXIS\x27: true,\n  \x27* BGCOLOR\x27: true,\n  \x27* BORDER\x27: true,\n  \x27* CELLPADDING\x27: true,\n  \x27* CELLSPACING\x27: true,\n  \x27* CHAROFF\x27: true,\n  \x27* CHAR\x27: true,\n  \x27* CHECKED\x27: true,\n  \x27* CLEAR\x27: true,\n  \x27* COLOR\x27: true,\n  \x27* COLSPAN\x27: true,\n  \x27* COLS\x27: true,\n  \x27* COMPACT\x27: true,\n  \x27* COORDS\x27: true,\n  \x27* DATETIME\x27: true,\n  \x27* DIR\x27: true,\n  \x27* DISABLED\x27: true,\n  \x27* ENCTYPE\x27: true,\n  \x27* FACE\x27: true,\n  \x27* FRAME\x27: true,\n  \x27* HEIGHT\x27: true,\n  \x27* HREFLANG\x27: true,\n  \x27* HSPACE\x27: true,\n  \x27* ISMAP\x27: true,\n  \x27* LABEL\x27: true,\n  \x27* LANG\x27: true,\n  \x27* MAXLENGTH\x27: true,\n  \x27* METHOD\x27: true,\n  \x27* MULTIPLE\x27: true,\n  \x27* NOHREF\x27: true,\n  \x27* NOSHADE\x27: true,\n  \x27* NOWRAP\x27: true,\n  \x27* READONLY\x27: true,\n  \x27* REL\x27: true,\n  \x27* REV\x27: true,\n  \x27* ROLE\x27: true,\n  \x27* ROWSPAN\x27: true,\n  \x27* ROWS\x27: true,\n  \x27* RULES\x27: true,\n  \x27* SCOPE\x27: true,\n  \x27* SELECTED\x27: true,\n  \x27* SHAPE\x27: true,\n  \x27* SIZE\x27: true,\n  \x27* SPAN\x27: true,\n  \x27* START\x27: true,\n  \x27* SUMMARY\x27: true,\n  \x27* TABINDEX\x27: true,\n  \x27* TITLE\x27: true,\n  \x27* TYPE\x27: true,\n  \x27* VALIGN\x27: true,\n  \x27* VALUE\x27: true,\n  \x27* VSPACE\x27: true,\n  \x27* WIDTH\x27: true\n};\n\n/**\n * A whitelist for attributes that are not safe to allow unrestricted, but are\n * made safe by default policies installed by the sanitizer in\n * goog.html.sanitizer.HtmlSanitizer.Builder.prototype.build, and thus allowed\n * by default under these policies.\n * @const @dict {boolean}\n */\ngoog.html.sanitizer.AttributeSanitizedWhitelist \x3d {\n\n  // Attributes which can contain URL fragments\n  \x27* USEMAP\x27: true,\n  // Attributes which can contain URLs\n  \x27* ACTION\x27: true,\n  \x27* CITE\x27: true,\n  \x27* HREF\x27: true,\n  // Attributes which can cause network requests\n  \x27* LONGDESC\x27: true,\n  \x27* SRC\x27: true,\n  \x27LINK HREF\x27: true,\n  // Prevents clobbering\n  \x27* FOR\x27: true,\n  \x27* HEADERS\x27: true,\n  \x27* NAME\x27: true,\n  // Controls where a window is opened. Prevents tab-nabbing\n  \x27A TARGET\x27: true,\n\n  // Attributes which could cause UI redressing.\n  \x27* CLASS\x27: true,\n  \x27* ID\x27: true,\n\n  // CSS style can cause network requests and XSSs\n  \x27* STYLE\x27: true\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/attributewhitelist.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/cssspecificity.js";
goog.loadModule("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @fileoverview Calculator for specificity of CSS selectors. */\n\ngoog.module(\x27goog.html.CssSpecificity\x27);\ngoog.module.declareLegacyNamespace();\n\nvar userAgent \x3d goog.require(\x27goog.userAgent\x27);\nvar userAgentProduct \x3d goog.require(\x27goog.userAgent.product\x27);\n\n\n/**\n * Cached mapping from selectors to specificities.\n * @type {!Object\x3cstring, !Array\x3cnumber\x3e\x3e}\n */\nvar specificityCache \x3d {};\n\n/**\n * Calculates the specificity of CSS selectors, using a global cache if\n * supported.\n * @see http://www.w3.org/TR/css3-selectors/#specificity\n * @see https://specificity.keegan.st/\n * @param {string} selector The CSS selector.\n * @return {!Array\x3cnumber\x3e} The CSS specificity.\n * @supported IE9+, other browsers.\n */\nfunction getSpecificity(selector) {\n  if (userAgentProduct.IE \x26\x26 !userAgent.isVersionOrHigher(9)) {\n    // IE8 has buggy regex support.\n    return [0, 0, 0, 0];\n  }\n  var specificity \x3d specificityCache.hasOwnProperty(selector) ?\n      specificityCache[selector] :\n      null;\n  if (specificity) {\n    return specificity;\n  }\n  if (Object.keys(specificityCache).length \x3e (1 \x3c\x3c 16)) {\n    // Limit the size of cache to (1 \x3c\x3c 16) \x3d\x3d 65536. Normally HTML pages don\x27t\n    // have such numbers of selectors.\n    specificityCache \x3d {};\n  }\n  specificity \x3d calculateSpecificity(selector);\n  specificityCache[selector] \x3d specificity;\n  return specificity;\n}\n\n/**\n * Find matches for a regular expression in the selector and increase count.\n * @param {string} selector The selector to match the regex with.\n * @param {!Array\x3cnumber\x3e} specificity The current specificity.\n * @param {!RegExp} regex The regular expression.\n * @param {number} typeIndex Index of type count.\n * @return {string}\n */\nfunction replaceWithEmptyText(selector, specificity, regex, typeIndex) {\n  return selector.replace(regex, function(match) {\n    specificity[typeIndex] +\x3d 1;\n    // Replace this simple selector with whitespace so it won\x27t be counted\n    // in further simple selectors.\n    return Array(match.length + 1).join(\x27 \x27);\n  });\n}\n\n/**\n * Replace escaped characters with plain text, using the \x22A\x22 character.\n * @see https://www.w3.org/TR/CSS21/syndata.html#characters\n * @param {string} selector\n * @param {!RegExp} regex\n * @return {string}\n */\nfunction replaceWithPlainText(selector, regex) {\n  return selector.replace(regex, function(match) {\n    return Array(match.length + 1).join(\x27A\x27);\n  });\n}\n\n/**\n * Calculates the specificity of CSS selectors\n * @see http://www.w3.org/TR/css3-selectors/#specificity\n * @see https://github.com/keeganstreet/specificity\n * @see https://specificity.keegan.st/\n * @param {string} selector\n * @return {!Array\x3cnumber\x3e} The CSS specificity.\n */\nfunction calculateSpecificity(selector) {\n  var specificity \x3d [0, 0, 0, 0];\n\n  // Cannot use RegExp literals for all regular expressions, IE does not accept\n  // the syntax.\n\n  // Matches a backslash followed by six hexadecimal digits followed by an\n  // optional single whitespace character.\n  var escapeHexadecimalRegex \x3d new RegExp(\x27\\\\\\\\[0-9A-Fa-f]{6}\\\\s?\x27, \x27g\x27);\n  // Matches a backslash followed by fewer than six hexadecimal digits\n  // followed by a mandatory single whitespace character.\n  var escapeHexadecimalRegex2 \x3d new RegExp(\x27\\\\\\\\[0-9A-Fa-f]{1,5}\\\\s\x27, \x27g\x27);\n  // Matches a backslash followed by any character\n  var escapeSpecialCharacter \x3d /\\\\./g;\n  selector \x3d replaceWithPlainText(selector, escapeHexadecimalRegex);\n  selector \x3d replaceWithPlainText(selector, escapeHexadecimalRegex2);\n  selector \x3d replaceWithPlainText(selector, escapeSpecialCharacter);\n\n  // Remove the negation pseudo-class (:not) but leave its argument because\n  // specificity is calculated on its argument.\n  var pseudoClassWithNotRegex \x3d new RegExp(\x27:not\\\\(([^\\\\)]*)\\\\)\x27, \x27g\x27);\n  selector \x3d selector.replace(pseudoClassWithNotRegex, \x27     $1 \x27);\n\n  // Remove anything after a left brace in case a user has pasted in a rule,\n  // not just a selector.\n  var rulesRegex \x3d new RegExp(\x27{[^]*\x27, \x27gm\x27);\n  selector \x3d selector.replace(rulesRegex, \x27\x27);\n\n  // The following regular expressions assume that selectors matching the\n  // preceding regular expressions have been removed.\n\n  // SPECIFICITY 2: Counts attribute selectors.\n  var attributeRegex \x3d new RegExp(\x27(\\\\[[^\\\\]]+\\\\])\x27, \x27g\x27);\n  selector \x3d replaceWithEmptyText(selector, specificity, attributeRegex, 2);\n\n  // SPECIFICITY 1: Counts ID selectors.\n  var idRegex \x3d new RegExp(\x27(#[^\\\\#\\\\s\\\\+\x3e~\\\\.\\\\[:]+)\x27, \x27g\x27);\n  selector \x3d replaceWithEmptyText(selector, specificity, idRegex, 1);\n\n  // SPECIFICITY 2: Counts class selectors.\n  var classRegex \x3d new RegExp(\x27(\\\\.[^\\\\s\\\\+\x3e~\\\\.\\\\[:]+)\x27, \x27g\x27);\n  selector \x3d replaceWithEmptyText(selector, specificity, classRegex, 2);\n\n  // SPECIFICITY 3: Counts pseudo-element selectors.\n  var pseudoElementRegex \x3d\n      /(::[^\\s\\+\x3e~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi;\n  selector \x3d replaceWithEmptyText(selector, specificity, pseudoElementRegex, 3);\n\n  // SPECIFICITY 2: Counts pseudo-class selectors.\n  // A regex for pseudo classes with brackets. For example:\n  //   :nth-child()\n  //   :nth-last-child()\n  //   :nth-of-type()\n  //   :nth-last-type()\n  //   :lang()\n  var pseudoClassWithBracketsRegex \x3d /(:[\\w-]+\\([^\\)]*\\))/gi;\n  selector \x3d replaceWithEmptyText(\n      selector, specificity, pseudoClassWithBracketsRegex, 2);\n  // A regex for other pseudo classes, which don\x27t have brackets.\n  var pseudoClassRegex \x3d /(:[^\\s\\+\x3e~\\.\\[:]+)/g;\n  selector \x3d replaceWithEmptyText(selector, specificity, pseudoClassRegex, 2);\n\n  // Remove universal selector and separator characters.\n  selector \x3d selector.replace(/[\\*\\s\\+\x3e~]/g, \x27 \x27);\n\n  // Remove any stray dots or hashes which aren\x27t attached to words.\n  // These may be present if the user is live-editing this selector.\n  selector \x3d selector.replace(/[#\\.]/g, \x27 \x27);\n\n  // SPECIFICITY 3: The only things left should be element selectors.\n  var elementRegex \x3d /([^\\s\\+\x3e~\\.\\[:]+)/g;\n  selector \x3d replaceWithEmptyText(selector, specificity, elementRegex, 3);\n\n  return specificity;\n}\n\nexports \x3d {\n  getSpecificity: getSpecificity\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/cssspecificity.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/noclobber.js";
goog.loadModule("// Copyright 2017 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utility DOM functions resistant to DOM clobbering. Clobbering\n * resistance is offered as a best-effort feature -- it is not available on\n * older browsers such as IE \x3c10, Chrome \x3c43, etc. In some cases, we can at\n * least detect clobbering attempts and abort. Note that this is not intended to\n * be a general-purpose library -- it is only used by the HTML sanitizer to\n * accept and sanitize clobbered input. If your projects needs to protect\n * against clobbered content, consider using the HTML sanitizer and configuring\n * it to defuse clobbering by prefixing all element ids and names in the\n * output.\n * @supported Unless specified in the method documentation, IE 10 and newer.\n */\n\ngoog.module(\x27goog.html.sanitizer.noclobber\x27);\ngoog.module.declareLegacyNamespace();\n\nvar NodeType \x3d goog.require(\x27goog.dom.NodeType\x27);\nvar googAsserts \x3d goog.require(\x27goog.asserts\x27);\nvar userAgentProduct \x3d goog.require(\x27goog.userAgent.product\x27);\n\n/**\n * Note about browser support:\n * - IE 8 and 9 don\x27t have DOM prototypes. There is no simple way of saving\n *   the methods and accessors for a clobber-safe call.\n * - Chrome \x3c43 doesn\x27t have attributes on DOM prototypes, so there is no way of\n *   making clobber-safe calls for attribute descriptors.\n * - IE 8 and 9 don\x27t even have Node and HTMLElement, so there is no\n *   straightforward way of checking if the result was clobbered for many of the\n *   methods.\n * - IE 8 and 9 have alternate names for getPropertyValue/setProperty in\n *   CSSStyleDeclaration.\n * For simplicity, we don\x27t support IE 8 and 9 for anything but the CSS methods\n * which already had IE8 and IE9 support. Chrome 41 must still be supported.\n */\n\n/**\n * Shorthand for `Object.getOwnPropertyDescriptor(...).get` to improve\n * readability during initialization of `Methods`.\n * @param {string} className\n * @param {string} property\n * @return {?Function}\n */\nfunction getterOrNull(className, property) {\n  var ctor \x3d goog.global[className];\n  if (!ctor || !ctor.prototype) {\n    return null;\n  }\n  var descriptor \x3d Object.getOwnPropertyDescriptor(ctor.prototype, property);\n  return (descriptor \x26\x26 descriptor.get) || null;\n}\n\n/**\n * Shorthand for `DOMInterface.prototype.method` to improve readability\n * during initialization of `Methods`.\n * @param {string} className\n * @param {string} method\n * @return {?Function}\n */\nfunction prototypeMethodOrNull(className, method) {\n  var ctor \x3d goog.global[className];\n  return (ctor \x26\x26 ctor.prototype \x26\x26 ctor.prototype[method]) || null;\n}\n\n// Functions we use to avoid looking up the prototypes and the descriptors\n// multiple times.\n/** @const @enum {?Function} */\nvar Methods \x3d {\n  ATTRIBUTES_GETTER: getterOrNull(\x27Element\x27, \x27attributes\x27) ||\n      // Edge and IE10 define this Element property on Node instead of\n      // Element.\n      getterOrNull(\x27Node\x27, \x27attributes\x27),\n  HAS_ATTRIBUTE: prototypeMethodOrNull(\x27Element\x27, \x27hasAttribute\x27),\n  GET_ATTRIBUTE: prototypeMethodOrNull(\x27Element\x27, \x27getAttribute\x27),\n  SET_ATTRIBUTE: prototypeMethodOrNull(\x27Element\x27, \x27setAttribute\x27),\n  REMOVE_ATTRIBUTE: prototypeMethodOrNull(\x27Element\x27, \x27removeAttribute\x27),\n  INNER_HTML_GETTER: getterOrNull(\x27Element\x27, \x27innerHTML\x27) ||\n      // IE 10 defines this Element property on HTMLElement.\n      getterOrNull(\x27HTMLElement\x27, \x27innerHTML\x27),\n  GET_ELEMENTS_BY_TAG_NAME:\n      prototypeMethodOrNull(\x27Element\x27, \x27getElementsByTagName\x27),\n  MATCHES: prototypeMethodOrNull(\x27Element\x27, \x27matches\x27) ||\n      prototypeMethodOrNull(\x27Element\x27, \x27msMatchesSelector\x27),\n  NODE_NAME_GETTER: getterOrNull(\x27Node\x27, \x27nodeName\x27),\n  NODE_TYPE_GETTER: getterOrNull(\x27Node\x27, \x27nodeType\x27),\n  PARENT_NODE_GETTER: getterOrNull(\x27Node\x27, \x27parentNode\x27),\n  CHILD_NODES_GETTER: getterOrNull(\x27Node\x27, \x27childNodes\x27),\n  APPEND_CHILD: prototypeMethodOrNull(\x27Node\x27, \x27appendChild\x27),\n  STYLE_GETTER: getterOrNull(\x27HTMLElement\x27, \x27style\x27) ||\n      // Safari 10 defines the property on Element instead of\n      // HTMLElement.\n      getterOrNull(\x27Element\x27, \x27style\x27),\n  SHEET_GETTER: getterOrNull(\x27HTMLStyleElement\x27, \x27sheet\x27),\n  GET_PROPERTY_VALUE:\n      prototypeMethodOrNull(\x27CSSStyleDeclaration\x27, \x27getPropertyValue\x27),\n  SET_PROPERTY: prototypeMethodOrNull(\x27CSSStyleDeclaration\x27, \x27setProperty\x27)\n};\n\n/**\n * Calls the provided DOM property descriptor and returns its result. If the\n * descriptor is not available, use fallbackPropertyName to get the property\n * value in a clobber-vulnerable way, and use fallbackTest to check if the\n * property was clobbered, throwing an exception if so.\n * @param {?Function} fn\n * @param {*} object\n * @param {string} fallbackPropertyName\n * @param {function(*):boolean} fallbackTest\n * @return {?}\n */\nfunction genericPropertyGet(fn, object, fallbackPropertyName, fallbackTest) {\n  if (fn) {\n    return fn.apply(object);\n  }\n  var propertyValue \x3d object[fallbackPropertyName];\n  if (!fallbackTest(propertyValue)) {\n    throw new Error(\x27Clobbering detected\x27);\n  }\n  return propertyValue;\n}\n\n/**\n * Calls the provided DOM prototype method and returns its result. If the\n * method is not available, use fallbackMethodName to call the method in a\n * clobber-vulnerable way, and use fallbackTest to check if the\n * method was clobbered, throwing an exception if so.\n * @param {?Function} fn\n * @param {*} object\n * @param {string} fallbackMethodName\n * @param {!Array\x3c*\x3e} args\n * @return {?}\n */\nfunction genericMethodCall(fn, object, fallbackMethodName, args) {\n  if (fn) {\n    return fn.apply(object, args);\n  }\n  // IE8 and IE9 will return \x27object\x27 for\n  // CSSStyleDeclaration.(get|set)Attribute, so we can\x27t use typeof.\n  if (userAgentProduct.IE \x26\x26 document.documentMode \x3c 10) {\n    if (!object[fallbackMethodName].call) {\n      throw new Error(\x27IE Clobbering detected\x27);\n    }\n  } else if (typeof object[fallbackMethodName] !\x3d \x27function\x27) {\n    throw new Error(\x27Clobbering detected\x27);\n  }\n  return object[fallbackMethodName].apply(object, args);\n}\n\n/**\n * Returns an element\x27s attributes without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22attributes\x22\x3e\x3c/form\x3e. Equivalent to\n * `node.attributes`.\n * @param {!Element} element\n * @return {!NamedNodeMap}\n */\nfunction getElementAttributes(element) {\n  return genericPropertyGet(\n      Methods.ATTRIBUTES_GETTER, element, \x27attributes\x27, function(attributes) {\n        return attributes instanceof NamedNodeMap;\n      });\n}\n\n/**\n * Returns whether an element has a specific attribute, without falling prey to\n * things like \x3cform\x3e\x3cinput name\x3d\x22hasAttribute\x22\x3e\x3c/form\x3e.\n * Equivalent to {@code element.hasAttribute(\x22foo\x22)}.\n * @param {!Element} element\n * @param {string} attrName\n * @return {boolean}\n */\nfunction hasElementAttribute(element, attrName) {\n  return genericMethodCall(\n      Methods.HAS_ATTRIBUTE, element, \x27hasAttribute\x27, [attrName]);\n}\n\n/**\n * Returns a specific attribute from an element without falling prey to\n * things like \x3cform\x3e\x3cinput name\x3d\x22getAttribute\x22\x3e\x3c/form\x3e.\n * Equivalent to {@code element.getAttribute(\x22foo\x22)}.\n * @param {!Element} element\n * @param {string} attrName\n * @return {?string}\n */\nfunction getElementAttribute(element, attrName) {\n  // Older browsers might return empty string instead of null to follow the\n  // DOM 3 Core Specification.\n  return genericMethodCall(\n             Methods.GET_ATTRIBUTE, element, \x27getAttribute\x27, [attrName]) ||\n      null;\n}\n\n/**\n * Sets an element\x27s attributes without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22setAttribute\x22\x3e\x3c/form\x3e. Equivalent to {@code\n * element.setAttribute(\x22foo\x22, \x22bar\x22)}.\n * @param {!Element} element\n * @param {string} name\n * @param {string} value\n */\nfunction setElementAttribute(element, name, value) {\n  try {\n    genericMethodCall(\n        Methods.SET_ATTRIBUTE, element, \x27setAttribute\x27, [name, value]);\n  } catch (e) {\n    // IE throws an exception if the src attribute contains HTTP credentials.\n    // However the attribute gets set anyway.\n    if (e.message.indexOf(\x27A security problem occurred\x27) !\x3d -1) {\n      return;\n    }\n    throw e;\n  }\n}\n\n/**\n * Deletes a specific attribute from an element without falling prey to\n * things like \x3cform\x3e\x3cinput name\x3d\x22removeAttribute\x22\x3e\x3c/form\x3e.\n * Equivalent to {@code element.removeAttribute(\x22foo\x22)}.\n * @param {!Element} element\n * @param {string} attrName\n */\nfunction removeElementAttribute(element, attrName) {\n  genericMethodCall(\n      Methods.REMOVE_ATTRIBUTE, element, \x27removeAttribute\x27, [attrName]);\n}\n\n/**\n * Returns a node\x27s innerHTML property value without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22innerHTML\x22\x3e\x3c/form\x3e. Equivalent to\n * `element.innerHTML`.\n * @param {!Element} element\n * @return {string}\n */\nfunction getElementInnerHTML(element) {\n  return genericPropertyGet(\n      Methods.INNER_HTML_GETTER, element, \x27innerHTML\x27, function(html) {\n        return typeof html \x3d\x3d \x27string\x27;\n      });\n}\n\n/**\n * Returns an element\x27s style without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22style\x22\x3e\x3c/form\x3e.\n * @param {!Element} element\n * @return {!CSSStyleDeclaration}\n */\nfunction getElementStyle(element) {\n  assertHTMLElement(element);\n  return genericPropertyGet(\n      Methods.STYLE_GETTER, element, \x27style\x27, function(style) {\n        return style instanceof CSSStyleDeclaration;\n      });\n}\n\n/**\n * Asserts that the Element is an HTMLElement, or throws an exception.\n * @param {!Element} element\n */\nfunction assertHTMLElement(element) {\n  if (googAsserts.ENABLE_ASSERTS \x26\x26 !(element instanceof HTMLElement)) {\n    throw new Error(\x27Not an HTMLElement\x27);\n  }\n}\n\n/**\n * Get the children of a specific tag matching the provided tag name without\n * falling prey to things like \x3cform\x3e\x3cinput name\x3d\x22getElementsByTagName\x22\x3e\x3c/form\x3e.\n * Equivalent to {@code element.getElementsByTagName(\x22foo\x22)}.\n * @param {!Element} element\n * @param {string} name\n * @return {!Array\x3c!Element\x3e}\n */\nfunction getElementsByTagName(element, name) {\n  return Array.from(genericMethodCall(\n      Methods.GET_ELEMENTS_BY_TAG_NAME, element, \x27getElementsByTagName\x27,\n      [name]));\n}\n\n/**\n * Returns an element\x27s style without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22style\x22\x3e\x3c/form\x3e.\n * @param {!Element} element\n * @return {!CSSStyleSheet}\n */\nfunction getElementStyleSheet(element) {\n  assertHTMLElement(element);\n  return genericPropertyGet(\n      Methods.SHEET_GETTER, element, \x27sheet\x27, function(sheet) {\n        return sheet instanceof CSSStyleSheet;\n      });\n}\n\n/**\n * Returns true if the element would be selected by the provided selector,\n * without falling prey to things like \x3cform\x3e\x3cinput name\x3d\x22setAttribute\x22\x3e\x3c/form\x3e.\n * Equivalent to {@code element.matches(\x22foo\x22)}.\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction elementMatches(element, selector) {\n  return genericMethodCall(\n      Methods.MATCHES, element,\n      element.matches ? \x27matches\x27 : \x27msMatchesSelector\x27, [selector]);\n}\n\n/**\n * Asserts that a Node is an Element, without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22nodeType\x22\x3e\x3c/form\x3e.\n * @param {!Node} node\n * @return {!Element}\n */\nfunction assertNodeIsElement(node) {\n  if (googAsserts.ENABLE_ASSERTS \x26\x26 !isNodeElement(node)) {\n    googAsserts.fail(\n        \x27Expected Node of type Element but got Node of type %s\x27,\n        getNodeType(node));\n  }\n  return /** @type {!Element} */ (node);\n}\n\n/**\n * Returns whether the node is an Element, without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22nodeType\x22\x3e\x3c/form\x3e.\n * @param {!Node} node\n * @return {boolean}\n */\nfunction isNodeElement(node) {\n  return getNodeType(node) \x3d\x3d NodeType.ELEMENT;\n}\n\n/**\n * Returns a node\x27s nodeName without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22nodeName\x22\x3e\x3c/form\x3e.\n * @param {!Node} node\n * @return {string}\n */\nfunction getNodeName(node) {\n  return genericPropertyGet(\n      Methods.NODE_NAME_GETTER, node, \x27nodeName\x27, function(name) {\n        return typeof name \x3d\x3d \x27string\x27;\n      });\n}\n\n/**\n * Returns a node\x27s nodeType without falling prey to things like\n * `\x3cform\x3e\x3cinput name\x3d\x22nodeType\x22\x3e\x3c/form\x3e`.\n * @param {!Node} node\n * @return {number}\n */\nfunction getNodeType(node) {\n  return genericPropertyGet(\n      Methods.NODE_TYPE_GETTER, node, \x27nodeType\x27, function(type) {\n        return typeof type \x3d\x3d \x27number\x27;\n      });\n}\n\n/**\n * Returns a node\x27s parentNode without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22parentNode\x22\x3e\x3c/form\x3e.\n * @param {!Node} node\n * @return {?Node}\n */\nfunction getParentNode(node) {\n  return genericPropertyGet(\n      Methods.PARENT_NODE_GETTER, node, \x27parentNode\x27, function(parentNode) {\n        // We need to ensure that parentNode is returning the actual parent node\n        // and not a child node that happens to have a name of \x22parentNode\x22.\n        // We check that the node returned by parentNode is itself not named\n        // \x22parentNode\x22 - this could happen legitimately but on IE we have no\n        // better means of avoiding the pitfall.\n        return !(\n            parentNode \x26\x26 typeof parentNode.name \x3d\x3d \x27string\x27 \x26\x26\n            parentNode.name \x26\x26 parentNode.name.toLowerCase() \x3d\x3d \x27parentnode\x27);\n      });\n}\n\n/**\n * Returns the value of node.childNodes without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22childNodes\x22\x3e\x3c/form\x3e.\n * @param {!Node} node\n * @return {!NodeList\x3c!Node\x3e}\n */\nfunction getChildNodes(node) {\n  return genericPropertyGet(\n      Methods.CHILD_NODES_GETTER, node, \x27childNodes\x27, function(childNodes) {\n        return childNodes instanceof NodeList;\n      });\n}\n\n/**\n * Appends a child to a node without falling prey to things like\n * \x3cform\x3e\x3cinput name\x3d\x22appendChild\x22\x3e\x3c/form\x3e.\n * @param {!Node} parent\n * @param {!Node} child\n * @return {!Node}\n */\nfunction appendNodeChild(parent, child) {\n  return genericMethodCall(\n      Methods.APPEND_CHILD, parent, \x27appendChild\x27, [child]);\n}\n\n/**\n * Provides a way cross-browser way to get a CSS value from a CSS declaration.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {string} propName A property name.\n * @return {string} Value of the property as parsed by the browser.\n * @supported IE8 and newer.\n */\nfunction getCssPropertyValue(cssStyle, propName) {\n  return genericMethodCall(\n             Methods.GET_PROPERTY_VALUE, cssStyle,\n             cssStyle.getPropertyValue ? \x27getPropertyValue\x27 : \x27getAttribute\x27,\n             [propName]) ||\n      \x27\x27;\n}\n\n/**\n * Provides a cross-browser way to set a CSS value on a CSS declaration.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {string} propName A property name.\n * @param {string} sanitizedValue Sanitized value of the property to be set\n *     on the CSS style object.\n * @supported IE8 and newer.\n */\nfunction setCssProperty(cssStyle, propName, sanitizedValue) {\n  genericMethodCall(\n      Methods.SET_PROPERTY, cssStyle,\n      cssStyle.setProperty ? \x27setProperty\x27 : \x27setAttribute\x27,\n      [propName, sanitizedValue]);\n}\n\nexports \x3d {\n  getElementAttributes: getElementAttributes,\n  hasElementAttribute: hasElementAttribute,\n  getElementAttribute: getElementAttribute,\n  setElementAttribute: setElementAttribute,\n  removeElementAttribute: removeElementAttribute,\n  getElementInnerHTML: getElementInnerHTML,\n  getElementStyle: getElementStyle,\n  getElementsByTagName: getElementsByTagName,\n  getElementStyleSheet: getElementStyleSheet,\n  elementMatches: elementMatches,\n  assertNodeIsElement: assertNodeIsElement,\n  isNodeElement: isNodeElement,\n  getNodeName: getNodeName,\n  getNodeType: getNodeType,\n  getParentNode: getParentNode,\n  getChildNodes: getChildNodes,\n  appendNodeChild: appendNodeChild,\n  getCssPropertyValue: getCssPropertyValue,\n  setCssProperty: setCssProperty,\n  /** @package */\n  Methods: Methods,\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/noclobber.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/csssanitizer.js";
eval("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview\n * JavaScript support for client-side CSS sanitization.\n *\n * @author danesh@google.com (Danesh Irani)\n * @author mikesamuel@gmail.com (Mike Samuel)\n */\n\ngoog.provide(\x27goog.html.sanitizer.CssSanitizer\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.html.CssSpecificity\x27);\ngoog.require(\x27goog.html.SafeStyle\x27);\ngoog.require(\x27goog.html.SafeStyleSheet\x27);\ngoog.require(\x27goog.html.SafeUrl\x27);\ngoog.require(\x27goog.html.sanitizer.noclobber\x27);\ngoog.require(\x27goog.html.uncheckedconversions\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.userAgent\x27);\ngoog.require(\x27goog.userAgent.product\x27);\n\n\n/**\n * The set of characters that need to be normalized inside url(\x22...\x22).\n * We normalize newlines because they are not allowed inside quoted strings,\n * normalize quote characters, angle-brackets, and asterisks because they\n * could be used to break out of the URL or introduce targets for CSS\n * error recovery.  We normalize parentheses since they delimit unquoted\n * URLs and calls and could be a target for error recovery.\n * @const @private {!RegExp}\n */\ngoog.html.sanitizer.CssSanitizer.NORM_URL_REGEXP_ \x3d /[\\n\\f\\r\\\x22\\\x27()*\x3c\x3e]/g;\n\n\n/**\n * The replacements for NORM_URL_REGEXP.\n * @private @const {!Object\x3cstring, string\x3e}\n */\ngoog.html.sanitizer.CssSanitizer.NORM_URL_REPLACEMENTS_ \x3d {\n  \x27\\n\x27: \x27%0a\x27,\n  \x27\\f\x27: \x27%0c\x27,\n  \x27\\r\x27: \x27%0d\x27,\n  \x27\x22\x27: \x27%22\x27,\n  \x27\\\x27\x27: \x27%27\x27,\n  \x27(\x27: \x27%28\x27,\n  \x27)\x27: \x27%29\x27,\n  \x27*\x27: \x27%2a\x27,\n  \x27\x3c\x27: \x27%3c\x27,\n  \x27\x3e\x27: \x27%3e\x27\n};\n\n\n/**\n * A regular expression to match each selector in a CSS rule. Selectors are\n * separated by commas, but can have strings within them (e.g. foo[name\x3d\x22bar\x22])\n * that can contain commas and escaped quotes.\n * @private {?RegExp}\n */\ngoog.html.sanitizer.CssSanitizer.SELECTOR_REGEX_ \x3d\n    // Don\x27t even evaluate it on older browsers (IE8 and IE9), it throws a\n    // syntax error and we don\x27t use it anyway.\n    !(goog.userAgent.IE \x26\x26 document.documentMode \x3c 10) ?\n    new RegExp(\n        \x27\\\\s*\x27 +              // Discard initial space\n            \x27([^\\\\s\\\x27\x22,]+\x27 +  // Beginning of the match. Anything but a comma,\n                              // spaces or a string delimiter. This is the only\n                              // non-optional component of the regex.\n            \x27[^\\\x27\x22,]*\x27 +      // Spaces are fine afterwards (e.g. \x22a \x3e b\x22).\n            (\x27(\x27 +  // A series of optional strings with matching delimiters\n                    // that can contain anything, and optional non-quoted text\n                    // without commas.\n             \x27(\\\x27([^\\\x27\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[^])*\\\x27)|\x27 +  // Optional single-quoted\n                                                       // string.\n             \x27(\x22([^\x22\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[^])*\x22)|\x27 +     // Optional double-quoted\n                                                       // string.\n             \x27[^\\\x27\x22,]\x27 +  // Optional non-string content.\n             \x27)*\x27) +      // String and non-string\n                          // content can come in any\n                          // order.\n            \x27)\x27,          // End of the match.\n        \x27g\x27) :\n    null;\n\n\n/**\n * Normalizes a character for use in a url() directive.\n * @param {string} ch Character to be normalized.\n * @return {?string} Normalized character.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.normalizeUrlChar_ \x3d function(ch) {\n  return goog.html.sanitizer.CssSanitizer.NORM_URL_REPLACEMENTS_[ch] || null;\n};\n\n\n/**\n * Constructs a safe URI from a given URI and prop using a given uriRewriter\n * function.\n * @param {string} uri URI to be sanitized.\n * @param {string} propName Property name which contained the URI.\n * @param {?function(string, string):?goog.html.SafeUrl} uriRewriter A URI\n *    rewriter that returns a goog.html.SafeUrl.\n * @return {?string} Safe URI for use in CSS.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.getSafeUri_ \x3d function(\n    uri, propName, uriRewriter) {\n  if (!uriRewriter) {\n    return null;\n  }\n  var safeUri \x3d uriRewriter(uri, propName);\n  if (safeUri \x26\x26\n      goog.html.SafeUrl.unwrap(safeUri) !\x3d goog.html.SafeUrl.INNOCUOUS_STRING) {\n    return \x27url(\x22\x27 +\n        goog.html.SafeUrl.unwrap(safeUri).replace(\n            goog.html.sanitizer.CssSanitizer.NORM_URL_REGEXP_,\n            goog.html.sanitizer.CssSanitizer.normalizeUrlChar_) +\n        \x27\x22)\x27;\n  }\n  return null;\n};\n\n\n/**\n * Used to detect the beginning of the argument list of a CSS property value\n * containing a CSS function call.\n * @private @const {string}\n */\ngoog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_BEGIN_ \x3d \x27(\x27;\n\n\n/**\n * Used to detect the end of the argument list of a CSS property value\n * containing a CSS function call.\n * @private @const {string}\n */\ngoog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_END_ \x3d \x27)\x27;\n\n\n/**\n * Allowed CSS functions\n * @const @private {!Array\x3cstring\x3e}\n */\ngoog.html.sanitizer.CssSanitizer.ALLOWED_FUNCTIONS_ \x3d [\n  \x27rgb\x27,\n  \x27rgba\x27,\n  \x27alpha\x27,\n  \x27rect\x27,\n  \x27image\x27,\n  \x27linear-gradient\x27,\n  \x27radial-gradient\x27,\n  \x27repeating-linear-gradient\x27,\n  \x27repeating-radial-gradient\x27,\n  \x27cubic-bezier\x27,\n  \x27matrix\x27,\n  \x27perspective\x27,\n  \x27rotate\x27,\n  \x27rotate3d\x27,\n  \x27rotatex\x27,\n  \x27rotatey\x27,\n  \x27steps\x27,\n  \x27rotatez\x27,\n  \x27scale\x27,\n  \x27scale3d\x27,\n  \x27scalex\x27,\n  \x27scaley\x27,\n  \x27scalez\x27,\n  \x27skew\x27,\n  \x27skewx\x27,\n  \x27skewy\x27,\n  \x27translate\x27,\n  \x27translate3d\x27,\n  \x27translatex\x27,\n  \x27translatey\x27,\n  \x27translatez\x27\n];\n\n\n/**\n * Removes a vendor prefix from a property name.\n * @param {string} propName A property name.\n * @return {string} A property name without vendor prefixes.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.withoutVendorPrefix_ \x3d function(propName) {\n  // http://stackoverflow.com/a/5411098/20394 has a fairly extensive list\n  // of vendor prefices. Blink has not declared a vendor prefix distinct from\n  // -webkit- and http://css-tricks.com/tldr-on-vendor-prefix-drama/ discusses\n  // how Mozilla recognizes some -webkit- prefixes.\n  // http://wiki.csswg.org/spec/vendor-prefixes talks more about\n  // cross-implementation, and lists other prefixes.\n  return propName.replace(\n      /^-(?:apple|css|epub|khtml|moz|mso?|o|rim|wap|webkit|xv)-(?\x3d[a-z])/i, \x27\x27);\n};\n\n\n/**\n * Sanitizes the value for a given a browser-parsed CSS value.\n * @param {string} propName A property name.\n * @param {string} propValue Value of the property as parsed by the browser.\n * @param {function(string, string):?goog.html.SafeUrl\x3d} opt_uriRewriter A URI\n *     rewriter that returns an unwrapped goog.html.SafeUrl.\n * @return {?string} Sanitized property value or null.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeProperty_ \x3d function(\n    propName, propValue, opt_uriRewriter) {\n  var outputPropValue \x3d goog.string.trim(propValue);\n  if (outputPropValue \x3d\x3d \x27\x27) {\n    return null;\n  }\n\n  if (goog.string.caseInsensitiveStartsWith(outputPropValue, \x27url(\x27)) {\n    // Urls are rewritten according to the policy implemented in\n    // opt_uriRewriter.\n    // TODO(pelizzi): use HtmlSanitizerUrlPolicy for opt_uriRewriter.\n    if (!opt_uriRewriter) {\n      return null;\n    }\n    // TODO(danesh): Check if we need to resolve this URI.\n    var uri \x3d goog.string.stripQuotes(\n        outputPropValue.substring(4, outputPropValue.length - 1), \x27\x22\\\x27\x27);\n\n    return goog.html.sanitizer.CssSanitizer.getSafeUri_(\n        uri, propName, opt_uriRewriter);\n  } else if (outputPropValue.indexOf(\x27(\x27) \x3e 0) {\n    // Functions are filtered through a whitelist. Nesting whitelisted functions\n    // is not supported.\n    if (goog.string.countOf(\n            outputPropValue,\n            goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_BEGIN_) \x3e 1 ||\n        !(goog.array.contains(\n              goog.html.sanitizer.CssSanitizer.ALLOWED_FUNCTIONS_,\n              outputPropValue\n                  .substring(\n                      0,\n                      outputPropValue.indexOf(goog.html.sanitizer.CssSanitizer\n                                                  .FUNCTION_ARGUMENTS_BEGIN_))\n                  .toLowerCase()) \x26\x26\n          goog.string.endsWith(\n              outputPropValue,\n              goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_END_))) {\n      // TODO(b/34222379): Handle functions that may need recursing or that may\n      // appear in the middle of a string. For now, just allow functions which\n      // aren\x27t nested.\n      return null;\n    }\n    return outputPropValue;\n  } else {\n    // Everything else is allowed.\n    return outputPropValue;\n  }\n};\n\n\n/**\n * Sanitizes a {@link CSSStyleSheet}.\n * @param {!CSSStyleSheet} cssStyleSheet\n * @param {?string} containerId An ID to restrict the scope of the rules being\n *     sanitized. If null, no restriction is applied.\n * @param {function(string, string):?goog.html.SafeUrl|undefined} uriRewriter A\n *     URI rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyleSheet}\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeStyleSheet_ \x3d function(\n    cssStyleSheet, containerId, uriRewriter) {\n  var sanitizedRules \x3d [];\n  var cssRules \x3d goog.html.sanitizer.CssSanitizer.getOnlyStyleRules_(\n      goog.array.toArray(cssStyleSheet.cssRules));\n  goog.array.forEach(cssRules, function(cssRule) {\n    if (containerId \x26\x26 !/[a-zA-Z][\\w-:\\.]*/.test(containerId)) {\n      // Sanity check on the element ID that will confine the new CSS rules.\n      throw new Error(\x27Invalid container id\x27);\n    }\n    if (containerId \x26\x26 goog.userAgent.product.IE \x26\x26\n        document.documentMode \x3d\x3d 10 \x26\x26 /\\\\[\x27\x22]/.test(cssRule.selectorText)) {\n      // If a container ID was specified, drop selectors with escaped quotes in\n      // strings on IE 10 due to a regex bug.\n      return;\n    }\n    // If a container ID was specified, restrict all selectors in this rule to\n    // be descendants of the node with such an ID. Use a regex to exclude commas\n    // within selector strings.\n    var scopedSelector \x3d containerId ?\n        cssRule.selectorText.replace(\n            goog.html.sanitizer.CssSanitizer.SELECTOR_REGEX_,\n            \x27#\x27 + containerId + \x27 $1\x27) :\n        cssRule.selectorText;\n    sanitizedRules.push(goog.html.SafeStyleSheet.createRule(\n        scopedSelector,\n        goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(\n            cssRule.style, uriRewriter)));\n  });\n  return goog.html.SafeStyleSheet.concat(sanitizedRules);\n};\n\n\n/**\n * Used to filter out at-rules like @media, @font, etc. Currently, none of these\n * are supported.\n * @param {!Array\x3c!CSSRule\x3e} cssRules\n * @return {!Array\x3c!CSSStyleRule\x3e}\n * @private\n */\n// TODO(pelizzi): some of these at-rules are safe, consider adding partial\n// support for them.\ngoog.html.sanitizer.CssSanitizer.getOnlyStyleRules_ \x3d function(cssRules) {\n  return /** @type {!Array\x3c!CSSStyleRule\x3e} */ (\n      goog.array.filter(cssRules, function(cssRule) {\n        return cssRule instanceof CSSStyleRule ||\n            cssRule.type \x3d\x3d CSSRule.STYLE_RULE;\n      }));\n};\n\n\n/**\n * Sanitizes the contents of a STYLE tag.\n * @param {string} textContent The textual content of the STYLE tag.\n * @param {?string\x3d} opt_containerId The ID of a node that will contain the\n *     STYLE tag that includes the sanitized content, to restrict the effects of\n *     the rules being sanitized to descendants of this node.\n * @param {function(string, string):?goog.html.SafeUrl\x3d} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyleSheet}\n * @supported IE 10+, Chrome 26+, Firefox 22+, Safari 7.1+, Opera 15+. On IE10,\n *     support for escaped quotes inside quoted strings (e.g. `a[name\x3d\x22it\\\x27s\x22]`)\n *     is unreliable, and some (but not all!) rules containing these are\n *     silently dropped.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeStyleSheetString \x3d function(\n    textContent, opt_containerId, opt_uriRewriter) {\n  var styleTag \x3d\n      goog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement(\n          \x27\x3cstyle\x3e\x27 + textContent + \x27\x3c/style\x3e\x27);\n  if (styleTag \x3d\x3d null) {\n    return goog.html.SafeStyleSheet.EMPTY;\n  }\n  var containerId \x3d opt_containerId !\x3d undefined ? opt_containerId : null;\n  return goog.html.sanitizer.CssSanitizer.sanitizeStyleSheet_(\n      styleTag.sheet, containerId, opt_uriRewriter);\n};\n\n\n/**\n * Returns an inert DOM tree produced by parsing the provided html using\n * DOMParser. \x22Inert\x22 here means that merely parsing the string won\x27t execute\n * scripts or load images. If you attach this tree to a non-inert document, it\n * will execute these side effects! In this package we prefer using the TEMPLATE\n * tag over DOMParser to produce inert trees, but at least on Chrome the inert\n * STYLE tag does not have a CSSStyleSheet object attached to it.\n * @param {string} html\n * @return {?Element}\n */\ngoog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement \x3d function(\n    html) {\n  if ((goog.userAgent.IE \x26\x26 !goog.userAgent.isVersionOrHigher(10)) ||\n      typeof goog.global.DOMParser !\x3d \x27function\x27) {\n    return null;\n  }\n  var parser \x3d new DOMParser();\n  return parser\n      .parseFromString(\n          \x27\x3chtml\x3e\x3chead\x3e\x3c/head\x3e\x3cbody\x3e\x27 + html + \x27\x3c/body\x3e\x3c/html\x3e\x27, \x27text/html\x27)\n      .body.children[0];\n};\n\n\n/**\n * Sanitizes an inline style attribute. Short-hand attributes are expanded to\n * their individual elements. Note: The sanitizer does not output vendor\n * prefixed styles.\n * @param {?CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {function(string, string):?goog.html.SafeUrl\x3d} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyle} A sanitized inline cssText.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeInlineStyle \x3d function(\n    cssStyle, opt_uriRewriter) {\n  if (!cssStyle) {\n    return goog.html.SafeStyle.EMPTY;\n  }\n\n  var cleanCssStyle \x3d document.createElement(\x27div\x27).style;\n  var cssPropNames \x3d\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(cssStyle);\n\n  for (var i \x3d 0; i \x3c cssPropNames.length; i++) {\n    var propName \x3d\n        goog.html.sanitizer.CssSanitizer.withoutVendorPrefix_(cssPropNames[i]);\n    if (!goog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_(propName)) {\n      var propValue \x3d\n          goog.html.sanitizer.noclobber.getCssPropertyValue(cssStyle, propName);\n\n      var sanitizedValue \x3d goog.html.sanitizer.CssSanitizer.sanitizeProperty_(\n          propName, propValue, opt_uriRewriter);\n      if (sanitizedValue !\x3d null) {\n        goog.html.sanitizer.noclobber.setCssProperty(\n            cleanCssStyle, propName, sanitizedValue);\n      }\n    }\n  }\n  return goog.html.uncheckedconversions\n      .safeStyleFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\x27Output of CSS sanitizer\x27),\n          cleanCssStyle.cssText || \x27\x27);\n};\n\n\n/**\n * Sanitizes inline CSS text and returns it as a SafeStyle object. When adequate\n * browser support is not available, such as for IE9 and below, a\n * SafeStyle-wrapped empty string is returned.\n * @param {string} cssText CSS text to be sanitized.\n * @param {function(string, string):?goog.html.SafeUrl\x3d} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyle} A sanitized inline cssText.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeInlineStyleString \x3d function(\n    cssText, opt_uriRewriter) {\n  // same check as in goog.html.sanitizer.HTML_SANITIZER_SUPPORTED_\n  if (goog.userAgent.IE \x26\x26 document.documentMode \x3c 10) {\n    return new goog.html.SafeStyle();\n  }\n\n  var div \x3d goog.html.sanitizer.CssSanitizer\n      .createInertDocument_()\n      .createElement(\x27DIV\x27);\n  div.style.cssText \x3d cssText;\n  return goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(\n      div.style, opt_uriRewriter);\n};\n\n\n/**\n * Converts rules in STYLE tags into style attributes on the tags they apply to.\n * Modifies the provided DOM subtree in-place.\n * @param {!Element} element\n * @package\n */\ngoog.html.sanitizer.CssSanitizer.inlineStyleRules \x3d function(element) {\n  // Note that Webkit used to offer the perfect function for the job:\n  // getMatchedCSSRules. Unfortunately, it was never supported cross-browser and\n  // is deprecated now. On the other hand, getComputedStyle cannot be used to\n  // differentiate property values that are set by a style sheet from those set\n  // by a style attribute or default values. This algorithm with\n  // O(nr_of_elements * nr_of_rules) complexity that has to manually sort\n  // selectors by specificity is the best we can do.\n\n  // Extract all rules from STYLE tags found in the subtree.\n  /** @type {!Array\x3c!HTMLStyleElement\x3e} */\n  var styleTags \x3d\n      goog.html.sanitizer.noclobber.getElementsByTagName(element, \x27STYLE\x27);\n  var cssRules \x3d goog.array.concatMap(styleTags, function(styleTag) {\n    return goog.array.toArray(\n        goog.html.sanitizer.noclobber.getElementStyleSheet(styleTag).cssRules);\n  });\n  cssRules \x3d goog.html.sanitizer.CssSanitizer.getOnlyStyleRules_(cssRules);\n  // Sort the rules by descending specificity.\n  cssRules.sort(function(a, b) {\n    var aSpecificity \x3d goog.html.CssSpecificity.getSpecificity(a.selectorText);\n    var bSpecificity \x3d goog.html.CssSpecificity.getSpecificity(b.selectorText);\n    return -goog.array.compare3(aSpecificity, bSpecificity);\n  });\n  // For each element, apply the matching rules to the element style attribute.\n  // If a property is already explicitly defined, do not update it. This\n  // guarantees that the rule with selectors with the highest priority (or the\n  // properties defined in the style attribute itself) have precedence over\n  // lower priority ones.\n  var subTreeWalker \x3d document.createTreeWalker(\n      element, NodeFilter.SHOW_ELEMENT, null /* filter */,\n      false /* entityReferenceExpansion */);\n  var currentElement;\n  while (currentElement \x3d /** @type {!Element} */ (subTreeWalker.nextNode())) {\n    goog.array.forEach(cssRules, function(rule) {\n      if (!goog.html.sanitizer.noclobber.elementMatches(\n              currentElement, rule.selectorText)) {\n        return;\n      }\n      if (!rule.style) {\n        return;\n      }\n      goog.html.sanitizer.CssSanitizer.mergeStyleDeclarations_(\n          currentElement, rule.style);\n    });\n  }\n  // Delete the STYLE tags.\n  goog.array.forEach(styleTags, goog.dom.removeNode);\n};\n\n\n/**\n * Merges style properties from `styleDeclaration` into\n * `element.style`.\n * @param {!Element} element\n * @param {!CSSStyleDeclaration} styleDeclaration\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.mergeStyleDeclarations_ \x3d function(\n    element, styleDeclaration) {\n  var existingPropNames \x3d\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(element.style);\n  var newPropNames \x3d\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(styleDeclaration);\n\n  goog.array.forEach(newPropNames, function(propName) {\n    if (existingPropNames.indexOf(propName) \x3e\x3d 0) {\n      // This was either a property set by the style attribute or a stylesheet\n      // rule with a higher priority. Leave the existing value.\n      return;\n    }\n    var propValue \x3d goog.html.sanitizer.noclobber.getCssPropertyValue(\n        styleDeclaration, propName);\n    goog.html.sanitizer.noclobber.setCssProperty(\n        element.style, propName, propValue);\n  });\n};\n\n\n/**\n * Creates an DOM Document object that will not execute scripts or make\n * network requests while parsing HTML.\n * @return {!Document}\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.createInertDocument_ \x3d function() {\n  // Documents created using window.document.implementation.createHTMLDocument()\n  // use the same custom component registry as their parent document. This means\n  // that parsing arbitrary HTML can result in calls to user-defined JavaScript.\n  // This is worked around by creating a template element and its content\x27s\n  // document. See https://github.com/cure53/DOMPurify/issues/47.\n  var doc \x3d document;\n  if (typeof HTMLTemplateElement \x3d\x3d\x3d \x27function\x27) {\n    doc \x3d\n        goog.dom.createElement(goog.dom.TagName.TEMPLATE).content.ownerDocument;\n  }\n  return doc.implementation.createHTMLDocument(\x27\x27);\n};\n\n\n/**\n * Provides a cross-browser way to get a CSS property names.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @return {!Array\x3cstring\x3e} CSS property names.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.getCssPropNames_ \x3d function(cssStyle) {\n  var propNames \x3d [];\n  if (goog.isArrayLike(cssStyle)) {\n    // Gets property names via item().\n    // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-item\n    propNames \x3d goog.array.toArray(cssStyle);\n  } else {\n    // In IE8 and other older browsers we have to iterate over all the property\n    // names. We skip cssText because it contains the unsanitized CSS, which\n    // defeats the purpose.\n    propNames \x3d goog.object.getKeys(cssStyle);\n    goog.array.remove(propNames, \x27cssText\x27);\n  }\n  return propNames;\n};\n\n\n/**\n * Checks whether the property name specified should be disallowed.\n * @param {string} propName A property name.\n * @return {boolean} Whether the property name is disallowed.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_ \x3d function(\n    propName) {\n  // getPropertyValue doesn\x27t deal with custom variables properly and will NOT\n  // decode CSS escapes (but the browser will do so silently). Simply disallow\n  // custom variables (http://www.w3.org/TR/css-variables/#defining-variables).\n  return goog.string.startsWith(propName, \x27--\x27) ||\n      goog.string.startsWith(propName, \x27var\x27);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/csssanitizer.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/elementweakmap.js";
goog.loadModule("// Copyright 2017 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @package\n * @supported IE 10+ and other browsers. IE 8 and IE 9 could be supported by\n * by making anti-clobbering support optional.\n */\n\ngoog.module(\x27goog.html.sanitizer.ElementWeakMap\x27);\ngoog.module.declareLegacyNamespace();\n\nvar noclobber \x3d goog.require(\x27goog.html.sanitizer.noclobber\x27);\n\n// We also need to check if WeakMap has been polyfilled, because we want to use\n// ElementWeakMap instead of the polyfill.\n/** @const {boolean} */\nvar NATIVE_WEAKMAP_SUPPORTED \x3d typeof WeakMap !\x3d \x27undefined\x27 \x26\x26\n    WeakMap.toString().indexOf(\x27[native code]\x27) !\x3d -1;\n\n/** @const {string} */\nvar DATA_ATTRIBUTE_NAME_PREFIX \x3d \x27data-elementweakmap-index-\x27;\n\n// Increased every time a new ElementWeakMap is constructed, to guarantee\n// that each weakmap uses a different attribute name.\nvar weakMapCount \x3d 0;\n\n/**\n * A weakmap-like implementation for browsers that don\x27t support native WeakMap.\n * It uses a data attribute on the key element for O(1) lookups.\n * @template T\n * @constructor\n */\nvar ElementWeakMap \x3d function() {\n  /** @private {!Array\x3c!Element\x3e} */\n  this.keys_ \x3d [];\n\n  /** @private {!Array\x3c!T\x3e} */\n  this.values_ \x3d [];\n\n  /** @private @const {string} */\n  this.dataAttributeName_ \x3d DATA_ATTRIBUTE_NAME_PREFIX + weakMapCount++;\n};\n\n/**\n * Stores a `elementKey` -\x3e `value` mapping.\n * @param {!Element} elementKey\n * @param {!T} value\n * @return {!ElementWeakMap}\n */\nElementWeakMap.prototype.set \x3d function(elementKey, value) {\n  if (noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n    var itemIndex \x3d parseInt(\n        noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n    this.values_[itemIndex] \x3d value;\n  } else {\n    var itemIndex \x3d this.values_.push(value) - 1;\n    noclobber.setElementAttribute(\n        elementKey, this.dataAttributeName_, itemIndex.toString());\n    this.keys_.push(elementKey);\n  }\n  return this;\n};\n\n/**\n * Gets the value previously stored for `elementKey`, or undefined if no\n * value was stored for such key.\n * @param {!Element} elementKey\n * @return {!Element|undefined}\n */\nElementWeakMap.prototype.get \x3d function(elementKey) {\n  if (!noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n    return undefined;\n  }\n  var itemIndex \x3d parseInt(\n      noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n  return this.values_[itemIndex];\n};\n\n/** Clears the map. */\nElementWeakMap.prototype.clear \x3d function() {\n  this.keys_.forEach(function(el) {\n    noclobber.removeElementAttribute(el, this.dataAttributeName_);\n  }, this);\n  this.keys_ \x3d [];\n  this.values_ \x3d [];\n};\n\n/**\n * Returns either this weakmap adapter or the native weakmap implmentation, if\n * available.\n * @return {!ElementWeakMap|!WeakMap}\n */\nElementWeakMap.newWeakMap \x3d function() {\n  return NATIVE_WEAKMAP_SUPPORTED ? new WeakMap() : new ElementWeakMap();\n};\n\nexports \x3d ElementWeakMap;\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/elementweakmap.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/safedomtreeprocessor.js";
goog.loadModule("// Copyright 2017 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview A base class to safely parse and transform an HTML string\n * using an inert DOM, which avoids executing scripts and loading images. Note:\n * this class does *not* guarantee that the output does not contain scripts and\n * images that eventually execute once the output is inserted into an active DOM\n * document. If any subclass claims to produce SafeHtml output, it must be\n * reviewed separately.\n * @supported IE 10+, Chrome 26+, Firefox 22+, Safari 7.1+, Opera 15+\n * @visibility {:internal}\n * @visibility {:sapinto}\n */\n\ngoog.module(\x27goog.html.sanitizer.SafeDomTreeProcessor\x27);\ngoog.module.declareLegacyNamespace();\n\nvar ElementWeakMap \x3d goog.require(\x27goog.html.sanitizer.ElementWeakMap\x27);\nvar NodeType \x3d goog.require(\x27goog.dom.NodeType\x27);\nvar TagName \x3d goog.require(\x27goog.dom.TagName\x27);\nvar googDom \x3d goog.require(\x27goog.dom\x27);\nvar googLog \x3d goog.require(\x27goog.log\x27);\nvar noclobber \x3d goog.require(\x27goog.html.sanitizer.noclobber\x27);\nvar userAgent \x3d goog.require(\x27goog.userAgent\x27);\n\n/** @const {?googLog.Logger} */\nvar logger \x3d googLog.getLogger(\x27goog.html.sanitizer.SafeDomTreeProcessor\x27);\n\n/**\n * Whether the HTML sanitizer is supported. For now mainly exclude\n * IE9 or below, for which we know the sanitizer is insecure or broken.\n * @const {boolean}\n */\nvar SAFE_PARSING_SUPPORTED \x3d\n    !userAgent.IE || userAgent.isDocumentModeOrHigher(10);\n\n/**\n * Parses a string of unsanitized HTML and provides an iterator over the\n * resulting DOM tree nodes. The parsing operation is inert (that is,\n * it does not cause execution of any active content or cause the browser to\n * issue any requests). The returned iterator is guaranteed to iterate over a\n * parent element before iterating over any of its children.\n * @param {string} html\n * @return {!TreeWalker}\n */\nfunction getDomTreeWalker(html) {\n  var iteratorParent;\n  // Use a \x3ctemplate\x3e element if possible.\n  var templateElement \x3d document.createElement(\x27template\x27);\n  if (\x27content\x27 in templateElement) {\n    templateElement.innerHTML \x3d html;\n    iteratorParent \x3d templateElement.content;\n  } else {\n    // In browsers where \x3ctemplate\x3e is not implemented, use an inert\n    // HTMLDocument.\n    var doc \x3d document.implementation.createHTMLDocument(\x27x\x27);\n    iteratorParent \x3d doc.body;\n    doc.body.innerHTML \x3d html;\n  }\n  return document.createTreeWalker(\n      iteratorParent, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT,\n      null /* filter */, false /* entityReferenceExpansion */);\n}\n\n/**\n * Constructs a {@link SafeDomTreeProcessor} object that safely parses an input\n * string into a DOM tree using an inert document, and creates a new tree based\n * on the original tree, optionally transforming it in the process. The\n * transformation is not specified in this abstract class; subclasses are\n * supposed to override its protected methods to define a transformation that\n * allows tags and attributes, drops entire subtrees, modifies tag names or\n * attributes, etc.\n * @constructor @struct @abstract\n */\nvar SafeDomTreeProcessor \x3d function() {};\n\n/**\n * Parses an HTML string and walks the resulting DOM forest to apply the\n * transformation function and generate a new forest. Returns the string\n * representation of the forest.\n * @param {string} html\n * @return {string}\n * @protected @final\n */\nSafeDomTreeProcessor.prototype.processToString \x3d function(html) {\n  if (!SAFE_PARSING_SUPPORTED) {\n    return \x27\x27;\n  }\n\n  var newTree \x3d this.processToTree(html);\n  if (noclobber.getElementAttributes(newTree).length \x3e 0) {\n    // We want to preserve the outer SPAN tag, because the processor has\n    // attached attributes to it. To do so, we make a new SPAN tag the parent of\n    // the existing root span tag, so that the rest of the function will remove\n    // that one instead.\n    var newRoot \x3d googDom.createElement(TagName.SPAN);\n    newRoot.appendChild(newTree);\n    newTree \x3d newRoot;\n  }\n  // The XMLSerializer will add a spurious xmlns attribute to the root node.\n  var serializedNewTree \x3d new XMLSerializer().serializeToString(newTree);\n  // Remove the outer span before returning the string representation of the\n  // processed copy.\n  return serializedNewTree.slice(\n      serializedNewTree.indexOf(\x27\x3e\x27) + 1, serializedNewTree.lastIndexOf(\x27\x3c/\x27));\n};\n\n/**\n * Parses an HTML string and walks the resulting DOM forest to apply the\n * transformation function and generate a copy of the forest. Returns the forest\n * wrapped in a common SPAN parent, so that the result is always a tree.\n * @param {string} html\n * @return {!HTMLSpanElement}\n * @protected @final\n */\nSafeDomTreeProcessor.prototype.processToTree \x3d function(html) {\n  if (!SAFE_PARSING_SUPPORTED) {\n    return googDom.createElement(TagName.SPAN);\n  }\n  var newRoot \x3d googDom.createElement(TagName.SPAN);\n  // Allow subclasses to attach properties to the root.\n  this.processRoot(newRoot);\n\n  // Allow subclasses to pre-process the HTML string before performing the main\n  // tree-based transformation.\n  html \x3d this.preProcessHtml(html);\n  var originalTreeWalker \x3d getDomTreeWalker(html);\n\n  // Mapping from original nodes to new nodes, used to find the parent to which\n  // a newly processed node should be attached.\n  var elementMap \x3d ElementWeakMap.newWeakMap();\n\n  var originalNode;\n  while (originalNode \x3d originalTreeWalker.nextNode()) {\n    // Make a copy of the node, potentially dropping it or changing its content,\n    // tag name, etc.\n    var newNode \x3d this.createNode_(originalNode);\n    if (!newNode) {\n      // The transformation function chose not to copy over the node. We delete\n      // the children so that the current treeWalker will stop iterating on\n      // them.\n      googDom.removeChildren(originalNode);\n      continue;\n    }\n    if (noclobber.isNodeElement(newNode)) {\n      elementMap.set(originalNode, newNode);\n    }\n\n    // Finds the new parent to which newNode should be appended. The tree is\n    // copied top-down, so the parent of the current node has already been\n    // copied and placed into the new tree. The new parent is either the root\n    // of the new tree or a node found using originalToNewElementMap.\n    var originalParent \x3d noclobber.getParentNode(originalNode);\n    var isParentRoot \x3d false;\n    if (originalParent) {\n      var originalParentNodeType \x3d noclobber.getNodeType(originalParent);\n      var originalParentNodeName \x3d\n          noclobber.getNodeName(originalParent).toLowerCase();\n      var originalGrandParent \x3d noclobber.getParentNode(originalParent);\n      // The following checks if newParent is an immediate child of the inert\n      // parent template element.\n      if (originalParentNodeType \x3d\x3d NodeType.DOCUMENT_FRAGMENT \x26\x26\n          !originalGrandParent) {\n        isParentRoot \x3d true;\n      } else if (originalParentNodeName \x3d\x3d \x27body\x27 \x26\x26 originalGrandParent) {\n        // The following checks if newParent is an immediate child of the\n        // inert parent HtmlDocument.\n        var dirtyGreatGrandParent \x3d\n            noclobber.getParentNode(originalGrandParent);\n        if (dirtyGreatGrandParent \x26\x26\n            !noclobber.getParentNode(dirtyGreatGrandParent)) {\n          isParentRoot \x3d true;\n        }\n      }\n      var newParent \x3d null;\n      if (isParentRoot || !originalParent) {\n        newParent \x3d newRoot;\n      } else if (noclobber.isNodeElement(originalParent)) {\n        newParent \x3d elementMap.get(originalParent);\n      }\n      if (newParent.content) {\n        newParent \x3d newParent.content;\n      }\n      newParent.appendChild(newNode);\n    }\n  }\n  if (elementMap.clear) {\n    // Clear the map. On browsers that don\x27t support WeakMap, entries are not\n    // automatically cleaned up.\n    elementMap.clear();\n  }\n  return newRoot;\n};\n\n/**\n * Creates the root SPAN element for the new tree. This function can be\n * overridden to add attributes to the tag. Note that if any attributes are\n * added to the element, then {@link processToString} will not strip it from the\n * generated string to preserve the attributes.\n * @param {!HTMLSpanElement} newRoot\n * @protected @abstract\n */\nSafeDomTreeProcessor.prototype.processRoot \x3d function(newRoot) {};\n\n/**\n * Pre-processes the input html before the main tree-based transformation.\n * @param {string} html\n * @return {string}\n * @protected @abstract\n */\nSafeDomTreeProcessor.prototype.preProcessHtml \x3d function(html) {};\n\n/**\n * Returns a new node based on the transformation of an original node, or null\n * if the node and all its children should not be copied over to the new tree.\n * @param {!Node} originalNode\n * @return {?Node}\n * @private\n */\nSafeDomTreeProcessor.prototype.createNode_ \x3d function(originalNode) {\n  var nodeType \x3d noclobber.getNodeType(originalNode);\n  switch (nodeType) {\n    case NodeType.TEXT:\n      return this.createTextNode(originalNode);\n    case NodeType.ELEMENT:\n      return this.createElement_(noclobber.assertNodeIsElement(originalNode));\n    default:\n      googLog.warning(logger, \x27Dropping unknown node type: \x27 + nodeType);\n      return null;\n  }\n};\n\n/**\n * Creates a new text node from the original text node, or null if the node\n * should not be copied over to the new tree.\n * @param {!Node} originalNode\n * @return {?Node}\n * @protected @abstract\n */\nSafeDomTreeProcessor.prototype.createTextNode \x3d function(originalNode) {};\n\n/**\n * Creates a new element from the original element, potentially applying\n * transformations to the element\x27s tagname and attributes.\n * @param {!Element} originalElement\n * @return {?Element}\n * @private\n */\nSafeDomTreeProcessor.prototype.createElement_ \x3d function(originalElement) {\n  if (noclobber.getNodeName(originalElement).toUpperCase() \x3d\x3d \x27TEMPLATE\x27) {\n    // Processing TEMPLATE tags is not supported, they are automatically\n    // dropped.\n    return null;\n  }\n  var newElement \x3d this.createElementWithoutAttributes(originalElement);\n  if (!newElement) {\n    return null;\n  }\n  // Copy over element attributes, applying a transformation on each attribute.\n  this.processElementAttributes_(originalElement, newElement);\n  return newElement;\n};\n\n/**\n * Creates a new element from the original element. This function should only\n * either create a new element (optionally changing the tag name from the\n * original element) or return null to prevent the entire subtree from appearing\n * in the output. Note that TEMPLATE tags and their contents are automatically\n * dropped, and this function is not called to decide whether to keep them or\n * not.\n * @param {!Element} originalElement\n * @return {?Element}\n * @protected @abstract\n */\nSafeDomTreeProcessor.prototype.createElementWithoutAttributes \x3d function(\n    originalElement) {};\n\n/**\n * Copies over the attributes of an original node to its corresponding new node\n * generated with {@link processNode}.\n * @param {!Element} originalElement\n * @param {!Element} newElement\n * @private\n */\nSafeDomTreeProcessor.prototype.processElementAttributes_ \x3d function(\n    originalElement, newElement) {\n  var attributes \x3d noclobber.getElementAttributes(originalElement);\n  if (attributes \x3d\x3d null) {\n    return;\n  }\n  for (var i \x3d 0, attribute; attribute \x3d attributes[i]; i++) {\n    if (attribute.specified) {\n      var newValue \x3d this.processElementAttribute(originalElement, attribute);\n      if (!goog.isNull(newValue)) {\n        noclobber.setElementAttribute(newElement, attribute.name, newValue);\n      }\n    }\n  }\n};\n\n/**\n * Returns the new value for an attribute, or null if the attribute should be\n * dropped.\n * @param {!Element} element\n * @param {!Attr} attribute\n * @return {?string}\n * @protected @abstract\n */\nSafeDomTreeProcessor.prototype.processElementAttribute \x3d function(\n    element, attribute) {};\n\n/** @const {boolean} */\nSafeDomTreeProcessor.SAFE_PARSING_SUPPORTED \x3d SAFE_PARSING_SUPPORTED;\nexports \x3d SafeDomTreeProcessor;\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/safedomtreeprocessor.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/tagblacklist.js";
eval("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview Contains the tag blacklist for use in the Html sanitizer.\n */\n\ngoog.provide(\x27goog.html.sanitizer.TagBlacklist\x27);\n\n\n/**\n * A list of tags which should be removed entirely from the DOM, rather than\n * merely being made inert. Tag names must be in all caps. Note that even if\n * TEMPLATE is removed from this blacklist (or even whitelisted) it will\n * continue to be removed from the HTML  as TEMPLATE is used interally to\n * denote nodes which should not be added to the sanitized HTML.\n * @const @dict {boolean}\n */\ngoog.html.sanitizer.TagBlacklist \x3d {\n  \x27APPLET\x27: true,\n  \x27AUDIO\x27: true,\n  \x27BASE\x27: true,\n  \x27BGSOUND\x27: true,\n  \x27EMBED\x27: true,\n  // Blacklisted by default, can be allowed using allowFormTag.\n  \x27FORM\x27: true,\n  // NOTE: can remove this for old browser behavior\n  \x27IFRAME\x27: true,\n  // Can result in network requests\n  \x27ISINDEX\x27: true,\n  // Unused and just unnecessarily increase attack surface\n  \x27KEYGEN\x27: true,\n  \x27LAYER\x27: true,\n  \x27LINK\x27: true,\n  \x27META\x27: true,\n  \x27OBJECT\x27: true,\n  \x27SCRIPT\x27: true,\n  // Can result in an XSS in FF\n  // https://bugzilla.mozilla.org/show_bug.cgi?id\x3d1205631\n  \x27SVG\x27: true,\n  // Blacklisted by default, can be allowed using allowStyleTag.\n  \x27STYLE\x27: true,\n  // Unsafe in most cases, and sanitizing its contents is not supported by the\n  // underlying SafeDomTreeProcessor.\n  \x27TEMPLATE\x27: true,\n  \x27VIDEO\x27: true\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/tagblacklist.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/tagwhitelist.js";
eval("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview Contains the tag whitelist for use in the Html sanitizer.\n */\n\ngoog.provide(\x27goog.html.sanitizer.TagWhitelist\x27);\n\n\n/**\n * A tag whitelist for allowed tags. Tag names must be in all caps.\n * @const @dict {boolean}\n */\ngoog.html.sanitizer.TagWhitelist \x3d {\n  \x27A\x27: true,           // HTMLAnchorElement\n  \x27ABBR\x27: true,        // HTMLElement\n  \x27ACRONYM\x27: true,     // HTMLElement\n  \x27ADDRESS\x27: true,     // HTMLElement\n  \x27AREA\x27: true,        // HTMLAreaElement\n  \x27ARTICLE\x27: true,     // HTMLElement\n  \x27ASIDE\x27: true,       // HTMLElement\n  \x27B\x27: true,           // HTMLElement\n  \x27BDI\x27: true,         // HTMLElement\n  \x27BDO\x27: true,         // HTMLElement\n  \x27BIG\x27: true,         // HTMLElement\n  \x27BLOCKQUOTE\x27: true,  // HTMLQuoteElement\n  \x27BR\x27: true,          // HTMLBRElement\n  \x27BUTTON\x27: true,      // HTMLButtonElement\n  \x27CAPTION\x27: true,     // HTMLTableCaptionElement\n  \x27CENTER\x27: true,      // HTMLElement\n  \x27CITE\x27: true,        // HTMLElement\n  \x27CODE\x27: true,        // HTMLElement\n  \x27COL\x27: true,         // HTMLTableColElement\n  \x27COLGROUP\x27: true,    // HTMLTableColElement\n  \x27DATA\x27: true,        // HTMLElement\n  \x27DATALIST\x27: true,    // HTMLDataListElement\n  \x27DD\x27: true,          // HTMLElement\n  \x27DEL\x27: true,         // HTMLModElement\n  \x27DETAILS\x27: true,     // HTMLDetailsElement\n  \x27DFN\x27: true,         // HTMLElement\n  \x27DIALOG\x27: true,      // HTMLDialogElement\n  \x27DIR\x27: true,         // HTMLDirectoryElement\n  \x27DIV\x27: true,         // HTMLDivElement\n  \x27DL\x27: true,          // HTMLDListElement\n  \x27DT\x27: true,          // HTMLElement\n  \x27EM\x27: true,          // HTMLElement\n  \x27FIELDSET\x27: true,    // HTMLFieldSetElement\n  \x27FIGCAPTION\x27: true,  // HTMLElement\n  \x27FIGURE\x27: true,      // HTMLElement\n  \x27FONT\x27: true,        // HTMLFontElement\n  \x27FOOTER\x27: true,      // HTMLElement\n  // Disallowed by default via tagBlacklist unless allowed via the builder.\n  \x27FORM\x27: true,      // HTMLFormElement\n  \x27H1\x27: true,        // HTMLHeadingElement\n  \x27H2\x27: true,        // HTMLHeadingElement\n  \x27H3\x27: true,        // HTMLHeadingElement\n  \x27H4\x27: true,        // HTMLHeadingElement\n  \x27H5\x27: true,        // HTMLHeadingElement\n  \x27H6\x27: true,        // HTMLHeadingElement\n  \x27HEADER\x27: true,    // HTMLElement\n  \x27HGROUP\x27: true,    // HTMLElement\n  \x27HR\x27: true,        // HTMLHRElement\n  \x27I\x27: true,         // HTMLElement\n  \x27IMG\x27: true,       // HTMLImageElement\n  \x27INPUT\x27: true,     // HTMLInputElement\n  \x27INS\x27: true,       // HTMLModElement\n  \x27KBD\x27: true,       // HTMLElement\n  \x27LABEL\x27: true,     // HTMLLabelElement\n  \x27LEGEND\x27: true,    // HTMLLegendElement\n  \x27LI\x27: true,        // HTMLLIElement\n  \x27MAIN\x27: true,      // HTMLElement\n  \x27MAP\x27: true,       // HTMLMapElement\n  \x27MARK\x27: true,      // HTMLElement\n  \x27MENU\x27: true,      // HTMLMenuElement\n  \x27METER\x27: true,     // HTMLMeterElement\n  \x27NAV\x27: true,       // HTMLElement\n  \x27NOSCRIPT\x27: true,  // HTMLElement\n  \x27OL\x27: true,        // HTMLOListElement\n  \x27OPTGROUP\x27: true,  // HTMLOptGroupElement\n  \x27OPTION\x27: true,    // HTMLOptionElement\n  \x27OUTPUT\x27: true,    // HTMLOutputElement\n  \x27P\x27: true,         // HTMLParagraphElement\n  \x27PRE\x27: true,       // HTMLPreElement\n  \x27PROGRESS\x27: true,  // HTMLProgressElement\n  \x27Q\x27: true,         // HTMLQuoteElement\n  \x27S\x27: true,         // HTMLElement\n  \x27SAMP\x27: true,      // HTMLElement\n  \x27SECTION\x27: true,   // HTMLElement\n  \x27SELECT\x27: true,    // HTMLSelectElement\n  \x27SMALL\x27: true,     // HTMLElement\n  \x27SOURCE\x27: true,    // HTMLSourceElement\n  \x27SPAN\x27: true,      // HTMLSpanElement\n  \x27STRIKE\x27: true,    // HTMLElement\n  \x27STRONG\x27: true,    // HTMLElement\n  // Disallowed by default via tagBlacklist unless allowed via the builder.\n  \x27STYLE\x27: true,     // HTMLStyleElement\n  \x27SUB\x27: true,       // HTMLElement\n  \x27SUMMARY\x27: true,   // HTMLElement\n  \x27SUP\x27: true,       // HTMLElement\n  \x27TABLE\x27: true,     // HTMLTableElement\n  \x27TBODY\x27: true,     // HTMLTableSectionElement\n  \x27TD\x27: true,        // HTMLTableDataCellElement\n  \x27TEXTAREA\x27: true,  // HTMLTextAreaElement\n  \x27TFOOT\x27: true,     // HTMLTableSectionElement\n  \x27TH\x27: true,        // HTMLTableHeaderCellElement\n  \x27THEAD\x27: true,     // HTMLTableSectionElement\n  \x27TIME\x27: true,      // HTMLTimeElement\n  \x27TR\x27: true,        // HTMLTableRowElement\n  \x27TT\x27: true,        // HTMLElement\n  \x27U\x27: true,         // HTMLElement\n  \x27UL\x27: true,        // HTMLUListElement\n  \x27VAR\x27: true,       // HTMLElement\n  \x27WBR\x27: true        // HTMLElement\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/tagwhitelist.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/html/sanitizer/htmlsanitizer.js";
eval("// Copyright 2016 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview An HTML sanitizer that can satisfy a variety of security\n * policies.\n *\n * This package provides html sanitizing functions. It does not enforce string\n * to string conversion, instead returning a dom-like element when possible.\n *\n * Examples of usage of the static `goog.goog.html.sanitizer.sanitize`:\n * \x3cpre\x3e\n *   var safeHtml \x3d goog.html.sanitizer.sanitize(\x27\x3cscript src\x3d\x22xss.js\x22 /\x3e\x27);\n *   goog.dom.safe.setInnerHtml(el, safeHtml);\n * \x3c/pre\x3e\n *\n * @author ojensen@google.com (Oliver Jensen)\n * @author jasvir@google.com (Jasvir Nagra)\n * @supported IE 10+, Chrome 26+, Firefox 22+, Safari 7.1+, Opera 15+\n */\n\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizer\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizer.Builder\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizerAttributePolicy\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizerPolicy\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizerPolicyContext\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizerPolicyHints\x27);\ngoog.provide(\x27goog.html.sanitizer.HtmlSanitizerUrlPolicy\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.TagName\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27goog.html.SafeHtml\x27);\ngoog.require(\x27goog.html.SafeStyle\x27);\ngoog.require(\x27goog.html.SafeStyleSheet\x27);\ngoog.require(\x27goog.html.SafeUrl\x27);\ngoog.require(\x27goog.html.sanitizer.AttributeSanitizedWhitelist\x27);\ngoog.require(\x27goog.html.sanitizer.AttributeWhitelist\x27);\ngoog.require(\x27goog.html.sanitizer.CssSanitizer\x27);\ngoog.require(\x27goog.html.sanitizer.SafeDomTreeProcessor\x27);\ngoog.require(\x27goog.html.sanitizer.TagBlacklist\x27);\ngoog.require(\x27goog.html.sanitizer.TagWhitelist\x27);\ngoog.require(\x27goog.html.sanitizer.noclobber\x27);\ngoog.require(\x27goog.html.uncheckedconversions\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27goog.string.Const\x27);\ngoog.require(\x27goog.userAgent\x27);\n\n\n/**\n * Type for optional hints to policy handler functions.\n * @typedef {{\n *     tagName: (string|undefined),\n *     attributeName: (string|undefined),\n *     cssProperty: (string|undefined)\n *     }}\n */\ngoog.html.sanitizer.HtmlSanitizerPolicyHints;\n\n\n/**\n * Type for optional context objects to the policy handler functions.\n * @typedef {{\n *     cssStyle: (?CSSStyleDeclaration|undefined)\n *     }}\n */\ngoog.html.sanitizer.HtmlSanitizerPolicyContext;\n\n\n/**\n * Type for a policy function.\n * @typedef {function(string, goog.html.sanitizer.HtmlSanitizerPolicyHints\x3d,\n *     goog.html.sanitizer.HtmlSanitizerPolicyContext\x3d,\n *     (function(string, ?\x3d, ?\x3d, ?\x3d):?string)\x3d):?string}\n */\ngoog.html.sanitizer.HtmlSanitizerPolicy;\n\n\n/**\n * Type for a URL policy function.\n *\n * @typedef {function(string, !goog.html.sanitizer.HtmlSanitizerPolicyHints\x3d):\n *     ?goog.html.SafeUrl}\n */\ngoog.html.sanitizer.HtmlSanitizerUrlPolicy;\n\n\n/**\n * Type for attribute policy configuration.\n * @typedef {{\n *     tagName: string,\n *     attributeName: string,\n *     policy: ?goog.html.sanitizer.HtmlSanitizerPolicy\n * }}\n */\ngoog.html.sanitizer.HtmlSanitizerAttributePolicy;\n\n\n/**\n * Whether the template tag is supported.\n * @package @const {boolean}\n */\ngoog.html.sanitizer.HTML_SANITIZER_TEMPLATE_SUPPORTED \x3d\n    !goog.userAgent.IE || document.documentMode \x3d\x3d null;\n\n\n/**\n * Prefix used by all internal html sanitizer booking properties.\n * @private @const {string}\n */\ngoog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ \x3d \x27data-sanitizer-\x27;\n\n\n/**\n * Attribute name added to span tags that replace unknown tags. The value of\n * this attribute is the name of the tag before the sanitization occurred.\n * @private @const {string}\n */\ngoog.html.sanitizer.HTML_SANITIZER_SANITIZED_ATTR_NAME_ \x3d\n    goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ + \x27original-tag\x27;\n\n\n/**\n * Special value for the STYLE container ID, which makes the sanitizer choose\n * a new random ID on each call to {@link sanitize}.\n * @private @const {string}\n */\ngoog.html.sanitizer.RANDOM_CONTAINER_ \x3d \x27*\x27;\n\n\n\n/**\n * Creates an HTML sanitizer.\n * @param {!goog.html.sanitizer.HtmlSanitizer.Builder\x3d} opt_builder\n * @final @constructor @struct\n * @extends {goog.html.sanitizer.SafeDomTreeProcessor}\n */\ngoog.html.sanitizer.HtmlSanitizer \x3d function(opt_builder) {\n  goog.html.sanitizer.SafeDomTreeProcessor.call(this);\n\n  var builder \x3d opt_builder || new goog.html.sanitizer.HtmlSanitizer.Builder();\n\n  builder.installPolicies_();\n\n  /**\n   * @private @const {!Object\x3cstring, !goog.html.sanitizer.HtmlSanitizerPolicy\x3e}\n   */\n  this.attributeHandlers_ \x3d goog.object.clone(builder.attributeWhitelist_);\n\n  /** @private @const {!Object\x3cstring, boolean\x3e} */\n  this.tagBlacklist_ \x3d goog.object.clone(builder.tagBlacklist_);\n\n  /** @private @const {!Object\x3cstring, boolean\x3e} */\n  this.tagWhitelist_ \x3d goog.object.clone(builder.tagWhitelist_);\n\n  /** @private @const {boolean} */\n  this.shouldAddOriginalTagNames_ \x3d builder.shouldAddOriginalTagNames_;\n\n  // Add whitelist data-* attributes from the builder to the attributeHandlers\n  // with a default cleanUpAttribute function. data-* attributes are inert as\n  // per HTML5 specs, so not much sanitization needed.\n  goog.array.forEach(builder.dataAttributeWhitelist_, function(dataAttr) {\n    goog.asserts.assert(goog.string.startsWith(dataAttr, \x27data-\x27));\n    goog.asserts.assert(!goog.string.startsWith(\n        dataAttr, goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_));\n\n    this.attributeHandlers_[\x27* \x27 + dataAttr.toUpperCase()] \x3d\n        /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (\n            goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_);\n  }, this);\n\n  /** @private @const {!goog.html.sanitizer.HtmlSanitizerUrlPolicy} */\n  this.networkRequestUrlPolicy_ \x3d builder.networkRequestUrlPolicy_;\n\n  /** @private @const {?string} */\n  this.styleContainerId_ \x3d builder.styleContainerId_;\n\n  /** @private {?string} */\n  this.currentStyleContainerId_ \x3d null;\n\n  /** @private @const {boolean} */\n  this.inlineStyleRules_ \x3d builder.inlineStyleRules_;\n};\ngoog.inherits(\n    goog.html.sanitizer.HtmlSanitizer,\n    goog.html.sanitizer.SafeDomTreeProcessor);\n\n\n/**\n * Transforms a {@link HtmlSanitizerUrlPolicy} into a\n * {@link HtmlSanitizerPolicy} by returning a wrapper that calls the {@link\n * HtmlSanitizerUrlPolicy} with the required arguments and unwraps the returned\n * {@link SafeUrl}. This is necessary because internally the sanitizer works\n * with {@HtmlSanitizerPolicy} to sanitize attributes, but its public API must\n * use {@HtmlSanitizerUrlPolicy} to ensure that callers do not violate SafeHtml\n * invariants in their custom handlers.\n * @param {!goog.html.sanitizer.HtmlSanitizerUrlPolicy} urlPolicy\n * @return {!goog.html.sanitizer.HtmlSanitizerPolicy}\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_ \x3d function(urlPolicy) {\n  return /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (function(\n      url, policyHints) {\n    var trimmed \x3d goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_(url);\n    var safeUrl \x3d urlPolicy(trimmed, policyHints);\n    if (safeUrl \x26\x26\n        goog.html.SafeUrl.unwrap(safeUrl) !\x3d\n            goog.html.SafeUrl.INNOCUOUS_STRING) {\n      return goog.html.SafeUrl.unwrap(safeUrl);\n    } else {\n      return null;\n    }\n  });\n};\n\n\n\n/**\n * The builder for the HTML Sanitizer. All methods except build return\n * `this`.\n * @final @constructor @struct\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder \x3d function() {\n  /**\n   * A set of attribute sanitization functions. Default built-in handlers are\n   * all tag-agnostic by design. Note that some attributes behave differently\n   * when attached to different nodes (for example, the href attribute will\n   * generally not make a network request, but \x26lt;link href\x3d\x22\x22\x26gt; does), and\n   * so when necessary a tag-specific handler can be used to override a\n   * tag-agnostic one.\n   * @private {!Object\x3cstring, !goog.html.sanitizer.HtmlSanitizerPolicy\x3e}\n   */\n  this.attributeWhitelist_ \x3d {};\n  goog.array.forEach(\n      [\n        goog.html.sanitizer.AttributeWhitelist,\n        goog.html.sanitizer.AttributeSanitizedWhitelist\n      ],\n      function(wl) {\n        goog.array.forEach(goog.object.getKeys(wl), function(attr) {\n          this.attributeWhitelist_[attr] \x3d\n              /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */\n              (goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_);\n        }, this);\n      },\n      this);\n\n  /**\n   * A set of attribute handlers that should not inherit their default policy\n   * during build().\n   * @private @const {!Object\x3cstring, boolean\x3e}\n   */\n  this.attributeOverrideList_ \x3d {};\n\n  /**\n   * List of data attributes to whitelist. Data-attributes are inert and don\x27t\n   * require sanitization.\n   * @private @const {!Array\x3cstring\x3e}\n   */\n  this.dataAttributeWhitelist_ \x3d [];\n\n  /**\n   * A tag blacklist, to effectively remove an element and its children from the\n   * dom.\n   * @private @const {!Object\x3cstring, boolean\x3e}\n   */\n  this.tagBlacklist_ \x3d goog.object.clone(goog.html.sanitizer.TagBlacklist);\n\n  /**\n   * A tag whitelist, to effectively allow an element and its children from the\n   * dom.\n   * @private {!Object\x3cstring, boolean\x3e}\n   */\n  this.tagWhitelist_ \x3d goog.object.clone(goog.html.sanitizer.TagWhitelist);\n\n  /**\n   * Whether non-whitelisted and non-blacklisted tags that have been converted\n   * to \x26lt;span\x26rt; tags will contain the original tag in a data attribute.\n   * @private {boolean}\n   */\n  this.shouldAddOriginalTagNames_ \x3d false;\n\n  /**\n   * A function to be applied to URLs found on the parsing process which do not\n   * trigger requests.\n   * @private {!goog.html.sanitizer.HtmlSanitizerUrlPolicy}\n   */\n  this.urlPolicy_ \x3d goog.html.sanitizer.HtmlSanitizer.defaultUrlPolicy_;\n\n  /**\n   * A function to be applied to urls found on the parsing process which may\n   * trigger requests.\n   * @private {!goog.html.sanitizer.HtmlSanitizerUrlPolicy}\n   */\n  this.networkRequestUrlPolicy_ \x3d\n      goog.html.sanitizer.HtmlSanitizer.defaultNetworkRequestUrlPolicy_;\n\n  /**\n   * A function to be applied to names found on the parsing process.\n   * @private {!goog.html.sanitizer.HtmlSanitizerPolicy}\n   */\n  this.namePolicy_ \x3d goog.html.sanitizer.HtmlSanitizer.defaultNamePolicy_;\n\n  /**\n   * A function to be applied to other tokens (i.e. classes and IDs) found on\n   * the parsing process.\n   * @private {!goog.html.sanitizer.HtmlSanitizerPolicy}\n   */\n  this.tokenPolicy_ \x3d goog.html.sanitizer.HtmlSanitizer.defaultTokenPolicy_;\n\n  /**\n   * A function to sanitize inline CSS styles. Defaults to deny all.\n   * @private {function(\n   *     !goog.html.sanitizer.HtmlSanitizerPolicy,\n   *     string,\n   *     !goog.html.sanitizer.HtmlSanitizerPolicyHints,\n   *     !goog.html.sanitizer.HtmlSanitizerPolicyContext):?string}\n   */\n  this.sanitizeInlineCssPolicy_ \x3d goog.functions.NULL;\n\n  /**\n   * An optional ID to restrict the scope of CSS rules when STYLE tags are\n   * allowed.\n   * @private {?string}\n   */\n  this.styleContainerId_ \x3d null;\n\n  /**\n   * Whether rules in STYLE tags should be inlined into style attributes.\n   * @private {boolean}\n   */\n  this.inlineStyleRules_ \x3d false;\n\n  /**\n   * True iff policies have been installed for the instance.\n   * @private {boolean}\n   */\n  this.policiesInstalled_ \x3d false;\n};\n\n\n/**\n * Extends the list of allowed data attributes.\n * @param {!Array\x3cstring\x3e} dataAttributeWhitelist\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.allowDataAttributes \x3d\n    function(dataAttributeWhitelist) {\n  goog.array.extend(this.dataAttributeWhitelist_, dataAttributeWhitelist);\n  return this;\n};\n\n\n/**\n * Allows form tags in the HTML. Without this all form tags and content will be\n * dropped.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.allowFormTag \x3d function() {\n  delete this.tagBlacklist_[\x27FORM\x27];\n  return this;\n};\n\n\n/**\n * Allows STYLE tags. Note that the sanitizer wraps the output of each call to\n * {@link sanitize} with a SPAN tag, give it a random ID unique across multiple\n * calls, and then restrict all CSS rules found inside STYLE tags to only apply\n * to children of the SPAN tag. This means that CSS rules in STYLE tags will\n * only apply to content provided in the same call to {@link sanitize}. This\n * feature is not compatible with {@link inlineStyleRules}.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.allowStyleTag \x3d function() {\n  if (this.inlineStyleRules_) {\n    throw new Error(\x27Rules from STYLE tags are already being inlined.\x27);\n  }\n  delete this.tagBlacklist_[\x27STYLE\x27];\n  this.styleContainerId_ \x3d goog.html.sanitizer.RANDOM_CONTAINER_;\n  return this;\n};\n\n\n/**\n * Fixes the ID of the style container used for CSS rules found in STYLE tags,\n * and disables automatic wrapping with the container. This allows multiple\n * calls to {@link sanitize} to share STYLE rules. If opt_styleContainer is\n * missing, the sanitizer will stop restricting the scope of CSS rules\n * altogether. Requires {@link allowStyleTag} to be called first.\n * @param {string\x3d} opt_styleContainer An optional container ID to restrict the\n *     scope of any CSS rule found in STYLE tags.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.withStyleContainer \x3d\n    function(opt_styleContainer) {\n  if (\x27STYLE\x27 in this.tagBlacklist_) {\n    throw new Error(\x27STYLE tags must first be allowed through allowStyleTag.\x27);\n  }\n  if (opt_styleContainer !\x3d undefined) {\n    if (!/^[a-zA-Z][\\w-:\\.]*$/.test(opt_styleContainer)) {\n      throw new Error(\x27Invalid ID.\x27);\n    }\n    this.styleContainerId_ \x3d opt_styleContainer;\n  } else {\n    this.styleContainerId_ \x3d null;\n  }\n  return this;\n};\n\n\n/**\n * Converts rules in STYLE tags into style attributes on the tags they apply to.\n * This feature is not compatible with {@link withStyleContainer} and {@link\n * allowStyleTag}. This method requires {@link allowCssStyles} (otherwise rules\n * would be deleted after being inlined), and is not compatible with {@link\n * allowStyleTag}.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.inlineStyleRules \x3d\n    function() {\n  if (this.sanitizeInlineCssPolicy_ \x3d\x3d goog.functions.NULL) {\n    throw new Error(\n        \x27Inlining style rules requires allowing STYLE attributes \x27 +\n        \x27first.\x27);\n  }\n  if (!(\x27STYLE\x27 in this.tagBlacklist_)) {\n    throw new Error(\n        \x27You have already configured the builder to allow STYLE tags in the \x27 +\n        \x27output. Inlining style rules would prevent STYLE tags from \x27 +\n        \x27appearing in the output and conflict with such directive.\x27);\n  }\n  this.inlineStyleRules_ \x3d true;\n  return this;\n};\n\n\n/**\n * Allows inline CSS styles.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.allowCssStyles \x3d\n    function() {\n  this.sanitizeInlineCssPolicy_ \x3d\n      goog.html.sanitizer.HtmlSanitizer.sanitizeCssDeclarationList_;\n  return this;\n};\n\n\n/**\n * Extends the tag whitelist (Package-internal utility method only).\n * @param {!Array\x3cstring\x3e} tags The list of tags to be added to the whitelist.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n * @package\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype\n    .alsoAllowTagsPrivateDoNotAccessOrElse \x3d function(tags) {\n  goog.array.forEach(tags, function(tag) {\n    this.tagWhitelist_[tag.toUpperCase()] \x3d true;\n  }, this);\n  return this;\n};\n\n\n/**\n * Extends the attribute whitelist (Package-internal utility method only).\n * @param {!Array\x3c(string|!goog.html.sanitizer.HtmlSanitizerAttributePolicy)\x3e}\n *     attrs The list of attributes to be added to the whitelist.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n * @package\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype\n    .alsoAllowAttributesPrivateDoNotAccessOrElse \x3d function(attrs) {\n  goog.array.forEach(attrs, function(attr) {\n    if (goog.isString(attr)) {\n      attr \x3d {tagName: \x27*\x27, attributeName: attr, policy: null};\n    }\n    var handlerName \x3d goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(\n        attr.tagName, attr.attributeName);\n    this.attributeWhitelist_[handlerName] \x3d attr.policy ?\n        attr.policy :\n        /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (\n            goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_);\n    this.attributeOverrideList_[handlerName] \x3d true;\n  }, this);\n  return this;\n};\n\n\n/**\n * Allows only the provided whitelist of tags. Tags still need to be in the\n * TagWhitelist to be allowed.\n * \x3cp\x3e\n * SPAN tags are ALWAYS ALLOWED as part of the mechanism required to preserve\n * the HTML tree structure (when removing non-blacklisted tags and\n * non-whitelisted tags).\n * @param {!Array\x3cstring\x3e} tagWhitelist\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n * @throws {Error} Thrown if an attempt is made to allow a non-whitelisted tag.\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.onlyAllowTags \x3d function(\n    tagWhitelist) {\n  this.tagWhitelist_ \x3d {\x27SPAN\x27: true};\n  goog.array.forEach(tagWhitelist, function(tag) {\n    tag \x3d tag.toUpperCase();\n    if (goog.html.sanitizer.TagWhitelist[tag]) {\n      this.tagWhitelist_[tag] \x3d true;\n    } else {\n      throw new Error(\n          \x27Only whitelisted tags can be allowed. See \x27 +\n          \x27goog.html.sanitizer.TagWhitelist.\x27);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Allows only the provided whitelist of attributes, possibly setting a custom\n * policy for them. The set of tag/attribute combinations need to be a subset of\n * the currently allowed combinations.\n * \x3cp\x3e\n * Note that you cannot define a generic handler for an attribute if only a\n * tag-specific one is present, and vice versa. To configure the sanitizer to\n * accept an attribute only for a specific tag when only a generic handler is\n * whitelisted, use the goog.html.sanitizer.HtmlSanitizerPolicyHints parameter\n * and simply reject the attribute in unwanted tags.\n * \x3cp\x3e\n * Also note that the sanitizer\x27s policy is still called after the provided one,\n * to ensure that supplying misconfigured policy cannot introduce\n * vulnerabilities. To completely override an existing attribute policy or to\n * allow new attributes, see the goog.html.sanitizer.unsafe package.\n * @param {!Array\x3c(string|!goog.html.sanitizer.HtmlSanitizerAttributePolicy)\x3e}\n *     attrWhitelist The subset of attributes that the sanitizer will accept.\n *     Attributes can come in of two forms:\n *     - string: allow all values for this attribute on all tags.\n *     - HtmlSanitizerAttributePolicy: allows specifying a policy for a\n *         particular tag. The tagName can be \x22*\x22, which means all tags. If no\n *         policy is passed, the default is to allow all values.\n *     The tag and attribute names are case-insensitive.\n *     Note that the policy for id, URLs, names etc is controlled separately\n *     (using withCustom* methods).\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n * @throws {Error} Thrown if an attempt is made to allow a non-whitelisted\n *     attribute.\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.onlyAllowAttributes \x3d\n    function(attrWhitelist) {\n  var oldWhitelist \x3d this.attributeWhitelist_;\n  this.attributeWhitelist_ \x3d {};\n  goog.array.forEach(attrWhitelist, function(attr) {\n    if (goog.typeOf(attr) \x3d\x3d\x3d \x27string\x27) {\n      attr \x3d {tagName: \x27*\x27, attributeName: attr.toUpperCase(), policy: null};\n    }\n    var handlerName \x3d goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(\n        attr.tagName, attr.attributeName);\n    if (!oldWhitelist[handlerName]) {\n      throw new Error(\x27Only whitelisted attributes can be allowed.\x27);\n    }\n    this.attributeWhitelist_[handlerName] \x3d attr.policy ?\n        attr.policy :\n        /** @type {goog.html.sanitizer.HtmlSanitizerPolicy} */ (\n            goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_);\n  }, this);\n  return this;\n};\n\n\n/**\n * Adds the original tag name in the data attribute \x27original-tag\x27 when unknown\n * tags are sanitized to \x26lt;span\x26rt;, so that caller can distinguish them from\n * actual \x26lt;span\x26rt; tags.\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.addOriginalTagNames \x3d\n    function() {\n  this.shouldAddOriginalTagNames_ \x3d true;\n  return this;\n};\n\n\n/**\n * Sets a custom network URL policy.\n * @param {!goog.html.sanitizer.HtmlSanitizerUrlPolicy}\n *     customNetworkReqUrlPolicy\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype\n    .withCustomNetworkRequestUrlPolicy \x3d function(customNetworkReqUrlPolicy) {\n  this.networkRequestUrlPolicy_ \x3d customNetworkReqUrlPolicy;\n  return this;\n};\n\n\n/**\n * Sets a custom non-network URL policy.\n * @param {!goog.html.sanitizer.HtmlSanitizerUrlPolicy} customUrlPolicy\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.withCustomUrlPolicy \x3d\n    function(customUrlPolicy) {\n  this.urlPolicy_ \x3d customUrlPolicy;\n  return this;\n};\n\n\n/**\n * Sets a custom name policy.\n * @param {!goog.html.sanitizer.HtmlSanitizerPolicy} customNamePolicy\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.withCustomNamePolicy \x3d\n    function(customNamePolicy) {\n  this.namePolicy_ \x3d customNamePolicy;\n  return this;\n};\n\n\n/**\n * Sets a custom token policy.\n * @param {!goog.html.sanitizer.HtmlSanitizerPolicy} customTokenPolicy\n * @return {!goog.html.sanitizer.HtmlSanitizer.Builder}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.withCustomTokenPolicy \x3d\n    function(customTokenPolicy) {\n  this.tokenPolicy_ \x3d customTokenPolicy;\n  return this;\n};\n\n\n/**\n * Wraps a custom policy function with the sanitizer\x27s default policy.\n * @param {?goog.html.sanitizer.HtmlSanitizerPolicy} customPolicy The custom\n *     policy for the tag/attribute combination.\n * @param {!goog.html.sanitizer.HtmlSanitizerPolicy} defaultPolicy The\n *     sanitizer\x27s policy that is always called after the custom policy.\n * @return {!goog.html.sanitizer.HtmlSanitizerPolicy}\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.wrapPolicy_ \x3d function(\n    customPolicy, defaultPolicy) {\n  return /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (function(\n      value, hints, ctx, policy) {\n    var result \x3d customPolicy(value, hints, ctx, policy);\n    return result \x3d\x3d null ? null : defaultPolicy(result, hints, ctx, policy);\n  });\n};\n\n\n/**\n * Installs the sanitizer\x27s default policy for a specific tag/attribute\n * combination on the provided whitelist, but only if a policy already exists.\n * @param {!Object\x3cstring, !goog.html.sanitizer.HtmlSanitizerPolicy\x3e}\n *     whitelist The whitelist to modify.\n * @param {!Object\x3cstring, boolean\x3e} overrideList The set of attributes handlers\n *     that should not be wrapped with a default policy.\n * @param {string} key The tag/attribute combination\n * @param {!goog.html.sanitizer.HtmlSanitizerPolicy} defaultPolicy The\n *     sanitizer\x27s policy.\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.installDefaultPolicy_ \x3d function(\n    whitelist, overrideList, key, defaultPolicy) {\n  if (whitelist[key] \x26\x26 !overrideList[key]) {\n    whitelist[key] \x3d goog.html.sanitizer.HtmlSanitizer.wrapPolicy_(\n        whitelist[key], defaultPolicy);\n  }\n};\n\n\n/**\n * Builds and returns a goog.html.sanitizer.HtmlSanitizer object.\n * @return {!goog.html.sanitizer.HtmlSanitizer}\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.build \x3d function() {\n  return new goog.html.sanitizer.HtmlSanitizer(this);\n};\n\n\n/**\n * Installs the sanitization policies for the attributes.\n * May only be called once.\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.Builder.prototype.installPolicies_ \x3d\n    function() {\n  if (this.policiesInstalled_) {\n    throw new Error(\x27HtmlSanitizer.Builder.build() can only be used once.\x27);\n  }\n\n  var installPolicy \x3d goog.html.sanitizer.HtmlSanitizer.installDefaultPolicy_;\n\n  // Binding all the non-trivial attribute sanitizers to the appropriate,\n  // potentially customizable, handling functions at build().\n  installPolicy(\n      this.attributeWhitelist_, this.attributeOverrideList_, \x27* USEMAP\x27,\n      /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (\n          goog.html.sanitizer.HtmlSanitizer.sanitizeUrlFragment_));\n\n  var urlAttributes \x3d [\x27* ACTION\x27, \x27* CITE\x27, \x27* HREF\x27];\n  var urlPolicy \x3d\n      goog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_(this.urlPolicy_);\n  goog.array.forEach(urlAttributes, function(attribute) {\n    installPolicy(\n        this.attributeWhitelist_, this.attributeOverrideList_, attribute,\n        urlPolicy);\n  }, this);\n\n  var networkUrlAttributes \x3d [\n    // LONGDESC can result in a network request. See b/23381636.\n    \x27* LONGDESC\x27, \x27* SRC\x27, \x27LINK HREF\x27\n  ];\n  var networkRequestUrlPolicy \x3d\n      goog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_(\n          this.networkRequestUrlPolicy_);\n  goog.array.forEach(networkUrlAttributes, function(attribute) {\n    installPolicy(\n        this.attributeWhitelist_, this.attributeOverrideList_, attribute,\n        networkRequestUrlPolicy);\n  }, this);\n\n  var nameAttributes \x3d [\x27* FOR\x27, \x27* HEADERS\x27, \x27* NAME\x27];\n  goog.array.forEach(nameAttributes, function(attribute) {\n    installPolicy(\n        this.attributeWhitelist_, this.attributeOverrideList_, attribute,\n        /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (goog.partial(\n            goog.html.sanitizer.HtmlSanitizer.sanitizeName_,\n            this.namePolicy_)));\n  }, this);\n\n  installPolicy(\n      this.attributeWhitelist_, this.attributeOverrideList_, \x27A TARGET\x27,\n      /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (goog.partial(\n          goog.html.sanitizer.HtmlSanitizer.allowedAttributeValues_,\n          [\x27_blank\x27, \x27_self\x27])));\n\n  installPolicy(\n      this.attributeWhitelist_, this.attributeOverrideList_, \x27* CLASS\x27,\n      /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (goog.partial(\n          goog.html.sanitizer.HtmlSanitizer.sanitizeClasses_,\n          this.tokenPolicy_)));\n\n  installPolicy(\n      this.attributeWhitelist_, this.attributeOverrideList_, \x27* ID\x27,\n      /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */ (goog.partial(\n          goog.html.sanitizer.HtmlSanitizer.sanitizeId_, this.tokenPolicy_)));\n\n  installPolicy(\n      this.attributeWhitelist_, this.attributeOverrideList_, \x27* STYLE\x27,\n      /** @type {!goog.html.sanitizer.HtmlSanitizerPolicy} */\n      (goog.partial(this.sanitizeInlineCssPolicy_, networkRequestUrlPolicy)));\n\n  this.policiesInstalled_ \x3d true;\n};\n\n\n/**\n * The default policy for URLs: allow any.\n * @private @const {!goog.html.sanitizer.HtmlSanitizerUrlPolicy}\n */\ngoog.html.sanitizer.HtmlSanitizer.defaultUrlPolicy_ \x3d\n    goog.html.SafeUrl.sanitize;\n\n\n/**\n * The default policy for URLs which cause network requests: drop all.\n * @private @const {!goog.html.sanitizer.HtmlSanitizerUrlPolicy}\n */\ngoog.html.sanitizer.HtmlSanitizer.defaultNetworkRequestUrlPolicy_ \x3d\n    goog.functions.NULL;\n\n\n/**\n * The default policy for attribute names: drop all.\n * @private @const {!goog.html.sanitizer.HtmlSanitizerPolicy}\n */\ngoog.html.sanitizer.HtmlSanitizer.defaultNamePolicy_ \x3d goog.functions.NULL;\n\n\n/**\n * The default policy for other tokens (i.e. class names and IDs): drop all.\n * @private @const {!goog.html.sanitizer.HtmlSanitizerPolicy}\n */\ngoog.html.sanitizer.HtmlSanitizer.defaultTokenPolicy_ \x3d goog.functions.NULL;\n\n\n\n/**\n * Returns a key into the attribute handlers dictionary given a node name and\n * an attribute name. If no node name is given, returns a key applying to all\n * nodes.\n * @param {?string} nodeName\n * @param {string} attributeName\n * @return {string} key into attribute handlers dict\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.attrIdentifier_ \x3d function(\n    nodeName, attributeName) {\n  if (!nodeName) {\n    nodeName \x3d \x27*\x27;\n  }\n  return (nodeName + \x27 \x27 + attributeName).toUpperCase();\n};\n\n\n/**\n * Sanitizes a list of CSS declarations.\n * @param {goog.html.sanitizer.HtmlSanitizerPolicy} policySanitizeUrl\n * @param {string} attrValue\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyContext} policyContext\n * @return {?string} sanitizedCss from the policyContext\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitizeCssDeclarationList_ \x3d function(\n    policySanitizeUrl, attrValue, policyHints, policyContext) {\n  if (!policyContext.cssStyle) {\n    return null;\n  }\n  var naiveUriRewriter \x3d function(uri, prop) {\n    policyHints.cssProperty \x3d prop;\n    var sanitizedUrl \x3d policySanitizeUrl(uri, policyHints);\n    if (sanitizedUrl \x3d\x3d null) {\n      return null;\n    }\n    return goog.html.uncheckedconversions\n        .safeUrlFromStringKnownToSatisfyTypeContract(\n            goog.string.Const.from(\n                \x27HtmlSanitizerPolicy created with networkRequestUrlPolicy_ \x27 +\n                \x27when installing \\\x27* STYLE\\\x27 handler.\x27),\n            sanitizedUrl);\n  };\n  var sanitizedStyle \x3d goog.html.SafeStyle.unwrap(\n      goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(\n          policyContext.cssStyle, naiveUriRewriter));\n  return sanitizedStyle \x3d\x3d \x27\x27 ? null : sanitizedStyle;\n};\n\n\n/**\n * Cleans up an attribute value that we don\x27t particularly want to do anything\n * to. At the moment we just trim the whitespace.\n * @param {string} attrValue\n * @return {string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_ \x3d function(attrValue) {\n  return goog.string.trim(attrValue);\n};\n\n\n/**\n * Allows a set of attribute values.\n * @param {!Array\x3cstring\x3e} allowedValues Set of allowed values lowercased.\n * @param {string} attrValue\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @return {?string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.allowedAttributeValues_ \x3d function(\n    allowedValues, attrValue, policyHints) {\n  var trimmed \x3d goog.string.trim(attrValue);\n  return goog.array.contains(allowedValues, trimmed.toLowerCase()) ? trimmed :\n                                                                     null;\n};\n\n\n/**\n * Sanitizes URL fragments.\n * @param {string} urlFragment\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @return {?string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitizeUrlFragment_ \x3d function(\n    urlFragment, policyHints) {\n  var trimmed \x3d goog.string.trim(urlFragment);\n  if (trimmed \x26\x26 trimmed.charAt(0) \x3d\x3d \x27#\x27) {\n    // We do not apply the name or token policy to Url Fragments by design.\n    return trimmed;\n  }\n  return null;\n};\n\n\n/**\n * Runs an attribute name through a name policy.\n * @param {goog.html.sanitizer.HtmlSanitizerPolicy} namePolicy\n * @param {string} attrName\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @return {?string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitizeName_ \x3d function(\n    namePolicy, attrName, policyHints) {\n  var trimmed \x3d goog.string.trim(attrName);\n  /* NOTE(jasvir):\n   * There are two cases to be concerned about - escaped quotes in attribute\n   * values which is the responsibility of the serializer and illegal\n   * characters.  The latter does violate the spec but I do not believe it has\n   * a security consequence.\n   */\n  return namePolicy(trimmed, policyHints);\n};\n\n\n/**\n * Ensures that the class prefix is present on all space-separated tokens\n * (i.e. all class names).\n * @param {goog.html.sanitizer.HtmlSanitizerPolicy} tokenPolicy\n * @param {string} attrValue\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @return {?string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitizeClasses_ \x3d function(\n    tokenPolicy, attrValue, policyHints) {\n  var classes \x3d attrValue.split(/(?:\\s+)/);\n  var sanitizedClasses \x3d [];\n  for (var i \x3d 0; i \x3c classes.length; i++) {\n    var sanitizedClass \x3d tokenPolicy(classes[i], policyHints);\n    if (sanitizedClass) {\n      sanitizedClasses.push(sanitizedClass);\n    }\n  }\n  return sanitizedClasses.length \x3d\x3d 0 ? null : sanitizedClasses.join(\x27 \x27);\n};\n\n\n/**\n * Ensures that the id prefix is present.\n * @param {goog.html.sanitizer.HtmlSanitizerPolicy} tokenPolicy\n * @param {string} attrValue\n * @param {goog.html.sanitizer.HtmlSanitizerPolicyHints} policyHints\n * @return {?string} sanitizedAttrValue\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitizeId_ \x3d function(\n    tokenPolicy, attrValue, policyHints) {\n  var trimmed \x3d goog.string.trim(attrValue);\n  return tokenPolicy(trimmed, policyHints);\n};\n\n\n/**\n * Retrieves a HtmlSanitizerPolicyContext from a dirty node given an attribute\n * name.\n * @param {string} attributeName\n * @param {!Element} dirtyElement\n * @return {!goog.html.sanitizer.HtmlSanitizerPolicyContext}\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.getContext_ \x3d function(\n    attributeName, dirtyElement) {\n  var policyContext \x3d {cssStyle: undefined};\n  if (attributeName \x3d\x3d \x27style\x27) {\n    policyContext.cssStyle \x3d\n        goog.html.sanitizer.noclobber.getElementStyle(dirtyElement);\n  }\n  return policyContext;\n};\n\n\n/**\n * Parses the DOM tree of a given HTML string, then walks the tree. For each\n * element, it creates a new sanitized version, applies sanitized attributes,\n * and returns a SafeHtml object representing the sanitized tree.\n * @param {string} unsanitizedHtml\n * @return {!goog.html.SafeHtml} Sanitized HTML\n */\ngoog.html.sanitizer.HtmlSanitizer.prototype.sanitize \x3d function(\n    unsanitizedHtml) {\n  this.currentStyleContainerId_ \x3d this.getStyleContainerId_();\n  var sanitizedString \x3d this.processToString(unsanitizedHtml);\n  return goog.html.uncheckedconversions\n      .safeHtmlFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from(\x27Output of HTML sanitizer\x27), sanitizedString);\n};\n\n\n/**\n * Parses the DOM tree of a given HTML string, then walks the tree. For each\n * element, it creates a new sanitized version, applies sanitized attributes,\n * and returns a span element containing the sanitized content. The root element\n * might define a class name to restrict the visibility of CSS rules contained\n * in tree.\n * @param {string} unsanitizedHtml\n * @return {!HTMLSpanElement} Sanitized HTML\n */\ngoog.html.sanitizer.HtmlSanitizer.prototype.sanitizeToDomNode \x3d function(\n    unsanitizedHtml) {\n  this.currentStyleContainerId_ \x3d this.getStyleContainerId_();\n  return goog.html.sanitizer.SafeDomTreeProcessor.prototype.processToTree.call(\n      this, unsanitizedHtml);\n};\n\n\n/** @override */\ngoog.html.sanitizer.HtmlSanitizer.prototype.processRoot \x3d function(newRoot) {\n  // If the container ID was manually specified, we let the caller add the\n  // ancestor to activate the rules.\n  if (this.currentStyleContainerId_ \x26\x26\n      this.styleContainerId_ \x3d\x3d goog.html.sanitizer.RANDOM_CONTAINER_) {\n    newRoot.id \x3d this.currentStyleContainerId_;\n  }\n};\n\n\n/** @override */\ngoog.html.sanitizer.HtmlSanitizer.prototype.preProcessHtml \x3d function(\n    unsanitizedHtml) {\n  if (!this.inlineStyleRules_) {\n    return unsanitizedHtml;\n  }\n  // Inline style rules on the unsanitized input, so that we don\x27t have to\n  // worry about customTokenPolicy and customNamePolicy interferring with\n  // selectors.\n  // TODO(pelizzi): To generate an inert document tree to walk on, we are going\n  // to parse the document into a DOM tree twice --\n  // first with DOMParser here, and then by setting innerHTML on a new TEMPLATE\n  // element in the main sanitization loop (see getDomTreeWalker in\n  // safedomtreeprocessor.js). It would be best if we used one technique\n  // consistently, parsing the input string once and passing a single inert tree\n  // from one phase to another, but the decision to use TEMPLATE rather than\n  // DomParser or document.createHtmlImplementation as the inert HTML container\n  // for the main sanitization logic predates the work on supporting STYLE tags,\n  // and we later found on that TEMPLATE inert documents do not have computed\n  // stylesheet information on STYLE tags.\n  var inertUnsanitizedDom \x3d\n      goog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement(\n          \x27\x3cdiv\x3e\x27 + unsanitizedHtml + \x27\x3c/div\x3e\x27);\n  goog.asserts.assert(\n      inertUnsanitizedDom,\n      \x27Older browsers that don\\\x27t support inert \x27 +\n          \x27parsing should not get to this branch\x27);\n  goog.html.sanitizer.CssSanitizer.inlineStyleRules(inertUnsanitizedDom);\n  return inertUnsanitizedDom.innerHTML;\n};\n\n\n/**\n * Gets the style container ID for the sanitized output, or creates a new random\n * one. If no style container is necessary or style containment is disabled,\n * returns null.\n * @return {?string}\n * @private\n */\ngoog.html.sanitizer.HtmlSanitizer.prototype.getStyleContainerId_ \x3d function() {\n  var randomStyleContainmentEnabled \x3d\n      this.styleContainerId_ \x3d\x3d goog.html.sanitizer.RANDOM_CONTAINER_;\n  var randomStyleContainmentNecessary \x3d\n      !(\x27STYLE\x27 in this.tagBlacklist_) \x26\x26 \x27STYLE\x27 in this.tagWhitelist_;\n  // If the builder was configured to create a random unique ID, create one, but\n  // do so only if STYLE is allowed to begin with.\n  return randomStyleContainmentEnabled \x26\x26 randomStyleContainmentNecessary ?\n      \x27sanitizer-\x27 + goog.string.getRandomString() :\n      this.styleContainerId_;\n};\n\n\n/** @override */\ngoog.html.sanitizer.HtmlSanitizer.prototype.createTextNode \x3d function(\n    dirtyNode) {\n  // Text nodes don\x27t need to be sanitized, unless they are children of STYLE\n  // and STYLE tags are allowed.\n  var textContent \x3d dirtyNode.data;\n  // If STYLE is allowed, apply a policy to its text content. Ideally\n  // sanitizing text content of tags shouldn\x27t be hardcoded for STYLE, but we\n  // have no plans to support sanitizing the text content of other nodes for\n  // now.\n  var dirtyParent \x3d goog.html.sanitizer.noclobber.getParentNode(dirtyNode);\n  if (dirtyParent \x26\x26\n      goog.html.sanitizer.noclobber.getNodeName(dirtyParent).toLowerCase() \x3d\x3d\n          \x27style\x27 \x26\x26\n      !(\x27STYLE\x27 in this.tagBlacklist_) \x26\x26 \x27STYLE\x27 in this.tagWhitelist_) {\n    // Note that we don\x27t have access to the parsed CSS declarations inside a\n    // TEMPLATE tag, so the CSS sanitizer accepts a string and parses it\n    // on its own using DOMParser.\n    textContent \x3d goog.html.SafeStyleSheet.unwrap(\n        goog.html.sanitizer.CssSanitizer.sanitizeStyleSheetString(\n            textContent, this.currentStyleContainerId_,\n            goog.bind(function(uri, propName) {\n              return this.networkRequestUrlPolicy_(\n                  uri, {cssProperty: propName});\n            }, this)));\n  }\n  return document.createTextNode(textContent);\n};\n\n\n/** @override */\ngoog.html.sanitizer.HtmlSanitizer.prototype.createElementWithoutAttributes \x3d\n    function(dirtyElement) {\n  var dirtyName \x3d\n      goog.html.sanitizer.noclobber.getNodeName(dirtyElement).toUpperCase();\n  if (dirtyName in this.tagBlacklist_) {\n    // If it\x27s blacklisted, completely remove the tag and its descendants.\n    return null;\n  }\n  if (this.tagWhitelist_[dirtyName]) {\n    // If it\x27s whitelisted, keep as is.\n    return document.createElement(dirtyName);\n  }\n  // If it\x27s neither blacklisted nor whitelisted, replace with span. If the\n  // relevant builder option is enabled, the tag will bear the original tag\n  // name in a data attribute.\n  var spanElement \x3d goog.dom.createElement(goog.dom.TagName.SPAN);\n  if (this.shouldAddOriginalTagNames_) {\n    goog.html.sanitizer.noclobber.setElementAttribute(\n        spanElement, goog.html.sanitizer.HTML_SANITIZER_SANITIZED_ATTR_NAME_,\n        dirtyName.toLowerCase());\n  }\n  return spanElement;\n};\n\n\n/** @override */\ngoog.html.sanitizer.HtmlSanitizer.prototype.processElementAttribute \x3d function(\n    dirtyElement, attribute) {\n  var attributeName \x3d attribute.name;\n  if (goog.string.startsWith(\n          attributeName,\n          goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_)) {\n    // This is the namespace for the data attributes added by the sanitizer. We\n    // prevent untrusted content from setting them in the output.\n    return null;\n  }\n\n  var elementName \x3d goog.html.sanitizer.noclobber.getNodeName(dirtyElement);\n  var unsanitizedAttrValue \x3d attribute.value;\n\n  // Create policy hints object\n  var policyHints \x3d {\n    tagName: goog.string.trim(elementName).toLowerCase(),\n    attributeName: goog.string.trim(attributeName).toLowerCase()\n  };\n  var policyContext \x3d goog.html.sanitizer.HtmlSanitizer.getContext_(\n      policyHints.attributeName, dirtyElement);\n\n  // Prefer attribute handler for this specific tag.\n  var tagHandlerIndex \x3d goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(\n      elementName, attributeName);\n  if (tagHandlerIndex in this.attributeHandlers_) {\n    var handler \x3d this.attributeHandlers_[tagHandlerIndex];\n    return handler(unsanitizedAttrValue, policyHints, policyContext);\n  }\n  // Fall back on attribute handler for wildcard tag.\n  var genericHandlerIndex \x3d\n      goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(null, attributeName);\n  if (genericHandlerIndex in this.attributeHandlers_) {\n    var handler \x3d this.attributeHandlers_[genericHandlerIndex];\n    return handler(unsanitizedAttrValue, policyHints, policyContext);\n  }\n  return null;\n};\n\n\n/**\n * Sanitizes a HTML string using a sanitizer with default options.\n * @param {string} unsanitizedHtml\n * @return {!goog.html.SafeHtml} sanitizedHtml\n */\ngoog.html.sanitizer.HtmlSanitizer.sanitize \x3d function(unsanitizedHtml) {\n  var sanitizer \x3d new goog.html.sanitizer.HtmlSanitizer.Builder().build();\n  return sanitizer.sanitize(unsanitizedHtml);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/html/sanitizer/htmlsanitizer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sydt');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sydt');

}catch(e){_DumpException(e)}
/* _Module_:sydu */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sydu');
var $googDebugFname="javascript/closure/dom/tagiterator.js";
eval("// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Iterator subclass for DOM tree traversal.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\ngoog.provide(\x27goog.dom.TagIterator\x27);\ngoog.provide(\x27goog.dom.TagWalkType\x27);\n\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.dom.NodeType\x27);\ngoog.require(\x27goog.iter.Iterator\x27);\ngoog.require(\x27goog.iter.StopIteration\x27);\n\n\n/**\n * There are three types of token:\n *  \x3col\x3e\n *    \x3cli\x3e`START_TAG` - The beginning of a tag.\n *    \x3cli\x3e`OTHER` - Any non-element node position.\n *    \x3cli\x3e`END_TAG` - The end of a tag.\n *  \x3c/ol\x3e\n * Users of this enumeration can rely on {@code START_TAG + END_TAG \x3d 0} and\n * that {@code OTHER \x3d 0}.\n *\n * @enum {number}\n */\ngoog.dom.TagWalkType \x3d {\n  START_TAG: 1,\n  OTHER: 0,\n  END_TAG: -1\n};\n\n\n\n/**\n * A DOM tree traversal iterator.\n *\n * Starting with the given node, the iterator walks the DOM in order, reporting\n * events for the start and end of Elements, and the presence of text nodes. For\n * example:\n *\n * \x3cpre\x3e\n * \x26lt;div\x26gt;1\x26lt;span\x26gt;2\x26lt;/span\x26gt;3\x26lt;/div\x26gt;\n * \x3c/pre\x3e\n *\n * Will return the following nodes:\n *\n * \x3ccode\x3e[div, 1, span, 2, span, 3, div]\x3c/code\x3e\n *\n * With the following states:\n *\n * \x3ccode\x3e[START, OTHER, START, OTHER, END, OTHER, END]\x3c/code\x3e\n *\n * And the following depths\n *\n * \x3ccode\x3e[1, 1, 2, 2, 1, 1, 0]\x3c/code\x3e\n *\n * Imagining \x3ccode\x3e|\x3c/code\x3e represents iterator position, the traversal stops at\n * each of the following locations:\n *\n * \x3cpre\x3e\n * \x26lt;div\x26gt;|1|\x26lt;span\x26gt;|2|\x26lt;/span\x26gt;|3|\x26lt;/div\x26gt;|\n * \x3c/pre\x3e\n *\n * The iterator can also be used in reverse mode, which will return the nodes\n * and states in the opposite order.  The depths will be slightly different\n * since, like in normal mode, the depth is computed *after* the given node.\n *\n * Lastly, it is possible to create an iterator that is unconstrained, meaning\n * that it will continue iterating until the end of the document instead of\n * until exiting the start node.\n *\n * @param {Node\x3d} opt_node The start node.  If unspecified or null, defaults to\n *     an empty iterator.\n * @param {boolean\x3d} opt_reversed Whether to traverse the tree in reverse.\n * @param {boolean\x3d} opt_unconstrained Whether the iterator is not constrained\n *     to the starting node and its children.\n * @param {goog.dom.TagWalkType?\x3d} opt_tagType The type of the position.\n *     Defaults to the start of the given node for forward iterators, and\n *     the end of the node for reverse iterators.\n * @param {number\x3d} opt_depth The starting tree depth.\n * @constructor\n * @extends {goog.iter.Iterator\x3cNode\x3e}\n */\ngoog.dom.TagIterator \x3d function(\n    opt_node, opt_reversed, opt_unconstrained, opt_tagType, opt_depth) {\n  /**\n   * Whether the node iterator is moving in reverse.\n   * @type {boolean}\n   */\n  this.reversed \x3d !!opt_reversed;\n\n  /**\n   * The node this position is located on.\n   * @type {Node}\n   */\n  this.node \x3d null;\n\n  /**\n   * The type of this position.\n   * @type {goog.dom.TagWalkType}\n   */\n  this.tagType \x3d goog.dom.TagWalkType.OTHER;\n\n  /**\n   * The tree depth of this position relative to where the iterator started.\n   * The depth is considered to be the tree depth just past the current node,\n   * so if an iterator is at position\n   * \x3cpre\x3e\n   *     \x3cdiv\x3e|\x3c/div\x3e\n   * \x3c/pre\x3e\n   * (i.e. the node is the div and the type is START_TAG) its depth will be 1.\n   * @type {number}\n   */\n  this.depth;\n\n  /**\n   * Whether iteration has started.\n   * @private {boolean}\n   */\n  this.started_ \x3d false;\n\n  /**\n   * Whether the iterator is constrained to the starting node and its children.\n   * @type {boolean}\n   */\n  this.constrained \x3d !opt_unconstrained;\n\n  if (opt_node) {\n    this.setPosition(opt_node, opt_tagType);\n  }\n  this.depth \x3d opt_depth !\x3d undefined ? opt_depth : this.tagType || 0;\n  if (this.reversed) {\n    this.depth *\x3d -1;\n  }\n};\ngoog.inherits(goog.dom.TagIterator, goog.iter.Iterator);\n\n\n/**\n * Set the position of the iterator.  Overwrite the tree node and the position\n * type which can be one of the {@link goog.dom.TagWalkType} token types.\n * Only overwrites the tree depth when the parameter is specified.\n * @param {Node} node The node to set the position to.\n * @param {goog.dom.TagWalkType?\x3d} opt_tagType The type of the position\n *     Defaults to the start of the given node.\n * @param {number\x3d} opt_depth The tree depth.\n */\ngoog.dom.TagIterator.prototype.setPosition \x3d function(\n    node, opt_tagType, opt_depth) {\n  this.node \x3d node;\n\n  if (node) {\n    if (goog.isNumber(opt_tagType)) {\n      this.tagType \x3d opt_tagType;\n    } else {\n      // Auto-determine the proper type\n      this.tagType \x3d this.node.nodeType !\x3d goog.dom.NodeType.ELEMENT ?\n          goog.dom.TagWalkType.OTHER :\n          this.reversed ? goog.dom.TagWalkType.END_TAG :\n                          goog.dom.TagWalkType.START_TAG;\n    }\n  }\n\n  if (goog.isNumber(opt_depth)) {\n    this.depth \x3d opt_depth;\n  }\n};\n\n\n/**\n * Replace this iterator\x27s values with values from another. The two iterators\n * must be of the same type.\n * @param {goog.dom.TagIterator} other The iterator to copy.\n * @protected\n */\ngoog.dom.TagIterator.prototype.copyFrom \x3d function(other) {\n  this.node \x3d other.node;\n  this.tagType \x3d other.tagType;\n  this.depth \x3d other.depth;\n  this.reversed \x3d other.reversed;\n  this.constrained \x3d other.constrained;\n};\n\n\n/**\n * @return {!goog.dom.TagIterator} A copy of this iterator.\n */\ngoog.dom.TagIterator.prototype.clone \x3d function() {\n  return new goog.dom.TagIterator(\n      this.node, this.reversed, !this.constrained, this.tagType, this.depth);\n};\n\n\n/**\n * Skip the current tag.\n */\ngoog.dom.TagIterator.prototype.skipTag \x3d function() {\n  var check \x3d this.reversed ? goog.dom.TagWalkType.END_TAG :\n                              goog.dom.TagWalkType.START_TAG;\n  if (this.tagType \x3d\x3d check) {\n    this.tagType \x3d /** @type {goog.dom.TagWalkType} */ (check * -1);\n    this.depth +\x3d this.tagType * (this.reversed ? -1 : 1);\n  }\n};\n\n\n/**\n * Restart the current tag.\n */\ngoog.dom.TagIterator.prototype.restartTag \x3d function() {\n  var check \x3d this.reversed ? goog.dom.TagWalkType.START_TAG :\n                              goog.dom.TagWalkType.END_TAG;\n  if (this.tagType \x3d\x3d check) {\n    this.tagType \x3d /** @type {goog.dom.TagWalkType} */ (check * -1);\n    this.depth +\x3d this.tagType * (this.reversed ? -1 : 1);\n  }\n};\n\n\n/**\n * Move to the next position in the DOM tree.\n * @return {Node} Returns the next node, or throws a goog.iter.StopIteration\n *     exception if the end of the iterator\x27s range has been reached.\n * @override\n */\ngoog.dom.TagIterator.prototype.next \x3d function() {\n  var node;\n\n  if (this.started_) {\n    if (!this.node || this.constrained \x26\x26 this.depth \x3d\x3d 0) {\n      throw goog.iter.StopIteration;\n    }\n    node \x3d this.node;\n\n    var startType \x3d this.reversed ? goog.dom.TagWalkType.END_TAG :\n                                    goog.dom.TagWalkType.START_TAG;\n\n    if (this.tagType \x3d\x3d startType) {\n      // If we have entered the tag, test if there are any children to move to.\n      var child \x3d this.reversed ? node.lastChild : node.firstChild;\n      if (child) {\n        this.setPosition(child);\n      } else {\n        // If not, move on to exiting this tag.\n        this.setPosition(\n            node,\n            /** @type {goog.dom.TagWalkType} */ (startType * -1));\n      }\n    } else {\n      var sibling \x3d this.reversed ? node.previousSibling : node.nextSibling;\n      if (sibling) {\n        // Try to move to the next node.\n        this.setPosition(sibling);\n      } else {\n        // If no such node exists, exit our parent.\n        this.setPosition(\n            node.parentNode,\n            /** @type {goog.dom.TagWalkType} */ (startType * -1));\n      }\n    }\n\n    this.depth +\x3d this.tagType * (this.reversed ? -1 : 1);\n  } else {\n    this.started_ \x3d true;\n  }\n\n  // Check the new position for being last, and return it if it\x27s not.\n  node \x3d this.node;\n  if (!this.node) {\n    throw goog.iter.StopIteration;\n  }\n  return node;\n};\n\n\n/**\n * @return {boolean} Whether next has ever been called on this iterator.\n * @protected\n */\ngoog.dom.TagIterator.prototype.isStarted \x3d function() {\n  return this.started_;\n};\n\n\n/**\n * @return {boolean} Whether this iterator\x27s position is a start tag position.\n */\ngoog.dom.TagIterator.prototype.isStartTag \x3d function() {\n  return this.tagType \x3d\x3d goog.dom.TagWalkType.START_TAG;\n};\n\n\n/**\n * @return {boolean} Whether this iterator\x27s position is an end tag position.\n */\ngoog.dom.TagIterator.prototype.isEndTag \x3d function() {\n  return this.tagType \x3d\x3d goog.dom.TagWalkType.END_TAG;\n};\n\n\n/**\n * @return {boolean} Whether this iterator\x27s position is not at an element node.\n */\ngoog.dom.TagIterator.prototype.isNonElement \x3d function() {\n  return this.tagType \x3d\x3d goog.dom.TagWalkType.OTHER;\n};\n\n\n/**\n * Test if two iterators are at the same position - i.e. if the node and tagType\n * is the same.  This will still return true if the two iterators are moving in\n * opposite directions or have different constraints.\n * @param {goog.dom.TagIterator} other The iterator to compare to.\n * @return {boolean} Whether the two iterators are at the same position.\n */\ngoog.dom.TagIterator.prototype.equals \x3d function(other) {\n  // Nodes must be equal, and we must either have reached the end of our tree\n  // or be at the same position.\n  return other.node \x3d\x3d this.node \x26\x26\n      (!this.node || other.tagType \x3d\x3d this.tagType);\n};\n\n\n/**\n * Replace the current node with the list of nodes. Reset the iterator so that\n * it visits the first of the nodes next.\n * @param {...Object} var_args A list of nodes to replace the current node with.\n *     If the first argument is array-like, it will be used, otherwise all the\n *     arguments are assumed to be nodes.\n */\ngoog.dom.TagIterator.prototype.splice \x3d function(var_args) {\n  // Reset the iterator so that it iterates over the first replacement node in\n  // the arguments on the next iteration.\n  var node \x3d this.node;\n  this.restartTag();\n  this.reversed \x3d !this.reversed;\n  goog.dom.TagIterator.prototype.next.call(this);\n  this.reversed \x3d !this.reversed;\n\n  // Replace the node with the arguments.\n  var arr \x3d goog.isArrayLike(arguments[0]) ? arguments[0] : arguments;\n  for (var i \x3d arr.length - 1; i \x3e\x3d 0; i--) {\n    goog.dom.insertSiblingAfter(arr[i], node);\n  }\n  goog.dom.removeNode(node);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/dom/tagiterator.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sydu');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sydu');

}catch(e){_DumpException(e)}
/* _Module_:sydv */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sydv');
var $googDebugFname="javascript/closure/dom/nodeiterator.js";
eval("// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Iterator subclass for DOM tree traversal.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\ngoog.provide(\x27goog.dom.NodeIterator\x27);\n\ngoog.require(\x27goog.dom.TagIterator\x27);\n\n\n\n/**\n * A DOM tree traversal iterator.\n *\n * Starting with the given node, the iterator walks the DOM in order, reporting\n * events for each node.  The iterator acts as a prefix iterator:\n *\n * \x3cpre\x3e\n * \x26lt;div\x26gt;1\x26lt;span\x26gt;2\x26lt;/span\x26gt;3\x26lt;/div\x26gt;\n * \x3c/pre\x3e\n *\n * Will return the following nodes:\n *\n * \x3ccode\x3e[div, 1, span, 2, 3]\x3c/code\x3e\n *\n * With the following depths\n *\n * \x3ccode\x3e[1, 1, 2, 2, 1]\x3c/code\x3e\n *\n * Imagining \x3ccode\x3e|\x3c/code\x3e represents iterator position, the traversal stops at\n * each of the following locations:\n *\n * \x3cpre\x3e\x26lt;div\x26gt;|1|\x26lt;span\x26gt;|2|\x26lt;/span\x26gt;3|\x26lt;/div\x26gt;\x3c/pre\x3e\n *\n * The iterator can also be used in reverse mode, which will return the nodes\n * and states in the opposite order.  The depths will be slightly different\n * since, like in normal mode, the depth is computed *after* the last move.\n *\n * Lastly, it is possible to create an iterator that is unconstrained, meaning\n * that it will continue iterating until the end of the document instead of\n * until exiting the start node.\n *\n * @param {Node\x3d} opt_node The start node.  Defaults to an empty iterator.\n * @param {boolean\x3d} opt_reversed Whether to traverse the tree in reverse.\n * @param {boolean\x3d} opt_unconstrained Whether the iterator is not constrained\n *     to the starting node and its children.\n * @param {number\x3d} opt_depth The starting tree depth.\n * @constructor\n * @extends {goog.dom.TagIterator}\n * @final\n */\ngoog.dom.NodeIterator \x3d function(\n    opt_node, opt_reversed, opt_unconstrained, opt_depth) {\n  goog.dom.TagIterator.call(\n      this, opt_node, opt_reversed, opt_unconstrained, null, opt_depth);\n};\ngoog.inherits(goog.dom.NodeIterator, goog.dom.TagIterator);\n\n\n/**\n * Moves to the next position in the DOM tree.\n * @return {Node} Returns the next node, or throws a goog.iter.StopIteration\n *     exception if the end of the iterator\x27s range has been reached.\n * @override\n */\ngoog.dom.NodeIterator.prototype.next \x3d function() {\n  do {\n    goog.dom.NodeIterator.superClass_.next.call(this);\n  } while (this.isEndTag());\n\n  return this.node;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/dom/nodeiterator.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sydv');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sydv');

}catch(e){_DumpException(e)}
/* _Module_:sydw */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sydw');
var $googDebugFname="javascript/security/legacy_refactoring/asserts/assert.js";
goog.loadModule("/**\n * Module used to assert. Refactored/copied from closure/testing/\n */\n\ngoog.module(\x27security.asserts.assert\x27);\ngoog.module.declareLegacyNamespace();\n\nconst InputType \x3d goog.require(\x27goog.dom.InputType\x27);\nconst NodeIterator \x3d goog.require(\x27goog.dom.NodeIterator\x27);\nconst TagIterator \x3d goog.require(\x27goog.dom.TagIterator\x27);\nconst TagName \x3d goog.require(\x27goog.dom.TagName\x27);\nconst asserts \x3d goog.require(\x27goog.asserts\x27);\nconst classlist \x3d goog.require(\x27goog.dom.classlist\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst googArray \x3d goog.require(\x27goog.array\x27);\nconst googObject \x3d goog.require(\x27goog.object\x27);\nconst googString \x3d goog.require(\x27goog.string\x27);\nconst googUserAgent \x3d goog.require(\x27goog.userAgent\x27);\nconst iter \x3d goog.require(\x27goog.iter\x27);\nconst style \x3d goog.require(\x27goog.style\x27);\n\nconst END_TAG_MARKER_ \x3d createEndTagMarker_();\nconst BAD_IE_ATTRIBUTES_ \x3d googObject.createSet(\n    \x27methods\x27, \x27CHECKED\x27, \x27dataFld\x27, \x27dataFormatAs\x27, \x27dataSrc\x27);\nconst EQUALITY_PREDICATE_CANT_PROCESS \x3d null;\nconst EQUALITY_PREDICATE_VARS_ARE_EQUAL \x3d \x27\x27;\n\n/**\n * string equal\n * @param {string} var1\n * @param {string} var2\n * @return {boolean} boolean\n */\nvar DOUBLE_EQUALITY_PREDICATE \x3d function(var1, var2) {\n  return var1 \x3d\x3d var2;\n};\n\n/**\n * object equal\n *\n * @param {?} var1\n * @param {?} var2\n * @return {boolean} boolean\n */\nvar TO_STRING_EQUALITY_PREDICATE \x3d function(var1, var2) {\n  return var1.toString() \x3d\x3d\x3d var2.toString();\n};\n\nvar PRIMITIVE_EQUALITY_PREDICATES \x3d {\n  \x27String\x27: DOUBLE_EQUALITY_PREDICATE,\n  \x27Number\x27: DOUBLE_EQUALITY_PREDICATE,\n  \x27Boolean\x27: DOUBLE_EQUALITY_PREDICATE,\n  \x27Date\x27: function(date1, date2) {\n    return date1.getTime() \x3d\x3d date2.getTime();\n  },\n  \x27RegExp\x27: TO_STRING_EQUALITY_PREDICATE,\n  \x27Function\x27: TO_STRING_EQUALITY_PREDICATE\n};\n\n/**\n * Assert that the html in `actual` is substantially similar to\n * htmlPattern.  This method tests for the same set of styles, for the same\n * order of nodes, and the presence of attributes.  Breaking whitespace nodes\n * are ignored.  Elements can be\n * annotated with classnames corresponding to keys in goog.userAgent and will be\n * expected to show up in that user agent and expected not to show up in\n * others.\n * Copied from closure/testing/dom.js\n * @param {string} htmlPattern The pattern to match.\n * @param {!Node} actual The element to check: its contents are matched\n *     against the HTML pattern.\n * @param {boolean\x3d} opt_strictAttributes If false, attributes that appear in\n *     htmlPattern must be in actual, but actual can have attributes not\n *     present in htmlPattern.  If true, htmlPattern and actual must have the\n *     same set of attributes.  Default is false.\n */\nfunction assertHtmlContentsMatch(\n    htmlPattern, actual, opt_strictAttributes) {\n  var div \x3d dom.createDom(TagName.DIV);\n  div.innerHTML \x3d htmlPattern;\n\n  var errorSuffix \x3d\n      \x27\\nExpected\\n\x27 + div.innerHTML + \x27\\nActual\\n\x27 + actual.innerHTML;\n\n  var actualIt \x3d\n      iter.filter(iter.map(new TagIterator(actual), endTagMap_), nodeFilter_);\n\n  var expectedIt \x3d iter.filter(new NodeIterator(div), nodeFilter_);\n\n  var actualNode;\n  var preIterated \x3d false;\n  var advanceActualNode \x3d function() {\n    // If the iterator has already been advanced, don\x27t advance it again.\n    if (!preIterated) {\n      actualNode \x3d iter.nextOrValue(actualIt, null);\n    }\n    preIterated \x3d false;\n\n    // Advance the iterator so long as points to an end tag or a comment.\n    while (actualNode \x3d\x3d END_TAG_MARKER_ ||\n           (actualNode \x26\x26 actualNode.nodeType \x3d\x3d Node.COMMENT_NODE)) {\n      actualNode \x3d iter.nextOrValue(actualIt, null);\n    }\n  };\n\n  // HACK(brenneman): IE has unique ideas about whitespace handling when setting\n  // innerHTML. This results in elision of leading whitespace in the expected\n  // nodes where doing so doesn\x27t affect visible rendering. As a workaround, we\n  // remove the leading whitespace in the actual nodes where necessary.\n  //\n  // The collapsible variable tracks whether we should collapse the whitespace\n  // in the next Text node we encounter.\n  var IE_TEXT_COLLAPSE \x3d\n      googUserAgent.IE \x26\x26 !googUserAgent.isVersionOrHigher(\x279\x27);\n\n  var collapsible \x3d true;\n\n  var number \x3d 0;\n  iter.forEach(expectedIt, function(expectedNode) {\n    if (expectedNode.nodeType \x3d\x3d Node.COMMENT_NODE) {\n      return;  // Skip comment nodes\n    }\n    advanceActualNode();\n    asserts.assert(\n        actualNode,\n        \x27Finished actual HTML before finishing expected HTML at \x27 +\n            \x27node number \x27 + number + \x27: \x27 + describeNode_(expectedNode) +\n            errorSuffix);\n\n    // Do no processing for expectedNode \x3d\x3d div.\n    if (expectedNode \x3d\x3d div) {\n      return;\n    }\n\n    assertEquals(\n        \x27Should have the same node type, got \x27 + describeNode_(actualNode) +\n            \x27 but expected \x27 + describeNode_(expectedNode) + \x27.\x27 + errorSuffix,\n        expectedNode.nodeType, actualNode.nodeType);\n\n    if (expectedNode.nodeType \x3d\x3d dom.NodeType.ELEMENT) {\n      var expectedElem \x3d asserts.assertElement(expectedNode);\n      var actualElem \x3d asserts.assertElement(actualNode);\n\n      assertEquals(\n          \x27Tag names should match\x27 + errorSuffix, expectedElem.tagName,\n          actualElem.tagName);\n      assertObjectEquals(\n          \x27Should have same styles\x27 + errorSuffix,\n          style.parseStyleAttribute(expectedElem.style.cssText),\n          style.parseStyleAttribute(actualElem.style.cssText));\n      assertAttributesEqual_(\n          errorSuffix, expectedElem, actualElem, !!opt_strictAttributes);\n\n      if (IE_TEXT_COLLAPSE \x26\x26\n          style.getCascadedStyle(actualElem, \x27display\x27) !\x3d \x27inline\x27) {\n        // Text may be collapsed after any non-inline element.\n        collapsible \x3d true;\n      }\n\n      // Contents of template tags belong to a separate document and are not\n      // iterated on by the current iterator, unless the browser is too old to\n      // treat template tags differently. We recursively assert equality of the\n      // two template document fragments.\n      if (actualElem.tagName.toLowerCase() \x3d\x3d \x27template\x27 \x26\x26\n          actualElem.content) {\n        assertHtmlMatches(\n            expectedElem.innerHTML, actualElem.innerHTML, opt_strictAttributes);\n      }\n    } else {\n      // Concatenate text nodes until we reach a non text node.\n      var actualText \x3d actualNode.nodeValue;\n      preIterated \x3d true;\n      while ((actualNode \x3d iter.nextOrValue(actualIt, null)) \x26\x26\n             actualNode.nodeType \x3d\x3d dom.NodeType.TEXT) {\n        actualText +\x3d actualNode.nodeValue;\n      }\n\n      if (IE_TEXT_COLLAPSE) {\n        // Collapse the leading whitespace, unless the string consists entirely\n        // of whitespace.\n        if (collapsible \x26\x26 !googString.isEmptyOrWhitespace(actualText)) {\n          actualText \x3d googString.trimLeft(actualText);\n        }\n        // Prepare to collapse whitespace in the next Text node if this one does\n        // not end in a whitespace character.\n        collapsible \x3d /\\s$/.test(actualText);\n      }\n\n      var expectedText \x3d getExpectedText_(expectedNode);\n      if ((actualText \x26\x26 !googString.isBreakingWhitespace(actualText)) ||\n          (expectedText \x26\x26 !googString.isBreakingWhitespace(expectedText))) {\n        var normalizedActual \x3d actualText.replace(/\\s+/g, \x27 \x27);\n        var normalizedExpected \x3d expectedText.replace(/\\s+/g, \x27 \x27);\n\n        asserts.assert(normalizedExpected \x3d\x3d\x3d normalizedActual,\n            \x27Text should match\x27 + errorSuffix);\n      }\n    }\n\n    number++;\n  });\n\n  advanceActualNode();\n  asserts.assert(\n      iter.nextOrValue(actualIt, null) \x3d\x3d\x3d null,\n      \x27Finished expected HTML before finishing actual HTML\x27 + errorSuffix);\n}\n\n\n/**\n * Describes the given node.\n * @param {?Node} node The node to describe.\n * @return {string} A description of the node.\n */\nfunction describeNode_(node) {\n  if (node.nodeType \x3d\x3d dom.NodeType.TEXT) {\n    return \x27[Text: \x27 + node.nodeValue + \x27]\x27;\n  } else {\n    return \x27\x3c\x27 + node.tagName + (node.id ? \x27 #\x27 + node.id : \x27\x27) + \x27 .../\x3e\x27;\n  }\n}\n\n/**\n * Map function that converts end tags to a specific object.\n * @param {?Node} node The node to map.\n * @param {undefined} ignore Always undefined.\n * @param {!iter.Iterator\x3c?Node\x3e} iterator The iterator.\n * @return {?Node} The resulting iteration item.\n */\nfunction endTagMap_(node, ignore, iterator) {\n  return iterator.isEndTag() ? END_TAG_MARKER_ : node;\n}\n\n/**\n * @return {!Node} A DIV node with a unique ID identifying the\n *     `END_TAG_MARKER_`.\n */\nfunction createEndTagMarker_() {\n  var marker \x3d dom.createElement(TagName.DIV);\n  marker.id \x3d goog.getUid(marker);\n  return marker;\n}\n\n/**\n * Check if the given node is important.  A node is important if it is a\n * non-empty text node, a non-annotated element, or an element annotated to\n * match on this user agent.\n * @param {?Node} node The node to test.\n * @return {boolean} Whether this node should be included for iteration.\n */\nfunction nodeFilter_(node) {\n  if (node.nodeType \x3d\x3d dom.NodeType.TEXT) {\n    // If a node is part of a string of text nodes and it has spaces in it,\n    // we allow it since it\x27s going to affect the merging of nodes done below.\n    if (googString.isBreakingWhitespace(node.nodeValue) \x26\x26\n        (!node.previousSibling ||\n         node.previousSibling.nodeType !\x3d dom.NodeType.TEXT) \x26\x26\n        (!node.nextSibling || node.nextSibling.nodeType !\x3d dom.NodeType.TEXT)) {\n      return false;\n    }\n    // Allow optional text to be specified as [[BROWSER1 BROWSER2]]Text\n    var match \x3d node.nodeValue.match(/^\\[\\[(.+)\\]\\]/);\n    if (match) {\n      return checkUserAgents_(match[1]);\n    }\n  } else if (node.className \x26\x26 goog.isString(node.className)) {\n    return checkUserAgents_(node.className);\n  }\n  return true;\n}\n\n/**\n * Determines if the current user agent matches the specified string.  Returns\n * false if the string does specify at least one user agent but does not match\n * the running agent.\n * @param {string} userAgents Space delimited string of user agents.\n * @return {boolean} Whether the user agent was matched.  Also true if no user\n *     agent was listed in the expectation string.\n */\nfunction checkUserAgents_(userAgents) {\n  if (googString.startsWith(userAgents, \x27!\x27)) {\n    if (googString.contains(userAgents, \x27 \x27)) {\n      throw new Error(\x27Only a single negative user agent may be specified\x27);\n    }\n    return !googUserAgent[userAgents.substr(1)];\n  }\n\n  var agents \x3d userAgents.split(\x27 \x27);\n  var hasUserAgent \x3d false;\n  for (var i \x3d 0, len \x3d agents.length; i \x3c len; i++) {\n    var cls \x3d agents[i];\n    if (cls in googUserAgent) {\n      hasUserAgent \x3d true;\n      if (googUserAgent[cls]) {\n        return true;\n      }\n    }\n  }\n  // If we got here, there was a user agent listed but we didn\x27t match it.\n  return !hasUserAgent;\n}\n\n/**\n * Assert that the attributes of two Nodes are the same (ignoring any\n * instances of the style attribute).\n * @param {string} errorSuffix String to add to end of error messages.\n * @param {!Element} expectedElem The element whose attributes we are expecting.\n * @param {!Element} actualElem The element with the actual attributes.\n * @param {boolean} strictAttributes If false, attributes that appear in\n *     expectedNode must also be in actualNode, but actualNode can have\n *     attributes not present in expectedNode.  If true, expectedNode and\n *     actualNode must have the same set of attributes.\n */\nfunction assertAttributesEqual_(\n    errorSuffix, expectedElem, actualElem, strictAttributes) {\n  if (strictAttributes) {\n    compareClassAttribute_(expectedElem, actualElem);\n  }\n\n  var expectedAttributes \x3d expectedElem.attributes;\n  var actualAttributes \x3d actualElem.attributes;\n\n  for (var i \x3d 0, len \x3d expectedAttributes.length; i \x3c len; i++) {\n    var expectedName \x3d expectedAttributes[i].name;\n    var expectedValue \x3d getAttributeValue_(expectedElem, expectedName);\n\n    var actualAttribute \x3d actualAttributes[expectedName];\n    var actualValue \x3d getAttributeValue_(actualElem, expectedName);\n\n    // IE enumerates attribute names in the expected node that are not present,\n    // causing an undefined actualAttribute.\n    if (!expectedValue \x26\x26 !actualValue) {\n      continue;\n    }\n\n    if (expectedName \x3d\x3d \x27id\x27 \x26\x26 googUserAgent.IE) {\n      compareIdAttributeForIe_(\n          /** @type {string} */ (expectedValue), actualAttribute,\n          strictAttributes, errorSuffix);\n      continue;\n    }\n\n    if (ignoreAttribute_(expectedName)) {\n      continue;\n    }\n\n    asserts.assert(\n        actualAttribute,\n        \x27Expected to find attribute with name \x27 + expectedName +\n            \x27, in element \x27 + describeNode_(actualElem) + errorSuffix);\n    asserts.assert(\n        String(expectedValue) \x3d\x3d\x3d\n        String(getAttributeValue_(actualElem, actualAttribute.name)),\n        \x27Expected attribute \x27 + expectedName + \x27 has a different value \x27 +\n            errorSuffix);\n  }\n\n  if (strictAttributes) {\n    for (i \x3d 0; i \x3c actualAttributes.length; i++) {\n      var actualName \x3d actualAttributes[i].name;\n      var actualAttribute \x3d actualAttributes.getNamedItem(actualName);\n\n      if (!actualAttribute || ignoreAttribute_(actualName)) {\n        continue;\n      }\n\n      asserts.assert(\n          expectedAttributes[actualName],\n          \x27Unexpected attribute with name \x27 + actualName + \x27 in element \x27 +\n              describeNode_(actualElem) + errorSuffix);\n    }\n  }\n}\n\n/**\n * Assert the class attribute of actualElem is the same as the one in\n * expectedElem, ignoring classes that are useragents.\n * @param {!Element} expectedElem The DOM element whose class we expect.\n * @param {!Element} actualElem The DOM element with the actual class.\n */\nfunction compareClassAttribute_(expectedElem, actualElem) {\n  var classes \x3d classlist.get(expectedElem);\n\n  var expectedClasses \x3d [];\n  for (var i \x3d 0, len \x3d classes.length; i \x3c len; i++) {\n    if (!(classes[i] in googUserAgent)) {\n      expectedClasses.push(classes[i]);\n    }\n  }\n  expectedClasses.sort();\n\n  var actualClasses \x3d googArray.toArray(classlist.get(actualElem));\n  actualClasses.sort();\n\n  assertArrayEquals(\n      \x27Expected class was: \x27 + expectedClasses.join(\x27 \x27) +\n          \x27, but actual class was: \x27 + actualElem.className + \x27 in node \x27 +\n          describeNode_(actualElem),\n      expectedClasses, actualClasses);\n}\n\n\n/**\n * Gets the value of a DOM attribute in deterministic way.\n * @param {!Node} node A node.\n * @param {string} name Attribute name.\n * @return {*} Attribute value.\n */\nfunction getAttributeValue_(node, name) {\n  // These hacks avoid nondetermistic results in the following cases:\n  // WebKit: Two radio buttons with the same name can\x27t be checked at the same\n  //      time, even if only one of them is in the document.\n  if (googUserAgent.WEBKIT \x26\x26 node.tagName \x3d\x3d TagName.INPUT \x26\x26\n      node[\x27type\x27] \x3d\x3d InputType.RADIO \x26\x26 name \x3d\x3d \x27checked\x27) {\n    return false;\n  }\n\n  // IE/Edge: cannot use node[\x27src\x27] when the attribute contains HTTP\n  // credentials. getAttribute works though.\n  if ((googUserAgent.IE || googUserAgent.EDGE) \x26\x26 name \x3d\x3d \x27src\x27) {\n    return node.getAttribute(name);\n  }\n\n  // All browsers: some attributes return different values for getAttribute even\n  // if the values are semantically equivalent. E.g. \x3cdiv disabled\x3d\x22\x22\x3e and\n  // \x3cdiv disabled\x3d\x22disabled\x22\x3e should register as equal. We use node[name]\n  // if it\x27s available.\n  return node[name] !\x3d\x3d undefined \x26\x26\n          typeof node.getAttribute(name) !\x3d typeof node[name] ?\n      node[name] :\n      node.getAttribute(name);\n}\n\n/**\n * Compare id attributes for IE.  In IE, if an element lacks an id attribute\n * in the original HTML, the element object will still have such an attribute,\n * but its value will be the empty string.\n * @param {string} expectedValue The expected value of the id attribute.\n * @param {?Attr} actualAttribute The actual id attribute.\n * @param {boolean} strictAttributes Whether strict attribute checking should be\n *     done.\n * @param {string} errorSuffix String to append to error messages.\n */\nfunction compareIdAttributeForIe_(\n    expectedValue, actualAttribute, strictAttributes, errorSuffix) {\n  if (expectedValue \x3d\x3d\x3d \x27\x27) {\n    if (strictAttributes) {\n      assertTrue(\n          \x27Unexpected attribute with name id in element \x27 + errorSuffix,\n          actualAttribute.value \x3d\x3d \x27\x27);\n    }\n  } else {\n    asserts.assert(\n        actualAttribute,\n        \x27Expected to find attribute with name id, in element \x27 + errorSuffix);\n    asserts.assert(\n        \x27\x27 !\x3d\x3d actualAttribute.value,\n        \x27Expected to find attribute with name id, in element \x27 + errorSuffix);\n    assertEquals(\n        \x27Expected attribute has a different value \x27 + errorSuffix,\n        expectedValue, actualAttribute.value);\n  }\n}\n\n/**\n * Whether to ignore the attribute.\n * @param {string} name Name of the attribute.\n * @return {boolean} True if the attribute should be ignored.\n */\nfunction ignoreAttribute_(name) {\n  if (name \x3d\x3d \x27style\x27 || name \x3d\x3d \x27class\x27) {\n    return true;\n  }\n  return googUserAgent.IE \x26\x26 BAD_IE_ATTRIBUTES_[name];\n}\n\n/**\n * Determines the text to match from the given node, removing browser\n * specification strings.\n * @param {?Node} node The node expected to match.\n * @return {string} The text, stripped of browser specification strings.\n */\nfunction getExpectedText_(node) {\n  // Strip off the browser specifications.\n  return node.nodeValue.match(/^(\\[\\[.+\\]\\])?([\\s\\S]*)/)[2];\n}\n\n/**\n * Assert that the html in `actual` is substantially similar to\n * htmlPattern.  This method tests for the same set of styles, and for the same\n * order of nodes.  Breaking whitespace nodes are ignored.  Elements can be\n * annotated with classnames corresponding to keys in goog.userAgent and will be\n * expected to show up in that user agent and expected not to show up in\n * others.\n * @param {string} htmlPattern The pattern to match.\n * @param {string} actual The html to check.\n * @param {boolean\x3d} opt_strictAttributes If false, attributes that appear in\n *     htmlPattern must be in actual, but actual can have attributes not\n *     present in htmlPattern. If true, htmlPattern and actual must have the\n *     same set of attributes. Default is false.\n */\nfunction assertHtmlMatches(htmlPattern, actual, opt_strictAttributes) {\n  var div \x3d dom.createDom(TagName.DIV);\n  div.innerHTML \x3d actual;\n\n  assertHtmlContentsMatch(htmlPattern, div, opt_strictAttributes);\n}\n\n/**\n * @param {*} a The expected value (2 args) or the debug message (3 args).\n * @param {*} b The actual value (2 args) or the expected value (3 args).\n * @param {*\x3d} opt_c The actual value (3 args only).\n */\nfunction assertEquals(a, b, opt_c) {\n  var var1 \x3d nonCommentArg(1, 2, arguments);\n  var var2 \x3d nonCommentArg(2, 2, arguments);\n  asserts.assert(var1 \x3d\x3d\x3d var2, commentArg(2, arguments));\n}\n\n/**\n * @param {?} desiredNonCommentArgIndex\n * @param {?} expectedNumberOfNonCommentArgs\n * @param {?} args\n * @return {?} arg\n */\nfunction nonCommentArg(\n    desiredNonCommentArgIndex, expectedNumberOfNonCommentArgs, args) {\n  return argumentsIncludeComments(expectedNumberOfNonCommentArgs, args) ?\n      args[desiredNonCommentArgIndex] :\n      args[desiredNonCommentArgIndex - 1];\n}\n\n/**\n * @param {?} expectedNumberOfNonCommentArgs\n * @param {?} args\n * @return {?} arg\n */\nfunction argumentsIncludeComments(expectedNumberOfNonCommentArgs, args) {\n  return args.length \x3d\x3d expectedNumberOfNonCommentArgs + 1;\n}\n\n/**\n * @param {?} expectedNumberOfNonCommentArgs\n * @param {?} args\n * @return {?} arg\n */\nfunction commentArg(expectedNumberOfNonCommentArgs, args) {\n  if (argumentsIncludeComments(expectedNumberOfNonCommentArgs, args)) {\n    return args[0];\n  }\n\n  return null;\n}\n\n/**\n * @param {?} a\n * @param {?\x3d} opt_b\n * @return {?} boolean\n */\nfunction assertTrue(a, opt_b) {\n  var booleanValue \x3d nonCommentArg(1, 1, arguments);\n\n  asserts.assert(goog.isBoolean(booleanValue));\n  asserts.assert(booleanValue, \x27Call to assertTrue(boolean) with false\x27);\n}\n\n/**\n * Compares two arrays ignoring negative indexes and extra properties on the\n * array objects. Use case: Internet Explorer adds the index, lastIndex and\n * input enumerable fields to the result of string.match(/regexp/g), which makes\n * assertObjectEquals fail.\n * @param {*} a The expected array (2 args) or the debug message (3 args).\n * @param {*} b The actual array (2 args) or the expected array (3 args).\n * @param {*\x3d} opt_c The actual array (3 args only).\n */\nfunction assertArrayEquals(a, b, opt_c) {\n  var v1 \x3d nonCommentArg(1, 2, arguments);\n  var v2 \x3d nonCommentArg(2, 2, arguments);\n  var failureMessage \x3d commentArg(2, arguments) ? commentArg(2, arguments) : \x27\x27;\n\n  var typeOfVar1 \x3d _trueTypeOf(v1);\n  asserts.assert(\n      typeOfVar1 \x3d\x3d \x27Array\x27,\n      \x27Expected an array for assertArrayEquals but found a \x27 + typeOfVar1);\n\n  var typeOfVar2 \x3d _trueTypeOf(v2);\n  asserts.assert(\n      typeOfVar2 \x3d\x3d \x27Array\x27,\n      \x27Expected an array for assertArrayEquals but found a \x27 + typeOfVar2);\n\n  assertObjectEquals(\n      failureMessage, Array.prototype.concat.call(v1),\n      Array.prototype.concat.call(v2));\n}\n/**\n * Notes:\n * Object equality has some nasty browser quirks, and this implementation is\n * not 100% correct. For example,\n *\n * \x3ccode\x3e\n * var a \x3d [0, 1, 2];\n * var b \x3d [0, 1, 2];\n * delete a[1];\n * b[1] \x3d undefined;\n * assertObjectEquals(a, b); // should fail, but currently passes\n * \x3c/code\x3e\n *\n * See asserts_test.html for more interesting edge cases.\n *\n * The first comparison object provided is the expected value, the second is\n * the actual.\n *\n * @param {*} a Assertion message or comparison object.\n * @param {*} b Comparison object.\n * @param {*\x3d} opt_c Comparison object, if an assertion message was provided.\n */\nfunction assertObjectEquals(a, b, opt_c) {\n  var v1 \x3d nonCommentArg(1, 2, arguments);\n  var v2 \x3d nonCommentArg(2, 2, arguments);\n  var differences \x3d findDifferences(v1, v2);\n\n  asserts.assert(!differences, differences +\n      (commentArg(2, arguments) ? commentArg(2, arguments) : \x27\x27));\n}\n\n/**\n * Determines if two items of any type match, and formulates an error message\n * if not.\n * @param {*} expected Expected argument to match.\n * @param {*} actual Argument as a result of performing the test.\n * @param {(function(string, *, *): ?string)\x3d} opt_equalityPredicate An optional\n *     function that can be used to check equality of variables. It accepts 3\n *     arguments: type-of-variables, var1, var2 (in that order) and returns an\n *     error message if the variables are not equal,\n *     EQUALITY_PREDICATE_VARS_ARE_EQUAL if the variables\n *     are equal, or\n *     EQUALITY_PREDICATE_CANT_PROCESS if the predicate\n *     couldn\x27t check the input variables. The function will be called only if\n *     the types of var1 and var2 are identical.\n * @return {?string} Null on success, error message on failure.\n */\nfunction findDifferences(expected, actual, opt_equalityPredicate) {\n  var failures \x3d [];\n  var seen1 \x3d [];\n  var seen2 \x3d [];\n\n  // To avoid infinite recursion when the two parameters are self-referential\n  // along the same path of properties, keep track of the object pairs already\n  // seen in this call subtree, and abort when a cycle is detected.\n  function innerAssertWithCycleCheck(var1, var2, path) {\n    // This is used for testing, so we can afford to be slow (but more\n    // accurate). So we just check whether var1 is in seen1. If we\n    // found var1 in index i, we simply need to check whether var2 is\n    // in seen2[i]. If it is, we do not recurse to check var1/var2. If\n    // it isn\x27t, we know that the structures of the two objects must be\n    // different.\n    //\n    // This is based on the fact that values at index i in seen1 and\n    // seen2 will be checked for equality eventually (when\n    // innerAssertImplementation(seen1[i], seen2[i], path) finishes).\n    for (var i \x3d 0; i \x3c seen1.length; ++i) {\n      var match1 \x3d seen1[i] \x3d\x3d\x3d var1;\n      var match2 \x3d seen2[i] \x3d\x3d\x3d var2;\n      if (match1 || match2) {\n        if (!match1 || !match2) {\n          // Asymmetric cycles, so the objects have different structure.\n          failures.push(\x27Asymmetric cycle detected at \x27 + path);\n        }\n        return;\n      }\n    }\n\n    seen1.push(var1);\n    seen2.push(var2);\n    innerAssertImplementation(var1, var2, path);\n    seen1.pop();\n    seen2.pop();\n  }\n\n  var equalityPredicate \x3d opt_equalityPredicate || function(type, var1, var2) {\n    var typedPredicate \x3d PRIMITIVE_EQUALITY_PREDICATES[type];\n    if (!typedPredicate) {\n      return EQUALITY_PREDICATE_CANT_PROCESS;\n    }\n    var equal \x3d typedPredicate(var1, var2);\n    return equal ? EQUALITY_PREDICATE_VARS_ARE_EQUAL :\n                   getDefaultErrorMsg_(var1, var2);\n  };\n\n  /**\n   * @param {*} var1 An item in the expected object.\n   * @param {*} var2 The corresponding item in the actual object.\n   * @param {string} path Their path in the objects.\n   * @suppress {missingProperties} The map_ property is unknown to the compiler\n   *     unless goog.structs.Map is loaded.\n   */\n  function innerAssertImplementation(var1, var2, path) {\n    if (var1 \x3d\x3d\x3d var2) {\n      return;\n    }\n\n    var typeOfVar1 \x3d _trueTypeOf(var1);\n    var typeOfVar2 \x3d _trueTypeOf(var2);\n\n    if (typeOfVar1 \x3d\x3d typeOfVar2) {\n      var isArray \x3d typeOfVar1 \x3d\x3d \x27Array\x27;\n      var errorMessage \x3d equalityPredicate(typeOfVar1, var1, var2);\n      if (errorMessage !\x3d EQUALITY_PREDICATE_CANT_PROCESS) {\n        if (errorMessage !\x3d EQUALITY_PREDICATE_VARS_ARE_EQUAL) {\n          failures.push(path + \x27: \x27 + errorMessage);\n        }\n      } else if (isArray \x26\x26 var1.length !\x3d var2.length) {\n        failures.push(\n            path + \x27: Expected \x27 + var1.length + \x27-element array \x27 +\n            \x27but got a \x27 + var2.length + \x27-element array\x27);\n      } else if (typeOfVar1 \x3d\x3d \x27String\x27) {\n        if (var1 !\x3d var2) {\n          failures.push(\n              path + \x27: Expected String \x22\x27 + var1 + \x27\x22 \x27 +\n              \x27but got \x22\x27 + var2 + \x27\x22\x27);\n        }\n      } else {\n        var childPath \x3d path + (isArray ? \x27[%s]\x27 : (path ? \x27.%s\x27 : \x27%s\x27));\n        // These type checks do not use _trueTypeOf because that does not work\n        // for polyfilled Map/Set. Note that these checks may potentially fail\n        // if var1 comes from a different window.\n        if ((typeof Map !\x3d \x27undefined\x27 \x26\x26 var1 instanceof Map) ||\n            (typeof Set !\x3d \x27undefined\x27 \x26\x26 var1 instanceof Set)) {\n          var1.forEach(function(value, key) {\n            if (var2.has(key)) {\n              // For a map, the values must be compared, but with Set, checking\n              // that the second set contains the first set\x27s \x22keys\x22 is\n              // sufficient.\n              if (var2.get) {\n                innerAssertWithCycleCheck(\n                    value, var2.get(key), childPath.replace(\x27%s\x27, key));\n              }\n            } else {\n              failures.push(\n                  key + \x27 not present in actual \x27 + (path || typeOfVar2));\n            }\n          });\n\n          var2.forEach(function(value, key) {\n            if (!var1.has(key)) {\n              failures.push(\n                  key + \x27 not present in expected \x27 + (path || typeOfVar1));\n            }\n          });\n        } else if (!var1[\x27__iterator__\x27]) {\n          // if an object has an __iterator__ property, we have no way of\n          // actually inspecting its raw properties, and JS 1.7 doesn\x27t\n          // overload [] to make it possible for someone to generically\n          // use what the iterator returns to compare the object-managed\n          // properties. This gets us into deep poo with things like\n          // goog.structs.Map, at least on systems that support iteration.\n          for (var prop in var1) {\n            if (isArray \x26\x26 isArrayIndexProp_(prop)) {\n              // Skip array indices for now. We\x27ll handle them later.\n              continue;\n            }\n\n            if (prop in var2) {\n              innerAssertWithCycleCheck(\n                  var1[prop], var2[prop], childPath.replace(\x27%s\x27, prop));\n            } else {\n              failures.push(\n                  \x27property \x27 + prop + \x27 not present in actual \x27 +\n                  (path || typeOfVar2));\n            }\n          }\n          // make sure there aren\x27t properties in var2 that are missing\n          // from var1. if there are, then by definition they don\x27t\n          // match.\n          for (var prop in var2) {\n            if (isArray \x26\x26 isArrayIndexProp_(prop)) {\n              // Skip array indices for now. We\x27ll handle them later.\n              continue;\n            }\n\n            if (!(prop in var1)) {\n              failures.push(\n                  \x27property \x27 + prop + \x27 not present in expected \x27 +\n                  (path || typeOfVar1));\n            }\n          }\n\n          // Handle array indices by iterating from 0 to arr.length.\n          //\n          // Although all browsers allow holes in arrays, browsers\n          // are inconsistent in what they consider a hole. For example,\n          // \x22[0,undefined,2]\x22 has a hole on IE but not on Firefox.\n          //\n          // Because our style guide bans for...in iteration over arrays,\n          // we assume that most users don\x27t care about holes in arrays,\n          // and that it is ok to say that a hole is equivalent to a slot\n          // populated with \x27undefined\x27.\n          if (isArray) {\n            for (prop \x3d 0; prop \x3c var1.length; prop++) {\n              innerAssertWithCycleCheck(\n                  var1[prop], var2[prop],\n                  childPath.replace(\x27%s\x27, String(prop)));\n            }\n          }\n        } else {\n          // special-case for closure objects that have iterators\n          if (goog.isFunction(var1.equals)) {\n            // use the object\x27s own equals function, assuming it accepts an\n            // object and returns a boolean\n            if (!var1.equals(var2)) {\n              failures.push(\n                  \x27equals() returned false for \x27 + (path || typeOfVar1));\n            }\n          } else if (var1.map_) {\n            // assume goog.structs.Map or goog.structs.Set, where comparing\n            // their private map_ field is sufficient\n            innerAssertWithCycleCheck(\n                var1.map_, var2.map_, childPath.replace(\x27%s\x27, \x27map_\x27));\n          } else {\n            // else die, so user knows we can\x27t do anything\n            failures.push(\n                \x27unable to check \x27 + (path || typeOfVar1) +\n                \x27 for equality: it has an iterator we do not \x27 +\n                \x27know how to handle. please add an equals method\x27);\n          }\n        }\n      }\n    } else {\n      failures.push(path);\n    }\n  }\n\n  innerAssertWithCycleCheck(expected, actual, \x27\x27);\n  return failures.join(\x27\\n   \x27);\n}\n\n/**\n * @param {*} var1 The expected value.\n * @param {*} var2 The actual value.\n * @return {string} A failure message of the values don\x27t match.\n * @private\n */\nfunction getDefaultErrorMsg_(var1, var2) {\n  if ((typeof var1 \x3d\x3d \x27string\x27) \x26\x26 (typeof var2 \x3d\x3d \x27string\x27)) {\n    return var1 + \x27 does not equal to \x27 + var2;\n  }\n  return \x27Expected object does not match actual\x27;\n}\n\n/**\n * Helper function for assertObjectEquals.\n * @param {string} prop A property name.\n * @return {boolean} If the property name is an array index.\n * @private\n */\nfunction isArrayIndexProp_(prop) {\n  return (prop | 0) \x3d\x3d prop;\n}\n\n/**\n * true typeof something\n * @param {?} something\n * @return {?} type\n */\nfunction _trueTypeOf(something) {\n  var result \x3d typeof something;\n  try {\n    switch (result) {\n      case \x27string\x27:\n        break;\n      case \x27boolean\x27:\n        break;\n      case \x27number\x27:\n        break;\n      case \x27object\x27:\n        if (something \x3d\x3d null) {\n          result \x3d \x27null\x27;\n          break;\n        }\n      case \x27function\x27:\n        switch (something.constructor) {\n          case new String(\x27\x27).constructor:\n            result \x3d \x27String\x27;\n            break;\n          case new Boolean(true).constructor:\n            result \x3d \x27Boolean\x27;\n            break;\n          case new Number(0).constructor:\n            result \x3d \x27Number\x27;\n            break;\n          case new Array().constructor:\n            result \x3d \x27Array\x27;\n            break;\n          case new RegExp().constructor:\n            result \x3d \x27RegExp\x27;\n            break;\n          case new Date().constructor:\n            result \x3d \x27Date\x27;\n            break;\n          case Function:\n            result \x3d \x27Function\x27;\n            break;\n          default:\n            var m \x3d\n                something.constructor.toString().match(/function\\s*([^( ]+)\\(/);\n            if (m) {\n              result \x3d m[1];\n            } else {\n              break;\n            }\n        }\n        break;\n    }\n  } catch (e) {\n  } finally {\n    result \x3d result.substr(0, 1).toUpperCase() + result.substr(1);\n  }\n  return result;\n}\n\nexports.assertHtmlContentsMatch \x3d assertHtmlContentsMatch;\n\n//# sourceURL\x3dhttps://qs/javascript/security/legacy_refactoring/asserts/assert.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/security/legacy_refactoring/sanitizer/htmlsanitizer.js";
goog.loadModule("/* Module used to sanitize HTML and assert if there is a risk of XSS. */\n\ngoog.module(\x27security.sanitizer.htmlSanitizer\x27);\ngoog.module.declareLegacyNamespace();\n\nconst SafeHtml \x3d goog.require(\x27goog.html.SafeHtml\x27);\nconst SafeUrl \x3d goog.require(\x27goog.html.SafeUrl\x27);\nconst Sanitizer \x3d goog.require(\x27goog.html.sanitizer.HtmlSanitizer\x27);\nconst TagName \x3d goog.require(\x27goog.dom.TagName\x27);\nconst assert \x3d goog.require(\x27security.asserts.assert\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst functions \x3d goog.require(\x27goog.functions\x27);\n\n/**\n * Sanitize a HTML string using the given sanitizer and asserts that the\n * sanitizer does not change the semantics of the HTML. If assertions\n * are enabled, it will throw error if the html string has xss risks.\n *\n * @param {Sanitizer!} sanitizer used to sanitize the string\n * @param {string} html\n * @return {!SafeHtml} sanitizedHtml\n */\nexports.sanitizeHtmlAssertUnchangedWithSanitizer \x3d function(sanitizer, html) {\n  var safeHtml \x3d sanitizer.sanitize(html);\n  if (goog.DEBUG) {\n    var el \x3d dom.createElement(TagName.DIV);\n    el.innerHTML \x3d safeHtml.getTypedStringValue();\n    assert.assertHtmlContentsMatch(html, el, false);\n  }\n  return safeHtml;\n};\n\n/**\n * Sanitizes a HTML string, allowing several risky HTML features.\n *\n * If at all possible, sanitizeHtmlAssertUnchanged should be used; this function\n * is inteded only for large-scale changes that cannot evaluate which of these\n * options is appropriate.\n *\n * This sanitizer allows sanitized CSS, links and images referring to arbitrary\n * origins, and arbitrary name, id and class attributes.  The latter may lead to\n * DOM clobbering, see http://www.thespanner.co.uk/2013/05/16/dom-clobbering/.\n *\n * If assertions are enabled, this function will throw an error if the semantics\n * of the HTML string are changed by the sanitizer.\n *\n * @param {string} html\n * @return {!SafeHtml} sanitizedHtml\n */\nexports.lenientlySanitizeHtmlAssertUnchanged \x3d function(html) {\n  var sanitizer \x3d new Sanitizer.Builder()\n                      .allowCssStyles()\n                      .withCustomNamePolicy(functions.identity)\n                      .withCustomTokenPolicy(functions.identity)\n                      .withCustomNetworkRequestUrlPolicy(SafeUrl.sanitize)\n                      .withCustomUrlPolicy(SafeUrl.sanitize)\n                      .build();\n  return exports.sanitizeHtmlAssertUnchangedWithSanitizer(sanitizer, html);\n};\n\n/**\n * Sanitizes a HTML string using a sanitizer with default options. If\n * assertions are enabled, this function will throw an error if the HTML\n * string contains XSS risks.\n *\n * @param {string} html\n * @return {!SafeHtml} sanitizedHtml\n */\nexports.sanitizeHtmlAssertUnchanged \x3d function(html) {\n  var sanitizer \x3d new Sanitizer.Builder().build();\n  return exports.sanitizeHtmlAssertUnchangedWithSanitizer(sanitizer, html);\n};\n\n//# sourceURL\x3dhttps://qs/javascript/security/legacy_refactoring/sanitizer/htmlsanitizer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sydw');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sydw');

}catch(e){_DumpException(e)}
/* _Module_:syxp */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxp');
var $googDebugFname="searchbox/wiz/library/renderers/common/universal_suggestion_renderer.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.UniversalSuggestionRenderer\x27);\n\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst htmlSanitizer \x3d goog.require(\x27security.sanitizer.htmlSanitizer\x27);\nconst safe \x3d goog.require(\x27goog.dom.safe\x27);\n\n/**\n * The keys for the Universal suggestion.  These should be kept in\n * sync with:\n * j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/\n *     UniversalSuggestionTemplate.java.\n * @enum {string}\n */\nconst Keys \x3d {\n  LINE: \x27l\x27,\n};\n\n/**\n * The keys for the Text field.  These should be kept in sync with:\n * j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/TextField.java.\n * @enum {string}\n */\nconst TextKeys \x3d {\n  TEXT_TYPE: \x27tt\x27,\n  TEXT: \x27t\x27,\n  MAX_NUM_LINES: \x27ln\x27\n};\n\n/**\n * The keys for the Image field.  These should be kept in sync with:\n * j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/Image.java.\n * @enum {string}\n */\nconst ImageKeys \x3d {\n  DATA: \x27d\x27,\n  TYPE: \x27t\x27\n};\n\n/**\n * The keys for the Image line.  These should be kept in sync with:\n * j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/ImageLine.java.\n * @enum {string}\n */\nconst ImageLineKeys \x3d {\n  IMAGE: \x27i\x27,\n  TEXT: \x27t\x27,\n  ADDITIONAL_TEXT: \x27at\x27,\n  STATUS_TEXT: \x27st\x27\n};\n\n/**\n * The keys for the Line field.  These should be kept in sync with:\n * j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/Line.java.\n * @enum {string}\n */\nconst Line \x3d {\n  IMAGE_LINE: \x27il\x27\n};\n\nconst ANSWER_KEY \x3d \x27ansa\x27;\n\n/**\n * Renderer for suggestions with universal format. Note that this renderer only\n * handles the textual content for now, the action button and icon are still\n * being handled by the caller renderer.\n *\n * TODO(hackson): Once we have base suggestion renderer, extend from there, and\n * have suggestions box controller decides what template and renderer to call.\n * @final\n */\nclass UniversalSuggestionRenderer {\n  /**\n   * @param {!Element} container The container to host the universal content.\n   * @param {!Suggestion} suggestion The suggestion to render.\n   * @return {boolean} True if it can be rendered properly.\n   */\n  static render(container, suggestion) {\n    container.innerHTML \x3d \x27\x27;\n    const json \x3d suggestion.getParameter(ANSWER_KEY);\n    if (!json) {\n      return false;\n    }\n    const lines \x3d json[Keys.LINE];\n    if (!lines || !lines.length) {\n      return false;\n    }\n\n    for (const line of lines) {\n      const imageLine \x3d line[Line.IMAGE_LINE];\n      if (!imageLine) {\n        return false;\n      }\n      container.appendChild(\n          UniversalSuggestionRenderer.renderImageLine_(imageLine));\n    }\n    return true;\n  }\n\n  /**\n   * Renders an ImageLine object to an Element.\n   * @param {Object} imageLine The ImageList object.\n   * @return {!Element} The rendered ImageLine.\n   * @private\n   */\n  static renderImageLine_(imageLine) {\n    const lineDiv \x3d UniversalSuggestionRenderer.create_(\n        \x27div\x27, \x27mus_il\x27);\n\n    const image \x3d imageLine[ImageLineKeys.IMAGE];\n    if (image) {\n      const img \x3d UniversalSuggestionRenderer.create_(\n          \x27img\x27, \x27mus_il_i mus_it\x27 + image[ImageKeys.TYPE]);\n      img.src \x3d image[ImageKeys.DATA];\n      lineDiv.appendChild(img);\n    }\n\n    const text \x3d imageLine[ImageLineKeys.TEXT];\n    if (text) {\n      for (const textPiece of text) {\n        const textSpan \x3d UniversalSuggestionRenderer.createTextSpan_(\n            textPiece, \x27mus_il_t\x27);\n        lineDiv.appendChild(textSpan);\n      }\n    }\n\n    const additionalText \x3d imageLine[ImageLineKeys.ADDITIONAL_TEXT];\n    if (additionalText) {\n      const additionalTextSpan \x3d UniversalSuggestionRenderer.createTextSpan_(\n          additionalText, \x27mus_il_at\x27);\n      lineDiv.appendChild(additionalTextSpan);\n    }\n\n    const statusText \x3d imageLine[ImageLineKeys.STATUS_TEXT];\n    if (statusText) {\n      const statusTextSpan \x3d UniversalSuggestionRenderer.createTextSpan_(\n          statusText, \x27mus_il_st\x27);\n      lineDiv.appendChild(statusTextSpan);\n    }\n\n    return lineDiv;\n  }\n\n  /**\n   * Create a new DOM with the given tag and an optional class name.\n   * @param {string} tag The tag name\n   * @param {string\x3d} className The class name of the newly created DOM.\n   * @return {!Element} The new element.\n   * @private\n   */\n  static create_(tag, className \x3d undefined) {\n    const element \x3d document.createElement(tag);\n    if (className) {\n      element.className \x3d className;\n    }\n    return element;\n  }\n\n  /**\n   * Creates a new span element with the appropriate text styles depending on\n   * the text type.\n   * @param {Object} text The text field.\n   * @param {string} className The class name of the newly created text span.\n   * @return {!Element} The new element containing the text.\n   * @private\n   */\n  static createTextSpan_(text, className) {\n    const textElement \x3d UniversalSuggestionRenderer.create_(\x27span\x27, className);\n    textElement.className +\x3d \x27 mus_tt\x27 + text[TextKeys.TEXT_TYPE];\n\n    // The value is set directly since the server HTML-escapes the content\n    // except for bold tags added by the server.\n    // See j/c/g/g/p/searchbox/flows/fetch/universalsuggestion/TextField.java\n    safe.setInnerHtml(\n        textElement,\n        htmlSanitizer.sanitizeHtmlAssertUnchanged(text[TextKeys.TEXT]));\n\n    const maxNumLines \x3d text[TextKeys.MAX_NUM_LINES];\n    if (maxNumLines) {\n      const textStyle \x3d textElement.style;\n      textStyle.overflow \x3d \x27hidden\x27;\n      /* Non-webkit fallback to show maxNumLines lines. */\n      textStyle.display \x3d \x27block\x27;\n      textStyle.setProperty(\x27line-height\x27, \x271.2em\x27);\n      textStyle.setProperty(\x27max-height\x27, maxNumLines * 1.2 + \x27em\x27);\n      /* Webkit shows maxNumLines lines. */\n      textStyle.display \x3d \x27-webkit-box\x27;\n      textStyle.setProperty(\x27-webkit-line-clamp\x27, maxNumLines);\n      textStyle.setProperty(\x27-webkit-box-orient\x27, \x27vertical\x27);\n    }\n\n    return textElement;\n  };\n}\n\nexports \x3d UniversalSuggestionRenderer;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/renderers/common/universal_suggestion_renderer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxp');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxp');

}catch(e){_DumpException(e)}
/* _Module_:sypy */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sypy');
var $googDebugFname="javascript/apps/wiz/model/model.js";
eval("/**\n * @fileoverview WizModels provide shared logic and data for a set of\n * controllers within a DOM tree.\n */\ngoog.provide(\x27wiz.model\x27);\ngoog.provide(\x27wiz.model.Context\x27);\ngoog.provide(\x27wiz.model.InitializerFunction\x27);\ngoog.provide(\x27wiz.model.init\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.functions\x27);\ngoog.require(\x27wiz.Model\x27);\ngoog.require(\x27wiz.ModelSource\x27);\ngoog.require(\x27wiz.Object\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.async\x27);\ngoog.require(\x27wiz.context\x27);\ngoog.require(\x27wiz.factoryMethod\x27);\ngoog.require(\x27wiz.inject.Injector\x27);\ngoog.require(\x27wiz.lifecycle.ModelNotFoundError\x27);\ngoog.require(\x27wiz.lifecycle.getModel\x27);\n\n\n/**\n * Creates a new constructor for a model.\n * USAGE: Refer to wiz.service.\n *\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {(wiz.model.InitializerFunction|!wiz.async.Request)\x3d}\n *     opt_initializerOrGetParam Custom initializer function for the model\n *     or an object literal as passed to `wiz.async.get`.\n * @param {wiz.model.InitializerFunction\x3d} opt_initializer Custom\n *     initializer function for the model.\n * @return {function(new: T, ...)} Constructor for a model that\n *     inherits from wiz.model.\n * @template T\n */\nwiz.model \x3d function(key, opt_initializerOrGetParam, opt_initializer) {\n  goog.asserts.assert(key, \x27The key to wiz.model must be defined\x27);\n  return wiz.factoryMethod(\n      wiz.Model,\n      wiz.model.init,\n      key,\n      opt_initializerOrGetParam,\n      opt_initializer);\n};\n\n\n/**\n * @param {!fava.services.ServiceId\x3cT\x3e} key\n * @param {!wiz.async.Request|undefined} getParam\n *     an object literal as passed to `wiz.async.get`.\n * @param {function(new: T, ...)} model\n * @template T\n * @public\n */\nwiz.model.init \x3d function(key, getParam, model) {\n  wiz.Object.addCommonCtorProps(model);\n\n  // TODO(johnlenz): try to share some of this logic with wiz.service.init\n\n  model.displayName \x3d key;\n  wiz.inject.Injector.getInstance().register(key, model);\n\n  /**\n   * @return {!wiz.async.Request} response\n   * @nocollapse\n   */\n  model.deps \x3d model.deps || goog.functions.constant(getParam || {});\n\n  /**\n   * @param {!fava.services.ServiceId} key Service key for the model.\n   * @param {!Element} element Root node to which the model is attached.\n   * @param {!fava.AppContext|undefined} appContext\n   * @return {!goog.async.Deferred\x3c?\x3e} response\n   * There are circular dependencies that make it difficult to remove this\n   * function.\n   * TODO(tomnguyen) Move wiz.model.Context into a different file.\n   */\n  model.create \x3d function(key, element, appContext) {\n    var context \x3d new wiz.model.Context(key, element, appContext, model);\n    return wiz.Object.create(key, model, context)\n        .addCallback(function(instance) {\n      context.transferUpdateHandlers(instance);\n      return instance;\n    });\n  };\n};\n\n\n/**\n * Type of the function passed to `wiz.model` as initializer.\n * The `wiz.async.Response` param is available if the function was\n * called with a `wiz.async.Request`.\n * If the function returns a deferred, the dispatcher will hold instantiating\n * the model until the deferred is resolved.\n * @typedef {function(this:wiz.Model, !wiz.async.Response):undefined}\n */\nwiz.model.InitializerFunction;\n\n\n/**\n * @final\n * @implements {wiz.ModelSource}\n */\nwiz.model.Context \x3d goog.defineClass(wiz.Object.Context, {\n  /**\n   * @param {!fava.services.ServiceId} key\n   * @param {!Element} element\n   * @param {!fava.AppContext|undefined} appContext\n   * @param {!Function} injectingConstructor\n   */\n  constructor: function(key, element, appContext, injectingConstructor) {\n    wiz.model.Context.base(\n        this, \x27constructor\x27, key, appContext, injectingConstructor);\n\n    /** @const @private */\n    this.element_ \x3d element;\n\n    /**\n     * @private {?wiz.Query.One}\n     */\n    this.root_ \x3d null;\n\n    /**\n     * @private {\n     *     ?Object\x3c!xid.String,function(!jspb.Message, !wiz.event.EventType)\x3e}\n     */\n    this.dataUpdateHandlers_ \x3d null;\n\n    /** @private {boolean} */\n    this.transferred_ \x3d false;\n  },\n\n  /** @override */\n  getContext: function(key) {\n    return wiz.context.get(this.element_, key);\n  },\n\n  /** @override */\n  getData: function(key) {\n    if (!this.root_) {\n      this.root_ \x3d new wiz.Query.One(this.element_);\n    }\n    return this.root_.getData(key);\n  },\n\n  /** @override */\n  setDataUpdateHandler: function(messageXid, handler) {\n    goog.asserts.assert(!this.transferred_,\n        \x27Unexpected late registered update handler.\x27);\n\n    if (!this.dataUpdateHandlers_) {\n      this.dataUpdateHandlers_ \x3d {};\n    }\n    goog.asserts.assert(!this.dataUpdateHandlers_[messageXid],\n        \x27Update handler for \x3c\x27 + messageXid + \x27\x3e in \x3c\x27 + this +\n        \x27\x3e already specified.\x27);\n    this.dataUpdateHandlers_[messageXid] \x3d handler;\n  },\n\n  /** @param {!wiz.Model} model */\n  transferUpdateHandlers: function(model) {\n    this.transferred_ \x3d true;\n    if (this.dataUpdateHandlers_) {\n      for (var xid in this.dataUpdateHandlers_) {\n        model.setDataUpdateHandler(xid, this.dataUpdateHandlers_[xid]);\n      }\n    }\n  },\n\n  /**\n   * Returns the nearest model of the given type.\n   * @param {!fava.services.ServiceId\x3cT\x3e} key\n   * @return {!goog.async.Deferred\x3cT\x3e}\n   * @template T\n   */\n  getModel: function(key) {\n    return wiz.lifecycle\n        .getModel(this.element_, key, this.getOptionalAppContext(), this.key)\n        .addErrback(e \x3d\x3e {\n          if (e instanceof wiz.lifecycle.ModelNotFoundError) {\n            e.message +\x3d \x27 requested by \x27 + this;\n          }\n          return e;\n        });\n  },\n\n  /** @override */\n  getRootElementRestricted: function(restricted) {\n    return this.element_;\n  }\n\n});\n\nif (goog.DEBUG) {\n  /** @override */\n  wiz.model.Context.displayName \x3d \x27wiz.model.Context\x27;\n}\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/model/model.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sypy');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sypy');

}catch(e){_DumpException(e)}
/* _Module_:sypz */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sypz');
var $googDebugFname="javascript/apps/wiz/wiz_ns.js";
eval("/**\n * @fileoverview A convientent alias of common public wiz methods to allow\n * goog.module imports.\n * TODO(wqardaji): consider removing this.\n */\ngoog.provide(\x27wiz\x27);\n\n/** @suppress {extraRequire} */\ngoog.require(\x27wiz.controller\x27);\n/** @suppress {extraRequire} */\ngoog.require(\x27wiz.model\x27);\n/** @suppress {extraRequire} */\ngoog.require(\x27wiz.service\x27);\n\n/** @const */\nwiz.DummyObjectToPutSomethingOnTheWizNamespaceToMakeTSImportsHappy \x3d undefined;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/wiz_ns.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sypz');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sypz');

}catch(e){_DumpException(e)}
/* _Module_:syxq */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxq');
var $googDebugFname="searchbox/wiz/library/renderers/mobile/core_suggestion_renderer.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.mobile.CoreSuggestionRenderer\x27);\n\nconst SafeHtml \x3d goog.require(\x27goog.html.SafeHtml\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst UniversalSuggestionRenderer \x3d goog.require(\x27searchbox.wiz.UniversalSuggestionRenderer\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst htmlSanitizer \x3d goog.require(\x27security.sanitizer.htmlSanitizer\x27);\nconst safe \x3d goog.require(\x27goog.dom.safe\x27);\nconst scheduler \x3d goog.require(\x27search.task.scheduler\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst {SuggestionType, SuggestionSubtype, ActionButtonClickType} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {assertElement} \x3d goog.require(\x27goog.asserts\x27);\n\n/** @const @private {string} */\nconst ICON_CLASS_ \x3d \x27sbic\x27;\n\n/** @const @private {string} */\nconst TEXT_CONTAINER_CLASS_ \x3d \x27sbtc\x27;\n\n/** @const @private {string} */\nconst LINE_ONE_CLASS_ \x3d \x27sbl1\x27;\n\n/** @const @private {string} */\nconst LINE_TWO_CLASS_ \x3d \x27sbl2\x27;\n\n/** @const @private {string} */\nconst ACTION_BUTTON_CLASS_ \x3d \x27sbab\x27;\n\n/** @const @private {string} */\nconst ACTION_BUTTON_ICON_CLASS_ \x3d \x27sbai\x27;\n\n/**\n * Renderer for basic suggestions that supports up to two lines of display, an\n * icon on the left, and possibly some additional actions on the right.\n *\n * TODO(hackson): If more renderers are needed, extract some core structure into\n * a base suggestion renderer and extend all renderers from it.\n * @final\n */\nclass CoreSuggestionRenderer {\n  /**\n   * @param {!Element} template The suggestion template.\n   * @param {!Suggestion} suggestion The suggestion to render.\n   */\n  render(template, suggestion) {\n    const templateQuery \x3d wiz.Query.one(template);\n    const icon \x3d templateQuery.findFirst(\x27.\x27 + ICON_CLASS_);\n    const textContainer \x3d templateQuery.findFirst(\x27.\x27 + TEXT_CONTAINER_CLASS_);\n    const lineOne \x3d textContainer.findFirst(\x27.\x27 + LINE_ONE_CLASS_);\n    const lineTwo \x3d textContainer.findFirst(\x27.\x27 + LINE_TWO_CLASS_);\n    const lineOneText \x3d suggestion.getLineOne();\n    const lineTwoText \x3d suggestion.getLineTwo();\n    const iconId \x3d suggestion.getIconResourceId();\n\n    let renderedWithUniversalFormat \x3d false;\n    if (suggestion.isUniversal()) {\n      renderedWithUniversalFormat \x3d UniversalSuggestionRenderer.render(\n          assertElement(lineOne.el()), suggestion);\n    }\n\n    // Since univeral format does not make use of flex box, we toggle the line\n    // one container to run with \x22display:block\x22 in this case.\n    lineOne.toggleClass(\x27mus_pc\x27, renderedWithUniversalFormat);\n\n    if (!renderedWithUniversalFormat) {\n      lineOne.empty().append(document.createElement(\x27span\x27));\n\n      const lineOneHtml \x3d lineOneText ?\n          htmlSanitizer.sanitizeHtmlAssertUnchanged(lineOneText) :\n          SafeHtml.EMPTY;\n      const lineTwoHtml \x3d lineTwoText ?\n          htmlSanitizer.sanitizeHtmlAssertUnchanged(lineTwoText) :\n          SafeHtml.EMPTY;\n\n      safe.setInnerHtml(\n          assertElement(lineOne.findFirst(\x27span\x27).el()), lineOneHtml);\n      safe.setInnerHtml(\n          assertElement(lineTwo.findFirst(\x27span\x27).el()), lineTwoHtml);\n\n      if (lineTwoText) {\n        lineTwo.show();\n      } else {\n        lineTwo.hide();\n      }\n    } else {\n      // Universal suggestion is rendered, so we always hide the second line.\n      lineTwo.hide();\n    }\n\n    const thumbnailUrl \x3d suggestion.getThumbnailIconUrl();\n    icon.setStyle(\n        \x27background-image\x27, thumbnailUrl ? \x27url(\x27 + thumbnailUrl + \x27)\x27 : \x27\x27);\n    icon.setClass(thumbnailUrl ? ICON_CLASS_ : ICON_CLASS_ + \x27 sb\x27 + iconId);\n\n    // TODO: handle this in SuggestionsBoxController after adding enum support\n    //    for action buttons.\n    const actionButtonQuery \x3d templateQuery.findFirst(\n        \x27.\x27 + ACTION_BUTTON_CLASS_);\n\n    // Only render action button if it\x27s not universal and not suppressed.\n    const shouldRenderActionButton \x3d\n        !renderedWithUniversalFormat \x26\x26\n        !this.isSuggestionActionSuppressed_(suggestion);\n\n    actionButtonQuery.toggle(shouldRenderActionButton);\n\n    if (shouldRenderActionButton) {\n      const actionButton \x3d assertElement(actionButtonQuery.el());\n      const actionButtonIcon \x3d assertElement(\n          actionButtonQuery.findFirst(\x27.\x27 + ACTION_BUTTON_ICON_CLASS_).el());\n\n      const isPersonalized \x3d\n          suggestion.getType() \x3d\x3d SuggestionType.DEVICE_HISTORY ||\n          suggestion.getType() \x3d\x3d SuggestionType.PERSONALIZED_QUERY ||\n          suggestion.getSubtypes().indexOf(\n              SuggestionSubtype.SUBTYPE_PERSONAL) \x3e\x3d 0;\n\n      // TODO(b/78323989): Revert to use ternary literal assignment\n      // when cl/195322294 is released.\n      safe.setInnerHtml(\n          actionButtonIcon,\n          isPersonalized ? htmlSanitizer.sanitizeHtmlAssertUnchanged(\x27\x26times\x27) :\n                           SafeHtml.EMPTY);\n      actionButtonIcon.className \x3d ACTION_BUTTON_ICON_CLASS_ +\n          (isPersonalized ? \x27 sbdb\x27 : \x27 sbqb\x27);\n\n      // First, remove all existing action button listeners.\n      wiz.jsaction.removeAll(actionButton);\n\n      const actionClickData \x3d {\n        suggestion: suggestion,\n        actionType: isPersonalized ? ActionButtonClickType.REMOVE :\n                                     ActionButtonClickType.QUERY_BUILDER\n      };\n      // TODO(hackson): Figure out why click works, mousedown does not work, and\n      // it does not trigger touchstart on the suggestion template in fusion.\n      // According to cgagliardi@, it seems like mousedown is taken off from\n      // quantum.\n      wiz.jsaction.listen(\n          actionButton,\n          \x27click\x27,\n          goog.bind(\n              function(suggestion, ev) {\n                common.preventDefault(ev.event);\n                wiz.jsaction.trigger(\n                    actionButton,\n                    events.actionButtonClicked,\n                    actionClickData,\n                    false);\n              },\n              this,\n              suggestion),\n          this);\n\n      wiz.jsaction.listen(actionButton, \x27contextmenu\x27, ev \x3d\x3e {\n        if (ev \x26\x26 ev.event) {\n          common.preventDefault(ev.event);\n        }\n      });\n    }\n\n    new LongClickHandler_(template, suggestion);\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion.\n   * @return {boolean} True if the suggestion should have the actions\n   *    suppressed.\n   * @private\n   */\n  isSuggestionActionSuppressed_(suggestion) {\n    switch (suggestion.getType()) {\n      case SuggestionType.QUERY:\n        return suggestion.getSubtypes().indexOf(\n            SuggestionSubtype.SUBTYPE_TRENDS) \x3e\x3d 0;\n      case SuggestionType.NAVIGATION:\n        return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Constants for touch state.\n * @private @const @enum {number}\n */\nconst TouchState_ \x3d {\n  UNTOUCH_PHASE: 0,\n  TOUCH_PHASE: 1\n};\n\n/**\n * The delay for long click to be triggered in ms.\n * @private @const {number}\n */\nconst TOUCH_DELAY_MS_ \x3d 500;\n\n/**\n * A class that handles the long click.\n * TODO(hackson): Merge this into the renderer class.\n * @private\n */\nconst LongClickHandler_ \x3d class {\n  /**\n   * @param {!Element} el The element that has long click acted on.\n   * @param {!Suggestion} suggestion The suggestion associated with the long\n   *    click.\n   */\n  constructor(el, suggestion) {\n    /** @private {TouchState_} */\n    this.touchState_ \x3d TouchState_.UNTOUCH_PHASE;\n\n    /** @const @private {!Element} */\n    this.el_ \x3d el;\n\n    /** @const @private {!Suggestion} */\n    this.suggestion_ \x3d suggestion;\n\n    this.init_();\n  }\n\n  /** @private */\n  init_() {\n    wiz.jsaction.removeAll(this.el_);\n    wiz.jsaction.listen(this.el_, \x27touchstart\x27, this.onTouchStart_, this);\n    wiz.jsaction.listen(this.el_, \x27touchend\x27, this.cancelTouch_, this);\n    wiz.jsaction.listen(this.el_, \x27touchcancel\x27, this.cancelTouch_, this);\n\n    wiz.jsaction.listen(this.el_, \x27touchmove\x27, () \x3d\x3e {\n      goog.bind(this.cancelTouch_, this);\n    });\n\n    wiz.jsaction.listen(this.el_, \x27contextmenu\x27, ev \x3d\x3e {\n      if (ev \x26\x26 ev.event) {\n        common.preventDefault(ev.event);\n      }\n    });\n  }\n\n  /**\n   * @param {!wiz.Event} ev\n   * @private\n   */\n  onTouchStart_(ev) {\n    ev.event.stopPropagation();\n    if (this.touchState_ !\x3d TouchState_.UNTOUCH_PHASE) {\n      return;\n    }\n    this.touchState_ \x3d TouchState_.TOUCH_PHASE;\n    scheduler.setTimeout(\n        goog.bind(this.longClickTriggered_, this), TOUCH_DELAY_MS_);\n  }\n\n  /** @private */\n  longClickTriggered_() {\n    if (this.touchState_ !\x3d TouchState_.TOUCH_PHASE) {\n      return;\n    }\n    // Trigger long click event.\n    wiz.jsaction.trigger(\n        this.el_, events.onSuggestionLongClick, this.suggestion_, false);\n  }\n\n  /**\n   * @param {!wiz.Event|Event} ev\n   * @private\n   */\n  cancelTouch_(ev) {\n    this.touchState_ \x3d TouchState_.UNTOUCH_PHASE;\n  }\n};\n\nexports \x3d CoreSuggestionRenderer;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/renderers/mobile/core_suggestion_renderer.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxq');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxq');

}catch(e){_DumpException(e)}
/* _Module_:sy8m */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy8m');
var $googDebugFname="googledata/html/templates/gws/head/xjs/dismiss/dismiss.js";
eval("/**\n * @fileoverview Common library for dismissible UI components. This library\n * listens for a standard set of full-page events to trigger dismissal\n * (e.g. background click), and allows manual dismissal in response to\n * in-component events (e.g. menu item selected). See \x3chttp://go/dismissible\x3e.\n *\n * When a dismissible component is shown, its controller registers it with\n * `gws.dismiss.listen`. When a standard full-page dismiss event occurs,\n * or `gws.dismiss.dismiss` is called, the library calls the registered\n * onDismiss callback (which should hide the dismissible) and stops listening.\n * The onDismiss callback may return false to cancel the dismissal.\n *\n * A dismissible can also be unregistered from the library by calling\n * `gws.dismiss.unlisten`. This bypasses the onDismiss callback, and\n * immediately stops listening for the dismissible.\n *\n * To avoid memory leaks, a dismissible must unlisten before it is disposed.\n * In practice, this means a controller must call `unlisten()` in its\n * `disposeInternal()` callback.\n *\n * The library supports three types of standard dismiss events:\n *\n *   - background click (click outside the dismissible element)\n *   - escape key\n *   - focus lost (e.g. tab out of dismissible element)\n *\n * By default, the library listens for background click and escape key events.\n */\n\ngoog.provide(\x27gws.dismiss\x27);\ngoog.provide(\x27gws.dismiss.EventType\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.events\x27);\ngoog.require(\x27goog.events.BrowserFeature\x27);\ngoog.require(\x27goog.events.KeyCodes\x27);\ngoog.require(\x27gws.attentionProd.constants\x27);\ngoog.require(\x27gws.error\x27);\ngoog.require(\x27gws.touch\x27);\ngoog.require(\x27search.log.transport.AnchorPingConstants\x27);\n\n\n/**\n * @enum {number}\n */\ngws.dismiss.EventType \x3d {\n  // Manual dismiss via `gws.dismiss.dismiss()` is always enabled.\n  MANUAL: 0,\n  BACKGROUND_CLICK: 1,\n  ESC_KEY: 2,\n  FOCUS_LOST: 3\n};\n\n\n/**\n * The default set of dismiss events to listen to: background click and\n * escape key.\n * @const {!Array\x3c!gws.dismiss.EventType\x3e}\n */\ngws.dismiss.DEFAULT_EVENT_TYPES \x3d\n    [gws.dismiss.EventType.BACKGROUND_CLICK, gws.dismiss.EventType.ESC_KEY];\n\n\n/**\n * Structure used to track a single dismissible.\n * @private @typedef {{\n *   element: !Element,\n *   onDismiss: function(!gws.dismiss.EventType, ?Node\x3d): (boolean|undefined),\n *   eventTypes: !Array\x3c!gws.dismiss.EventType\x3e\n * }}\n */\ngws.dismiss.Listener_;\n\n\ngoog.scope(function() {\nconst AnchorPingConstants \x3d\n    goog.module.get(\x27search.log.transport.AnchorPingConstants\x27);\nconst EventType \x3d gws.dismiss.EventType;\nconst Listener_ \x3d gws.dismiss.Listener_;\n\n\n/**\n * Tracks dismissibles\x27 state, and manages event listeners.\n * `gws.dismiss.listen`, `unlisten`, and `dismiss` are\n * bound to a singleton instance of this class.\n * @private\n */\ngws.dismiss.DismissibleTracker_ \x3d goog.defineClass(null, {\n\n  constructor: function() {\n    /**\n     * Map from element KEY to its dismissible metadata.\n     * @private @const @dict {!Map\x3cnumber, !Listener_\x3e}\n     */\n    this.listeners_ \x3d new Map();\n\n    /**\n     * The number of dismissibles using the click listener.\n     * @private {number}\n     */\n    this.clickDismissiblesCount_ \x3d 0;\n\n    /**\n     * Event listener key, used to unlisten to click events.\n     * @private {?goog.events.Key}\n     */\n    this.clickListenerKey_ \x3d null;\n\n    /**\n     * @private {string}\n     */\n    this.touchListenerKey_ \x3d \x27\x27;\n\n    /**\n     * Event listener key, used to unlisten to mousedown events.\n     * @private {?goog.events.Key}\n     */\n    this.mousedownListenerKey_ \x3d null;\n\n    /**\n     * The number of dismissibles using the key listener.\n     * @private {number}\n     */\n    this.keyDismissiblesCount_ \x3d 0;\n\n    /**\n     * Event listener key, used to unlisten to key events.\n     * @private {?goog.events.Key}\n     */\n    this.keyListenerKey_ \x3d null;\n\n    /**\n     * The number of dismissibles using the focus listener.\n     * @private {number}\n     */\n    this.focusDismissiblesCount_ \x3d 0;\n\n    /**\n     * Event listener key, used to unlisten to focus events.\n     * @private {?goog.events.Key}\n     */\n    this.focusListenerKey_ \x3d null;\n\n    /**\n     * True if background clicks should propagate.\n     * @private {boolean}\n     */\n    this.propagateBackgroundClicks_ \x3d false;\n  },\n\n\n  /**\n   * @param {!Element} element The dismissible element.\n   * @return {boolean} True if element registered dismiss listener. Otherwise\n   *     returns false.\n   */\n  hasListener: function(element) {\n    return this.listeners_.has(goog.getUid(element));\n  },\n\n\n  /**\n   * Adds a dismiss listener. The listener is automatically removed when the\n   * element is dismissed.\n   * @param {!Element} element The dismissible element.\n   * @param {function(!EventType, ?Node\x3d): (boolean|undefined)} onDismiss\n   *     Function that is called when this element is dismissed. The first\n   *     parameter is the dismiss event type. The second parameter is the target\n   *     for a FOCUS or CLICK browser event. Such event target is present for\n   *     BACKGROUND_CLICK and FOCUS_LOST dismiss event. Returning false from\n   *     the onDismiss callback cancels dismissal.\n   * @param {!Array\x3c!EventType\x3e\x3d} eventTypes The dismiss events to listen to.\n   * @param {boolean\x3d} isDesktop True if the user is using a desktop computer.\n   * @param {boolean\x3d} replaceListener True to replace the old dismiss\n   *     listener. Otherwise exception will be thrown if old dismiss listener\n   *     was found. Default value is false.\n   * @param {boolean\x3d} propagateBackgroundClicks True if the dialog should allow\n   *     background clicks to propagate.\n   */\n  listen: function(\n      element, onDismiss, eventTypes \x3d gws.dismiss.DEFAULT_EVENT_TYPES,\n      isDesktop \x3d undefined, replaceListener \x3d undefined,\n      propagateBackgroundClicks \x3d undefined) {\n    const uid \x3d goog.getUid(element);\n    if (replaceListener) {\n      // Removes the old listener.\n      this.unlisten(element);\n    } else if (this.listeners_.has(uid)) {\n      throw Error(\x27Old dismiss listener was found.\x27);\n    }\n\n    this.listeners_.set(uid, {element, onDismiss, eventTypes});\n\n    if (eventTypes.includes(EventType.BACKGROUND_CLICK)) {\n      if (this.clickDismissiblesCount_ \x3d\x3d 0) {\n        if (isDesktop) {\n          this.mousedownListenerKey_ \x3d goog.events.listen(\n              window, \x27mousedown\x27, this.onClick_, /* capture */ true, this);\n        } else {\n          // Use \x27touchstart\x27 to get the element dismissed as soon as the\n          // user touches the screen, to mitigate the issue of the\n          // dismissable element overlapping with other layered elements on\n          // the page, e.g. b/35871282.\n          if (goog.events.BrowserFeature.TOUCH_ENABLED) {\n            this.touchListenerKey_ \x3d gws.touch.addTouchListener(\n                window.document.documentElement,\n                /* opt_callback */ undefined, goog.bind(this.onTouch_, this),\n                /* opt_endCallback */ undefined,\n                /* opt_numTouches */ 1,\n                // preventGhostClick causes b/37922048.\n                /* opt_dontPreventGhostClicks */ true,\n                // Set passive to false to allow the call to preventDefault on\n                // the touch event.\n                {passive: false, capture: true});\n          } else {\n            // TODO(domnit): Listen for fastclick\n            this.clickListenerKey_ \x3d goog.events.listen(\n                window, \x27click\x27, this.onClick_, /* capture */ true, this);\n          }\n        }\n      }\n      this.clickDismissiblesCount_++;\n      this.propagateBackgroundClicks_ \x3d Boolean(propagateBackgroundClicks);\n    }\n\n    if (eventTypes.includes(EventType.ESC_KEY)) {\n      if (this.keyDismissiblesCount_ \x3d\x3d 0) {\n        // TODO(domnit): Skip this on mobile?\n        this.keyListenerKey_ \x3d goog.events.listen(\n            window, \x27keydown\x27, this.onKey_, /* capture */ true, this);\n      }\n      this.keyDismissiblesCount_++;\n    }\n\n    if (eventTypes.includes(EventType.FOCUS_LOST)) {\n      if (this.focusDismissiblesCount_ \x3d\x3d 0) {\n        this.focusListenerKey_ \x3d goog.events.listen(\n            window, \x27focus\x27, this.onFocus_, /* capture */ true, this);\n      }\n      this.focusDismissiblesCount_++;\n    }\n  },\n\n\n  /**\n   * Stops listening for dismiss events for the given element,\n   * without dismissing it. No-op if already not listening.\n   * @param {!Element} element The dismissible element.\n   */\n  unlisten: function(element) {\n    const listener \x3d this.listeners_.get(goog.getUid(element));\n    if (listener) {\n      this.unlisten_(listener);\n    }\n  },\n\n\n  /**\n   * Stops listening for dismiss events for the given dismissible,\n   * without dismissing it.\n   * @param {!Listener_} listener\n   * @private\n   */\n  unlisten_: function(listener) {\n    if (listener.eventTypes.includes(EventType.BACKGROUND_CLICK)) {\n      this.clickDismissiblesCount_--;\n      if (this.clickDismissiblesCount_ \x3d\x3d 0) {\n        if (this.mousedownListenerKey_) {\n          goog.asserts.assert(\n              goog.events.unlistenByKey(this.mousedownListenerKey_));\n          this.mousedownListenerKey_ \x3d null;\n        } else if (this.touchListenerKey_) {\n          gws.touch.removeListener(this.touchListenerKey_);\n          this.touchListenerKey_ \x3d \x27\x27;\n        } else if (this.clickListenerKey_) {\n          goog.asserts.assert(\n              goog.events.unlistenByKey(this.clickListenerKey_));\n          this.clickListenerKey_ \x3d null;\n        }\n      }\n    }\n\n    if (listener.eventTypes.includes(EventType.ESC_KEY)) {\n      this.keyDismissiblesCount_--;\n      if (this.keyDismissiblesCount_ \x3d\x3d 0) {\n        goog.asserts.assert(goog.events.unlistenByKey(this.keyListenerKey_));\n        this.keyListenerKey_ \x3d null;\n      }\n    }\n\n    if (listener.eventTypes.includes(EventType.FOCUS_LOST)) {\n      this.focusDismissiblesCount_--;\n      if (this.focusDismissiblesCount_ \x3d\x3d 0) {\n        goog.asserts.assert(goog.events.unlistenByKey(this.focusListenerKey_));\n        this.focusListenerKey_ \x3d null;\n      }\n    }\n\n    this.listeners_.delete(goog.getUid(listener.element));\n  },\n\n\n  /**\n   * Dismisses the element by calling its registered onDismiss callback.\n   * If the callback succeeds does not return false, unlistens to dismiss\n   * events for the element.\n   * @param {!Element} element The dismissible element.\n   */\n  dismiss: function(element) {\n    const listener \x3d this.listeners_.get(goog.getUid(element));\n    goog.asserts.assert(listener, \x27Element is not dismissible!\x27);\n    if (listener) {\n      this.dismiss_(listener, EventType.MANUAL);\n    }\n  },\n\n\n  /**\n   * Dismisses the given dismissible by calling its registered onDismiss\n   * callback.\n   * @param {!Listener_} listener\n   * @param {!EventType} eventType\n   * @param {?Node\x3d} eventTarget\n   * @return {boolean} True if dismissed.\n   * @private\n   */\n  dismiss_: function(listener, eventType, eventTarget \x3d undefined) {\n    let value;\n    try {\n      value \x3d listener.onDismiss(eventType, eventTarget);\n    } catch (e) {\n      gws.error.log(e);\n    }\n    // Cancel if onDismiss returns exactly (\x3d\x3d\x3d) false\n    const cancel \x3d (value \x3d\x3d\x3d false);\n    if (!cancel) {\n      this.unlisten_(listener);\n    }\n    return !cancel;\n  },\n\n  /**\n   * Dismisses dismissibles on background touch.\n   * @param {!gws.touch.TouchEvent} e\n   * @private\n   */\n  onTouch_: function(e) {\n    if (this.dismissOnBackgroundClick_(\n            new goog.events.BrowserEvent(e.rawEvent))) {\n      // Prevent the click on underlying elements triggered by the touch\n      // (b/37653471).\n      if (!this.propagateBackgroundClicks_) {\n        e.rawEvent.stopPropagation();\n        e.rawEvent.preventDefault();\n      }\n    }\n  },\n\n  /**\n   * Dismisses dismissibles on background click.\n   * @param {!goog.events.BrowserEvent} event\n   * @private\n   */\n  onClick_: function(event) {\n    this.dismissOnBackgroundClick_(event);\n  },\n\n\n  /**\n   * Dismisses dismissibles on a click/touch on the background.\n   * @param {!goog.events.BrowserEvent} event\n   * @return {boolean} True if the dismissibles are dismissed.\n   * @private\n   */\n  dismissOnBackgroundClick_: function(event) {\n    // Do not dismiss on simulated click (b/22211260)\n    if (goog.dom.isElement(event.target)) {\n      const id \x3d goog.asserts.assertInstanceof(event.target, Element).id;\n      if (id \x3d\x3d gws.attentionProd.constants.PING_LINK_ID ||\n          id \x3d\x3d AnchorPingConstants.LINK_ID) {\n        return false;\n      }\n    }\n    let dismissed \x3d false;\n    for (const listener of this.listeners_.values()) {\n      if (listener.eventTypes.includes(EventType.BACKGROUND_CLICK) \x26\x26\n          !goog.dom.contains(listener.element, event.target)) {\n        // Force the compiler to remember that listener.element is an Element;\n        // it gets confused that it might be a Node, null, or undefined.\n        goog.asserts.assertInstanceof(listener.element, Element);\n        if (this.dismiss_(listener, EventType.BACKGROUND_CLICK, event.target)) {\n          dismissed \x3d true;\n        }\n      }\n    }\n    return dismissed;\n  },\n\n\n  /**\n   * Dismisses dismissibles on escape key.\n   * @param {!goog.events.BrowserEvent} event\n   * @private\n   */\n  onKey_: function(event) {\n    if (event.keyCode \x3d\x3d goog.events.KeyCodes.ESC) {\n      // Remove all on Esc\n      for (const listener of this.listeners_.values()) {\n        if (listener.eventTypes.includes(EventType.ESC_KEY)) {\n          this.dismiss_(listener, EventType.ESC_KEY);\n        }\n      }\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n\n  /**\n   * Dismisses dismissibles that lost focus.\n   * @param {!goog.events.BrowserEvent} event\n   * @private\n   */\n  onFocus_: function(event) {\n    for (const listener of this.listeners_.values()) {\n      if (listener.eventTypes.includes(EventType.FOCUS_LOST) \x26\x26\n          (!goog.dom.isNodeLike(event.target) ||\n           !goog.dom.contains(listener.element, event.target))) {\n        // Force the compiler to remember that listener.element is an Element;\n        // it gets confused that it might be a Node, null, or undefined.\n        goog.asserts.assertInstanceof(listener.element, Element);\n        this.dismiss_(listener, EventType.FOCUS_LOST, event.target);\n      }\n    }\n  }\n\n});  // goog.defineClass\n\n\n/**\n * A singleton instance of DismissibleTracker_.\n * @private\n */\ngws.dismiss.instance_ \x3d new gws.dismiss.DismissibleTracker_();\n\n\n/**\n * @see gws.dismiss.DismissibleTracker_#listen\n * @param {!Element} element\n * @param {function(!EventType): (boolean|undefined)} onDismiss\n * @param {!Array\x3c!EventType\x3e\x3d} eventTypes\n * @param {boolean\x3d} isDesktop\n * @param {boolean\x3d} replaceListener\n * @param {boolean\x3d} propagateBackgroundClicks\n */\ngws.dismiss.listen \x3d\n    goog.bind(gws.dismiss.instance_.listen, gws.dismiss.instance_);\n\n\n/**\n * @see gws.dismiss.DismissibleTracker_#unlisten\n * @param {!Element} element\n */\ngws.dismiss.unlisten \x3d\n    goog.bind(gws.dismiss.instance_.unlisten, gws.dismiss.instance_);\n\n\n/**\n * @see gws.dismiss.DismissibleTracker_#dismiss\n * @param {!Element} element\n */\ngws.dismiss.dismiss \x3d\n    goog.bind(gws.dismiss.instance_.dismiss, gws.dismiss.instance_);\n\n\n/**\n * @see gws.dismiss.DismissibleTracker_#hasListener\n * @param {!Element} element\n * @return {boolean}\n */\ngws.dismiss.hasListener \x3d\n    goog.bind(gws.dismiss.instance_.hasListener, gws.dismiss.instance_);\n});  // goog.scope\n\n//# sourceURL\x3dhttps://qs/googledata/html/templates/gws/head/xjs/dismiss/dismiss.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy8m');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy8m');

}catch(e){_DumpException(e)}
/* _Module_:sywx */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywx');
var $googDebugFname="javascript/a11y/information/aria/attribute.js";
goog.loadModule("/**\n * @fileoverview ARIA attributes as defined by W3C ARIA standard:\n * http://www.w3.org/TR/wai-aria/.\n */\ngoog.module(\x27a11y.information.aria.Attribute\x27);\ngoog.module.declareLegacyNamespace();\n\n\n/**\n * ARIA states and properties.\n * @enum {string}\n */\nconst Attribute \x3d {\n  // ARIA property for setting the currently active descendant of an element,\n  // for example the selected item in a list box. Value: ID of an element.\n  ACTIVEDESCENDANT: \x27aria-activedescendant\x27,\n\n  // ARIA property that, if true, indicates that all of a changed region should\n  // be presented, instead of only parts. Value: one of {true, false}.\n  ATOMIC: \x27aria-atomic\x27,\n\n  // ARIA property to specify that input completion is provided. Value:\n  // one of {\x27inline\x27, \x27list\x27, \x27both\x27, \x27none\x27}.\n  AUTOCOMPLETE: \x27aria-autocomplete\x27,\n\n  // ARIA state to indicate that an element and its subtree are being updated.\n  // Value: one of {true, false}.\n  BUSY: \x27aria-busy\x27,\n\n  // ARIA state for a checked item. Value: one of {\x27true\x27, \x27false\x27, \x27mixed\x27,\n  // undefined}.\n  CHECKED: \x27aria-checked\x27,\n\n  // ARIA property that identifies the element or elements whose contents or\n  // presence are controlled by this element.\n  // Value: space-separated IDs of other elements.\n  CONTROLS: \x27aria-controls\x27,\n\n  // ARIA property that identifies the element or elements that describe\n  // this element. Value: space-separated IDs of other elements.\n  DESCRIBEDBY: \x27aria-describedby\x27,\n\n  // ARIA state for a disabled item. Value: one of {true, false}.\n  DISABLED: \x27aria-disabled\x27,\n\n  // ARIA property that indicates what functions can be performed when a\n  // dragged object is released on the drop target.  Value: one of\n  // {\x27copy\x27, \x27move\x27, \x27link\x27, \x27execute\x27, \x27popup\x27, \x27none\x27}.\n  DROPEFFECT: \x27aria-dropeffect\x27,\n\n  // ARIA state for setting whether the element like a tree node is expanded.\n  // Value: one of {true, false, undefined}.\n  EXPANDED: \x27aria-expanded\x27,\n\n  // ARIA property that identifies the next element (or elements) in the\n  // recommended reading order of content. Value: space-separated ids of\n  // elements to flow to.\n  FLOWTO: \x27aria-flowto\x27,\n\n  // ARIA state that indicates an element\x27s \x22grabbed\x22 state in drag-and-drop.\n  // Value: one of {true, false, undefined}.\n  GRABBED: \x27aria-grabbed\x27,\n\n  // ARIA property indicating whether the element has a popup.\n  // Value: one of {true, false}.\n  HASPOPUP: \x27aria-haspopup\x27,\n\n  // ARIA state indicating that the element is not visible or perceivable\n  // to any user. Value: one of {true, false}.\n  HIDDEN: \x27aria-hidden\x27,\n\n  // ARIA state indicating that the entered value does not conform. Value:\n  // one of {false, true, \x27grammar\x27, \x27spelling\x27}\n  INVALID: \x27aria-invalid\x27,\n\n  // ARIA property that provides a label to override any other text, value, or\n  // contents used to describe this element. Value: string.\n  LABEL: \x27aria-label\x27,\n\n  // ARIA property for setting the element which labels another element.\n  // Value: space-separated IDs of elements.\n  LABELLEDBY: \x27aria-labelledby\x27,\n\n  // ARIA property for setting the level of an element in the hierarchy.\n  // Value: integer.\n  LEVEL: \x27aria-level\x27,\n\n  // ARIA property indicating that an element will be updated, and\n  // describes the types of updates the user agents, assistive technologies,\n  // and user can expect from the live region. Value: one of {\x27off\x27, \x27polite\x27,\n  // \x27assertive\x27}.\n  LIVE: \x27aria-live\x27,\n\n  // ARIA property indicating whether a text box can accept multiline input.\n  // Value: one of {true, false}.\n  MULTILINE: \x27aria-multiline\x27,\n\n  // ARIA property indicating if the user may select more than one item.\n  // Value: one of {true, false}.\n  MULTISELECTABLE: \x27aria-multiselectable\x27,\n\n  // ARIA property indicating if the element is horizontal or vertical.\n  // Value: one of {\x27vertical\x27, \x27horizontal\x27}.\n  ORIENTATION: \x27aria-orientation\x27,\n\n  // ARIA property creating a visual, functional, or contextual parent/child\n  // relationship when the DOM hierarchy can\x27t be used to represent it.\n  // Value: Space-separated IDs of elements.\n  OWNS: \x27aria-owns\x27,\n\n  // ARIA property that defines an element\x27s number of position in a list.\n  // Value: integer.\n  POSINSET: \x27aria-posinset\x27,\n\n  // ARIA state for a pressed item.\n  // Value: one of {true, false, undefined, \x27mixed\x27}.\n  PRESSED: \x27aria-pressed\x27,\n\n  // ARIA property indicating that an element is not editable.\n  // Value: one of {true, false}.\n  READONLY: \x27aria-readonly\x27,\n\n  // ARIA property indicating that change notifications within this subtree\n  // of a live region should be announced. Value: one of {\x27additions\x27,\n  // \x27removals\x27, \x27text\x27, \x27all\x27, \x27additions text\x27}.\n  RELEVANT: \x27aria-relevant\x27,\n\n  // ARIA property indicating that user input is required on this element\n  // before a form may be submitted. Value: one of {true, false}.\n  REQUIRED: \x27aria-required\x27,\n\n  // ARIA state for setting the currently selected item in the list.\n  // Value: one of {true, false, undefined}.\n  SELECTED: \x27aria-selected\x27,\n\n  // ARIA property defining the number of items in a list. Value: integer.\n  SETSIZE: \x27aria-setsize\x27,\n\n  // ARIA property indicating if items are sorted. Value: one of {\x27ascending\x27,\n  // \x27descending\x27, \x27none\x27, \x27other\x27}.\n  SORT: \x27aria-sort\x27,\n\n  // ARIA property for slider maximum value. Value: number.\n  VALUEMAX: \x27aria-valuemax\x27,\n\n  // ARIA property for slider minimum value. Value: number.\n  VALUEMIN: \x27aria-valuemin\x27,\n\n  // ARIA property for slider active value. Value: number.\n  VALUENOW: \x27aria-valuenow\x27,\n\n  // ARIA property for slider active value represented as text.\n  // Value: string.\n  VALUETEXT: \x27aria-valuetext\x27\n};\n\nexports \x3d Attribute;\n\n//# sourceURL\x3dhttps://qs/javascript/a11y/information/aria/attribute.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywx');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywx');

}catch(e){_DumpException(e)}
/* _Module_:syh2 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syh2');
var $googDebugFname="javascript/apps/wiz/vsync/rafpolyfill.js";
eval("/**\n * @fileoverview A polyfill for window.requestAnimationFrame and\n * window.cancelAnimationFrame.\n * Code based on https://gist.github.com/paulirish/1579671\n */\n\ngoog.provide(\x27wiz.rafPolyfill\x27);\n\n\n/**\n * @define {boolean} If true, will install the rAF polyfill.\n */\ngoog.define(\x27wiz.rafPolyfill.ENABLED\x27, true);\n\n\n/**\n * Installs the requestAnimationFrame (and cancelAnimationFrame) polyfill.\n */\nwiz.rafPolyfill.install \x3d wiz.rafPolyfill.ENABLED ? function() {\n  var vendors \x3d [\x27ms\x27, \x27moz\x27, \x27webkit\x27, \x27o\x27];\n  for (var x \x3d 0; x \x3c vendors.length \x26\x26 !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame \x3d window[vendors[x] +\n        \x27RequestAnimationFrame\x27];\n    window.cancelAnimationFrame \x3d window[vendors[x] +\n        \x27CancelAnimationFrame\x27] ||\n            window[vendors[x] + \x27CancelRequestAnimationFrame\x27];\n  }\n\n  if (!window.requestAnimationFrame) {\n    var lastTime \x3d 0;\n    window.requestAnimationFrame \x3d function(callback, opt_element) {\n      var currTime \x3d new Date().getTime();\n      var timeToCall \x3d Math.max(0, 16 - (currTime - lastTime));\n      lastTime \x3d currTime + timeToCall;\n      return window.setTimeout(function() {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n    };\n\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame \x3d function(id) {\n        clearTimeout(id);\n      };\n    }\n  }\n} : goog.nullFunction;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/vsync/rafpolyfill.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/vsync/vsync.js";
eval("/**\n * @fileoverview wiz.vsync allows scheduling work to be done in-sync with\n * the render refresh rate of the browser and to divide work up globally based\n * on whether the intent is to measure or to mutate the DOM. The latter avoids\n * repeated style recalculation which can be really slow.\n *\n * Goals of the API:\n *   - Make it super easy to schedule work for the next animation frame.\n *   - Make it super easy to only do work once per animation frame, even if 2\n *     events fire that trigger the same work.\n *   - Make it super easy to do all work in 2 phases to avoid repeated style\n *     recalculation caused by interleaved reads and writes.\n *   - Avoid creating closures per schedule operation.\n *\n * USAGE:\n * Declarative:\n * /** @wizaction\n * FooController.prototype.handleTouchMove \x3d wiz.vsync.method({\n *   measure: function(event, state) {\n *     state.width \x3d parseInt(event.actionElement.getStyle(\x27width\x27), 10);\n *   },\n *   mutate: function(event, state) {\n *     event.actionElement.setStyle(\x27width\x27, state.width / 2 + \x27px\x27);\n *   }\n * });\n *\n * Programmatic:\n * FooController \x3d wiz.controller(\u2026, function(event) {\n *   this.animationTask \x3d wiz.vsync.task(this).\n *       measure(function(state) {\n *         state.width \x3d parseInt(this.getRoot().getStyle(\x27width\x27), 10);\n *         this.animationTask();\n *       }).\n *       mutate(function(state) {\n *         this.getRoot().setStyle(\x27width\x27, state.width / 2 + \x27px\x27);\n *       }).\n *       build();\n * });\n *\n * * /** @wizaction\n * FooController.prototype.click \x3d function() {\n *   this.animationTask();\n * };\n *\n *\n * See also\n * https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame\n *\n * For testing with mock clocks, tick the clock by\n * {@link goog.testing.MockClock.REQUEST_ANIMATION_FRAME_TIMEOUT} to pass a\n * single frame/vsync.\n */\n\ngoog.provide(\x27wiz.vsync\x27);\ngoog.provide(\x27wiz.vsync.JankMetrics\x27);\ngoog.provide(\x27wiz.vsync.Spec\x27);\ngoog.provide(\x27wiz.vsync.State\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27wiz.rafPolyfill\x27);\n\n\n\nwiz.rafPolyfill.install();\n\n\n/**\n * @typedef {{\n *   measure: (!Function|undefined),\n *   mutate: (!Function|undefined),\n *   runInCurrentFrameIfPossible: (boolean|undefined)\n * }}\n */\nwiz.vsync.Spec;\n\n\n/**\n * Just a type for state. Users may add properties as desired.\n * @constructor\n * @final\n */\nwiz.vsync.State \x3d function() {};\n\n\n/**\n * Represents Jank-frames metrics, see go/what-is-jank. The metrics are\n * visual-centric. For a given time period, it tells how many frames were\n * recorded and how many of those frames were Janky frames. The data translates\n * to how often the user saw a broken or Janky experience.\n * - jankyFrameCount: The total number of janky frames.\n * - renderedFrameCount: The total number of rendered frames.\n * - averageFps: The average/mean Frames per second.\n * - maxFrameTimeMs: The length of the longest frame within durationMs.\n * - durationMs: The time interval over which the jank frames were recorded.\n *\n * @typedef {{\n *   jankyFrameCount: number,\n *   renderedFrameCount: number,\n *   averageFps: number,\n *   maxFrameTimeMs: number,\n *   durationMs: number\n * }}\n */\nwiz.vsync.JankMetrics;\n\n\n/**\n * @typedef {{\n *   id: number,\n *   fn: (!Function|undefined),\n *   context: (!Object|undefined)\n * }}\n * @private\n */\nwiz.vsync.Task_;\n\n\n/**\n * @typedef {{\n *   measureTask: wiz.vsync.Task_,\n *   mutateTask: wiz.vsync.Task_,\n *   args: (!Array|undefined),\n *   isScheduled: boolean,\n *   runInCurrentFrameIfPossible: (boolean|undefined),\n *   maxParameters: number\n * }}\n * @private\n */\nwiz.vsync.TaskSet_;\n\n\n/**\n * Saves set of tasks to be executed in the next requestAnimationFrame phase.\n * This list is initialized once before any event firing occurs. It is not\n * affected by the fired events or the requestAnimationFrame processing (unless\n * a new event is created during the processing).\n * @private {!Array\x3c!Array\x3cwiz.vsync.TaskSet_\x3e\x3e}\n */\nwiz.vsync.tasks_ \x3d [[], []];\n\n\n/**\n * Values are 0 or 1, for whether the first or second array should be used to\n * lookup or add tasks.\n * @private {number}\n */\nwiz.vsync.doubleBufferIndex_ \x3d 0;\n\n\n/**\n * Whether we have already requested an animation frame that hasn\x27t happened\n * yet.\n * @private {boolean}\n */\nwiz.vsync.requestedFrame_ \x3d false;\n\n\n/**\n * The timestamp of the last frame, used for measuring time between frames. If\n * set to 0, the last frame was not immediately followed by another frame,\n * and is not eligible to be measured.\n * @private {number}\n */\nwiz.vsync.lastFrameTimestamp_ \x3d 0;\n\n\n/**\n * The total number of frames we have timed, used to calculate an average.\n * @private {number}\n */\nwiz.vsync.numTimedFrames_ \x3d 1;\n\n\n/**\n * The sum of the timed frames in milliseconds, used to calculate an average.\n * @private {number}\n */\nwiz.vsync.sumOfTimedFrames_ \x3d 16;\n\n\n/**\n * The previous total number of frames we have timed,\n * used to calculate an average relative to numTimedFrames.\n * @private {number}\n */\nwiz.vsync.previousNumTimedFrames_ \x3d 0;\n\n\n/**\n * The previous sum of the timed frames in milliseconds,\n * used to calculate an average relative to sumOfTimedFrames.\n * @private {number}\n */\nwiz.vsync.previousSumOfTimedFrames_ \x3d 0;\n\n\n/**\n * The number of Janky Frames.\n * @private\n */\nwiz.vsync.numJankFrames_ \x3d 0;\n\n\n/**\n * The length of the longest frame recorded between calls to the function\n * wiz.vsync.getJankMetricsSinceLastCall.\n * @private\n */\nwiz.vsync.maxFrameRenderTimeMs_ \x3d 0;\n\n\n/**\n * @define {number} The maximum allowable duration for frames that are\n * considered not janky. Any frame that takes longer than this amount of time\n * will be considereded a jank frame. For now this correspond to 10Fps.\n */\ngoog.define(\x27wiz.vsync.JANK_FRAME_THRESHOLD\x27, 100);\n\n\n/**\n * Calculates the JankMetrics values.\n *\n * @return {!wiz.vsync.JankMetrics}\n * @public\n */\nwiz.vsync.getJankMetricsSinceLastCall \x3d function() {\n  var numBadFrames \x3d wiz.vsync.numJankFrames_;\n  wiz.vsync.numJankFrames_ \x3d 0;\n\n  var numTimedFrames \x3d wiz.vsync.numTimedFrames_ -\n      wiz.vsync.previousNumTimedFrames_;\n  wiz.vsync.previousNumTimedFrames_ \x3d wiz.vsync.numTimedFrames_;\n  var sumOfTimedFrames \x3d wiz.vsync.sumOfTimedFrames_ -\n      wiz.vsync.previousSumOfTimedFrames_;\n  wiz.vsync.previousSumOfTimedFrames_ \x3d wiz.vsync.sumOfTimedFrames_;\n\n  var maxFrameRenderTimeMs \x3d wiz.vsync.maxFrameRenderTimeMs_;\n  wiz.vsync.maxFrameRenderTimeMs_ \x3d 0;\n\n  var meanFps;\n  // If no new frame since last time, return best FPS.\n  if (numTimedFrames \x3c\x3d 0 || sumOfTimedFrames \x3c\x3d 0) {\n    meanFps \x3d 1000 / 16;\n  } else {\n    meanFps \x3d 1000 / (sumOfTimedFrames / numTimedFrames);\n  }\n\n  return {\n    jankyFrameCount: numBadFrames,\n    renderedFrameCount: numTimedFrames,\n    averageFps: meanFps,\n    maxFrameTimeMs: maxFrameRenderTimeMs,\n    durationMs: sumOfTimedFrames\n  };\n};\n\n\n/**\n * Returns the average (mean) observed FPS.\n * @return {number}\n * @public\n */\nwiz.vsync.getAverageFps \x3d function() {\n  return 1000 / (wiz.vsync.sumOfTimedFrames_ / wiz.vsync.numTimedFrames_);\n};\n// Expose this method to the global scope for CSI logging, which shouldn\x27t have\n// a hard dependency on this code.\ngoog.global[\x27_F_getAverageFps\x27] \x3d wiz.vsync.getAverageFps;\n\n\n/** @private @enum {number} Status of a vsync execution. */\nwiz.vsync.Status_ \x3d {\n  IDLE: 0,\n  MEASURE: 1,\n  MUTATE: 2\n};\n\n\n/** @private {wiz.vsync.Status_} Current status of a vsync execution. */\nwiz.vsync.status_ \x3d wiz.vsync.Status_.IDLE;\n\n\n/**\n * Counter to generate IDs for tasks.\n * @private {number}\n */\nwiz.vsync.taskId_ \x3d 0;\n\n\n/** @private @const {!Array} */\nwiz.vsync.EMPTY_ARRAY_ \x3d goog.DEBUG \x26\x26 Object.freeze ? Object.freeze([]) : [];\n\n\n/**\n * Returns a function that schedules the 2 passed in functions to be run upon\n * the next animation frame. Calling the function again during the same\n * animation frame does nothing.\n * The function under the \x22measure\x22 key will run first and together with all\n * other functions scheduled under this key and the function under \x22mutate\x22 will\n * run after that.\n * @param {{\n *   measure: (function(this:THIS, !wiz.vsync.State)|undefined),\n *   mutate: (function(this:THIS, !wiz.vsync.State)|undefined),\n *   runInCurrentFrameIfPossible: (boolean|undefined)\n * }} spec\n * @param {THIS\x3d} opt_context\n * @return {function(...?)}\n * @template THIS\n * Soft Deprecated: Use {@link wiz.vsync.task} instead.\n */\nwiz.vsync.createTask \x3d function(spec, opt_context) {\n  var genericSpec \x3d /** @type {wiz.vsync.Spec} */ (spec);\n  return wiz.vsync.createTask_(genericSpec, opt_context);\n};\n\n\n\n/**\n * Simple class to encapsulate the aspects of a task. This only exists because\n * the wiz.vsync.createTask API doesn\x27t currently propery infer the this of\n * the functions passed to it, due to limitations in the compiler.\n * @param {CONTEXT\x3d} opt_context\n * @constructor @struct @final\n * @template CONTEXT\n * @private\n */\nwiz.vsync.TaskBuilder_ \x3d function(opt_context) {\n  /** @private {function(this:CONTEXT, !wiz.vsync.State)|undefined} */\n  this.measure_ \x3d undefined;\n  /** @private {function(this:CONTEXT, !wiz.vsync.State)|undefined} */\n  this.mutate_ \x3d undefined;\n  /** @private {boolean} */\n  this.runInCurrentFrameIfPossible_ \x3d false;\n  /** @private {CONTEXT|undefined}*/\n  this.context_ \x3d opt_context;\n};\n\n\n/**\n * Sets a measure function for the task.\n * @param {function(this:CONTEXT, !wiz.vsync.State)} measure\n * @return {!wiz.vsync.TaskBuilder_\x3cCONTEXT\x3e}\n */\nwiz.vsync.TaskBuilder_.prototype.measure \x3d function(measure) {\n  this.measure_ \x3d measure;\n  return this;\n};\n\n\n/**\n * Sets a mutate function for the task.\n * @param {function(this:CONTEXT, !wiz.vsync.State)} mutate\n * @return {!wiz.vsync.TaskBuilder_\x3cCONTEXT\x3e}\n */\nwiz.vsync.TaskBuilder_.prototype.mutate \x3d function(mutate) {\n  this.mutate_ \x3d mutate;\n  return this;\n};\n\n\n/**\n * Instructs wiz.vsync to schedule the task in the current frame if that is\n * possible (you want to measure and we are currently measuring or you only\n * want to mutate).\n * This helps when you are in reusable code and just want to make sure you\n * are in vsync. Do not use it for animations as recursions (for the next frame)\n * will not schedule a new frame!\n * @return {!wiz.vsync.TaskBuilder_\x3cCONTEXT\x3e}\n */\nwiz.vsync.TaskBuilder_.prototype.runInCurrentFrameIfPossible \x3d function() {\n  this.runInCurrentFrameIfPossible_ \x3d true;\n  return this;\n};\n\n\n/**\n * Returns the reusable task function.\n * @return {function(!wiz.vsync.State\x3d)}\n */\nwiz.vsync.TaskBuilder_.prototype.build \x3d function() {\n  return wiz.vsync.createTask({\n    measure: this.measure_,\n    mutate: this.mutate_,\n    runInCurrentFrameIfPossible: this.runInCurrentFrameIfPossible_\n  }, this.context_);\n};\n\n\n\n/**\n * Returns a builder for a wiz.vsync task.\n *\n * Usage:\n * var task \x3d wiz.vsync.task(context).\n *     measure(function(state) {\n *       \u2026\n *     }).\n *     mutate(function(state) {\n *       \u2026\n *     }).build();\n *\n * @param {THIS\x3d} opt_context\n * @return {!wiz.vsync.TaskBuilder_\x3cTHIS\x3e}\n * @template THIS\n */\nwiz.vsync.task \x3d function(opt_context) {\n  return new wiz.vsync.TaskBuilder_(opt_context);\n};\n\n\n\n/**\n * {@see wiz.vsync.createTask} This private method only exists, because\n * {@see wiz.vsync.method} requires a looser type signature.\n * @param {wiz.vsync.Spec} spec\n * @param {!Object\x3d} opt_context\n * @return {function(...?)}\n * @private\n */\nwiz.vsync.createTask_ \x3d function(spec, opt_context) {\n  var id \x3d wiz.vsync.taskId_++;\n  /** @type {!wiz.vsync.Task_} */\n  var measureTask \x3d {\n    id: id,\n    fn: spec.measure,\n    context: opt_context\n  };\n  /** @type {!wiz.vsync.Task_} */\n  var mutateTask \x3d {\n    id: id,\n    fn: spec.mutate,\n    context: opt_context\n  };\n  if (goog.DEBUG \x26\x26 spec.measure \x26\x26 !spec.measure.name \x26\x26\n      !spec.measure.displayName) {\n    spec.measure.displayName \x3d \x27# wiz.vsync measure\x27;\n  }\n  if (goog.DEBUG \x26\x26 spec.mutate \x26\x26 !spec.mutate.name \x26\x26\n      !spec.mutate.displayName) {\n    spec.mutate.displayName \x3d \x27# wiz.vsync mutate\x27;\n  }\n\n  /** @type {!wiz.vsync.TaskSet_} */\n  var taskSet \x3d {\n    measureTask: measureTask,\n    mutateTask: mutateTask,\n    args: undefined,\n    isScheduled: false,\n    runInCurrentFrameIfPossible: spec.runInCurrentFrameIfPossible,\n    maxParameters: Math.max(measureTask.fn ? measureTask.fn.length : 0,\n                            mutateTask.fn ? mutateTask.fn.length : 0)\n  };\n\n  var fn \x3d /** @this {!Object} */ function vsyncTask() {\n    // Default the context to the one that was used to call the tasks scheduler\n    // (this function).\n    if (!opt_context) {\n      measureTask.context \x3d this;\n      mutateTask.context \x3d this;\n    }\n\n    if (taskSet.args) {\n      taskSet.args.length \x3d 0;\n    }\n\n    // Set args only if arguments are passed or the state parameter is used.\n    if (arguments.length \x3e 0 || taskSet.maxParameters \x3e 0) {\n      if (!taskSet.args) {\n        taskSet.args \x3d [];\n      }\n      taskSet.args.push.apply(taskSet.args, arguments);\n      // The state argument goes last, if used. That is kinda horrible but\n      // compatible with {@see wiz.async.method}.\n      if (taskSet.maxParameters \x3e arguments.length) {\n        taskSet.args.push({});\n      }\n    }\n    if (!taskSet.isScheduled) {\n      taskSet.isScheduled \x3d true;\n      var index \x3d wiz.vsync.doubleBufferIndex_;\n      // Check whether we should and can schedule in the current frame.\n      if (taskSet.runInCurrentFrameIfPossible \x26\x26\n          // Only try to use same frame when currently in a vsync frame.\n          wiz.vsync.status_ !\x3d wiz.vsync.Status_.IDLE \x26\x26\n          // New task wants to measure and we are currently measuring\n          ((taskSet.measureTask.fn \x26\x26\n              wiz.vsync.status_ \x3d\x3d wiz.vsync.Status_.MEASURE) ||\n          !taskSet.measureTask.fn)) {\n        index \x3d (index + 1) % 2;  // Use the current index instead.\n      }\n      var tasksArray \x3d wiz.vsync.tasks_[index];\n      tasksArray.push(taskSet);\n    }\n    wiz.vsync.requestAnimationFrame_();\n  };\n  // \x22id\x22 ensures that this exact function passes into\n  // wiz.scroll.ScrollManager.prototype.addHighPerformanceHandler.\n  if (goog.DEBUG) {\n    fn[\x27id\x27] \x3d \x27vsyncTask\x27;\n  }\n  return fn;\n};\n\n\n/**\n * Run scheduled tasks.\n * @param {number} now Current time.\n * @private\n */\nwiz.vsync.runTasks_ \x3d function(now) {\n  var tasksArray \x3d wiz.vsync.tasks_[wiz.vsync.doubleBufferIndex_];\n\n  // During the runTasks_, if there is a recursive call to queue up more\n  // task(s) for the next frame, we use double-buffering for that.\n  wiz.vsync.doubleBufferIndex_ \x3d (wiz.vsync.doubleBufferIndex_ + 1) % 2;\n\n  try {\n    // Call function with actual work. Separated because the try block here\n    // prevents that function from becoming optimized.\n    wiz.vsync.runTasksInternal_(tasksArray, now);\n  } finally {\n    wiz.vsync.status_ \x3d wiz.vsync.Status_.IDLE;\n    // Clear the tasks array as we have finished processing all the tasks.\n    tasksArray.length \x3d 0;\n  }\n};\n\n\n\n/**\n * Run scheduled tasks.\n * Because the function is performance critical it must not contain a try-\n * block.\n * @param {!Array\x3cwiz.vsync.TaskSet_\x3e} tasksArray The tasks to run.\n * @param {number} now Current time.\n * @private\n */\nwiz.vsync.runTasksInternal_ \x3d function(tasksArray, now) {\n  // The following expression is intended to be never true (see inside of block\n  // for explanation). We first check now against 0 because that is fast and\n  // then do a backup test. For unknown reasons now is, indeed, sometimes\n  // negative. See b/19157875.\n  if (now \x3c 0 \x26\x26 window[\x27dOeSnOtEXIST\x27] \x3d\x3d\x3d 0) {\n    // Prevent inlining.\n    // TODO(b/19247227) Remove when the compiler learns that it should not\n    // inline this function.\n    wiz.vsync.runTasksInternal_(tasksArray, 1);\n  }\n  wiz.vsync.requestedFrame_ \x3d false;\n\n  var task;\n  wiz.vsync.status_ \x3d wiz.vsync.Status_.MEASURE;\n  // Run all the measure tasks first.\n  for (var i \x3d 0; i \x3c tasksArray.length; ++i) {\n    task \x3d tasksArray[i];\n\n    if (task.args \x26\x26 task.args[task.args.length - 1]) {\n      /**\n       * @const {number} Now value passed to requestAnimationFrame. This is\n       * attached to the last argument, which should be the state.\n       */\n      task.args[task.args.length - 1].now \x3d now;\n    }\n\n    var measureTask \x3d task.measureTask;\n    task.isScheduled \x3d false;\n    if (measureTask.fn) {\n      // TODO (perumaal): Handle any exceptions thrown by the lambda.\n      measureTask.fn.apply(measureTask.context,\n          task.args || wiz.vsync.EMPTY_ARRAY_);\n    }\n  }\n  wiz.vsync.status_ \x3d wiz.vsync.Status_.MUTATE;\n  // Run the mutate tasks next.\n  for (var i \x3d 0; i \x3c tasksArray.length; ++i) {\n    task \x3d tasksArray[i];\n\n    if (task.args \x26\x26 task.args[task.args.length - 1]) {\n      /**\n       * @const {number} Now value passed to requestAnimationFrame. This is\n       * attached to the last argument, which should be the state.\n       */\n      task.args[task.args.length - 1].now \x3d now;\n    }\n\n    var mutateTask \x3d task.mutateTask;\n    task.isScheduled \x3d false;\n    if (mutateTask.fn) {\n      // TODO (perumaal): Handle any exceptions thrown by the lambda.\n      mutateTask.fn.apply(mutateTask.context,\n          task.args || wiz.vsync.EMPTY_ARRAY_);\n    }\n  }\n\n  // Since lastFrameTimestamp is \x3e 0, this frame was triggered from within the\n  // last frame.\n  if (wiz.vsync.lastFrameTimestamp_ \x3e 0 \x26\x26 now \x3e 1) {\n    var frameTime \x3d now - wiz.vsync.lastFrameTimestamp_;\n    // Only record this fps if the last frame was within 0.5 second, otherwise\n    // something probably interrupted execution.\n    if (frameTime \x3c 500) {\n      wiz.vsync.sumOfTimedFrames_ +\x3d frameTime;\n      wiz.vsync.numTimedFrames_++;\n\n      if (frameTime \x3e wiz.vsync.JANK_FRAME_THRESHOLD) {\n        wiz.vsync.numJankFrames_++;\n      }\n\n      if (wiz.vsync.maxFrameRenderTimeMs_ \x3c frameTime) {\n        wiz.vsync.maxFrameRenderTimeMs_ \x3d frameTime;\n      }\n    }\n  }\n\n  // If one or more of the tasks requested another frame, then we are interested\n  // in the time it takes to receive it.\n  if (wiz.vsync.requestedFrame_ \x26\x26 now \x3e 1) {\n    wiz.vsync.lastFrameTimestamp_ \x3d now;\n  } else {\n    wiz.vsync.lastFrameTimestamp_ \x3d 0;\n  }\n};\n\n\n/**\n * Request {@see wiz.vsync.runTasks_} to be called upon the next animation\n * frame if we haven\x27t done so already.\n * @private\n */\nwiz.vsync.requestAnimationFrame_ \x3d function() {\n  if (wiz.vsync.requestedFrame_) {\n    return;\n  }\n  wiz.vsync.requestedFrame_ \x3d true;\n  window.requestAnimationFrame(wiz.vsync.runTasks_);\n};\n\n\n/**\n * Asserts that the execution is currently in the measure stage of vsync. Useful\n * for methods that perform meausres and wish to assert that they happen in the\n * measure stage of a vsync.\n */\nwiz.vsync.assertInMeasure \x3d function() {\n  goog.asserts.assert(wiz.vsync.isMeasuring(),\n      \x27Must be called from within wiz.vsync measure.\x27);\n};\n\n\n/**\n * @return {boolean}\n * @package\n */\nwiz.vsync.isMeasuring \x3d function() {\n  return wiz.vsync.status_ \x3d\x3d wiz.vsync.Status_.MEASURE;\n};\n\n\n/**\n * Asserts that the execution is currently in the mutate stage of vsync. Useful\n * for methods that perform mutates and wish to assert that they happen in the\n * mutate stage of a vsync.\n */\nwiz.vsync.assertInMutate \x3d function() {\n  goog.asserts.assert(wiz.vsync.isMutating(),\n      \x27Must be called from within wiz.vsync mutate.\x27);\n};\n\n\n/**\n * @return {boolean}\n * @package\n */\nwiz.vsync.isMutating \x3d function() {\n  return wiz.vsync.status_ \x3d\x3d wiz.vsync.Status_.MUTATE;\n};\n\n\n/**\n * Execute a measurement immediately, suppressing the normal vsync warnings.\n * Great caution should be used when calling this, it is intended for rare\n * cases where you need to force an immediate layout operation in order to do a\n * measurement.\n * \x3cp\x3e\n * An example of where this might be useful is if you need to temporarily set\n * the width / height of an element to \x27auto\x27 to measure its natural size,\n * before setting the size explicitly.\n *\n * @param {function(this:THIS)} measure The function to execute.\n * @param {THIS\x3d} opt_context\n * @template THIS\n */\nwiz.vsync.measureImmediate \x3d function(measure, opt_context) {\n  var savedStatus \x3d wiz.vsync.status_;\n  try {\n    wiz.vsync.status_ \x3d wiz.vsync.Status_.MEASURE;\n    measure.apply(opt_context);\n  } finally {\n    wiz.vsync.status_ \x3d savedStatus;\n  }\n};\n\n\n/**\n * Execute a mutation immediately, suppressing the normal vsync warnings.\n * Great caution should be used when calling this, it is intended for rare\n * cases where you need to force an immediate layout operation in order to do a\n * measurement.\n * \x3cp\x3e\n * An example of where this might be useful is if you need to temporarily set\n * the width / height of an element to \x27auto\x27 to measure its natural size,\n * before setting the size explicitly.\n *\n * @param {function(this:THIS):RETURN} mutate The function to execute.\n * @param {THIS\x3d} opt_context\n * @return {RETURN} The return value of the mutate function.\n * @template THIS, RETURN\n */\nwiz.vsync.mutateImmediate \x3d function(mutate, opt_context) {\n  var savedStatus \x3d wiz.vsync.status_;\n  try {\n    wiz.vsync.status_ \x3d wiz.vsync.Status_.MUTATE;\n    return mutate.apply(opt_context);\n  } finally {\n    wiz.vsync.status_ \x3d savedStatus;\n  }\n};\n\n\n/**\n * Resets the state for testing.\n * @public\n */\nwiz.vsync.resetForTesting \x3d function() {\n  wiz.vsync.tasks_ \x3d [[], []];\n  wiz.vsync.doubleBufferIndex_ \x3d 0;\n  wiz.vsync.requestedFrame_ \x3d false;\n  wiz.vsync.status_ \x3d wiz.vsync.Status_.IDLE;\n  wiz.vsync.taskId_ \x3d 0;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/vsync/vsync.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syh2');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syh2');

}catch(e){_DumpException(e)}
/* _Module_:syww */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syww');
var $googDebugFname="javascript/apps/wiz/query/window/window.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27wiz.Window\x27);\ngoog.module.declareLegacyNamespace();\n\nconst {ONE_WINDOW} \x3d goog.require(\x27wiz.window.services\x27);\nconst {WINDOW} \x3d goog.require(\x27wiz.interfaces\x27);\nconst {registerInterface} \x3d goog.require(\x27wiz.interface\x27);\n\n/**\n * Interface for services representing a Window.\n * Inject this to get access to the right window.\n *\n * The default implementation only supports a single window, but other\n * implementations can support a more sophisticated model.\n * @interface\n */\nclass WindowInterface {\n  /**\n   * Returns the Window object this service is bound to.\n   * @return {!Window}\n   */\n  get() {}\n\n  /**\n   * Returns the Document object this service is bound to.\n   * @return {!Document}\n   */\n  getDocument() {}\n\n  /**\n   * Find things using wiz.Query in the current window.\n   * @param {string} selector The CSS selector for matching elements.\n   * @return {!wiz.Query}\n   */\n  find(selector) {}\n}\n\nregisterInterface(WINDOW, WindowInterface, ONE_WINDOW);\nexports \x3d WindowInterface;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/query/window/window.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syww');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syww');

}catch(e){_DumpException(e)}
/* _Module_:sywy */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywy');
var $googDebugFname="javascript/apps/wiz/a11y/focusstate.js";
eval("goog.provide(\x27wiz.a11y.FocusState\x27);\n\ngoog.require(\x27wiz.Query\x27);\n\n\n\n/**\n * Class that represents a previously focused control, and whether that control\n * was displaying focus or not.\n */\nwiz.a11y.FocusState \x3d goog.defineClass(null, {\n  /**\n   * @param {Element} focusEl The current active element in the document.\n   */\n  constructor: function(focusEl) {\n    /** @private @const {!wiz.Query} */\n    this.focusEl_ \x3d !!focusEl ? new wiz.Query.One(focusEl) : new wiz.Query([]);\n  },\n\n  /** Restores the element focus to the previous state. */\n  restore: function() {\n    if (this.focusEl_.size()) {\n      this.focusEl_.focus();\n    }\n  },\n\n  /**\n   * @return {!wiz.Query} Return the element which had focus.\n   */\n  getElement: function() {\n    return this.focusEl_;\n  }\n});\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/a11y/focusstate.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/a11y/focus.js";
eval("goog.provide(\x27wiz.a11y.focus\x27);\n\n\n/**\n * A global variable which records whether keyboard focus highlights should be\n * shown. This is outside of any class because a lot of different classes need\n * to share this information, but there are no methods associated with it. See\n * README file for instructions on how to use this.\n * @type {boolean}\n */\nwiz.a11y.focus.visible \x3d false;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/a11y/focus.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/apps/wiz/a11y/focusservice.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27wiz.a11y.FocusService\x27);\ngoog.module.declareLegacyNamespace();\n\nconst AriaAttribute \x3d goog.require(\x27a11y.information.aria.Attribute\x27);\nconst EventType \x3d goog.require(\x27goog.events.EventType\x27);\nconst FocusState \x3d goog.require(\x27wiz.a11y.FocusState\x27);\nconst KeyCodes \x3d goog.require(\x27goog.events.KeyCodes\x27);\nconst WizWindow \x3d goog.require(\x27wiz.Window\x27);\nconst a11yServices \x3d goog.require(\x27wiz.a11y.services\x27);\nconst classlist \x3d goog.require(\x27goog.dom.classlist\x27);\nconst events \x3d goog.require(\x27goog.events\x27);\nconst focus \x3d goog.require(\x27wiz.a11y.focus\x27);\nconst vsync \x3d goog.require(\x27wiz.vsync\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst wizJsaction \x3d goog.require(\x27wiz.jsaction\x27);\n\n\n\n/**\n * Service that is used to manage focus / blur events and allow controls that\n * manage their own focus states to be saved \x26 restored.\n *\n * Wiz UI controls that support focus typically allow a \x27bi-modal\x27 focus\n * display, where focus is hidden from the user unless they are actually tab-\n * navigating between controls. These controls detect whether the user is using\n * the mouse or using the keyboard, and switch display modes accordingly.\n *\n * This service cooperates with these controls by making it possible to\n * temporarily grab focus from a control, and then later restore that focus,\n * including preserving the fact that the widget was in keyboard vs. mouse\n * focus mode. It also preserves the mode when a control loses focus because\n * the browser window did.\n *\n * @constructor\n * @extends {wiz.Object}\n * TODO(wqardaji): make this final after quantum FocusService is deleted.\n */\nconst FocusService \x3d wiz.service(a11yServices.FOCUS, {\n  service: {\n    win: WizWindow\n  }\n}, function(response) {\n  /** @private @const {!WizWindow} */\n  this.winService_ \x3d response.service.win;\n\n  // Capture keyboard events so we can detect keyboard navigation.\n  events.listen(\n      this.winService_.getDocument().body, EventType.KEYDOWN,\n      this.keyDown_, true, this);\n});\n\n\n/**\n * Returns a FocusState object, which contains a reference to the element that\n * currently has focus, as well as information about whether that element is\n * currently displaying a focus indicator. You can call the \x27restore\x27 method\n * on the FocusState object to restore the element back to the state it was\n * when the FocusState object was created.\n * @return {!FocusState} The saved focus state. Returns null if no element was\n *     focused.\n */\nFocusService.prototype.saveFocus \x3d function() {\n  return new FocusState(this.winService_.getDocument().activeElement);\n};\n\n\n/**\n * Event handler for captured key down events. This is used to detect keyboard\n * navigation.\n * @param {!events.BrowserEvent} ev The key down event.\n * @private\n */\nFocusService.prototype.keyDown_ \x3d function(ev) {\n  if (ev.keyCode \x3d\x3d KeyCodes.TAB) {\n    focus.visible \x3d true;\n  }\n};\n\n\n/**\n * Traps tab focus within the given DOM element. This is useful for modal\n * dialogs and other situations where users should not be able to tab to other\n * parts of the screen.\n *\n * This method adds 2 hidden divs which are used to mark the beginning and the\n * end of the tabbable region. If the el element passed in to this function is\n * destroyed on close no additional work is required. If it is reused, however,\n * you should call FocusService.releaseFocus to clean up the effects of this\n * method.\n *\n * If the active element is outside of the focus container, focus is set to the\n * first focusable element within the focus container or opt_focusElement.\n *\n * @param {!wiz.Query} el The element to limit the focus to.\n * @param {!wiz.Query\x3d} opt_focusElement The focusable child element of el to\n *     set the focus to.\n */\nFocusService.prototype.trapFocus \x3d function(el, opt_focusElement) {\n  var sentinelStart \x3d this.createSentinel_();\n  var sentinelEnd \x3d this.createSentinel_();\n\n  wizJsaction.listen(sentinelStart.el(), EventType.FOCUS, function(e) {\n    this.focusLast(el);\n  }, this);\n  wizJsaction.listen(sentinelEnd.el(), EventType.FOCUS, function(e) {\n    this.focusFirst(el);\n  }, this);\n\n  el.children().first().before(sentinelStart);\n  el.append(sentinelEnd);\n\n  if (opt_focusElement) {\n    this.maybeFocusElement(el, opt_focusElement);\n  } else if (!el.el().contains(this.winService_.getDocument().activeElement)) {\n    // TODO(googyl): Add a demo dialog to show how autofocus works.\n    this.maybeFocusFirstAutofocus(el);\n  }\n};\n\n\n/** @private @return {!wiz.Query.One} A sentinel element for trapping focus. */\nFocusService.prototype.createSentinel_ \x3d function() {\n  var sentinel \x3d new wiz.Query.One(this.winService_.getDocument().\n      createElement(\x27div\x27));\n  sentinel.setAttr(\x27tabindex\x27, 0);\n  sentinel.addClass(goog.getCssName(\x27focusSentinel\x27));\n  return sentinel;\n};\n\n\n/**\n * Releases focus on an element which trapFocus was previously called on.\n * // TODO(asmaciel): Remove jsaction listener callback when focus is released.\n *\n * @param {!wiz.Query} el The element which has had its focus trapped.\n */\nFocusService.prototype.releaseFocus \x3d function(el) {\n  el.find(\x27.\x27 + goog.getCssName(\x27focusSentinel\x27)).remove();\n};\n\n\n/**\n * Set focus to the first autofocus element. If no such element\n * exists, focus is set on the first focusable element.\n * @param {!wiz.Query} root The containing element to focus within.\n */\nFocusService.prototype.maybeFocusFirstAutofocus \x3d function(root) {\n  vsync.task(this).measure(function(state) {\n    var focusableElements \x3d this.getFocusableElements(root);\n    var autofocusElements \x3d focusableElements\n        .filter(function(el) {\n          return el.hasAttribute(\x27autofocus\x27);\n        });\n\n    if (autofocusElements.size() \x3e 0) {\n      state.toFocus \x3d autofocusElements.eq(0);\n    } else if (focusableElements.size() \x3e 0) {\n      state.toFocus \x3d focusableElements.eq(0);\n    }\n  }).mutate(function(state) {\n    if (state.toFocus) {\n      state.toFocus.focus();\n    }\n  }).build()();\n};\n\n\n/**\n * Set focus to the first autofocus element in the next animation frame. If no\n * such element exists, return false.\n * @param {!wiz.Query} root The containing element to focus within.\n * @return {boolean} Whether focus will be set.\n */\nFocusService.prototype.focusFirstAutofocus \x3d function(root) {\n  var focusableElements \x3d this.getFocusableElements(root);\n  var autofocusElement \x3d focusableElements.filter(function(el) {\n    return el.hasAttribute(\x27autofocus\x27);\n  }).el();\n\n  if (autofocusElement) {\n    var vsyncState \x3d new vsync.State();\n    vsyncState.toFocus \x3d autofocusElement;\n    vsync.task(this).mutate(function(state) {\n      state.toFocus.focus();\n    }).build()(vsyncState);\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * Set focus to the provided focusable child element of root. If no such element\n * exists, focus is set on the first focusable child element of root.\n * @param {!wiz.Query} root The containing element to focus within.\n * @param {!wiz.Query} focusElement The element to focus.\n */\nFocusService.prototype.maybeFocusElement \x3d function(root, focusElement) {\n  vsync.task(this).measure(function(state) {\n    var focusableElements \x3d this.getFocusableElements(root).toArray();\n    var focusIndex \x3d Math.max(focusableElements.indexOf(\n        /** @type {!Element} */ (focusElement.el())), 0);\n    state.toFocus \x3d focusableElements[focusIndex];\n  }).mutate(function(state) {\n    if (state.toFocus) {\n      state.toFocus.focus();\n    }\n  }).build()();\n};\n\n\n/**\n * Set focus to the first focusable element.\n * @param {!wiz.Query} root The containing element to focus within.\n */\nFocusService.prototype.focusFirst \x3d function(root) {\n  vsync.task(this).measure(function(state) {\n    var focusable \x3d this.getFocusableElements(root);\n    if (focusable.size() \x3e 0) {\n      state.toFocus \x3d focusable.eq(0);\n    }\n  }).mutate(function(state) {\n    if (state.toFocus) {\n      state.toFocus.focus();\n    }\n  }).build()();\n};\n\n\n/**\n * Set focus to the last focusable element.\n * @param {!wiz.Query} root The containing element to focus within.\n */\nFocusService.prototype.focusLast \x3d function(root) {\n  vsync.task(this).measure(function(state) {\n    var focusable \x3d this.getFocusableElements(root);\n    if (focusable.size() \x3e 0) {\n      state.toFocus \x3d focusable.eq(-1);\n    }\n  }).mutate(function(state) {\n    if (state.toFocus) {\n      state.toFocus.focus();\n    }\n  }).build()();\n};\n\n\n/**\n * Query for all focusable descendant elements.\n * @param {!wiz.Query} root The containing element to focus within.\n * @return {!wiz.Query} All focusable descendant elements.\n */\nFocusService.prototype.getFocusableElements \x3d function(root) {\n  return root\n      .find(\x27[autofocus], [tabindex], a, input, textarea, select, button\x27)\n      .filter(function(el) {\n        var isDisabledOrHidden \x3d\n            el.getAttribute(AriaAttribute.DISABLED) \x3d\x3d \x27true\x27 ||\n            el.getAttribute(\x27disabled\x27) !\x3d null ||\n            el.getAttribute(\x27hidden\x27) !\x3d null ||\n            el.getAttribute(AriaAttribute.HIDDEN) \x3d\x3d \x27true\x27;\n        var isTabbableAndVisible \x3d el.tabIndex \x3e\x3d 0 \x26\x26\n            el.getBoundingClientRect().width \x3e 0 \x26\x26\n            !classlist.contains(el, goog.getCssName(\x27focusSentinel\x27)) \x26\x26\n            !isDisabledOrHidden;\n        var isProgrammaticallyHidden \x3d false;\n        if (isTabbableAndVisible) {\n          var style \x3d this.winService_.get().getComputedStyle(el);\n          isProgrammaticallyHidden \x3d\n              style.display \x3d\x3d \x27none\x27 || style.visibility \x3d\x3d \x27hidden\x27;\n        }\n        return isTabbableAndVisible \x26\x26 !isProgrammaticallyHidden;\n      }.bind(this));\n};\n\n\n/** @const */\nexports \x3d FocusService;\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/a11y/focusservice.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywy');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywy');

}catch(e){_DumpException(e)}
/* _Module_:sywz */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywz');
var $googDebugFname="gws/js/modal/modal_service.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27search.modal.ModalService\x27);\n\nconst Attribute \x3d goog.require(\x27a11y.information.aria.Attribute\x27);\nconst FocusService \x3d goog.require(\x27wiz.a11y.FocusService\x27);\nconst FocusState \x3d goog.require(\x27wiz.a11y.FocusState\x27);\nconst a11yServices \x3d goog.require(\x27wiz.a11y.services\x27);\nconst arrays \x3d goog.require(\x27goog.array\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst modalServices \x3d goog.require(\x27search.modal.services\x27);\nconst windowServices \x3d goog.require(\x27wiz.window.services\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\n\n\n\n/**\n * Service used to support accessibility features such as focus and aria-hidden\n * masking for modal widgets that appear on top of the DOM.\n * @constructor\n * @extends {wiz.Object}\n */\nconst ModalService \x3d wiz.service(\n    modalServices.MODAL, {\n      service: {\n        focus: a11yServices.FOCUS,\n        // b/67467200 The WindowService is used by FocusService, but specifies\n        // its interface. Because of the interface, Wiz will delay the loading\n        // of the implementation (ONE_WINDOW) until after ModalService is\n        // initialized. To fix this, we specify the implementation here.\n        window: windowServices.ONE_WINDOW,\n      }\n    },\n    function(response) {\n      /** @private @const {!FocusService} */\n      this.focusService_ \x3d response.service.focus;\n\n      /**\n       * Elements that are behind the widget and for which interaction is\n       * disabled.\n       * @private {!Array\x3c!Element\x3e}\n       */\n      this.maskedElements_ \x3d [];\n\n      /**\n       * Element which had focus before the popup opened.\n       * @private {?FocusState}\n       */\n      this.savedFocusState_ \x3d null;\n    });\n\n\n/**\n * Traps the focus when show the modal.\n * @param {!wiz.Query.One} modal\n */\nModalService.prototype.trapFocus \x3d function(modal) {\n  // Save old focus and set new focus to widget.\n  this.savedFocusState_ \x3d this.focusService_.saveFocus();\n  this.setMaskedElements_(modal);\n  this.focusService_.trapFocus(modal);\n};\n\n\n/**\n * Releases the focus when hide the modal.\n * @param {!wiz.Query.One} modal\n */\nModalService.prototype.releaseFocus \x3d function(modal) {\n  // Restore focus back to old element.\n  this.clearMaskedElements_();\n  if (this.savedFocusState_) {\n    this.savedFocusState_.restore();\n    this.savedFocusState_ \x3d null;\n  }\n  this.focusService_.releaseFocus(modal);\n};\n\n\n/**\n * Sets all the background elements to aria-hidden so they cannot be\n * accessed by the screen reader.\n * @param {!wiz.Query.One} modal\n * @private\n */\nModalService.prototype.setMaskedElements_ \x3d function(modal) {\n  this.maskedElements_ \x3d [];\n  var node \x3d modal;\n  while (node.el() !\x3d dom.getDocument().body) {\n    var parentNode \x3d node.parent();\n    arrays.insertArrayAt(\n        this.maskedElements_,\n        parentNode.children()\n            .filter(function(el) {\n              return el.getAttribute(Attribute.HIDDEN) !\x3d \x27true\x27 \x26\x26\n                  el !\x3d node.el();\n            })\n            .toArray());\n    node \x3d parentNode;\n  }\n  arrays.forEach(this.maskedElements_, function(el) {\n    el.setAttribute(Attribute.HIDDEN, \x27true\x27);\n  });\n};\n\n\n/**\n * Clears the attribute from all previous aria-hidden elements hidden by\n * the service.\n * @private\n */\nModalService.prototype.clearMaskedElements_ \x3d function() {\n  arrays.forEach(this.maskedElements_, function(el) {\n    el.removeAttribute(Attribute.HIDDEN);\n  });\n  this.maskedElements_ \x3d [];\n};\n\nexports \x3d ModalService;\n\n//# sourceURL\x3dhttps://qs/gws/js/modal/modal_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywz');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywz');

}catch(e){_DumpException(e)}
/* _Module_:syx0 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syx0');
var $googDebugFname="gws/fruit/elements/standard/dialog/web/events.js";
goog.loadModule("goog.module(\x27gws.fruit.dialog.events\x27);\n\nconst event \x3d goog.require(\x27wiz.event\x27);\n\n/**\n * Triggered and broadcast by the dialog when it opens. Child controllers may\n * listen to this to be notified that it is now visible.\n * @const {!event.EventType.\x3cundefined\x3e}\n */\nexports.opened \x3d event.declare(\x27gws.fruit.dialog.events.opened\x27);\n\n/**\n * Triggered and broadcast by the dialog when it closes. Child controllers may\n * listen to this to be notified that it is no longer visible.\n * @const {!event.EventType.\x3cundefined\x3e}\n */\nexports.closed \x3d event.declare(\x27gws.fruit.dialog.events.closed\x27);\n\n/**\n * Triggered by other controllers to close an opened dialog. For example, a\n * close button within the dialog\x27s content may trigger this event.\n * @const {!event.EventType.\x3cundefined\x3e}\n */\nexports.close \x3d event.declare(\x27gws.fruit.dialog.events.close\x27);\n\n/**\n * Broadcast by a parent controller to open the dialog.\n * @const {!event.EventType.\x3cundefined\x3e}\n */\nexports.open \x3d event.declare(\x27gws.fruit.dialog.events.open\x27);\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dialog/web/events.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syx0');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syx0');

}catch(e){_DumpException(e)}
/* _Module_:syx1 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syx1');
var $googDebugFname="gws/fruit/elements/standard/dialog/web/dialog_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27gws.fruit.dialog.DialogController\x27);\n\n// TODO(xingjuan): Change this file to ES6 style.\nconst Event \x3d goog.require(\x27goog.events.Event\x27);\nconst ModalService \x3d goog.require(\x27search.modal.ModalService\x27);\nconst Property \x3d goog.require(\x27jsaction.Property\x27);\nconst Query \x3d goog.require(\x27wiz.Query\x27);\nconst TagName \x3d goog.require(\x27goog.dom.TagName\x27);\nconst controllers \x3d goog.require(\x27gws.fruit.dialog.controllers\x27);\nconst dialogEvents \x3d goog.require(\x27gws.fruit.dialog.events\x27);\nconst dismiss \x3d goog.require(\x27gws.dismiss\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst events \x3d goog.require(\x27goog.events\x27);\nconst jsaction \x3d goog.require(\x27wiz.jsaction\x27);\nconst nextTick \x3d goog.require(\x27goog.async.nextTick\x27);\nconst services \x3d goog.require(\x27search.modal.services\x27);\nconst style \x3d goog.require(\x27goog.style\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\n\n/**\n * Controller for dialog component.\n * @constructor\n * @struct\n * @extends {wiz.Controller}\n */\nconst DialogController \x3d wiz.controller(\n    controllers.DIALOG, {service: {modal: services.MODAL}}, function(response) {\n      /** @private @const {!ModalService} */\n      this.modalService_ \x3d response.service.modal;\n\n      /**\n       * The saved scroll position for the viewport, saved just before the\n       * dialog is opened, and restored when it is closed.\n       * @private {number|undefined}\n       */\n      this.srpScrollTop_;\n\n      /** @private {!Query.One} */\n      this.body_ \x3d new Query.One(dom.getDocument().body);\n\n      /** @private {!Query.One} */\n      this.content_ \x3d this.getElement(xid(\x27content\x27));\n\n      /** @private @const {boolean} */\n      this.isIosGsa_ \x3d this.getData(\x27isIosGsa\x27).bool();\n\n      /**\n       * An optional Element which represents where the modal has been set.\n       * If this element is empty assume that the modal content has not moved\n       * under the body tag.\n       * @private {?Element}\n       * */\n      this.modalElement_ \x3d null;\n\n      /**\n       * Unique key for window scrolling listener.\n       * @private {?events.Key}\n       */\n      this.windowScrollingListener_ \x3d null;\n    });\n\n\n/**\n * @package @const @enum {string}\n */\nDialogController.CssClass \x3d {\n  VISIBLE: \x27dgv\x27,\n  NO_SCROLL_CLASS: \x27nsc\x27\n};\n\n\n/**\n * Opens the dialog including transit to show the dialog, disable scrolling of\n * the background, focusing the content, and appending aria-hidden to the\n * background elements.\n * @wizaction\n */\nDialogController.prototype.open \x3d function() {\n  // Trigger a \x22closed\x22 event for any parent controller that may need to know\n  // that the dialog has closed.\n  this.trigger(dialogEvents.opened);\n  this.moveContentToBody_();\n  // Broadcast an \x22opened\x22 event for any child controllers that may need to know\n  // that the dialog has opened.\n  jsaction.broadcast(assert(this.modalElement_), dialogEvents.opened);\n  Query.one(assert(this.modalElement_))\n      .addClass(DialogController.CssClass.VISIBLE);\n  // Don\x27t disable scrolling on iOS GSA because it causes bug b/26273446.\n  if (!this.isIosGsa_) {\n    this.disableScrolling_();\n  }\n  this.content_.el().focus();\n  this.modalService_.trapFocus(this.content_);\n  this.registerDismissHandler_();\n};\n\n\n/**\n * Moves the children of the root node of the jscontroller into a new node\n * directly under the body tag of the page.\n * @private\n */\nDialogController.prototype.moveContentToBody_ \x3d function() {\n  if (!this.modalElement_) {\n    this.modalElement_ \x3d dom.createDom(TagName.DIV);\n    this.body_.append(this.modalElement_);\n    const itemFragment \x3d dom.getDocument().createDocumentFragment();\n    this.getRoot().children().each((item) \x3d\x3e {\n      itemFragment.appendChild(item);\n    });\n    this.modalElement_.appendChild(itemFragment);\n\n\n    // Set OWNER of the modal element to its original parent, i.e. the\n    // component\x27s root, so that the jsactions that fire from the inside of the\n    // component can still be propagated to the ancestors even after the element\n    // is moved into the lightbox container.\n    this.modalElement_[Property.OWNER] \x3d this.getRoot().el();\n  }\n};\n\n/**\n * Closes the dialog.\n * @wizaction\n */\nDialogController.prototype.close \x3d function() {\n  dismiss.dismiss(this.content_.el());\n};\n\n\n/**\n * Registers a handler for dismissing the dialog.\n * @private\n */\nDialogController.prototype.registerDismissHandler_ \x3d function() {\n  dismiss.listen(\n      this.content_.el(), (eventType) \x3d\x3e this.onDismiss_(eventType),\n      undefined /* eventTypes */, undefined /* isDesktop */,\n      true /* replaceListener */);\n};\n\n\n/**\n * Handles a dismissal event to hide the overlay and the dialog contents.\n * @param {!dismiss.EventType} eventType The type of dismissal, used as\n *     extra data in the custom event that\x27s fired.\n * @return {boolean} True iff this handler dismissed.\n * @private\n */\nDialogController.prototype.onDismiss_ \x3d function(eventType) {\n  // Broadcast a \x22closed\x22 event for any child controllers that may need to know\n  // that the dialog has closed.\n  jsaction.broadcast(assert(this.modalElement_), dialogEvents.closed);\n\n  Query.one(assert(this.modalElement_))\n      .removeClass(DialogController.CssClass.VISIBLE);\n  this.enableScrolling_();\n  this.modalService_.releaseFocus(this.content_);\n\n  // Trigger a \x22closed\x22 event for any parent controller that may need to know\n  // that the dialog has closed.\n  this.trigger(dialogEvents.closed);\n  return true;\n};\n\n\n/**\n * Disables scrolling of the page. Scoll event from outside of the dialog will\n * be captured and stopped propagation when dialog is opened.\n * @private\n */\nDialogController.prototype.disableScrolling_ \x3d function() {\n  if (this.windowScrollingListener_) {\n    events.unlistenByKey(this.windowScrollingListener_);\n  }\n  this.windowScrollingListener_ \x3d events.listen(\n      this.getWindow(), events.EventType.SCROLL,\n      goog.bind(this.stopPropagation_, this), true);\n\n  this.srpScrollTop_ \x3d this.getWindow().pageYOffset;\n  // Add the noscroll class to disable scrolling of the page. This class\n  // contains position:fixed for mobile, so we have to add a top offset in\n  // order to prevent the page from jumping to content at the top.\n  this.body_.setStyle(\x27top\x27, \x27-\x27 + this.srpScrollTop_ + \x27px\x27);\n  // The body element has a max-width with auto margins:\n  // https://cs.corp.google.com/piper///depot/google3/java/com/google/gws/plugins/cardsweb/jslayout/chrome_stylesheet.html\n  // To keep the positioning of the column on wide viewports when\n  // applied the noscroll class, explicitly sets the left margin.\n  this.body_.setStyle(\n      \x27margin-left\x27, style.getComputedStyle(this.body_.el(), \x27margin-left\x27));\n  this.body_.addClass(DialogController.CssClass.NO_SCROLL_CLASS);\n};\n\n\n/**\n * Stop propagation of an event triggered from outside.\n * @param {!Event} e\n * @private\n */\nDialogController.prototype.stopPropagation_ \x3d function(e) {\n  var target \x3d /** @type {?Node} */ (e.target);\n  if (target \x26\x26 !dom.contains(this.content_.el(), target)) {\n    Event.stopPropagation(e);\n  }\n};\n\n\n/**\n * Enables scrolling of the page.\n * @private\n */\nDialogController.prototype.enableScrolling_ \x3d function() {\n  // Remove the noscroll class to re-enable scrolling.\n  this.body_.removeClass(DialogController.CssClass.NO_SCROLL_CLASS);\n  this.body_.setStyle(\x27top\x27, \x27\x27);\n  this.body_.setStyle(\x27margin-left\x27, \x27\x27);\n  if (this.srpScrollTop_) {\n    this.getWindow().scrollTo(0, this.srpScrollTop_);\n  }\n  // Recover the propagation of scrolling event.\n  var listener \x3d this.windowScrollingListener_;\n  if (listener) {\n    nextTick(function() {\n      events.unlistenByKey(listener);\n    }, this);\n  }\n  this.windowScrollingListener_ \x3d null;\n};\n\n\n/** @override */\nDialogController.prototype.disposeObject \x3d function() {\n  if (this.windowScrollingListener_) {\n    events.unlistenByKey(this.windowScrollingListener_);\n  }\n  if (dismiss.hasListener(this.content_.el())) {\n    dismiss.dismiss(this.content_.el());\n  }\n  dismiss.unlisten(this.content_.el());\n};\n\n\nexports \x3d DialogController;\n\n//# sourceURL\x3dhttps://qs/gws/fruit/elements/standard/dialog/web/dialog_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syx1');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syx1');

}catch(e){_DumpException(e)}
/* _Module_:sy79 */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy79');
var $googDebugFname="javascript/closure/i18n/compactnumberformatsymbols.js";
eval("// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Compact number formatting symbols.\n *\n * File generated from CLDR ver. 33\n * MOE:begin_intracomment_strip\n * This file is generated by\n *   //depot/google3/java/com/google/i18n/tools/generators/locale:locale\n * using the --for_closure flag.\n *\n * See {@link go/js-locale-data-update} for details.\n *\n * Before checking, this file could have been manually edited. This is\n * to incorporate changes before we could fix CLDR. All manual\n * modification must be documented in this section, and should be\n * removed after those changes land to CLDR.\n * MOE:end_intracomment_strip\n *\n * To reduce the file size (which may cause issues in some JS\n * developing environments), this file will only contain locales\n * that are frequently used by web applications. This is defined as\n * proto/closure_locales_data.txt and will change (most likely addition)\n * over time.  Rest of the data can be found in another file named\n * \x22compactnumberformatsymbolsext.js\x22, which will be generated at\n * the same time together with this file.\n *\n * @suppress {const}\n */\n\n// clang-format off\n\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_af\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_am\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ar\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ar_DZ\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ar_EG\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_az\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_be\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_bg\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_bn\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_br\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_bs\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ca\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_chr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_cs\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_cy\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_da\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_de\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_de_AT\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_de_CH\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_el\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_AU\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_CA\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_GB\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_IE\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_IN\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_SG\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_US\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_en_ZA\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_es\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_es_419\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_es_ES\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_es_MX\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_es_US\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_et\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_eu\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_fa\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_fi\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_fil\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_fr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_fr_CA\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ga\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_gl\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_gsw\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_gu\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_haw\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_he\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_hi\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_hr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_hu\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_hy\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_id\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_in\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_is\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_it\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_iw\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ja\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ka\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_kk\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_km\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_kn\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ko\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ky\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ln\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_lo\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_lt\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_lv\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_mk\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ml\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_mn\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_mo\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_mr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ms\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_mt\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_my\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_nb\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ne\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_nl\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_no\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_no_NO\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_or\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_pa\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_pl\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_pt\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_pt_BR\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_pt_PT\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ro\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ru\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sh\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_si\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sk\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sl\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sq\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sr_Latn\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sv\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_sw\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ta\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_te\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_th\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_tl\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_tr\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_uk\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_ur\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_uz\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_vi\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_zh\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_zh_CN\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_zh_HK\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_zh_TW\x27);\ngoog.provide(\x27goog.i18n.CompactNumberFormatSymbols_zu\x27);\n\n\n/**\n * Compact number formatting symbols for locale af.\n */\ngoog.i18n.CompactNumberFormatSymbols_af \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0m\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0m\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0m\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mjd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mjd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mjd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bn\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 duisend\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 duisend\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 duisend\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljoen\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljoen\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljoen\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biljoen\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biljoen\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biljoen\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale am.\n */\ngoog.i18n.CompactNumberFormatSymbols_am \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u123a\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u123a\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u123a\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u121c\u1275\u122d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u121c\u1275\u122d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u121c\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u1262\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u1262\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u1262\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u1275\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u1275\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u1275\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u123a\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u123a\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u123a\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u121a\u120a\u12ee\u1295\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u121a\u120a\u12ee\u1295\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u121a\u120a\u12ee\u1295\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u1262\u120a\u12ee\u1295\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u1262\u120a\u12ee\u1295\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u1262\u120a\u12ee\u1295\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u1275\u122a\u120a\u12ee\u1295\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u1275\u122a\u120a\u12ee\u1295\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u1275\u122a\u120a\u12ee\u1295\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ar.\n */\ngoog.i18n.CompactNumberFormatSymbols_ar \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0623\u0644\u0641\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0623\u0644\u0641\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0623\u0644\u0641\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u062a\u0631\u0644\u064a\u0648\u0646\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u062a\u0631\u0644\u064a\u0648\u0646\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u062a\u0631\u0644\u064a\u0648\u0646\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0623\u0644\u0641\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0623\u0644\u0641\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0623\u0644\u0641\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0645\u0644\u064a\u0648\u0646\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0645\u0644\u064a\u0627\u0631\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u062a\u0631\u0644\u064a\u0648\u0646\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u062a\u0631\u0644\u064a\u0648\u0646\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u062a\u0631\u0644\u064a\u0648\u0646\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ar_DZ.\n */\ngoog.i18n.CompactNumberFormatSymbols_ar_DZ \x3d goog.i18n.CompactNumberFormatSymbols_ar;\n\n\n/**\n * Compact number formatting symbols for locale ar_EG.\n */\ngoog.i18n.CompactNumberFormatSymbols_ar_EG \x3d goog.i18n.CompactNumberFormatSymbols_ar;\n\n\n/**\n * Compact number formatting symbols for locale az.\n */\ngoog.i18n.CompactNumberFormatSymbols_az \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 min\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 min\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 min\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milyon\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milyon\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milyon\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milyard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milyard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milyard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilyon\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilyon\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilyon\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale be.\n */\ngoog.i18n.CompactNumberFormatSymbols_be \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u044b\u0441.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u044b\u0441.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u044b\u0441.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0442\u044b\u0441\u044f\u0447\u044b\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0442\u044b\u0441\u044f\u0447\u044b\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0442\u044b\u0441\u044f\u0447\u044b\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0456\u043b\u044c\u0451\u043d\u0430\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0456\u043b\u044c\u0451\u043d\u0430\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0456\u043b\u044c\u0451\u043d\u0430\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale bg.\n */\ngoog.i18n.CompactNumberFormatSymbols_bg \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0445\u0438\u043b.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0445\u0438\u043b.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0445\u0438\u043b.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0445\u0438\u043b\u044f\u0434\u0438\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0445\u0438\u043b\u044f\u0434\u0438\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0445\u0438\u043b\u044f\u0434\u0438\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale bn.\n */\ngoog.i18n.CompactNumberFormatSymbols_bn \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u09b9\u09be\u099c\u09be\u09b0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u09b9\u09be\u099c\u09be\u09b0\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u09b2\u09be\u0996\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u09b9\u09be\u099c\u09be\u09b0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u09b9\u09be\u099c\u09be\u09b0\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u09b2\u09be\u0996\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale br.\n */\ngoog.i18n.CompactNumberFormatSymbols_br \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 miliad\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 miliad\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 miliad\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milion\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milion\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milion\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilion\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilion\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilion\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale bs.\n */\ngoog.i18n.CompactNumberFormatSymbols_bs \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0hilj.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0hilj.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0hilj.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlr.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlr.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlr.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 hiljada\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 hiljada\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 hiljada\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miliona\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miliona\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miliona\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biliona\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biliona\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biliona\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ca.\n */\ngoog.i18n.CompactNumberFormatSymbols_ca \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270m\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700m\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000m\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270000\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700mM\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000mM\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0B\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0B\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 milers\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 milers\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 milers\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milions\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milions\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milions\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milers de milions\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milers de milions\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milers de milions\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilions\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilions\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilions\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale chr.\n */\ngoog.i18n.CompactNumberFormatSymbols_chr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u13a2\u13ef\u13a6\u13f4\u13b5\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u13a2\u13ef\u13a6\u13f4\u13b5\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u13a2\u13ef\u13a6\u13f4\u13b5\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale cs.\n */\ngoog.i18n.CompactNumberFormatSymbols_cs \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tis.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tis.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tis.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tis\xedc\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tis\xedc\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tis\xedc\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milion\u016f\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milion\u016f\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milion\u016f\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilion\u016f\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilion\u016f\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilion\u016f\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale cy.\n */\ngoog.i18n.CompactNumberFormatSymbols_cy \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mil\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mil\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mil\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miliwn\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miliwn\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miliwn\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 biliwn\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 biliwn\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 biliwn\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 triliwn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 triliwn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 triliwn\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale da.\n */\ngoog.i18n.CompactNumberFormatSymbols_da \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0t\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0t\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0t\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mio\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mio\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mio\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mia\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mia\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mia\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bio\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bio\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bio\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tusind\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tusind\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tusind\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millioner\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millioner\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millioner\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milliarder\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milliarder\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milliarder\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billioner\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billioner\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billioner\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale de.\n */\ngoog.i18n.CompactNumberFormatSymbols_de \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0Mio.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0Mio.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0Mio.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Mrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Mrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Mrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Bio.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Bio.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Bio.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 Tausend\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 Tausend\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 Tausend\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 Millionen\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 Millionen\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 Millionen\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 Milliarden\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 Milliarden\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 Milliarden\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 Billionen\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 Billionen\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 Billionen\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale de_AT.\n */\ngoog.i18n.CompactNumberFormatSymbols_de_AT \x3d goog.i18n.CompactNumberFormatSymbols_de;\n\n\n/**\n * Compact number formatting symbols for locale de_CH.\n */\ngoog.i18n.CompactNumberFormatSymbols_de_CH \x3d goog.i18n.CompactNumberFormatSymbols_de;\n\n\n/**\n * Compact number formatting symbols for locale el.\n */\ngoog.i18n.CompactNumberFormatSymbols_el \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u03c7\u03b9\u03bb.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u03c7\u03b9\u03bb.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u03c7\u03b9\u03bb.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u03b5\u03ba.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u03b5\u03ba.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u03b5\u03ba.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u03b4\u03b9\u03c3.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u03b4\u03b9\u03c3.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u03b4\u03b9\u03c3.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u03c4\u03c1\u03b9\u03c3.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u03c4\u03c1\u03b9\u03c3.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u03c4\u03c1\u03b9\u03c3.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale en.\n */\ngoog.i18n.CompactNumberFormatSymbols_en \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 thousand\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 thousand\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 thousand\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 million\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 million\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 million\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 billion\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 billion\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 billion\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trillion\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trillion\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trillion\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale en_AU.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_AU \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_CA.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_CA \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_GB.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_GB \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_IE.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_IE \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_IN.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_IN \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_SG.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_SG \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_US.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_US \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale en_ZA.\n */\ngoog.i18n.CompactNumberFormatSymbols_en_ZA \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\n\n/**\n * Compact number formatting symbols for locale es.\n */\ngoog.i18n.CompactNumberFormatSymbols_es \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0mil\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0mil\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0mil\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270000\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mil\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mil\xa0M\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0B\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0B\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0B\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mil\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mil\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mil\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millones\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millones\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millones\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 mil millones\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 mil millones\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 mil millones\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billones\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billones\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billones\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale es_419.\n */\ngoog.i18n.CompactNumberFormatSymbols_es_419 \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0k\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270k\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700k\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000k\xa0M\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bill\xf3n\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billones\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billones\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale es_ES.\n */\ngoog.i18n.CompactNumberFormatSymbols_es_ES \x3d goog.i18n.CompactNumberFormatSymbols_es;\n\n\n/**\n * Compact number formatting symbols for locale es_MX.\n */\ngoog.i18n.CompactNumberFormatSymbols_es_MX \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0k\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270000\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mil\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mil\xa0M\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billones\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale es_US.\n */\ngoog.i18n.CompactNumberFormatSymbols_es_US \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0K\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trillones\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trillones\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trillones\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale et.\n */\ngoog.i18n.CompactNumberFormatSymbols_et \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tuh\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tuh\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tuh\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0trl\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0trl\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0trl\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tuhat\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tuhat\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tuhat\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljonit\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljonit\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljonit\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljardit\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljardit\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljardit\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 triljonit\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 triljonit\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 triljonit\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale eu.\n */\ngoog.i18n.CompactNumberFormatSymbols_eu \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270000\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700000\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270000\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700000\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000000\xa0M\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0B\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0B\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0B\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270000\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700000\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milioi\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milioi\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milioi\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270000 milioi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700000 milioi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000000 milioi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilioi\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilioi\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilioi\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale fa.\n */\ngoog.i18n.CompactNumberFormatSymbols_fa \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0647\u0632\u0627\u0631\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0647\u0632\u0627\u0631\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0647\u0632\u0627\u0631\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u0645\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u0645\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u0645\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0645\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0645\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u062a\u0631\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u062a\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u062a\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0647\u0632\u0627\u0631\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0647\u0632\u0627\u0631\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0647\u0632\u0627\u0631\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0645\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0645\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0645\u06cc\u0644\u06cc\u0648\u0646\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale fi.\n */\ngoog.i18n.CompactNumberFormatSymbols_fi \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0t.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0t.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0t.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0milj.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0milj.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0milj.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bilj.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bilj.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bilj.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tuhatta\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tuhatta\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tuhatta\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljoonaa\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljoonaa\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljoonaa\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljardia\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljardia\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljardia\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biljoonaa\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biljoonaa\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biljoonaa\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale fil.\n */\ngoog.i18n.CompactNumberFormatSymbols_fil \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 na libo\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 na libo\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 na libo\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 na milyon\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 na milyon\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 na milyon\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 na bilyon\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 na bilyon\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 na bilyon\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 na trilyon\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 na trilyon\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 na trilyon\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale fr.\n */\ngoog.i18n.CompactNumberFormatSymbols_fr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Md\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Md\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Md\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Bn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Bn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Bn\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mille\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mille\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mille\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millions\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millions\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millions\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milliards\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milliards\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milliards\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billions\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billions\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billions\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale fr_CA.\n */\ngoog.i18n.CompactNumberFormatSymbols_fr_CA \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mille\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ga.\n */\ngoog.i18n.CompactNumberFormatSymbols_ga \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 m\xedle\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 m\xedle\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 m\xedle\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milli\xfan\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milli\xfan\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milli\xfan\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 billi\xfan\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 billi\xfan\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 billi\xfan\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilli\xfan\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilli\xfan\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilli\xfan\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale gl.\n */\ngoog.i18n.CompactNumberFormatSymbols_gl \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mill.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mill.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mill\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bill.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bill.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bill.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 mill\xf3ns\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 mill\xf3ns\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 mill\xf3ns\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bill\xf3ns\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bill\xf3ns\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bill\xf3ns\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale gsw.\n */\ngoog.i18n.CompactNumberFormatSymbols_gsw \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0Tsg.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0Tsg.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0Tsg.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0Mio.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0Mio.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0Mio.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Mrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Mrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Mrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Bio.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Bio.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Bio.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 Tuusig\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 Tuusig\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 Tuusig\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 Millioone\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 Millioone\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 Millioone\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 Milliarde\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 Milliarde\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 Milliarde\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 Billioone\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 Billioone\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 Billioone\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale gu.\n */\ngoog.i18n.CompactNumberFormatSymbols_gu \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0ab9\u0a9c\u0abe\u0ab0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0ab9\u0a9c\u0abe\u0ab0\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0ab2\u0abe\u0a96\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0ab2\u0abe\u0a96\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u0a95\u0ab0\u0acb\u0aa1\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a95\u0ab0\u0acb\u0aa1\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0a85\u0aac\u0a9c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a85\u0aac\u0a9c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0ab6\u0a82\u0a95\u0ac1\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0a9c\u0ab2\u0aa7\u0abf\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0ab9\u0a9c\u0abe\u0ab0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0ab9\u0a9c\u0abe\u0ab0\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0ab2\u0abe\u0a96\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700 \u0ab2\u0abe\u0a96\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270 \u0a95\u0ab0\u0acb\u0aa1\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700 \u0a95\u0ab0\u0acb\u0aa1\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0a85\u0aac\u0a9c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0a85\u0aac\u0a9c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270 \u0ab6\u0a82\u0a95\u0ac1\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270 \u0a9c\u0ab2\u0aa7\u0abf\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale haw.\n */\ngoog.i18n.CompactNumberFormatSymbols_haw \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale he.\n */\ngoog.i18n.CompactNumberFormatSymbols_he \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27\u200f0 \u05d0\u05dc\u05e3\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27\u200f00 \u05d0\u05dc\u05e3\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27\u200f000 \u05d0\u05dc\u05e3\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale hi.\n */\ngoog.i18n.CompactNumberFormatSymbols_hi \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0939\u091c\u093c\u093e\u0930\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0939\u091c\u093c\u093e\u0930\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0932\u093e\u0916\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u0915\u0970\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u0915\u0970\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0905\u0970\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0905\u0970\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u0916\u0970\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0916\u0970\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0928\u0940\u0932\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0928\u0940\u0932\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0939\u091c\u093c\u093e\u0930\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0939\u091c\u093c\u093e\u0930\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700 \u0932\u093e\u0916\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270 \u0915\u0930\u094b\u0921\u093c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700 \u0915\u0930\u094b\u0921\u093c\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0905\u0930\u092c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0905\u0930\u092c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u0916\u0930\u092c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700 \u0916\u0930\u092c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27000 \u0916\u0930\u092c\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270000 \u0916\u0930\u092c\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale hr.\n */\ngoog.i18n.CompactNumberFormatSymbols_hr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tis.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tis.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tis.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlr.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlr.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlr.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tisu\u0107a\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tisu\u0107a\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tisu\u0107a\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milijuna\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milijuna\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milijuna\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilijuna\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilijuna\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilijuna\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale hu.\n */\ngoog.i18n.CompactNumberFormatSymbols_hu \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0E\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0E\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0E\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Mrd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Mrd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Mrd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0B\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0B\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0B\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ezer\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ezer\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ezer\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milli\xf3\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milli\xf3\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milli\xf3\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milli\xe1rd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milli\xe1rd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milli\xe1rd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billi\xf3\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billi\xf3\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billi\xf3\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale hy.\n */\ngoog.i18n.CompactNumberFormatSymbols_hy \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0570\u0566\u0580\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0570\u0566\u0580\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0570\u0566\u0580\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u0574\u056c\u0576\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u0574\u056c\u0576\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u0574\u056c\u0576\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0574\u056c\u0580\u0564\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0574\u056c\u0580\u0564\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0574\u056c\u0580\u0564\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u057f\u0580\u056c\u0576\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u057f\u0580\u056c\u0576\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u057f\u0580\u056c\u0576\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0570\u0561\u0566\u0561\u0580\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0570\u0561\u0566\u0561\u0580\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0570\u0561\u0566\u0561\u0580\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0574\u056b\u056c\u056b\u0578\u0576\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0574\u056b\u056c\u056b\u0578\u0576\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0574\u056b\u056c\u056b\u0578\u0576\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0574\u056b\u056c\u056b\u0561\u0580\u0564\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0574\u056b\u056c\u056b\u0561\u0580\u0564\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0574\u056b\u056c\u056b\u0561\u0580\u0564\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u057f\u0580\u056b\u056c\u056b\u0578\u0576\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u057f\u0580\u056b\u056c\u056b\u0578\u0576\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u057f\u0580\u056b\u056c\u056b\u0578\u0576\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale id.\n */\ngoog.i18n.CompactNumberFormatSymbols_id \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0rb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0rb\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0rb\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0jt\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0jt\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0jt\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ribu\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ribu\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ribu\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 juta\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 juta\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 juta\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliar\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliar\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliar\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 triliun\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 triliun\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 triliun\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale in.\n */\ngoog.i18n.CompactNumberFormatSymbols_in \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0rb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0rb\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0rb\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0jt\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0jt\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0jt\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ribu\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ribu\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ribu\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 juta\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 juta\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 juta\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliar\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliar\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliar\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 triliun\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 triliun\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 triliun\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale is.\n */\ngoog.i18n.CompactNumberFormatSymbols_is \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\xfe.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\xfe.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\xfe.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0m.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0m.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0m.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0ma.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0ma.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0ma.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bn\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \xfe\xfasund\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \xfe\xfasund\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \xfe\xfasund\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millj\xf3nir\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millj\xf3nir\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millj\xf3nir\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milljar\xf0ar\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milljar\xf0ar\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milljar\xf0ar\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billj\xf3nir\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billj\xf3nir\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billj\xf3nir\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale it.\n */\ngoog.i18n.CompactNumberFormatSymbols_it \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0Mln\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0Mln\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0Mln\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Mld\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Mld\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Mld\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Bln\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Bln\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Bln\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mila\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mila\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mila\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milioni\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milioni\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milioni\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 mila miliardi\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 mila miliardi\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 mila miliardi\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale iw.\n */\ngoog.i18n.CompactNumberFormatSymbols_iw \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27\u200f0 \u05d0\u05dc\u05e3\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27\u200f00 \u05d0\u05dc\u05e3\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27\u200f000 \u05d0\u05dc\u05e3\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ja.\n */\ngoog.i18n.CompactNumberFormatSymbols_ja \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u4e07\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u4e07\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u4e07\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u4e07\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u5104\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u5104\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u5104\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u5104\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u4e07\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u4e07\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u4e07\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u4e07\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u5104\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u5104\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u5104\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u5104\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ka.\n */\ngoog.i18n.CompactNumberFormatSymbols_ka \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u10d0\u10d7.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u10d0\u10d7.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u10d0\u10d7.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u10db\u10da\u10dc.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u10db\u10da\u10dc.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u10db\u10da\u10dc.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u10db\u10da\u10e0\u10d3.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u10db\u10da\u10e0\u10d3.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u10db\u10da\u10e0.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u10e2\u10e0\u10da.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u10e2\u10e0\u10da.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u10e2\u10e0\u10da.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u10d0\u10d7\u10d0\u10e1\u10d8\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u10d0\u10d7\u10d0\u10e1\u10d8\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u10d0\u10d7\u10d0\u10e1\u10d8\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale kk.\n */\ngoog.i18n.CompactNumberFormatSymbols_kk \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u044b\u04a3\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u044b\u04a3\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u043c.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u043c\u044b\u04a3\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u043c\u044b\u04a3\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u043c\u044b\u04a3\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale km.\n */\ngoog.i18n.CompactNumberFormatSymbols_km \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u1796\u17b6\u1793\u17cb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u200b\u1798\u17ba\u17bb\u1793\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\u179f\u17c2\u1793\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u179b\u17b6\u1793\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u200b\u179a\u1799\u179b\u17b6\u1793\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x270\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u1796\u17b6\u1793\u17cb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u200b\u1798\u17ba\u17bb\u1793\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\u179f\u17c2\u1793\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u179b\u17b6\u1793\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u200b\u179a\u1799\u179b\u17b6\u1793\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x270\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale kn.\n */\ngoog.i18n.CompactNumberFormatSymbols_kn \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u0cb8\u0cbe\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\u0cb8\u0cbe\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\u0cb8\u0cbe\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u0cae\u0cbf\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\u0cae\u0cbf\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u0cae\u0cbf\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u0cac\u0cbf\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\u0cac\u0cbf\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\u0cac\u0cbf\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u0c9f\u0ccd\u0cb0\u0cbf\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0c9f\u0ccd\u0cb0\u0cbf\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0c9f\u0ccd\u0cb0\u0cbf\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ko.\n */\ngoog.i18n.CompactNumberFormatSymbols_ko \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\ucc9c\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\ub9cc\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\ub9cc\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\ub9cc\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\ub9cc\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\uc5b5\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\uc5b5\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\uc5b5\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\uc5b5\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\uc870\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\uc870\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\uc870\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\ucc9c\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\ub9cc\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\ub9cc\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\ub9cc\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\ub9cc\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\uc5b5\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\uc5b5\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\uc5b5\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\uc5b5\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\uc870\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\uc870\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\uc870\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ky.\n */\ngoog.i18n.CompactNumberFormatSymbols_ky \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u0438\u04ca\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u0438\u04ca\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u0438\u04ca\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u04ca\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u04ca\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u04ca\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ln.\n */\ngoog.i18n.CompactNumberFormatSymbols_ln \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale lo.\n */\ngoog.i18n.CompactNumberFormatSymbols_lo \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0e9e\u0eb1\u0e99\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0e9e\u0eb1\u0e99\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0e81\u0eb5\u0e9a\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0e95\u0eb7\u0ec9\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0e95\u0eb7\u0ec9\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0e95\u0eb7\u0ec9\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0ea5\u0ea5\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0ea5\u0ea5\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0e9e\u0eb1\u0e99\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0e9e\u0eb1\u0e99\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0ec1\u0eaa\u0e99\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0e95\u0eb7\u0ec9\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0e95\u0eb7\u0ec9\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0e95\u0eb7\u0ec9\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale lt.\n */\ngoog.i18n.CompactNumberFormatSymbols_lt \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0t\u016bkst.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0t\u016bkst.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0t\u016bkst.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0trln.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0trln.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0trln.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 t\u016bkstan\u010di\u0173\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 t\u016bkstan\u010di\u0173\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 t\u016bkstan\u010di\u0173\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milijon\u0173\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milijon\u0173\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milijon\u0173\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijard\u0173\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijard\u0173\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijard\u0173\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilijon\u0173\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilijon\u0173\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilijon\u0173\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale lv.\n */\ngoog.i18n.CompactNumberFormatSymbols_lv \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0t\u016bkst.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0t\u016bkst.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0t\u016bkst.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0milj.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0milj.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0milj.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mljrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mljrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mljrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0trilj.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0trilj.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0trilj.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 t\u016bksto\u0161i\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 t\u016bksto\u0161i\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 t\u016bksto\u0161i\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljoni\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljoni\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljoni\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 triljoni\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 triljoni\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 triljoni\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale mk.\n */\ngoog.i18n.CompactNumberFormatSymbols_mk \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0438\u043b\u0458.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0438\u043b\u0458.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0438\u043b\u0458.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u0438\u043b.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u0438\u043b.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u041c\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u0438\u043b\u0458.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u0438\u043b\u0458.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u0438.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0431\u0438\u043b.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0431\u0438\u043b.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0431\u0438\u043b.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0438\u043b\u0458\u0430\u0434\u0438\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0438\u043b\u0458\u0430\u0434\u0438\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0438\u043b\u0458\u0430\u0434\u0438\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0431\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0431\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0431\u0438\u043b\u0438\u043e\u043d\u0438\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ml.\n */\ngoog.i18n.CompactNumberFormatSymbols_ml \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0d06\u0d2f\u0d3f\u0d30\u0d02\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0d06\u0d2f\u0d3f\u0d30\u0d02\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0d06\u0d2f\u0d3f\u0d30\u0d02\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale mn.\n */\ngoog.i18n.CompactNumberFormatSymbols_mn \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u0441\u0430\u044f\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\u0441\u0430\u044f\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u0441\u0430\u044f\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u0442\u044d\u0440\u0431\u0443\u043c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\u0442\u044d\u0440\u0431\u0443\u043c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\u0422\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u0418\u041d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0418\u041d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0418\u041d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u043c\u044f\u043d\u0433\u0430\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0441\u0430\u044f\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0441\u0430\u044f\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0441\u0430\u044f\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0442\u044d\u0440\u0431\u0443\u043c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u044d\u0440\u0431\u0443\u043c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u044d\u0440\u0431\u0443\u043c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0438\u0445 \u043d\u0430\u044f\u0434\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0438\u0445 \u043d\u0430\u044f\u0434\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0438\u0445 \u043d\u0430\u044f\u0434\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale mo.\n */\ngoog.i18n.CompactNumberFormatSymbols_mo \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0tril.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0tril.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0tril.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 de mii\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 de mii\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 de mii\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 de milioane\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 de milioane\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 de milioane\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 de miliarde\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 de miliarde\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 de miliarde\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 de trilioane\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 de trilioane\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 de trilioane\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale mr.\n */\ngoog.i18n.CompactNumberFormatSymbols_mr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0939\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0939\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0932\u093e\u0916\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u0915\u094b\u091f\u0940\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u0915\u094b\u091f\u0940\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0905\u092c\u094d\u091c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0905\u092c\u094d\u091c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u0916\u0930\u094d\u0935\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0916\u0930\u094d\u0935\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\xa0\u092a\u0926\u094d\u092e\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u092a\u0926\u094d\u092e\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0939\u091c\u093e\u0930\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0939\u091c\u093e\u0930\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700 \u0932\u093e\u0916\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270 \u0915\u094b\u091f\u0940\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700 \u0915\u094b\u091f\u0940\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0905\u092c\u094d\u091c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0905\u092c\u094d\u091c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u0916\u0930\u094d\u0935\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700 \u0916\u0930\u094d\u0935\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270 \u092a\u0926\u094d\u092e\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700 \u092a\u0926\u094d\u092e\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ms.\n */\ngoog.i18n.CompactNumberFormatSymbols_ms \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270J\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700J\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000J\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ribu\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ribu\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ribu\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 juta\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 juta\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 juta\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 bilion\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 bilion\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 bilion\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilion\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilion\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilion\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale mt.\n */\ngoog.i18n.CompactNumberFormatSymbols_mt \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270G\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700G\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000G\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale my.\n */\ngoog.i18n.CompactNumberFormatSymbols_my \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u1011\u1031\u102c\u1004\u103a\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u101e\u1031\u102c\u1004\u103a\u1038\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\u101e\u102d\u1014\u103a\u1038\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u101e\u1014\u103a\u1038\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\u1000\u102f\u100b\u1031\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\u1000\u102f\u100b\u1031\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u1031000\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310\u1011\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310\u101e\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u100b\u10310\u101e\u102d\u1014\u103a\u1038\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u100b\u10310\u101e\u1014\u103a\u1038\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270\u1000\u1031\u102c\u100b\u102d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u1011\u1031\u102c\u1004\u103a\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u101e\u1031\u102c\u1004\u103a\u1038\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\u101e\u102d\u1014\u103a\u1038\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u101e\u1014\u103a\u1038\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\u1000\u102f\u100b\u1031\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\u1000\u102f\u100b\u1031\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u1031000\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310000\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310\u101e\u1031\u102c\u1004\u103a\u1038\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310\u101e\u102d\u1014\u103a\u1038\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u1000\u102f\u100b\u10310\u101e\u1014\u103a\u1038\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x270\u1000\u1031\u102c\u100b\u102d\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale nb.\n */\ngoog.i18n.CompactNumberFormatSymbols_nb \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mill\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mill\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mill\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mrd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mrd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mrd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bill\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bill\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bill\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tusen\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tusen\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tusen\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millioner\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millioner\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millioner\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milliarder\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milliarder\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milliarder\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billioner\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billioner\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billioner\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ne.\n */\ngoog.i18n.CompactNumberFormatSymbols_ne \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0939\u091c\u093e\u0930\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0939\u091c\u093e\u0930\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0932\u093e\u0916\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u0915\u0930\u094b\u0921\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u0915\u0930\u094b\u0921\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0905\u0930\u092c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0905\u0930\u092c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u0916\u0930\u092c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0916\u0930\u092c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0936\u0902\u0916\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0936\u0902\u0916\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0939\u091c\u093e\u0930\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0939\u091c\u093e\u0930\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0932\u093e\u0916\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0915\u0930\u094b\u0921\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0915\u0930\u094b\u0921\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0915\u0930\u094b\u0921\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0905\u0930\u092c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0905\u0930\u092c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0905\u0930\u092c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700 \u0916\u0930\u092c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270 \u0936\u0902\u0916\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700 \u0936\u0902\u0916\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale nl.\n */\ngoog.i18n.CompactNumberFormatSymbols_nl \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bln.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bln.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bln.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 duizend\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 duizend\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 duizend\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljoen\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljoen\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljoen\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biljoen\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biljoen\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biljoen\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale no.\n */\ngoog.i18n.CompactNumberFormatSymbols_no \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270k\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700k\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000k\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mill\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mill\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mill\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mrd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mrd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mrd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bill\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bill\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bill\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tusen\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tusen\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tusen\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 millioner\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 millioner\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 millioner\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milliarder\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milliarder\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milliarder\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 billioner\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 billioner\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 billioner\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale no_NO.\n */\ngoog.i18n.CompactNumberFormatSymbols_no_NO \x3d goog.i18n.CompactNumberFormatSymbols_no;\n\n\n/**\n * Compact number formatting symbols for locale or.\n */\ngoog.i18n.CompactNumberFormatSymbols_or \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u0b39\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\u0b39\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\u0b39\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u0b28\u0b3f\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\u0b28\u0b3f\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u0b28\u0b3f\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u0b2c\u0b3f\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\u0b2c\u0b3f\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\u0b2c\u0b3f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u0b1f\u0b4d\u0b30\u0b3f\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0b1f\u0b4d\u0b30\u0b3f\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0b1f\u0b4d\u0b30\u0b3f\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0b39\u0b1c\u0b3e\u0b30\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0b39\u0b1c\u0b3e\u0b30\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0b39\u0b1c\u0b3e\u0b30\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0b28\u0b3f\u0b5f\u0b41\u0b24\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0b28\u0b3f\u0b5f\u0b41\u0b24\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0b28\u0b3f\u0b5f\u0b41\u0b24\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0b36\u0b39\u0b15\u0b4b\u0b1f\u0b3f\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0b36\u0b39\u0b15\u0b4b\u0b1f\u0b3f\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0b36\u0b39\u0b15\u0b4b\u0b1f\u0b3f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0b32\u0b15\u0b4d\u0b37\u0b15\u0b4b\u0b1f\u0b3f\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0b32\u0b15\u0b4d\u0b37\u0b15\u0b4b\u0b1f\u0b3f\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0b32\u0b15\u0b4d\u0b37\u0b15\u0b4b\u0b1f\u0b3f\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale pa.\n */\ngoog.i18n.CompactNumberFormatSymbols_pa \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0a39\u0a1c\u0a3c\u0a3e\u0a30\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0a39\u0a1c\u0a3c\u0a3e\u0a30\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0a32\u0a71\u0a16\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a32\u0a71\u0a16\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u0a15\u0a30\u0a4b\u0a5c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a15\u0a30\u0a4b\u0a5c\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0a05\u0a30\u0a2c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a05\u0a30\u0a2c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u0a16\u0a30\u0a2c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a16\u0a30\u0a2c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0a28\u0a40\u0a32\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0a28\u0a40\u0a32\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0a39\u0a1c\u0a3c\u0a3e\u0a30\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0a39\u0a1c\u0a3c\u0a3e\u0a30\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0a32\u0a71\u0a16\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700 \u0a32\u0a71\u0a16\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270 \u0a15\u0a30\u0a4b\u0a5c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700 \u0a15\u0a30\u0a4b\u0a5c\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0a05\u0a30\u0a2c\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0a05\u0a30\u0a2c\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u0a16\u0a30\u0a2c\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700 \u0a16\u0a30\u0a2c\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x270 \u0a28\u0a40\u0a32\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x2700 \u0a28\u0a40\u0a32\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale pl.\n */\ngoog.i18n.CompactNumberFormatSymbols_pl \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tys.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tys.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tys.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bln\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bln\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bln\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tysi\u0105ca\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tysi\u0105ca\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tysi\u0105ca\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miliona\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miliona\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miliona\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliarda\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliarda\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliarda\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biliona\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biliona\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biliona\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale pt.\n */\ngoog.i18n.CompactNumberFormatSymbols_pt \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0mil\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0mil\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0mil\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mi\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mi\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mi\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0bi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0bi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0bi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0tri\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0tri\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0tri\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mil\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mil\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mil\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milh\xf5es\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milh\xf5es\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milh\xf5es\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 bilh\xf5es\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 bilh\xf5es\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 bilh\xf5es\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilh\xf5es\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilh\xf5es\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilh\xf5es\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale pt_BR.\n */\ngoog.i18n.CompactNumberFormatSymbols_pt_BR \x3d goog.i18n.CompactNumberFormatSymbols_pt;\n\n\n/**\n * Compact number formatting symbols for locale pt_PT.\n */\ngoog.i18n.CompactNumberFormatSymbols_pt_PT \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mM\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mM\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mM\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Bi\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Bi\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Bi\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000000\x27: {\n      \x27other\x27: \x270 milh\xf5es\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milh\xf5es\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milh\xf5es\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 mil milh\xf5es\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 mil milh\xf5es\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 mil milh\xf5es\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bili\xf5es\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bili\xf5es\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bili\xf5es\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ro.\n */\ngoog.i18n.CompactNumberFormatSymbols_ro \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0tril.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0tril.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0tril.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 de mii\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 de mii\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 de mii\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 de milioane\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 de milioane\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 de milioane\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 de miliarde\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 de miliarde\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 de miliarde\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 de trilioane\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 de trilioane\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 de trilioane\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ru.\n */\ngoog.i18n.CompactNumberFormatSymbols_ru \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u044b\u0441.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u044b\u0441.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u044b\u0441.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0442\u044b\u0441\u044f\u0447\u0438\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0442\u044b\u0441\u044f\u0447\u0438\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0442\u044b\u0441\u044f\u0447\u0438\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sh.\n */\ngoog.i18n.CompactNumberFormatSymbols_sh \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0hilj.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0hilj.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0hilj.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 hiljada\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 hiljada\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 hiljada\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miliona\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miliona\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miliona\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biliona\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biliona\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biliona\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale si.\n */\ngoog.i18n.CompactNumberFormatSymbols_si \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27\u0daf0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27\u0daf00\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27\u0daf000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd20\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd200\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd2000\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd20\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd200\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd2000\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd20\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd200\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd2000\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27\u0daf\u0dc4\u0dc3 0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27\u0daf\u0dc4\u0dc3 00\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27\u0daf\u0dc4\u0dc3 000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sk.\n */\ngoog.i18n.CompactNumberFormatSymbols_sk \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tis.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tis.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tis.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tis\xedc\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tis\xedc\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tis\xedc\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 mili\xf3nov\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 mili\xf3nov\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 mili\xf3nov\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 mili\xe1rd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 mili\xe1rd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 mili\xe1rd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bili\xf3nov\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bili\xf3nov\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bili\xf3nov\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sl.\n */\ngoog.i18n.CompactNumberFormatSymbols_sl \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tis.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tis.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tis.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mio.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mio.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mio.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tiso\u010d\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tiso\u010d\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tiso\u010d\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milijonov\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milijonov\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milijonov\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilijonov\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilijonov\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilijonov\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sq.\n */\ngoog.i18n.CompactNumberFormatSymbols_sq \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0mij\xeb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0mij\xeb\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0mij\xeb\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mld\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mld\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mld\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bln\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bln\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bln\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 mij\xeb\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 mij\xeb\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 mij\xeb\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milion\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milion\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milion\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miliard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miliard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miliard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 bilion\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 bilion\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 bilion\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sr.\n */\ngoog.i18n.CompactNumberFormatSymbols_sr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0445\u0438\u0459.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0445\u0438\u0459.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0445\u0438\u0459.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u0438\u043b.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u0438\u043b.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u0438\u043b.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0431\u0438\u043b.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0431\u0438\u043b.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0431\u0438\u043b.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0445\u0438\u0459\u0430\u0434\u0430\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0445\u0438\u0459\u0430\u0434\u0430\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0445\u0438\u0459\u0430\u0434\u0430\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0431\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0431\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0431\u0438\u043b\u0438\u043e\u043d\u0430\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sr_Latn.\n */\ngoog.i18n.CompactNumberFormatSymbols_sr_Latn \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0hilj.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0hilj.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0hilj.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mil.\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mil.\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mil.\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlrd.\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlrd.\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlrd.\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bil.\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bil.\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bil.\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 hiljada\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 hiljada\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 hiljada\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miliona\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miliona\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miliona\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milijardi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milijardi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milijardi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biliona\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biliona\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biliona\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sv.\n */\ngoog.i18n.CompactNumberFormatSymbols_sv \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0tn\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0tn\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0tn\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mn\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mn\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mn\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0md\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0md\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0md\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0bn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0bn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0bn\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 tusen\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 tusen\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 tusen\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 miljoner\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 miljoner\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 miljoner\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 miljarder\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 miljarder\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 miljarder\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 biljoner\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 biljoner\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 biljoner\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale sw.\n */\ngoog.i18n.CompactNumberFormatSymbols_sw \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27elfu\xa00;elfu\xa0-0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27elfu\xa000;elfu\xa0-00\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27elfu\xa0000;elfu\xa0-000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27M0;M-0\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27M00;M-00\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27M000;M-000\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27B0;B-0\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27B00;B-00\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27B000;B-000\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27T0;T-0\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27T00;T-00\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27T000;T-000\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x27elfu 0;elfu -0\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x27elfu 00;elfu -00\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27elfu 000;elfu -000\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27milioni 0;milioni -0\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x27milioni 00;milioni -00\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27milioni 000;milioni -000\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x27bilioni 0;bilioni -0\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27bilioni 00;bilioni -00\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27bilioni 000;bilioni -000\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x27trilioni 0;trilioni -0\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x27trilioni 00;trilioni -00\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27trilioni 000;trilioni -000\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ta.\n */\ngoog.i18n.CompactNumberFormatSymbols_ta \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u0b86\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\u0b86\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\u0b86\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u0bae\u0bbf\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\u0bae\u0bbf\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u0bae\u0bbf\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u0baa\u0bbf\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\u0baa\u0bbf\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\u0baa\u0bbf\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u0b9f\u0bbf\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0b9f\u0bbf\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0b9f\u0bbf\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale te.\n */\ngoog.i18n.CompactNumberFormatSymbols_te \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\u0c35\u0c47\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\u0c35\u0c47\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\u0c35\u0c47\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\u0c2e\u0c3f\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\u0c2e\u0c3f\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\u0c2e\u0c3f\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\u0c2c\u0c3f\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\u0c2c\u0c3f\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\u0c2c\u0c3f\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u0c1f\u0c4d\u0c30\u0c3f\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u0c1f\u0c4d\u0c30\u0c3f\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u0c1f\u0c4d\u0c30\u0c3f\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0c35\u0c47\u0c32\u0c41\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0c35\u0c47\u0c32\u0c41\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0c35\u0c47\u0c32\u0c41\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale th.\n */\ngoog.i18n.CompactNumberFormatSymbols_th \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0e1e\u0e31\u0e19\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270 \u0e2b\u0e21\u0e37\u0e48\u0e19\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0e41\u0e2a\u0e19\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0e1e\u0e31\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x270 \u0e2b\u0e21\u0e37\u0e48\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u0e41\u0e2a\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale tl.\n */\ngoog.i18n.CompactNumberFormatSymbols_tl \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 na libo\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 na libo\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 na libo\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 na milyon\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 na milyon\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 na milyon\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 na bilyon\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 na bilyon\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 na bilyon\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 na trilyon\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 na trilyon\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 na trilyon\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale tr.\n */\ngoog.i18n.CompactNumberFormatSymbols_tr \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0B\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0B\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0B\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0Mn\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0Mn\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0Mn\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0Mr\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0Mr\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0Mr\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0Tn\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0Tn\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0Tn\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 bin\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 bin\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 bin\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 milyon\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 milyon\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 milyon\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milyar\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milyar\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milyar\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trilyon\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trilyon\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trilyon\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale uk.\n */\ngoog.i18n.CompactNumberFormatSymbols_uk \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0438\u0441.\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0438\u0441.\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0438\u0441.\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u043d\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u043d\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u043d\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0\u043c\u043b\u0440\u0434\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0442\u0440\u043b\u043d\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0442\u0440\u043b\u043d\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u0442\u0438\u0441\u044f\u0447\u0456\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u0442\u0438\u0441\u044f\u0447\u0456\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 \u0442\u0438\u0441\u044f\u0447\u0456\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale ur.\n */\ngoog.i18n.CompactNumberFormatSymbols_ur \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0\u06c1\u0632\u0627\u0631\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0\u06c1\u0632\u0627\u0631\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270\xa0\u0644\u0627\u06a9\u06be\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700\xa0\u0644\u0627\u06a9\u06be\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270\xa0\u06a9\u0631\u0648\u0691\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700\xa0\u06a9\u0631\u0648\u0691\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0\u0627\u0631\u0628\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0627\u0631\u0628\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270\xa0\u06a9\u06be\u0631\u0628\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u06a9\u06be\u0631\u0628\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0\u0679\u0631\u06cc\u0644\u06cc\u0646\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0\u0679\u0631\u06cc\u0644\u06cc\u0646\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 \u06c1\u0632\u0627\u0631\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 \u06c1\u0632\u0627\u0631\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x270 \u0644\u0627\u06a9\u06be\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x2700 \u0644\u0627\u06a9\u06be\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270 \u06a9\u0631\u0648\u0691\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x2700 \u06a9\u0631\u0648\u0691\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 \u0627\u0631\u0628\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 \u0627\u0631\u0628\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270 \u06a9\u06be\u0631\u0628\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x2700 \u06a9\u06be\u0631\u0628\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 \u0679\u0631\u06cc\u0644\u06cc\u0646\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 \u0679\u0631\u06cc\u0644\u06cc\u0646\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale uz.\n */\ngoog.i18n.CompactNumberFormatSymbols_uz \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0ming\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0ming\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0ming\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0mln\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0mln\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0mln\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0mlrd\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0mlrd\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0mlrd\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0trln\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0trln\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0trln\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ming\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ming\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ming\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 million\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 million\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 million\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 milliard\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 milliard\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 milliard\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 trillion\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 trillion\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 trillion\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale vi.\n */\ngoog.i18n.CompactNumberFormatSymbols_vi \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\xa0N\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700\xa0N\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000\xa0N\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270\xa0Tr\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700\xa0Tr\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000\xa0Tr\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270\xa0T\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700\xa0T\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000\xa0T\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\xa0NT\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\xa0NT\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\xa0NT\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 ngh\xecn\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 ngh\xecn\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 ngh\xecn\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 tri\u1ec7u\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 tri\u1ec7u\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 tri\u1ec7u\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 t\u1ef7\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 t\u1ef7\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 t\u1ef7\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 ngh\xecn t\u1ef7\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 ngh\xecn t\u1ef7\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 ngh\xecn t\u1ef7\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale zh.\n */\ngoog.i18n.CompactNumberFormatSymbols_zh \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u4e07\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u4e07\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u4e07\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u4e07\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u4ebf\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u4ebf\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u4ebf\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u4ebf\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u4e07\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u4e07\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u4e07\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u4e07\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u4ebf\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u4ebf\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u4ebf\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u4ebf\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale zh_CN.\n */\ngoog.i18n.CompactNumberFormatSymbols_zh_CN \x3d goog.i18n.CompactNumberFormatSymbols_zh;\n\n\n/**\n * Compact number formatting symbols for locale zh_HK.\n */\ngoog.i18n.CompactNumberFormatSymbols_zh_HK \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u842c\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u842c\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u842c\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u842c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u5104\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u5104\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u5104\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u5104\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale zh_TW.\n */\ngoog.i18n.CompactNumberFormatSymbols_zh_TW \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u842c\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u842c\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u842c\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u842c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u5104\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u5104\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u5104\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u5104\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x270\u842c\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x2700\u842c\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x27000\u842c\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x270000\u842c\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x270\u5104\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x2700\u5104\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x27000\u5104\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x270000\u5104\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270\u5146\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700\u5146\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000\u5146\x27\n    }\n  }\n};\n\n\n/**\n * Compact number formatting symbols for locale zu.\n */\ngoog.i18n.CompactNumberFormatSymbols_zu \x3d {\n  COMPACT_DECIMAL_SHORT_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270K\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700K\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000K\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270M\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700M\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000M\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270B\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700B\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000B\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270T\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700T\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000T\x27\n    }\n  },\n  COMPACT_DECIMAL_LONG_PATTERN: {\n    \x271000\x27: {\n      \x27other\x27: \x270 inkulungwane\x27\n    },\n    \x2710000\x27: {\n      \x27other\x27: \x2700 inkulungwane\x27\n    },\n    \x27100000\x27: {\n      \x27other\x27: \x27000 inkulungwane\x27\n    },\n    \x271000000\x27: {\n      \x27other\x27: \x270 isigidi\x27\n    },\n    \x2710000000\x27: {\n      \x27other\x27: \x2700 isigidi\x27\n    },\n    \x27100000000\x27: {\n      \x27other\x27: \x27000 isigidi\x27\n    },\n    \x271000000000\x27: {\n      \x27other\x27: \x270 isigidi sezigidi\x27\n    },\n    \x2710000000000\x27: {\n      \x27other\x27: \x2700 isigidi sezigidi\x27\n    },\n    \x27100000000000\x27: {\n      \x27other\x27: \x27000 isigidi sezigidi\x27\n    },\n    \x271000000000000\x27: {\n      \x27other\x27: \x270 isigidintathu\x27\n    },\n    \x2710000000000000\x27: {\n      \x27other\x27: \x2700 isigidintathu\x27\n    },\n    \x27100000000000000\x27: {\n      \x27other\x27: \x27000 isigidintathu\x27\n    }\n  }\n};\n\n\n/**\n * Select compact number formatting symbols by locale.\n */\ngoog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en;\n\nswitch (goog.LOCALE) {\n  case \x27af\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_af;\n    break;\n  case \x27am\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_am;\n    break;\n  case \x27ar\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ar;\n    break;\n  case \x27ar_DZ\x27:\n  case \x27ar-DZ\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ar_DZ;\n    break;\n  case \x27ar_EG\x27:\n  case \x27ar-EG\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ar_EG;\n    break;\n  case \x27az\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_az;\n    break;\n  case \x27be\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_be;\n    break;\n  case \x27bg\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_bg;\n    break;\n  case \x27bn\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_bn;\n    break;\n  case \x27br\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_br;\n    break;\n  case \x27bs\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_bs;\n    break;\n  case \x27ca\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ca;\n    break;\n  case \x27chr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_chr;\n    break;\n  case \x27cs\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_cs;\n    break;\n  case \x27cy\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_cy;\n    break;\n  case \x27da\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_da;\n    break;\n  case \x27de\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_de;\n    break;\n  case \x27de_AT\x27:\n  case \x27de-AT\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_de_AT;\n    break;\n  case \x27de_CH\x27:\n  case \x27de-CH\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_de_CH;\n    break;\n  case \x27el\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_el;\n    break;\n  case \x27en\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en;\n    break;\n  case \x27en_AU\x27:\n  case \x27en-AU\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_AU;\n    break;\n  case \x27en_CA\x27:\n  case \x27en-CA\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_CA;\n    break;\n  case \x27en_GB\x27:\n  case \x27en-GB\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_GB;\n    break;\n  case \x27en_IE\x27:\n  case \x27en-IE\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_IE;\n    break;\n  case \x27en_IN\x27:\n  case \x27en-IN\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_IN;\n    break;\n  case \x27en_SG\x27:\n  case \x27en-SG\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_SG;\n    break;\n  case \x27en_US\x27:\n  case \x27en-US\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_US;\n    break;\n  case \x27en_ZA\x27:\n  case \x27en-ZA\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_en_ZA;\n    break;\n  case \x27es\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_es;\n    break;\n  case \x27es_419\x27:\n  case \x27es-419\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_es_419;\n    break;\n  case \x27es_ES\x27:\n  case \x27es-ES\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_es_ES;\n    break;\n  case \x27es_MX\x27:\n  case \x27es-MX\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_es_MX;\n    break;\n  case \x27es_US\x27:\n  case \x27es-US\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_es_US;\n    break;\n  case \x27et\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_et;\n    break;\n  case \x27eu\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_eu;\n    break;\n  case \x27fa\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_fa;\n    break;\n  case \x27fi\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_fi;\n    break;\n  case \x27fil\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_fil;\n    break;\n  case \x27fr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_fr;\n    break;\n  case \x27fr_CA\x27:\n  case \x27fr-CA\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_fr_CA;\n    break;\n  case \x27ga\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ga;\n    break;\n  case \x27gl\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_gl;\n    break;\n  case \x27gsw\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_gsw;\n    break;\n  case \x27gu\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_gu;\n    break;\n  case \x27haw\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_haw;\n    break;\n  case \x27he\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_he;\n    break;\n  case \x27hi\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_hi;\n    break;\n  case \x27hr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_hr;\n    break;\n  case \x27hu\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_hu;\n    break;\n  case \x27hy\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_hy;\n    break;\n  case \x27id\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_id;\n    break;\n  case \x27in\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_in;\n    break;\n  case \x27is\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_is;\n    break;\n  case \x27it\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_it;\n    break;\n  case \x27iw\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_iw;\n    break;\n  case \x27ja\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ja;\n    break;\n  case \x27ka\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ka;\n    break;\n  case \x27kk\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_kk;\n    break;\n  case \x27km\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_km;\n    break;\n  case \x27kn\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_kn;\n    break;\n  case \x27ko\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ko;\n    break;\n  case \x27ky\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ky;\n    break;\n  case \x27ln\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ln;\n    break;\n  case \x27lo\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_lo;\n    break;\n  case \x27lt\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_lt;\n    break;\n  case \x27lv\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_lv;\n    break;\n  case \x27mk\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_mk;\n    break;\n  case \x27ml\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ml;\n    break;\n  case \x27mn\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_mn;\n    break;\n  case \x27mo\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_mo;\n    break;\n  case \x27mr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_mr;\n    break;\n  case \x27ms\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ms;\n    break;\n  case \x27mt\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_mt;\n    break;\n  case \x27my\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_my;\n    break;\n  case \x27nb\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_nb;\n    break;\n  case \x27ne\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ne;\n    break;\n  case \x27nl\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_nl;\n    break;\n  case \x27no\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_no;\n    break;\n  case \x27no_NO\x27:\n  case \x27no-NO\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_no_NO;\n    break;\n  case \x27or\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_or;\n    break;\n  case \x27pa\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_pa;\n    break;\n  case \x27pl\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_pl;\n    break;\n  case \x27pt\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_pt;\n    break;\n  case \x27pt_BR\x27:\n  case \x27pt-BR\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_pt_BR;\n    break;\n  case \x27pt_PT\x27:\n  case \x27pt-PT\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_pt_PT;\n    break;\n  case \x27ro\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ro;\n    break;\n  case \x27ru\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ru;\n    break;\n  case \x27sh\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sh;\n    break;\n  case \x27si\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_si;\n    break;\n  case \x27sk\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sk;\n    break;\n  case \x27sl\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sl;\n    break;\n  case \x27sq\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sq;\n    break;\n  case \x27sr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sr;\n    break;\n  case \x27sr_Latn\x27:\n  case \x27sr-Latn\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sr_Latn;\n    break;\n  case \x27sv\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sv;\n    break;\n  case \x27sw\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_sw;\n    break;\n  case \x27ta\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ta;\n    break;\n  case \x27te\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_te;\n    break;\n  case \x27th\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_th;\n    break;\n  case \x27tl\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_tl;\n    break;\n  case \x27tr\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_tr;\n    break;\n  case \x27uk\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_uk;\n    break;\n  case \x27ur\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_ur;\n    break;\n  case \x27uz\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_uz;\n    break;\n  case \x27vi\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_vi;\n    break;\n  case \x27zh\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_zh;\n    break;\n  case \x27zh_CN\x27:\n  case \x27zh-CN\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_zh_CN;\n    break;\n  case \x27zh_HK\x27:\n  case \x27zh-HK\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_zh_HK;\n    break;\n  case \x27zh_TW\x27:\n  case \x27zh-TW\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_zh_TW;\n    break;\n  case \x27zu\x27:\n    goog.i18n.CompactNumberFormatSymbols \x3d goog.i18n.CompactNumberFormatSymbols_zu;\n    break;\n}\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/compactnumberformatsymbols.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/i18n/currency.js";
eval("// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview A utility to get better currency format pattern.\n *\n * This module implements a new currency format representation model. It\n * provides 3 currency representation forms: global, portable and local. Local\n * format is the most popular format people use to represent currency in its\n * circulating country without worrying about how it should be distinguished\n * from other currencies.  Global format is a formal representation in context\n * of multiple currencies in same page, it is ISO 4217 currency code. Portable\n * format is a compromise between global and local. It looks similar to how\n * people would like to see how their currency is being represented in other\n * media. While at the same time, it should be distinguishable to world\x27s\n * popular currencies (like USD, EUR) and currencies somewhat relevant in the\n * area (like CNY in HK, though native currency is HKD). There is no guarantee\n * of uniqueness.\n *\n * @author shanjian@google.com (Shanjian Li)\n */\n\n\ngoog.provide(\x27goog.i18n.currency\x27);\ngoog.provide(\x27goog.i18n.currency.CurrencyInfo\x27);\ngoog.provide(\x27goog.i18n.currency.CurrencyInfoTier2\x27);\n\n\n/**\n * The mask of precision field.\n * @private\n */\ngoog.i18n.currency.PRECISION_MASK_ \x3d 0x07;\n\n\n/**\n * Whether the currency sign should be positioned after the number.\n * @private\n */\ngoog.i18n.currency.POSITION_FLAG_ \x3d 0x10;\n\n\n/**\n * Whether a space should be inserted between the number and currency sign.\n * @private\n */\ngoog.i18n.currency.SPACE_FLAG_ \x3d 0x20;\n\n\n/**\n * Whether tier2 was enabled already by calling addTier2Support().\n * @private\n */\ngoog.i18n.currency.tier2Enabled_ \x3d false;\n\n\n/**\n * Tests if currency is available.\n *\n * Note: If the currency is not available it might be in the tier2 currency set:\n * {@link goog.i18n.currency.CurrencyInfoTier2}. If that is the case call\n * {@link goog.i18n.currency.addTier2Support} before calling any other function\n * in this namespace.\n *\n * @param {string} currencyCode Currency code to tested.\n * @return {boolean} If the currency is available.\n */\ngoog.i18n.currency.isAvailable \x3d function(currencyCode) {\n  return currencyCode in goog.i18n.currency.CurrencyInfo;\n};\n\n/**\n * This function will add tier2 currency support. Be default, only tier1\n * (most popular currencies) are supported. If an application really needs\n * to support some of the rarely used currencies, it should call this function\n * before any other functions in this namespace.\n */\ngoog.i18n.currency.addTier2Support \x3d function() {\n  // Protection from executing this these again and again.\n  if (!goog.i18n.currency.tier2Enabled_) {\n    for (var key in goog.i18n.currency.CurrencyInfoTier2) {\n      goog.i18n.currency.CurrencyInfo[key] \x3d\n          goog.i18n.currency.CurrencyInfoTier2[key];\n    }\n    goog.i18n.currency.tier2Enabled_ \x3d true;\n  }\n};\n\n\n/**\n * Deprecated.\n * Global currency pattern always uses ISO-4217 currency code as prefix. Local\n * currency sign is added if it is different from currency code. Each currency\n * is unique in this form. The negative side is that ISO code looks weird in\n * some countries as people normally do not use it. Local currency sign\n * alleviates the problem, but also makes it a little verbose.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Global currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.GLOBAL}\n */\ngoog.i18n.currency.getGlobalCurrencyPattern \x3d function(currencyCode) {\n  var info \x3d goog.i18n.currency.CurrencyInfo[currencyCode];\n  var patternNum \x3d info[0];\n  if (currencyCode \x3d\x3d info[1]) {\n    return goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n  }\n  return currencyCode + \x27 \x27 +\n      goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n};\n\n\n/**\n * Return global currency sign string for those applications\n * that want to handle currency sign themselves.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Global currency sign for given currency.\n */\ngoog.i18n.currency.getGlobalCurrencySign \x3d function(currencyCode) {\n  var info \x3d goog.i18n.currency.CurrencyInfo[currencyCode];\n  return (currencyCode \x3d\x3d info[1]) ? currencyCode :\n                                     currencyCode + \x27 \x27 + info[1];\n};\n\n\n/**\n * Deprecated.\n * Local currency pattern is the most frequently used pattern in currency\x27s\n * native region. It does not care about how it is distinguished from other\n * currencies.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Local currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.LOCAL}\n */\ngoog.i18n.currency.getLocalCurrencyPattern \x3d function(currencyCode) {\n  var info \x3d goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);\n};\n\n\n/**\n * Returns local currency sign string for those applications that need to\n * handle currency sign separately.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Local currency sign for given currency.\n */\ngoog.i18n.currency.getLocalCurrencySign \x3d function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][1];\n};\n\n\n/**\n * Deprecated.\n * Portable currency pattern is a compromise between local and global. It is\n * not a mere blend or mid-way between the two. Currency sign is chosen so that\n * it looks familiar to native users. It also has enough information to\n * distinguish itself from other popular currencies in its native region.\n * In this pattern, currency sign symbols that has availability problem in\n * popular fonts are also avoided.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Portable currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.PORTABLE}\n */\ngoog.i18n.currency.getPortableCurrencyPattern \x3d function(currencyCode) {\n  var info \x3d goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);\n};\n\n\n/**\n * Return portable currency sign string for those applications that need to\n * handle currency sign themselves.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Portable currency sign for given currency.\n */\ngoog.i18n.currency.getPortableCurrencySign \x3d function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][2];\n};\n\n\n/**\n * This function returns the default currency sign\x27s position. Some applications\n * may want to handle currency sign and currency amount separately. This\n * function can be used in such situations to correctly position the currency\n * sign relative to the amount.\n *\n * Use {@link goog.i18n.NumberFormat#isCurrencyCodeBeforeValue} for a locale\n * aware version of this API (recommended). isPrefixSignPosition() returns the\n * default currency sign\x27s position in the currency\x27s default locale (e.g. \x27en\x27\n * for \x27USD\x27), but most commonly the position is needed for the locale in which\n * the number is going to be displayed. For example, in \x27fr\x27 10.10 USD would be\n * displayed as \x2710,10 $\x27.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {boolean} true if currency should be positioned before amount field.\n */\ngoog.i18n.currency.isPrefixSignPosition \x3d function(currencyCode) {\n  return (goog.i18n.currency.CurrencyInfo[currencyCode][0] \x26\n          goog.i18n.currency.POSITION_FLAG_) \x3d\x3d 0;\n};\n\n\n/**\n * This function constructs the currency pattern. Currency sign is provided. The\n * pattern information is encoded in patternNum.\n *\n * @param {number} patternNum Encoded pattern number that has\n *     currency pattern information.\n * @param {string} sign The currency sign that will be used in pattern.\n * @return {string} currency pattern string.\n * @private\n */\ngoog.i18n.currency.getCurrencyPattern_ \x3d function(patternNum, sign) {\n  var strParts \x3d [\x27#,##0\x27];\n  var precision \x3d patternNum \x26 goog.i18n.currency.PRECISION_MASK_;\n  if (precision \x3e 0) {\n    strParts.push(\x27.\x27);\n    for (var i \x3d 0; i \x3c precision; i++) {\n      strParts.push(\x270\x27);\n    }\n  }\n  if ((patternNum \x26 goog.i18n.currency.POSITION_FLAG_) \x3d\x3d 0) {\n    strParts.unshift(\n        (patternNum \x26 goog.i18n.currency.SPACE_FLAG_) ? \x22\x27 \x22 : \x22\x27\x22);\n    strParts.unshift(sign);\n    strParts.unshift(\x22\x27\x22);\n  } else {\n    strParts.push(\n        (patternNum \x26 goog.i18n.currency.SPACE_FLAG_) ? \x22 \x27\x22 : \x22\x27\x22, sign, \x22\x27\x22);\n  }\n  return strParts.join(\x27\x27);\n};\n\n\n/**\n * Modify currency pattern string by adjusting precision for given currency.\n * Standard currency pattern will have 2 digit after decimal point.\n * Examples:\n *   $#,##0.00 -\x3e  $#,##0    (precision \x3d\x3d 0)\n *   $#,##0.00 -\x3e  $#,##0.0  (precision \x3d\x3d 1)\n *   $#,##0.00 -\x3e  $#,##0.000  (precision \x3d\x3d 3)\n *\n * @param {string} pattern currency pattern string.\n * @param {string} currencyCode 3-letter currency code.\n * @return {string} modified currency pattern string.\n */\ngoog.i18n.currency.adjustPrecision \x3d function(pattern, currencyCode) {\n  var strParts \x3d [\x270\x27];\n  var info \x3d goog.i18n.currency.CurrencyInfo[currencyCode];\n  var precision \x3d info[0] \x26 goog.i18n.currency.PRECISION_MASK_;\n  if (precision \x3e 0) {\n    strParts.push(\x27.\x27);\n    for (var i \x3d 0; i \x3c precision; i++) {\n      strParts.push(\x270\x27);\n    }\n  }\n  return pattern.replace(/0.00/g, strParts.join(\x27\x27));\n};\n\n\n/**\n * Tier 1 currency information.\n *\n * The first number in the array is a combination of the precision mask and\n * other flags. The precision mask indicates how many decimal places to show for\n * the currency. Valid values are [0..7]. The position flag indicates whether\n * the currency sign should be positioned after the number. Valid values are 0\n * (before the number) or 16 (after the number). The space flag indicates\n * whether a space should be inserted between the currency sign and number.\n * Valid values are 0 (no space) and 32 (space).\n *\n * The number in the array is calculated by adding together the mask and flag\n * values. For example:\n *\n * 0: no precision (0), currency sign first (0), no space (0)\n * 2: two decimals precision (2), currency sign first (0), no space (0)\n * 18: two decimals precision (2), currency sign last (16), no space (0)\n * 50: two decimals precision (2), currency sign last (16), space (32)\n *\n * It\x27s not recommended to read this data directly. Format numbers using\n * {@link goog.i18n.NumberFormat} with\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\n *\n * @const {!Object\x3c!Array\x3c?\x3e\x3e}\n */\ngoog.i18n.currency.CurrencyInfo \x3d {\n  \x27AED\x27: [2, \x27dh\x27, \x27\\u062f.\\u0625.\x27, \x27DH\x27],\n  \x27ALL\x27: [0, \x27Lek\x27, \x27Lek\x27],\n  \x27AUD\x27: [2, \x27$\x27, \x27AU$\x27],\n  \x27BDT\x27: [2, \x27\\u09F3\x27, \x27Tk\x27],\n  \x27BGN\x27: [2, \x27lev\x27, \x27lev\x27],\n  \x27BRL\x27: [2, \x27R$\x27, \x27R$\x27],\n  \x27CAD\x27: [2, \x27$\x27, \x27C$\x27],\n  \x27CDF\x27: [2, \x27FrCD\x27, \x27CDF\x27],\n  \x27CHF\x27: [2, \x27CHF\x27, \x27CHF\x27],\n  \x27CLP\x27: [0, \x27$\x27, \x27CL$\x27],\n  \x27CNY\x27: [2, \x27\xa5\x27, \x27RMB\xa5\x27],\n  \x27COP\x27: [32, \x27$\x27, \x27COL$\x27],\n  \x27CRC\x27: [0, \x27\\u20a1\x27, \x27CR\\u20a1\x27],\n  \x27CZK\x27: [50, \x27K\\u010d\x27, \x27K\\u010d\x27],\n  \x27DKK\x27: [50, \x27kr.\x27, \x27kr.\x27],\n  \x27DOP\x27: [2, \x27RD$\x27, \x27RD$\x27],\n  \x27EGP\x27: [2, \x27\xa3\x27, \x27LE\x27],\n  \x27ETB\x27: [2, \x27Birr\x27, \x27Birr\x27],\n  \x27EUR\x27: [2, \x27\u20ac\x27, \x27\u20ac\x27],\n  \x27GBP\x27: [2, \x27\xa3\x27, \x27GB\xa3\x27],\n  \x27HKD\x27: [2, \x27$\x27, \x27HK$\x27],\n  \x27HRK\x27: [2, \x27kn\x27, \x27kn\x27],\n  \x27HUF\x27: [34, \x27Ft\x27, \x27Ft\x27],\n  \x27IDR\x27: [0, \x27Rp\x27, \x27Rp\x27],\n  \x27ILS\x27: [34, \x27\\u20AA\x27, \x27IL\\u20AA\x27],\n  \x27INR\x27: [2, \x27\\u20B9\x27, \x27Rs\x27],\n  \x27IRR\x27: [0, \x27Rial\x27, \x27IRR\x27],\n  \x27ISK\x27: [0, \x27kr\x27, \x27kr\x27],\n  \x27JMD\x27: [2, \x27$\x27, \x27JA$\x27],\n  \x27JPY\x27: [0, \x27\xa5\x27, \x27JP\xa5\x27],\n  \x27KRW\x27: [0, \x27\\u20A9\x27, \x27KR\u20a9\x27],\n  \x27LKR\x27: [2, \x27Rs\x27, \x27SLRs\x27],\n  \x27LTL\x27: [2, \x27Lt\x27, \x27Lt\x27],\n  \x27MNT\x27: [0, \x27\\u20AE\x27, \x27MN\u20ae\x27],\n  \x27MVR\x27: [2, \x27Rf\x27, \x27MVR\x27],\n  \x27MXN\x27: [2, \x27$\x27, \x27Mex$\x27],\n  \x27MYR\x27: [2, \x27RM\x27, \x27RM\x27],\n  \x27NOK\x27: [50, \x27kr\x27, \x27NOkr\x27],\n  \x27PAB\x27: [2, \x27B/.\x27, \x27B/.\x27],\n  \x27PEN\x27: [2, \x27S/.\x27, \x27S/.\x27],\n  \x27PHP\x27: [2, \x27\\u20B1\x27, \x27PHP\x27],\n  \x27PKR\x27: [0, \x27Rs\x27, \x27PKRs.\x27],\n  \x27PLN\x27: [50, \x27z\\u0142\x27, \x27z\\u0142\x27],\n  \x27RON\x27: [2, \x27RON\x27, \x27RON\x27],\n  \x27RSD\x27: [0, \x27din\x27, \x27RSD\x27],\n  \x27RUB\x27: [50, \x27\\u20bd\x27, \x27RUB\x27],\n  \x27SAR\x27: [2, \x27Rial\x27, \x27Rial\x27],\n  \x27SEK\x27: [50, \x27kr\x27, \x27kr\x27],\n  \x27SGD\x27: [2, \x27$\x27, \x27S$\x27],\n  \x27THB\x27: [2, \x27\\u0e3f\x27, \x27THB\x27],\n  \x27TRY\x27: [2, \x27\u20ba\x27, \x27TRY\x27],\n  \x27TWD\x27: [2, \x27NT$\x27, \x27NT$\x27],\n  \x27TZS\x27: [0, \x27TSh\x27, \x27TSh\x27],\n  \x27UAH\x27: [2, \x27\u0433\u0440\u043d.\x27, \x27UAH\x27],\n  \x27USD\x27: [2, \x27$\x27, \x27US$\x27],\n  \x27UYU\x27: [2, \x27$\x27, \x27$U\x27],\n  \x27VND\x27: [48, \x27\\u20AB\x27, \x27VN\\u20AB\x27],\n  \x27YER\x27: [0, \x27Rial\x27, \x27Rial\x27],\n  \x27ZAR\x27: [2, \x27R\x27, \x27ZAR\x27]\n};\n\n\n/**\n * Tier 2 currency information.\n *\n * It\x27s not recommended to read this data directly. Format numbers using\n * {@link goog.i18n.NumberFormat} with\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\n *\n * @const {!Object\x3c!Array\x3c?\x3e\x3e}\n */\ngoog.i18n.currency.CurrencyInfoTier2 \x3d {\n  \x27AFN\x27: [48, \x27Af.\x27, \x27AFN\x27],\n  \x27AMD\x27: [32, \x27Dram\x27, \x27dram\x27],\n  \x27ANG\x27: [2, \x27NAf.\x27, \x27ANG\x27],\n  \x27AOA\x27: [2, \x27Kz\x27, \x27Kz\x27],\n  \x27ARS\x27: [34, \x27$\x27, \x27AR$\x27],\n  \x27AWG\x27: [2, \x27Afl.\x27, \x27Afl.\x27],\n  \x27AZN\x27: [34, \x27\\u20bc\x27, \x27AZN\x27],\n  \x27BAM\x27: [2, \x27KM\x27, \x27KM\x27],\n  \x27BBD\x27: [2, \x27$\x27, \x27Bds$\x27],\n  \x27BHD\x27: [3, \x27din\x27, \x27din\x27],\n  \x27BIF\x27: [0, \x27FBu\x27, \x27FBu\x27],\n  \x27BMD\x27: [2, \x27$\x27, \x27BD$\x27],\n  \x27BND\x27: [2, \x27$\x27, \x27B$\x27],\n  \x27BOB\x27: [2, \x27Bs\x27, \x27Bs\x27],\n  \x27BSD\x27: [2, \x27$\x27, \x27BS$\x27],\n  \x27BTN\x27: [2, \x27Nu.\x27, \x27Nu.\x27],\n  \x27BWP\x27: [2, \x27P\x27, \x27pula\x27],\n  \x27BYN\x27: [50, \x27\\u0440.\x27, \x27BYN\x27],\n  \x27BYR\x27: [48, \x27\\u0440.\x27, \x27BYR\x27],\n  \x27BZD\x27: [2, \x27$\x27, \x27BZ$\x27],\n  \x27CNH\x27: [2, \x27\xa5\x27, \x27RMB\xa5\x27],\n  \x27CUC\x27: [1, \x27$\x27, \x27CUC$\x27],\n  \x27CUP\x27: [2, \x27$\x27, \x27CU$\x27],\n  \x27CVE\x27: [2, \x27CVE\x27, \x27Esc\x27],\n  \x27DJF\x27: [0, \x27Fdj\x27, \x27Fdj\x27],\n  \x27DZD\x27: [2, \x27din\x27, \x27din\x27],\n  \x27ERN\x27: [2, \x27Nfk\x27, \x27Nfk\x27],\n  \x27FJD\x27: [2, \x27$\x27, \x27FJ$\x27],\n  \x27FKP\x27: [2, \x27\xa3\x27, \x27FK\xa3\x27],\n  \x27GEL\x27: [2, \x27GEL\x27, \x27GEL\x27],\n  \x27GHS\x27: [2, \x27GHS\x27, \x27GHS\x27],\n  \x27GIP\x27: [2, \x27\xa3\x27, \x27GI\xa3\x27],\n  \x27GMD\x27: [2, \x27GMD\x27, \x27GMD\x27],\n  \x27GNF\x27: [0, \x27FG\x27, \x27FG\x27],\n  \x27GTQ\x27: [2, \x27Q\x27, \x27GTQ\x27],\n  \x27GYD\x27: [0, \x27$\x27, \x27GY$\x27],\n  \x27HNL\x27: [2, \x27L\x27, \x27HNL\x27],\n  \x27HTG\x27: [2, \x27HTG\x27, \x27HTG\x27],\n  \x27IQD\x27: [0, \x27din\x27, \x27IQD\x27],\n  \x27JOD\x27: [3, \x27din\x27, \x27JOD\x27],\n  \x27KES\x27: [2, \x27Ksh\x27, \x27Ksh\x27],\n  \x27KGS\x27: [2, \x27KGS\x27, \x27KGS\x27],\n  \x27KHR\x27: [2, \x27Riel\x27, \x27KHR\x27],\n  \x27KMF\x27: [0, \x27CF\x27, \x27KMF\x27],\n  \x27KPW\x27: [0, \x27\\u20A9KP\x27, \x27KPW\x27],\n  \x27KWD\x27: [3, \x27din\x27, \x27KWD\x27],\n  \x27KYD\x27: [2, \x27$\x27, \x27KY$\x27],\n  \x27KZT\x27: [2, \x27\\u20B8\x27, \x27KZT\x27],\n  \x27LAK\x27: [0, \x27\\u20AD\x27, \x27\\u20AD\x27],\n  \x27LBP\x27: [0, \x27L\xa3\x27, \x27LBP\x27],\n  \x27LRD\x27: [2, \x27$\x27, \x27L$\x27],\n  \x27LSL\x27: [2, \x27LSL\x27, \x27LSL\x27],\n  \x27LYD\x27: [3, \x27din\x27, \x27LD\x27],\n  \x27MAD\x27: [2, \x27dh\x27, \x27MAD\x27],\n  \x27MDL\x27: [2, \x27MDL\x27, \x27MDL\x27],\n  \x27MGA\x27: [0, \x27Ar\x27, \x27MGA\x27],\n  \x27MKD\x27: [2, \x27din\x27, \x27MKD\x27],\n  \x27MMK\x27: [0, \x27K\x27, \x27MMK\x27],\n  \x27MOP\x27: [2, \x27MOP\x27, \x27MOP$\x27],\n  \x27MRO\x27: [0, \x27MRO\x27, \x27MRO\x27],\n  \x27MUR\x27: [0, \x27MURs\x27, \x27MURs\x27],\n  \x27MWK\x27: [2, \x27MWK\x27, \x27MWK\x27],\n  \x27MZN\x27: [2, \x27MTn\x27, \x27MTn\x27],\n  \x27NAD\x27: [2, \x27$\x27, \x27N$\x27],\n  \x27NGN\x27: [2, \x27\\u20A6\x27, \x27NG\\u20A6\x27],\n  \x27NIO\x27: [2, \x27C$\x27, \x27C$\x27],\n  \x27NPR\x27: [2, \x27Rs\x27, \x27NPRs\x27],\n  \x27NZD\x27: [2, \x27$\x27, \x27NZ$\x27],\n  \x27OMR\x27: [3, \x27Rial\x27, \x27OMR\x27],\n  \x27PGK\x27: [2, \x27PGK\x27, \x27PGK\x27],\n  \x27PYG\x27: [16, \x27Gs.\x27, \x27PYG\x27],\n  \x27QAR\x27: [2, \x27Rial\x27, \x27QR\x27],\n  \x27RWF\x27: [0, \x27RF\x27, \x27RF\x27],\n  \x27SBD\x27: [2, \x27$\x27, \x27SI$\x27],\n  \x27SCR\x27: [2, \x27SCR\x27, \x27SCR\x27],\n  \x27SDG\x27: [2, \x27SDG\x27, \x27SDG\x27],\n  \x27SHP\x27: [2, \x27\xa3\x27, \x27SH\xa3\x27],\n  \x27SLL\x27: [0, \x27SLL\x27, \x27SLL\x27],\n  \x27SOS\x27: [0, \x27SOS\x27, \x27SOS\x27],\n  \x27SRD\x27: [2, \x27$\x27, \x27SR$\x27],\n  \x27SSP\x27: [2, \x27\xa3\x27, \x27SSP\x27],\n  \x27STD\x27: [0, \x27Db\x27, \x27Db\x27],\n  \x27SYP\x27: [0, \x27\xa3\x27, \x27SY\xa3\x27],\n  \x27SZL\x27: [2, \x27SZL\x27, \x27SZL\x27],\n  \x27TJS\x27: [2, \x27Som\x27, \x27TJS\x27],\n  \x27TND\x27: [3, \x27din\x27, \x27DT\x27],\n  \x27TOP\x27: [2, \x27T$\x27, \x27T$\x27],\n  \x27TTD\x27: [2, \x27$\x27, \x27TT$\x27],\n  \x27UGX\x27: [0, \x27UGX\x27, \x27UGX\x27],\n  \x27UZS\x27: [0, \x27so\\u02bcm\x27, \x27UZS\x27],\n  \x27VEF\x27: [2, \x27Bs\x27, \x27Bs\x27],\n  \x27VUV\x27: [0, \x27VUV\x27, \x27VUV\x27],\n  \x27WST\x27: [2, \x27WST\x27, \x27WST\x27],\n  \x27XAF\x27: [0, \x27FCFA\x27, \x27FCFA\x27],\n  \x27XCD\x27: [2, \x27$\x27, \x27EC$\x27],\n  \x27XOF\x27: [0, \x27CFA\x27, \x27CFA\x27],\n  \x27XPF\x27: [48, \x27FCFP\x27, \x27FCFP\x27],\n  \x27ZMW\x27: [0, \x27ZMW\x27, \x27ZMW\x27],\n  \x27ZWD\x27: [0, \x27$\x27, \x27Z$\x27]\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/currency.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/i18n/numberformatsymbols.js";
eval("// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Number formatting symbols.\n *\n * File generated from CLDR ver. 33\n * MOE:begin_intracomment_strip\n * This file is generated by\n *   //depot/google3/java/com/google/i18n/tools/generators/locale:locale\n * using the --for_closure flag.\n *\n * See {@link go/js-locale-data-update} for details.\n *\n * Before checking, this file could have been manually edited. This is\n * to incorporate changes before we could fix CLDR. All manual\n * modification must be documented in this section, and should be\n * removed after those changes land to CLDR.\n * MOE:end_intracomment_strip\n *\n * To reduce the file size (which may cause issues in some JS\n * developing environments), this file will only contain locales\n * that are frequently used by web applications. This is defined as\n * proto/closure_locales_data.txt and will change (most likely addition)\n * over time.  Rest of the data can be found in another file named\n * \x22numberformatsymbolsext.js\x22, which will be generated at\n * the same time together with this file.\n *\n * @suppress {const}\n */\n\n// clang-format off\n\ngoog.provide(\x27goog.i18n.NumberFormatSymbols\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_af\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_am\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ar\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ar_DZ\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ar_EG\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ar_EG_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_az\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_be\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_bg\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_bn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_bn_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_br\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_bs\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ca\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_chr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_cs\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_cy\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_da\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_de\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_de_AT\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_de_CH\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_el\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_AU\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_CA\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_GB\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_IE\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_IN\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_SG\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_US\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_en_ZA\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_es\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_es_419\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_es_ES\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_es_MX\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_es_US\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_et\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_eu\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fa\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fa_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fi\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fil\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_fr_CA\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ga\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_gl\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_gsw\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_gu\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_haw\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_he\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_hi\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_hr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_hu\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_hy\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_id\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_in\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_is\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_it\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_iw\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ja\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ka\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_kk\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_km\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_kn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ko\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ky\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ln\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_lo\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_lt\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_lv\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mk\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ml\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mo\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mr_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ms\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_mt\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_my\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_my_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_nb\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ne\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ne_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_nl\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_no\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_no_NO\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_or\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_pa\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_pl\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_pt\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_pt_BR\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_pt_PT\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ro\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ru\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sh\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_si\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sk\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sl\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sq\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sr_Latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sv\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_sw\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ta\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_te\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_th\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_tl\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_tr\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_u_nu_latn\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_uk\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_ur\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_uz\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_vi\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_zh\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_zh_CN\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_zh_HK\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_zh_TW\x27);\ngoog.provide(\x27goog.i18n.NumberFormatSymbols_zu\x27);\n\n\n/**\n * Number formatting symbols for locale af.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_af \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27ZAR\x27\n};\n\n\n/**\n * Number formatting symbols for locale am.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_am \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27ETB\x27\n};\n\n\n/**\n * Number formatting symbols for locale ar.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ar \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27\u200e%\u200e\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0644\u064a\u0633\xa0\u0631\u0642\u0645\u064b\u0627\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EGP\x27\n};\n\n\n/**\n * Number formatting symbols for locale ar_DZ.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ar_DZ \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27\u200e%\u200e\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0644\u064a\u0633\xa0\u0631\u0642\u0645\u064b\u0627\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27DZD\x27\n};\n\n\n/**\n * Number formatting symbols for locale ar_EG.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ar_EG \x3d {\n  DECIMAL_SEP: \x27\u066b\x27,\n  GROUP_SEP: \x27\u066c\x27,\n  PERCENT: \x27\u066a\u061c\x27,\n  ZERO_DIGIT: \x27\u0660\x27,\n  PLUS_SIGN: \x27\u061c+\x27,\n  MINUS_SIGN: \x27\u061c-\x27,\n  EXP_SYMBOL: \x27\u0627\u0633\x27,\n  PERMILL: \x27\u0609\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0644\u064a\u0633\xa0\u0631\u0642\u0645\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EGP\x27\n};\n\n\n/**\n * Number formatting symbols for locale ar_EG_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ar_EG_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27\u200e%\u200e\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0644\u064a\u0633\xa0\u0631\u0642\u0645\u064b\u0627\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EGP\x27\n};\n\n\n/**\n * Number formatting symbols for locale az.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_az \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27AZN\x27\n};\n\n\n/**\n * Number formatting symbols for locale be.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_be \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27BYN\x27\n};\n\n\n/**\n * Number formatting symbols for locale bg.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_bg \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x270.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27BGN\x27\n};\n\n\n/**\n * Number formatting symbols for locale bn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_bn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x27\u09e6\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##,##0.00\xa4\x27,\n  DEF_CURRENCY_CODE: \x27BDT\x27\n};\n\n\n/**\n * Number formatting symbols for locale bn_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_bn_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##,##0.00\xa4\x27,\n  DEF_CURRENCY_CODE: \x27BDT\x27\n};\n\n\n/**\n * Number formatting symbols for locale br.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_br \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale bs.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_bs \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27BAM\x27\n};\n\n\n/**\n * Number formatting symbols for locale ca.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ca \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale chr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_chr \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27USD\x27\n};\n\n\n/**\n * Number formatting symbols for locale cs.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_cs \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27CZK\x27\n};\n\n\n/**\n * Number formatting symbols for locale cy.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_cy \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27GBP\x27\n};\n\n\n/**\n * Number formatting symbols for locale da.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_da \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27DKK\x27\n};\n\n\n/**\n * Number formatting symbols for locale de.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_de \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale de_AT.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_de_AT \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale de_CH.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_de_CH \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27\u2019\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00;\xa4-#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27CHF\x27\n};\n\n\n/**\n * Number formatting symbols for locale el.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_el \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27e\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale en.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27USD\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_AU.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_AU \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27e\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27AUD\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_CA.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_CA \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27e\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27CAD\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_GB.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_GB \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27GBP\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_IE.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_IE \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_IN.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_IN \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_SG.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_SG \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27SGD\x27\n};\n\n\n/**\n * Number formatting symbols for locale en_US.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_US \x3d goog.i18n.NumberFormatSymbols_en;\n\n\n/**\n * Number formatting symbols for locale en_ZA.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_en_ZA \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27ZAR\x27\n};\n\n\n/**\n * Number formatting symbols for locale es.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_es \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale es_419.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_es_419 \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27MXN\x27\n};\n\n\n/**\n * Number formatting symbols for locale es_ES.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_es_ES \x3d goog.i18n.NumberFormatSymbols_es;\n\n\n/**\n * Number formatting symbols for locale es_MX.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_es_MX \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27MXN\x27\n};\n\n\n/**\n * Number formatting symbols for locale es_US.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_es_US \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27USD\x27\n};\n\n\n/**\n * Number formatting symbols for locale et.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_et \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27\xd710^\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale eu.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_eu \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27%\xa0#,##0\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale fa.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fa \x3d {\n  DECIMAL_SEP: \x27\u066b\x27,\n  GROUP_SEP: \x27\u066c\x27,\n  PERCENT: \x27\u066a\x27,\n  ZERO_DIGIT: \x27\u06f0\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e\u2212\x27,\n  EXP_SYMBOL: \x27\xd7\u06f1\u06f0^\x27,\n  PERMILL: \x27\u0609\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0646\u0627\u0639\u062f\u062f\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\u200e\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27IRR\x27\n};\n\n\n/**\n * Number formatting symbols for locale fa_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fa_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0646\u0627\u0639\u062f\u062f\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\u200e\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27IRR\x27\n};\n\n\n/**\n * Number formatting symbols for locale fi.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fi \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27ep\xe4luku\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale fil.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fil \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27PHP\x27\n};\n\n\n/**\n * Number formatting symbols for locale fr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fr \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale fr_CA.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_fr_CA \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27CAD\x27\n};\n\n\n/**\n * Number formatting symbols for locale ga.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ga \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale gl.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_gl \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale gsw.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_gsw \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27\u2019\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27CHF\x27\n};\n\n\n/**\n * Number formatting symbols for locale gu.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_gu \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27[#E0]\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale haw.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_haw \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27USD\x27\n};\n\n\n/**\n * Number formatting symbols for locale he.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_he \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\u200f#,##0.00\xa0\xa4;\u200f-#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27ILS\x27\n};\n\n\n/**\n * Number formatting symbols for locale hi.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_hi \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27[#E0]\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale hr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_hr \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27HRK\x27\n};\n\n\n/**\n * Number formatting symbols for locale hu.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_hu \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27HUF\x27\n};\n\n\n/**\n * Number formatting symbols for locale hy.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_hy \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0548\u0579\u0539\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27AMD\x27\n};\n\n\n/**\n * Number formatting symbols for locale id.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_id \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27IDR\x27\n};\n\n\n/**\n * Number formatting symbols for locale in.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_in \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27IDR\x27\n};\n\n\n/**\n * Number formatting symbols for locale is.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_is \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27ISK\x27\n};\n\n\n/**\n * Number formatting symbols for locale it.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_it \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale iw.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_iw \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\u200f#,##0.00\xa0\xa4;\u200f-#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27ILS\x27\n};\n\n\n/**\n * Number formatting symbols for locale ja.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ja \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27JPY\x27\n};\n\n\n/**\n * Number formatting symbols for locale ka.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ka \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u10d0\u10e0\xa0\u10d0\u10e0\u10d8\u10e1\xa0\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27GEL\x27\n};\n\n\n/**\n * Number formatting symbols for locale kk.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_kk \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0441\u0430\u043d\xa0\u0435\u043c\u0435\u0441\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27KZT\x27\n};\n\n\n/**\n * Number formatting symbols for locale km.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_km \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa4\x27,\n  DEF_CURRENCY_CODE: \x27KHR\x27\n};\n\n\n/**\n * Number formatting symbols for locale kn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_kn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale ko.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ko \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27KRW\x27\n};\n\n\n/**\n * Number formatting symbols for locale ky.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ky \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0441\u0430\u043d\xa0\u044d\u043c\u0435\u0441\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27KGS\x27\n};\n\n\n/**\n * Number formatting symbols for locale ln.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ln \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27CDF\x27\n};\n\n\n/**\n * Number formatting symbols for locale lo.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_lo \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u0e9a\u0ecd\u0ec8\u200b\u0ec1\u0ea1\u0ec8\u0e99\u200b\u0ec2\u0e95\u200b\u0ec0\u0ea5\u0e81\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x270\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00;\xa4-#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27LAK\x27\n};\n\n\n/**\n * Number formatting symbols for locale lt.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_lt \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27\xd710^\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale lv.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_lv \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NS\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale mk.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mk \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27MKD\x27\n};\n\n\n/**\n * Number formatting symbols for locale ml.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ml \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale mn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27MNT\x27\n};\n\n\n/**\n * Number formatting symbols for locale mo.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mo \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27MDL\x27\n};\n\n\n/**\n * Number formatting symbols for locale mr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mr \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x27\u0966\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27[#E0]\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale mr_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mr_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27[#E0]\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale ms.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ms \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27MYR\x27\n};\n\n\n/**\n * Number formatting symbols for locale mt.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_mt \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale my.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_my \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x27\u1040\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27MMK\x27\n};\n\n\n/**\n * Number formatting symbols for locale my_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_my_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27MMK\x27\n};\n\n\n/**\n * Number formatting symbols for locale nb.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_nb \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27NOK\x27\n};\n\n\n/**\n * Number formatting symbols for locale ne.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ne \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x27\u0966\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27NPR\x27\n};\n\n\n/**\n * Number formatting symbols for locale ne_u_nu_latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ne_u_nu_latn \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27NPR\x27\n};\n\n\n/**\n * Number formatting symbols for locale nl.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_nl \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00;\xa4\xa0-#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale no.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_no \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27NOK\x27\n};\n\n\n/**\n * Number formatting symbols for locale no_NO.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_no_NO \x3d goog.i18n.NumberFormatSymbols_no;\n\n\n/**\n * Number formatting symbols for locale or.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_or \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale pa.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_pa \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27[#E0]\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale pl.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_pl \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27PLN\x27\n};\n\n\n/**\n * Number formatting symbols for locale pt.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_pt \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27BRL\x27\n};\n\n\n/**\n * Number formatting symbols for locale pt_BR.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_pt_BR \x3d goog.i18n.NumberFormatSymbols_pt;\n\n\n/**\n * Number formatting symbols for locale pt_PT.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_pt_PT \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale ro.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ro \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27RON\x27\n};\n\n\n/**\n * Number formatting symbols for locale ru.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ru \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u043d\u0435\xa0\u0447\u0438\u0441\u043b\u043e\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27RUB\x27\n};\n\n\n/**\n * Number formatting symbols for locale sh.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sh \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27RSD\x27\n};\n\n\n/**\n * Number formatting symbols for locale si.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_si \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x270\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27LKR\x27\n};\n\n\n/**\n * Number formatting symbols for locale sk.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sk \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27e\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale sl.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sl \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27e\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27EUR\x27\n};\n\n\n/**\n * Number formatting symbols for locale sq.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sq \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27ALL\x27\n};\n\n\n/**\n * Number formatting symbols for locale sr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sr \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27RSD\x27\n};\n\n\n/**\n * Number formatting symbols for locale sr_Latn.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sr_Latn \x3d goog.i18n.NumberFormatSymbols_sr;\n\n\n/**\n * Number formatting symbols for locale sv.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sv \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27\u2212\x27,\n  EXP_SYMBOL: \x27\xd710^\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\xa4\xa4\xa4\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0\xa0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27SEK\x27\n};\n\n\n/**\n * Number formatting symbols for locale sw.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_sw \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27TZS\x27\n};\n\n\n/**\n * Number formatting symbols for locale ta.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ta \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale te.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_te \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27INR\x27\n};\n\n\n/**\n * Number formatting symbols for locale th.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_th \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27THB\x27\n};\n\n\n/**\n * Number formatting symbols for locale tl.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_tl \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27PHP\x27\n};\n\n\n/**\n * Number formatting symbols for locale tr.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_tr \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27%#,##0\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27TRY\x27\n};\n\n\n/**\n * Number formatting symbols for locale uk.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_uk \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27\u0415\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27UAH\x27\n};\n\n\n/**\n * Number formatting symbols for locale ur.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_ur \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27\u200e+\x27,\n  MINUS_SIGN: \x27\u200e-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4\xa0#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27PKR\x27\n};\n\n\n/**\n * Number formatting symbols for locale uz.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_uz \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27\xa0\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27son\xa0emas\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27UZS\x27\n};\n\n\n/**\n * Number formatting symbols for locale vi.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_vi \x3d {\n  DECIMAL_SEP: \x27,\x27,\n  GROUP_SEP: \x27.\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27#,##0.00\xa0\xa4\x27,\n  DEF_CURRENCY_CODE: \x27VND\x27\n};\n\n\n/**\n * Number formatting symbols for locale zh.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_zh \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27CNY\x27\n};\n\n\n/**\n * Number formatting symbols for locale zh_CN.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_zh_CN \x3d goog.i18n.NumberFormatSymbols_zh;\n\n\n/**\n * Number formatting symbols for locale zh_HK.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_zh_HK \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u975e\u6578\u503c\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27HKD\x27\n};\n\n\n/**\n * Number formatting symbols for locale zh_TW.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_zh_TW \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27\u975e\u6578\u503c\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27TWD\x27\n};\n\n\n/**\n * Number formatting symbols for locale zu.\n * @enum {string}\n */\ngoog.i18n.NumberFormatSymbols_zu \x3d {\n  DECIMAL_SEP: \x27.\x27,\n  GROUP_SEP: \x27,\x27,\n  PERCENT: \x27%\x27,\n  ZERO_DIGIT: \x270\x27,\n  PLUS_SIGN: \x27+\x27,\n  MINUS_SIGN: \x27-\x27,\n  EXP_SYMBOL: \x27E\x27,\n  PERMILL: \x27\u2030\x27,\n  INFINITY: \x27\u221e\x27,\n  NAN: \x27NaN\x27,\n  DECIMAL_PATTERN: \x27#,##0.###\x27,\n  SCIENTIFIC_PATTERN: \x27#E0\x27,\n  PERCENT_PATTERN: \x27#,##0%\x27,\n  CURRENCY_PATTERN: \x27\xa4#,##0.00\x27,\n  DEF_CURRENCY_CODE: \x27ZAR\x27\n};\n\n\n/**\n * Selected number formatting symbols by locale.\n */\ngoog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en;\ngoog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en;\n\nswitch (goog.LOCALE) {\n  case \x27af\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_af;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_af;\n    break;\n  case \x27am\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_am;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_am;\n    break;\n  case \x27ar\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ar;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ar;\n    break;\n  case \x27ar_DZ\x27:\n  case \x27ar-DZ\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ar_DZ;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ar_DZ;\n    break;\n  case \x27ar_EG\x27:\n  case \x27ar-EG\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ar_EG;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ar_EG_u_nu_latn;\n    break;\n  case \x27az\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_az;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_az;\n    break;\n  case \x27be\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_be;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_be;\n    break;\n  case \x27bg\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_bg;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_bg;\n    break;\n  case \x27bn\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_bn;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_bn_u_nu_latn;\n    break;\n  case \x27br\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_br;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_br;\n    break;\n  case \x27bs\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_bs;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_bs;\n    break;\n  case \x27ca\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ca;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ca;\n    break;\n  case \x27chr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_chr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_chr;\n    break;\n  case \x27cs\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_cs;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_cs;\n    break;\n  case \x27cy\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_cy;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_cy;\n    break;\n  case \x27da\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_da;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_da;\n    break;\n  case \x27de\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_de;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_de;\n    break;\n  case \x27de_AT\x27:\n  case \x27de-AT\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_de_AT;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_de_AT;\n    break;\n  case \x27de_CH\x27:\n  case \x27de-CH\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_de_CH;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_de_CH;\n    break;\n  case \x27el\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_el;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_el;\n    break;\n  case \x27en\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en;\n    break;\n  case \x27en_AU\x27:\n  case \x27en-AU\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_AU;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_AU;\n    break;\n  case \x27en_CA\x27:\n  case \x27en-CA\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_CA;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_CA;\n    break;\n  case \x27en_GB\x27:\n  case \x27en-GB\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_GB;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_GB;\n    break;\n  case \x27en_IE\x27:\n  case \x27en-IE\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_IE;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_IE;\n    break;\n  case \x27en_IN\x27:\n  case \x27en-IN\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_IN;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_IN;\n    break;\n  case \x27en_SG\x27:\n  case \x27en-SG\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_SG;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_SG;\n    break;\n  case \x27en_US\x27:\n  case \x27en-US\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_US;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_US;\n    break;\n  case \x27en_ZA\x27:\n  case \x27en-ZA\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_en_ZA;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_en_ZA;\n    break;\n  case \x27es\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_es;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_es;\n    break;\n  case \x27es_419\x27:\n  case \x27es-419\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_es_419;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_es_419;\n    break;\n  case \x27es_ES\x27:\n  case \x27es-ES\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_es_ES;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_es_ES;\n    break;\n  case \x27es_MX\x27:\n  case \x27es-MX\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_es_MX;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_es_MX;\n    break;\n  case \x27es_US\x27:\n  case \x27es-US\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_es_US;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_es_US;\n    break;\n  case \x27et\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_et;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_et;\n    break;\n  case \x27eu\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_eu;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_eu;\n    break;\n  case \x27fa\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_fa;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_fa_u_nu_latn;\n    break;\n  case \x27fi\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_fi;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_fi;\n    break;\n  case \x27fil\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_fil;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_fil;\n    break;\n  case \x27fr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_fr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_fr;\n    break;\n  case \x27fr_CA\x27:\n  case \x27fr-CA\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_fr_CA;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_fr_CA;\n    break;\n  case \x27ga\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ga;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ga;\n    break;\n  case \x27gl\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_gl;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_gl;\n    break;\n  case \x27gsw\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_gsw;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_gsw;\n    break;\n  case \x27gu\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_gu;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_gu;\n    break;\n  case \x27haw\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_haw;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_haw;\n    break;\n  case \x27he\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_he;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_he;\n    break;\n  case \x27hi\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_hi;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_hi;\n    break;\n  case \x27hr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_hr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_hr;\n    break;\n  case \x27hu\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_hu;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_hu;\n    break;\n  case \x27hy\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_hy;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_hy;\n    break;\n  case \x27id\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_id;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_id;\n    break;\n  case \x27in\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_in;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_in;\n    break;\n  case \x27is\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_is;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_is;\n    break;\n  case \x27it\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_it;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_it;\n    break;\n  case \x27iw\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_iw;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_iw;\n    break;\n  case \x27ja\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ja;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ja;\n    break;\n  case \x27ka\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ka;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ka;\n    break;\n  case \x27kk\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_kk;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_kk;\n    break;\n  case \x27km\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_km;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_km;\n    break;\n  case \x27kn\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_kn;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_kn;\n    break;\n  case \x27ko\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ko;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ko;\n    break;\n  case \x27ky\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ky;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ky;\n    break;\n  case \x27ln\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ln;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ln;\n    break;\n  case \x27lo\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_lo;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_lo;\n    break;\n  case \x27lt\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_lt;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_lt;\n    break;\n  case \x27lv\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_lv;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_lv;\n    break;\n  case \x27mk\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_mk;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_mk;\n    break;\n  case \x27ml\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ml;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ml;\n    break;\n  case \x27mn\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_mn;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_mn;\n    break;\n  case \x27mo\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_mo;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_mo;\n    break;\n  case \x27mr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_mr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_mr_u_nu_latn;\n    break;\n  case \x27ms\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ms;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ms;\n    break;\n  case \x27mt\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_mt;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_mt;\n    break;\n  case \x27my\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_my;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_my_u_nu_latn;\n    break;\n  case \x27nb\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_nb;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_nb;\n    break;\n  case \x27ne\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ne;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ne_u_nu_latn;\n    break;\n  case \x27nl\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_nl;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_nl;\n    break;\n  case \x27no\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_no;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_no;\n    break;\n  case \x27no_NO\x27:\n  case \x27no-NO\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_no_NO;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_no_NO;\n    break;\n  case \x27or\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_or;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_or;\n    break;\n  case \x27pa\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_pa;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_pa;\n    break;\n  case \x27pl\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_pl;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_pl;\n    break;\n  case \x27pt\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_pt;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_pt;\n    break;\n  case \x27pt_BR\x27:\n  case \x27pt-BR\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_pt_BR;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_pt_BR;\n    break;\n  case \x27pt_PT\x27:\n  case \x27pt-PT\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_pt_PT;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_pt_PT;\n    break;\n  case \x27ro\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ro;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ro;\n    break;\n  case \x27ru\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ru;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ru;\n    break;\n  case \x27sh\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sh;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sh;\n    break;\n  case \x27si\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_si;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_si;\n    break;\n  case \x27sk\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sk;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sk;\n    break;\n  case \x27sl\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sl;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sl;\n    break;\n  case \x27sq\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sq;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sq;\n    break;\n  case \x27sr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sr;\n    break;\n  case \x27sr_Latn\x27:\n  case \x27sr-Latn\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sr_Latn;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sr_Latn;\n    break;\n  case \x27sv\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sv;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sv;\n    break;\n  case \x27sw\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_sw;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_sw;\n    break;\n  case \x27ta\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ta;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ta;\n    break;\n  case \x27te\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_te;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_te;\n    break;\n  case \x27th\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_th;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_th;\n    break;\n  case \x27tl\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_tl;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_tl;\n    break;\n  case \x27tr\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_tr;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_tr;\n    break;\n  case \x27uk\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_uk;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_uk;\n    break;\n  case \x27ur\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_ur;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_ur;\n    break;\n  case \x27uz\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_uz;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_uz;\n    break;\n  case \x27vi\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_vi;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_vi;\n    break;\n  case \x27zh\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_zh;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_zh;\n    break;\n  case \x27zh_CN\x27:\n  case \x27zh-CN\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_zh_CN;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_zh_CN;\n    break;\n  case \x27zh_HK\x27:\n  case \x27zh-HK\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_zh_HK;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_zh_HK;\n    break;\n  case \x27zh_TW\x27:\n  case \x27zh-TW\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_zh_TW;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_zh_TW;\n    break;\n  case \x27zu\x27:\n    goog.i18n.NumberFormatSymbols \x3d goog.i18n.NumberFormatSymbols_zu;\n    goog.i18n.NumberFormatSymbols_u_nu_latn \x3d goog.i18n.NumberFormatSymbols_zu;\n    break;\n}\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/numberformatsymbols.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/i18n/numberformat.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Number format/parse library with locale support.\n * @author shanjian@google.com (Shanjian Li)\n */\n\n\n/**\n * Namespace for locale number format functions\n */\ngoog.provide(\x27goog.i18n.NumberFormat\x27);\ngoog.provide(\x27goog.i18n.NumberFormat.CurrencyStyle\x27);\ngoog.provide(\x27goog.i18n.NumberFormat.Format\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.i18n.CompactNumberFormatSymbols\x27);\ngoog.require(\x27goog.i18n.NumberFormatSymbols\x27);\ngoog.require(\x27goog.i18n.NumberFormatSymbols_u_nu_latn\x27);\ngoog.require(\x27goog.i18n.currency\x27);\ngoog.require(\x27goog.math\x27);\ngoog.require(\x27goog.string\x27);\n\n\n\n/**\n * Constructor of NumberFormat.\n * @param {number|string} pattern The number that indicates a predefined\n *     number format pattern.\n * @param {string\x3d} opt_currency Optional international currency\n *     code. This determines the currency code/symbol used in format/parse. If\n *     not given, the currency code for the current locale will be used.\n * @param {number\x3d} opt_currencyStyle currency style, value defined in\n *     goog.i18n.NumberFormat.CurrencyStyle. If not given, the currency style\n *     for the current locale will be used.\n * @param {!Object\x3cstring, string\x3e\x3d} opt_symbols Optional number format symbols\n *     map, analogous to goog.i18n.NumberFormatSymbols. If present, this\n *     overrides the symbols from the current locale, such as the percent sign\n *     and minus sign.\n * @constructor\n */\ngoog.i18n.NumberFormat \x3d function(\n    pattern, opt_currency, opt_currencyStyle, opt_symbols) {\n  /** @const @private {?string} */\n  this.intlCurrencyCode_ \x3d opt_currency || null;\n\n  /** @const @private {number} */\n  this.currencyStyle_ \x3d\n      opt_currencyStyle || goog.i18n.NumberFormat.CurrencyStyle.LOCAL;\n\n  /** @const @private {?Object\x3cstring, string\x3e} */\n  this.overrideNumberFormatSymbols_ \x3d opt_symbols || null;\n\n  /** @private {number} */\n  this.maximumIntegerDigits_ \x3d 40;\n  /** @private {number} */\n  this.minimumIntegerDigits_ \x3d 1;\n  /** @private {number} */\n  this.significantDigits_ \x3d 0;  // invariant, \x3c\x3d maximumFractionDigits\n  /** @private {number} */\n  this.maximumFractionDigits_ \x3d 3;  // invariant, \x3e\x3d minFractionDigits\n  /** @private {number} */\n  this.minimumFractionDigits_ \x3d 0;\n  /** @private {number} */\n  this.minExponentDigits_ \x3d 0;\n  /** @private {boolean} */\n  this.useSignForPositiveExponent_ \x3d false;\n\n  /**\n   * Whether to show trailing zeros in the fraction when significantDigits_ is\n   * positive.\n   * @private {boolean}\n   */\n  this.showTrailingZeros_ \x3d false;\n\n  /** @private {string} */\n  this.positivePrefix_ \x3d \x27\x27;\n  /** @private {string} */\n  this.positiveSuffix_ \x3d \x27\x27;\n  /** @private {string} */\n  this.negativePrefix_ \x3d this.getNumberFormatSymbols_().MINUS_SIGN;\n  /** @private {string} */\n  this.negativeSuffix_ \x3d \x27\x27;\n\n  // The multiplier for use in percent, per mille, etc.\n  /** @private {number} */\n  this.multiplier_ \x3d 1;\n\n  /**\n   * True if the percent/permill sign of the negative pattern is expected.\n   * @private {boolean}\n   */\n  this.negativePercentSignExpected_ \x3d false;\n\n  /**\n   * The grouping array is used to store the values of each number group\n   * following left of the decimal place. For example, a number group with\n   * goog.i18n.NumberFormat(\x27#,##,###\x27) should have [3,2] where 2 is the\n   * repeated number group following a fixed number grouping of size 3.\n   * @private {!Array\x3cnumber\x3e}\n   */\n  this.groupingArray_ \x3d [];\n\n  /** @private {boolean} */\n  this.decimalSeparatorAlwaysShown_ \x3d false;\n  /** @private {boolean} */\n  this.useExponentialNotation_ \x3d false;\n  /** @private {goog.i18n.NumberFormat.CompactStyle} */\n  this.compactStyle_ \x3d goog.i18n.NumberFormat.CompactStyle.NONE;\n\n  /**\n   * The number to base the formatting on when using compact styles, or null\n   * if formatting should not be based on another number.\n   * @type {?number}\n   * @private\n   */\n  this.baseFormattingNumber_ \x3d null;\n\n  /** @private {string} */\n  this.pattern_;\n\n  if (typeof pattern \x3d\x3d \x27number\x27) {\n    this.applyStandardPattern_(pattern);\n  } else {\n    this.applyPattern_(pattern);\n  }\n};\n\n\n/**\n * Standard number formatting patterns.\n * @enum {number}\n */\ngoog.i18n.NumberFormat.Format \x3d {\n  DECIMAL: 1,\n  SCIENTIFIC: 2,\n  PERCENT: 3,\n  CURRENCY: 4,\n  COMPACT_SHORT: 5,\n  COMPACT_LONG: 6\n};\n\n\n/**\n * Currency styles.\n * @enum {number}\n */\ngoog.i18n.NumberFormat.CurrencyStyle \x3d {\n  LOCAL: 0,     // currency style as it is used in its circulating country.\n  PORTABLE: 1,  // currency style that differentiate it from other popular ones.\n  GLOBAL: 2     // currency style that is unique among all currencies.\n};\n\n\n/**\n * Compacting styles.\n * @enum {number}\n */\ngoog.i18n.NumberFormat.CompactStyle \x3d {\n  NONE: 0,   // Don\x27t compact.\n  SHORT: 1,  // Short compact form, such as 1.2B.\n  LONG: 2    // Long compact form, such as 1.2 billion.\n};\n\n\n/**\n * If the usage of Ascii digits should be enforced.\n * @type {boolean}\n * @private\n */\ngoog.i18n.NumberFormat.enforceAsciiDigits_ \x3d false;\n\n\n/**\n * Set if the usage of Ascii digits in formatting should be enforced.\n * NOTE: This function must be called before constructing NumberFormat.\n *\n * @param {boolean} doEnforce Boolean value about if Ascii digits should be\n *     enforced.\n */\ngoog.i18n.NumberFormat.setEnforceAsciiDigits \x3d function(doEnforce) {\n  goog.i18n.NumberFormat.enforceAsciiDigits_ \x3d doEnforce;\n};\n\n\n/**\n * Return if Ascii digits is enforced.\n * @return {boolean} If Ascii digits is enforced.\n */\ngoog.i18n.NumberFormat.isEnforceAsciiDigits \x3d function() {\n  return goog.i18n.NumberFormat.enforceAsciiDigits_;\n};\n\n\n/**\n * Returns the current NumberFormatSymbols.\n * @return {!Object}\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getNumberFormatSymbols_ \x3d function() {\n  return this.overrideNumberFormatSymbols_ ||\n      (goog.i18n.NumberFormat.enforceAsciiDigits_ ?\n           goog.i18n.NumberFormatSymbols_u_nu_latn :\n           goog.i18n.NumberFormatSymbols);\n};\n\n\n/**\n * Returns the currency code.\n * @return {string}\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getCurrencyCode_ \x3d function() {\n  return this.intlCurrencyCode_ ||\n      this.getNumberFormatSymbols_().DEF_CURRENCY_CODE;\n};\n\n\n/**\n * Sets minimum number of fraction digits.\n * @param {number} min the minimum.\n * @return {!goog.i18n.NumberFormat} Reference to this NumberFormat object.\n */\ngoog.i18n.NumberFormat.prototype.setMinimumFractionDigits \x3d function(min) {\n  if (this.significantDigits_ \x3e 0 \x26\x26 min \x3e 0) {\n    throw new Error(\n        \x27Can\\\x27t combine significant digits and minimum fraction digits\x27);\n  }\n  this.minimumFractionDigits_ \x3d min;\n  return this;\n};\n\n\n/**\n * Sets maximum number of fraction digits.\n * @param {number} max the maximum.\n * @return {!goog.i18n.NumberFormat} Reference to this NumberFormat object.\n */\ngoog.i18n.NumberFormat.prototype.setMaximumFractionDigits \x3d function(max) {\n  if (max \x3e 308) {\n    // Math.pow(10, 309) becomes Infinity which breaks the logic in this class.\n    throw new Error(\x27Unsupported maximum fraction digits: \x27 + max);\n  }\n  this.maximumFractionDigits_ \x3d max;\n  return this;\n};\n\n\n/**\n * Sets number of significant digits to show. Only fractions will be rounded.\n * Regardless of the number of significant digits set, the number of fractional\n * digits shown will always be capped by the maximum number of fractional digits\n * set on {@link #setMaximumFractionDigits}.\n * @param {number} number The number of significant digits to include.\n * @return {!goog.i18n.NumberFormat} Reference to this NumberFormat object.\n */\ngoog.i18n.NumberFormat.prototype.setSignificantDigits \x3d function(number) {\n  if (this.minimumFractionDigits_ \x3e 0 \x26\x26 number \x3e\x3d 0) {\n    throw new Error(\n        \x27Can\\\x27t combine significant digits and minimum fraction digits\x27);\n  }\n  this.significantDigits_ \x3d number;\n  return this;\n};\n\n\n/**\n * Gets number of significant digits to show. Only fractions will be rounded.\n * @return {number} The number of significant digits to include.\n */\ngoog.i18n.NumberFormat.prototype.getSignificantDigits \x3d function() {\n  return this.significantDigits_;\n};\n\n\n/**\n * Sets whether trailing fraction zeros should be shown when significantDigits_\n * is positive. If this is true and significantDigits_ is 2, 1 will be formatted\n * as \x271.0\x27.\n * @param {boolean} showTrailingZeros Whether trailing zeros should be shown.\n * @return {!goog.i18n.NumberFormat} Reference to this NumberFormat object.\n */\ngoog.i18n.NumberFormat.prototype.setShowTrailingZeros \x3d function(\n    showTrailingZeros) {\n  this.showTrailingZeros_ \x3d showTrailingZeros;\n  return this;\n};\n\n\n/**\n * Sets a number to base the formatting on when compact style formatting is\n * used. If this is null, the formatting should be based only on the number to\n * be formatting.\n *\n * This base formatting number can be used to format the target number as\n * another number would be formatted. For example, 100,000 is normally formatted\n * as \x22100K\x22 in the COMPACT_SHORT format. To instead format it as \x270.1M\x27, the\n * base number could be set to 1,000,000 in order to force all numbers to be\n * formatted in millions. Similarly, 1,000,000,000 would normally be formatted\n * as \x271B\x27 and setting the base formatting number to 1,000,000, would cause it\n * to be formatted instead as \x271,000M\x27.\n *\n * @param {?number} baseFormattingNumber The number to base formatting on, or\n * null if formatting should not be based on another number.\n * @return {!goog.i18n.NumberFormat} Reference to this NumberFormat object.\n */\ngoog.i18n.NumberFormat.prototype.setBaseFormatting \x3d function(\n    baseFormattingNumber) {\n  goog.asserts.assert(\n      goog.isNull(baseFormattingNumber) || isFinite(baseFormattingNumber));\n  this.baseFormattingNumber_ \x3d baseFormattingNumber;\n  return this;\n};\n\n\n/**\n * Gets the number on which compact formatting is currently based, or null if\n * no such number is set. See setBaseFormatting() for more information.\n * @return {?number}\n */\ngoog.i18n.NumberFormat.prototype.getBaseFormatting \x3d function() {\n  return this.baseFormattingNumber_;\n};\n\n\n/**\n * Apply provided pattern, result are stored in member variables.\n *\n * @param {string} pattern String pattern being applied.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.applyPattern_ \x3d function(pattern) {\n  this.pattern_ \x3d pattern.replace(/ /g, \x27\\u00a0\x27);\n  var pos \x3d [0];\n\n  this.positivePrefix_ \x3d this.parseAffix_(pattern, pos);\n  var trunkStart \x3d pos[0];\n  this.parseTrunk_(pattern, pos);\n  var trunkLen \x3d pos[0] - trunkStart;\n  this.positiveSuffix_ \x3d this.parseAffix_(pattern, pos);\n  if (pos[0] \x3c pattern.length \x26\x26\n      pattern.charAt(pos[0]) \x3d\x3d goog.i18n.NumberFormat.PATTERN_SEPARATOR_) {\n    pos[0]++;\n    if (this.multiplier_ !\x3d 1) this.negativePercentSignExpected_ \x3d true;\n    this.negativePrefix_ \x3d this.parseAffix_(pattern, pos);\n    // we assume this part is identical to positive part.\n    // user must make sure the pattern is correctly constructed.\n    pos[0] +\x3d trunkLen;\n    this.negativeSuffix_ \x3d this.parseAffix_(pattern, pos);\n  } else {\n    // if no negative affix specified, they share the same positive affix\n    this.negativePrefix_ +\x3d this.positivePrefix_;\n    this.negativeSuffix_ +\x3d this.positiveSuffix_;\n  }\n};\n\n\n/**\n * Apply a predefined pattern to NumberFormat object.\n * @param {number} patternType The number that indicates a predefined number\n *     format pattern.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.applyStandardPattern_ \x3d function(patternType) {\n  switch (patternType) {\n    case goog.i18n.NumberFormat.Format.DECIMAL:\n      this.applyPattern_(this.getNumberFormatSymbols_().DECIMAL_PATTERN);\n      break;\n    case goog.i18n.NumberFormat.Format.SCIENTIFIC:\n      this.applyPattern_(this.getNumberFormatSymbols_().SCIENTIFIC_PATTERN);\n      break;\n    case goog.i18n.NumberFormat.Format.PERCENT:\n      this.applyPattern_(this.getNumberFormatSymbols_().PERCENT_PATTERN);\n      break;\n    case goog.i18n.NumberFormat.Format.CURRENCY:\n      this.applyPattern_(goog.i18n.currency.adjustPrecision(\n          this.getNumberFormatSymbols_().CURRENCY_PATTERN,\n          this.getCurrencyCode_()));\n      break;\n    case goog.i18n.NumberFormat.Format.COMPACT_SHORT:\n      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.SHORT);\n      break;\n    case goog.i18n.NumberFormat.Format.COMPACT_LONG:\n      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.LONG);\n      break;\n    default:\n      throw new Error(\x27Unsupported pattern type.\x27);\n  }\n};\n\n\n/**\n * Apply a predefined pattern for shorthand formats.\n * @param {goog.i18n.NumberFormat.CompactStyle} style the compact style to\n *     set defaults for.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.applyCompactStyle_ \x3d function(style) {\n  this.compactStyle_ \x3d style;\n  this.applyPattern_(this.getNumberFormatSymbols_().DECIMAL_PATTERN);\n  this.setMinimumFractionDigits(0);\n  this.setMaximumFractionDigits(2);\n  this.setSignificantDigits(2);\n};\n\n\n/**\n * Parses text string to produce a Number.\n *\n * This method attempts to parse text starting from position \x22opt_pos\x22 if it\n * is given. Otherwise the parse will start from the beginning of the text.\n * When opt_pos presents, opt_pos will be updated to the character next to where\n * parsing stops after the call. If an error occurs, opt_pos won\x27t be updated.\n *\n * @param {string} text The string to be parsed.\n * @param {Array\x3cnumber\x3e\x3d} opt_pos Position to pass in and get back.\n * @return {number} Parsed number. This throws an error if the text cannot be\n *     parsed.\n */\ngoog.i18n.NumberFormat.prototype.parse \x3d function(text, opt_pos) {\n  var pos \x3d opt_pos || [0];\n\n  if (this.compactStyle_ !\x3d goog.i18n.NumberFormat.CompactStyle.NONE) {\n    throw new Error(\x27Parsing of compact numbers is unimplemented\x27);\n  }\n\n  var ret \x3d NaN;\n\n  // we don\x27t want to handle 2 kind of space in parsing, normalize it to nbsp\n  text \x3d text.replace(/ /g, \x27\\u00a0\x27);\n\n  var gotPositive \x3d text.indexOf(this.positivePrefix_, pos[0]) \x3d\x3d pos[0];\n  var gotNegative \x3d text.indexOf(this.negativePrefix_, pos[0]) \x3d\x3d pos[0];\n\n  // check for the longest match\n  if (gotPositive \x26\x26 gotNegative) {\n    if (this.positivePrefix_.length \x3e this.negativePrefix_.length) {\n      gotNegative \x3d false;\n    } else if (this.positivePrefix_.length \x3c this.negativePrefix_.length) {\n      gotPositive \x3d false;\n    }\n  }\n\n  if (gotPositive) {\n    pos[0] +\x3d this.positivePrefix_.length;\n  } else if (gotNegative) {\n    pos[0] +\x3d this.negativePrefix_.length;\n  }\n\n  // process digits or Inf, find decimal position\n  if (text.indexOf(this.getNumberFormatSymbols_().INFINITY, pos[0]) \x3d\x3d pos[0]) {\n    pos[0] +\x3d this.getNumberFormatSymbols_().INFINITY.length;\n    ret \x3d Infinity;\n  } else {\n    ret \x3d this.parseNumber_(text, pos);\n  }\n\n  // check for suffix\n  if (gotPositive) {\n    if (!(text.indexOf(this.positiveSuffix_, pos[0]) \x3d\x3d pos[0])) {\n      return NaN;\n    }\n    pos[0] +\x3d this.positiveSuffix_.length;\n  } else if (gotNegative) {\n    if (!(text.indexOf(this.negativeSuffix_, pos[0]) \x3d\x3d pos[0])) {\n      return NaN;\n    }\n    pos[0] +\x3d this.negativeSuffix_.length;\n  }\n\n  return gotNegative ? -ret : ret;\n};\n\n\n/**\n * This function will parse a \x22localized\x22 text into a Number. It needs to\n * handle locale specific decimal, grouping, exponent and digits.\n *\n * @param {string} text The text that need to be parsed.\n * @param {Array\x3cnumber\x3e} pos  In/out parsing position. In case of failure,\n *    pos value won\x27t be changed.\n * @return {number} Number value, or NaN if nothing can be parsed.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.parseNumber_ \x3d function(text, pos) {\n  var sawDecimal \x3d false;\n  var sawExponent \x3d false;\n  var sawDigit \x3d false;\n  var exponentPos \x3d -1;\n  var scale \x3d 1;\n  var decimal \x3d this.getNumberFormatSymbols_().DECIMAL_SEP;\n  var grouping \x3d this.getNumberFormatSymbols_().GROUP_SEP;\n  var exponentChar \x3d this.getNumberFormatSymbols_().EXP_SYMBOL;\n\n  if (this.compactStyle_ !\x3d goog.i18n.NumberFormat.CompactStyle.NONE) {\n    throw new Error(\x27Parsing of compact style numbers is not implemented\x27);\n  }\n\n  var normalizedText \x3d \x27\x27;\n  for (; pos[0] \x3c text.length; pos[0]++) {\n    var ch \x3d text.charAt(pos[0]);\n    var digit \x3d this.getDigit_(ch);\n    if (digit \x3e\x3d 0 \x26\x26 digit \x3c\x3d 9) {\n      normalizedText +\x3d digit;\n      sawDigit \x3d true;\n    } else if (ch \x3d\x3d decimal.charAt(0)) {\n      if (sawDecimal || sawExponent) {\n        break;\n      }\n      normalizedText +\x3d \x27.\x27;\n      sawDecimal \x3d true;\n    } else if (\n        ch \x3d\x3d grouping.charAt(0) \x26\x26\n        (\x27\\u00a0\x27 !\x3d grouping.charAt(0) ||\n         pos[0] + 1 \x3c text.length \x26\x26\n             this.getDigit_(text.charAt(pos[0] + 1)) \x3e\x3d 0)) {\n      // Got a grouping character here. When grouping character is nbsp, need\n      // to make sure the character following it is a digit.\n      if (sawDecimal || sawExponent) {\n        break;\n      }\n      continue;\n    } else if (ch \x3d\x3d exponentChar.charAt(0)) {\n      if (sawExponent) {\n        break;\n      }\n      normalizedText +\x3d \x27E\x27;\n      sawExponent \x3d true;\n      exponentPos \x3d pos[0];\n    } else if (ch \x3d\x3d \x27+\x27 || ch \x3d\x3d \x27-\x27) {\n      // Stop parsing if a \x27+\x27 or \x27-\x27 sign is found after digits have been found\n      // but it\x27s not located right after an exponent sign.\n      if (sawDigit \x26\x26 exponentPos !\x3d pos[0] - 1) {\n        break;\n      }\n      normalizedText +\x3d ch;\n    } else if (\n        this.multiplier_ \x3d\x3d 1 \x26\x26\n        ch \x3d\x3d this.getNumberFormatSymbols_().PERCENT.charAt(0)) {\n      // Parse the percent character as part of the number only when it\x27s\n      // not already included in the pattern.\n      if (scale !\x3d 1) {\n        break;\n      }\n      scale \x3d 100;\n      if (sawDigit) {\n        pos[0]++;  // eat this character if parse end here\n        break;\n      }\n    } else if (\n        this.multiplier_ \x3d\x3d 1 \x26\x26\n        ch \x3d\x3d this.getNumberFormatSymbols_().PERMILL.charAt(0)) {\n      // Parse the permill character as part of the number only when it\x27s\n      // not already included in the pattern.\n      if (scale !\x3d 1) {\n        break;\n      }\n      scale \x3d 1000;\n      if (sawDigit) {\n        pos[0]++;  // eat this character if parse end here\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  // Scale the number when the percent/permill character was included in\n  // the pattern.\n  if (this.multiplier_ !\x3d 1) {\n    scale \x3d this.multiplier_;\n  }\n\n  return parseFloat(normalizedText) / scale;\n};\n\n\n/**\n * Formats a Number to produce a string.\n *\n * @param {number} number The Number to be formatted.\n * @return {string} The formatted number string.\n */\ngoog.i18n.NumberFormat.prototype.format \x3d function(number) {\n  if (isNaN(number)) {\n    return this.getNumberFormatSymbols_().NAN;\n  }\n\n  var parts \x3d [];\n  var baseFormattingNumber \x3d goog.isNull(this.baseFormattingNumber_) ?\n      number :\n      this.baseFormattingNumber_;\n  var unit \x3d this.getUnitAfterRounding_(baseFormattingNumber, number);\n  number /\x3d Math.pow(10, unit.divisorBase);\n\n  parts.push(unit.prefix);\n\n  // in icu code, it is commented that certain computation need to keep the\n  // negative sign for 0.\n  var isNegative \x3d number \x3c 0.0 || number \x3d\x3d 0.0 \x26\x26 1 / number \x3c 0.0;\n\n  parts.push(isNegative ? this.negativePrefix_ : this.positivePrefix_);\n\n  if (!isFinite(number)) {\n    parts.push(this.getNumberFormatSymbols_().INFINITY);\n  } else {\n    // convert number to non-negative value\n    number *\x3d isNegative ? -1 : 1;\n\n    number *\x3d this.multiplier_;\n    this.useExponentialNotation_ ?\n        this.subformatExponential_(number, parts) :\n        this.subformatFixed_(number, this.minimumIntegerDigits_, parts);\n  }\n\n  parts.push(isNegative ? this.negativeSuffix_ : this.positiveSuffix_);\n  parts.push(unit.suffix);\n\n  return parts.join(\x27\x27);\n};\n\n\n/**\n * Round a number into an integer and fractional part\n * based on the rounding rules for this NumberFormat.\n * @param {number} number The number to round.\n * @return {{intValue: number, fracValue: number}} The integer and fractional\n *     part after rounding.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.roundNumber_ \x3d function(number) {\n  var power \x3d Math.pow(10, this.maximumFractionDigits_);\n  var shiftedNumber \x3d this.significantDigits_ \x3c\x3d 0 ?\n      Math.round(number * power) :\n      Math.round(\n          this.roundToSignificantDigits_(\n              number * power, this.significantDigits_,\n              this.maximumFractionDigits_));\n\n  var intValue, fracValue;\n  if (isFinite(shiftedNumber)) {\n    intValue \x3d Math.floor(shiftedNumber / power);\n    fracValue \x3d Math.floor(shiftedNumber - intValue * power);\n  } else {\n    intValue \x3d number;\n    fracValue \x3d 0;\n  }\n  return {intValue: intValue, fracValue: fracValue};\n};\n\n\n/**\n * Formats a number with the appropriate groupings when there are repeating\n * digits present. Repeating digits exists when the length of the digits left\n * of the decimal place exceeds the number of non-repeating digits.\n *\n * Formats a number by iterating through the integer number (intPart) from the\n * most left of the decimal place by inserting the appropriate number grouping\n * separator for the repeating digits until all of the repeating digits is\n * iterated. Then iterate through the non-repeating digits by inserting the\n * appropriate number grouping separator until all the non-repeating digits\n * is iterated through.\n *\n * In the number grouping concept, anything left of the decimal\n * place is followed by non-repeating digits and then repeating digits. If the\n * pattern is #,##,###, then we first (from the left of the decimal place) have\n * a non-repeating digit of size 3 followed by repeating digits of size 2\n * separated by a thousand separator. If the length of the digits are six or\n * more, there may be repeating digits required. For example, the value of\n * 12345678 would format as 1,23,45,678 where the repeating digit is length 2.\n *\n * @param {!Array\x3cstring\x3e} parts An array to build the \x27parts\x27 of the formatted\n *  number including the values and separators.\n * @param {number} zeroCode The value of the zero digit whether or not\n *  goog.i18n.NumberFormat.enforceAsciiDigits_ is enforced.\n * @param {string} intPart The integer representation of the number to be\n *  formatted and referenced.\n * @param {!Array\x3cnumber\x3e} groupingArray The array of numbers to determine the\n *  grouping of repeated and non-repeated digits.\n * @param {number} repeatedDigitLen The length of the repeated digits left of\n *  the non-repeating digits left of the decimal.\n * @return {!Array\x3cstring\x3e} Returns the resulting parts variable containing\n *  how numbers are to be grouped and appear.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.formatNumberGroupingRepeatingDigitsParts_ \x3d\n    function(parts, zeroCode, intPart, groupingArray, repeatedDigitLen) {\n  // Keep track of how much has been completed on the non repeated groups\n  var nonRepeatedGroupCompleteCount \x3d 0;\n  var currentGroupSizeIndex \x3d 0;\n  var currentGroupSize \x3d 0;\n\n  var grouping \x3d this.getNumberFormatSymbols_().GROUP_SEP;\n  var digitLen \x3d intPart.length;\n\n  // There are repeating digits and non-repeating digits\n  for (var i \x3d 0; i \x3c digitLen; i++) {\n    parts.push(String.fromCharCode(zeroCode + Number(intPart.charAt(i)) * 1));\n    if (digitLen - i \x3e 1) {\n      currentGroupSize \x3d groupingArray[currentGroupSizeIndex];\n      if (i \x3c repeatedDigitLen) {\n        // Process the left side (the repeated number groups)\n        var repeatedDigitIndex \x3d repeatedDigitLen - i;\n        // Edge case if there\x27s a number grouping asking for \x221\x22 group at\n        // a time; otherwise, if the remainder is 1, there\x27s the separator\n        if (currentGroupSize \x3d\x3d\x3d 1 ||\n            (currentGroupSize \x3e 0 \x26\x26\n             (repeatedDigitIndex % currentGroupSize) \x3d\x3d\x3d 1)) {\n          parts.push(grouping);\n        }\n      } else if (currentGroupSizeIndex \x3c groupingArray.length) {\n        // Process the right side (the non-repeated fixed number groups)\n        if (i \x3d\x3d\x3d repeatedDigitLen) {\n          // Increase the group index because a separator\n          // has previously added in the earlier logic\n          currentGroupSizeIndex +\x3d 1;\n        } else if (\n            currentGroupSize \x3d\x3d\x3d\n            i - repeatedDigitLen - nonRepeatedGroupCompleteCount + 1) {\n          // Otherwise, just iterate to the right side and\n          // add a separator once the length matches to the expected\n          parts.push(grouping);\n          // Keep track of what has been completed on the right\n          nonRepeatedGroupCompleteCount +\x3d currentGroupSize;\n          currentGroupSizeIndex +\x3d 1;  // Get to the next number grouping\n        }\n      }\n    }\n  }\n  return parts;\n};\n\n\n/**\n * Formats a number with the appropriate groupings when there are no repeating\n * digits present. Non-repeating digits exists when the length of the digits\n * left of the decimal place is equal or lesser than the length of\n * non-repeating digits.\n *\n * Formats a number by iterating through the integer number (intPart) from the\n * right most non-repeating number group of the decimal place. For each group,\n * inserting the appropriate number grouping separator for the non-repeating\n * digits until the number is completely iterated.\n *\n * In the number grouping concept, anything left of the decimal\n * place is followed by non-repeating digits and then repeating digits. If the\n * pattern is #,##,###, then we first (from the left of the decimal place) have\n * a non-repeating digit of size 3 followed by repeating digits of size 2\n * separated by a thousand separator. If the length of the digits are five or\n * less, there won\x27t be any repeating digits required. For example, the value\n * of 12345 would be formatted as 12,345 where the non-repeating digit is of\n * length 3.\n *\n * @param {!Array\x3cstring\x3e} parts An array to build the \x27parts\x27 of the formatted\n *  number including the values and separators.\n * @param {number} zeroCode The value of the zero digit whether or not\n *  goog.i18n.NumberFormat.enforceAsciiDigits_ is enforced.\n * @param {string} intPart The integer representation of the number to be\n *  formatted and referenced.\n * @param {!Array\x3cnumber\x3e} groupingArray The array of numbers to determine the\n *  grouping of repeated and non-repeated digits.\n * @return {!Array\x3cstring\x3e} Returns the resulting parts variable containing\n *  how numbers are to be grouped and appear.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.formatNumberGroupingNonRepeatingDigitsParts_ \x3d\n    function(parts, zeroCode, intPart, groupingArray) {\n  // Keep track of how much has been completed on the non repeated groups\n  var grouping \x3d this.getNumberFormatSymbols_().GROUP_SEP;\n  var currentGroupSizeIndex;\n  var currentGroupSize \x3d 0;\n  var digitLenLeft \x3d intPart.length;\n  var rightToLeftParts \x3d [];\n\n  // Start from the right most non-repeating group and work inwards\n  for (currentGroupSizeIndex \x3d groupingArray.length - 1;\n       currentGroupSizeIndex \x3e\x3d 0 \x26\x26 digitLenLeft \x3e 0;\n       currentGroupSizeIndex--) {\n    currentGroupSize \x3d groupingArray[currentGroupSizeIndex];\n    // Iterate from the right most digit\n    for (var rightDigitIndex \x3d 0; rightDigitIndex \x3c currentGroupSize \x26\x26\n         ((digitLenLeft - rightDigitIndex - 1) \x3e\x3d 0);\n         rightDigitIndex++) {\n      rightToLeftParts.push(\n          String.fromCharCode(\n              zeroCode +\n              Number(intPart.charAt(digitLenLeft - rightDigitIndex - 1)) * 1));\n    }\n    // Update the number of digits left\n    digitLenLeft -\x3d currentGroupSize;\n    if (digitLenLeft \x3e 0) {\n      rightToLeftParts.push(grouping);\n    }\n  }\n  // Reverse and push onto the remaining parts\n  parts.push.apply(parts, rightToLeftParts.reverse());\n\n  return parts;\n};\n\n\n/**\n * Formats a Number in fraction format.\n *\n * @param {number} number\n * @param {number} minIntDigits Minimum integer digits.\n * @param {Array\x3cstring\x3e} parts\n *     This array holds the pieces of formatted string.\n *     This function will add its formatted pieces to the array.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.subformatFixed_ \x3d function(\n    number, minIntDigits, parts) {\n  if (this.minimumFractionDigits_ \x3e this.maximumFractionDigits_) {\n    throw new Error(\x27Min value must be less than max value\x27);\n  }\n\n  if (!parts) {\n    parts \x3d [];\n  }\n\n  var rounded \x3d this.roundNumber_(number);\n  var intValue \x3d rounded.intValue;\n  var fracValue \x3d rounded.fracValue;\n\n  var numIntDigits \x3d (intValue \x3d\x3d 0) ? 0 : this.intLog10_(intValue) + 1;\n  var fractionPresent \x3d this.minimumFractionDigits_ \x3e 0 || fracValue \x3e 0 ||\n      (this.showTrailingZeros_ \x26\x26 numIntDigits \x3c this.significantDigits_);\n  var minimumFractionDigits \x3d this.minimumFractionDigits_;\n  if (fractionPresent) {\n    if (this.showTrailingZeros_ \x26\x26 this.significantDigits_ \x3e 0) {\n      minimumFractionDigits \x3d this.significantDigits_ - numIntDigits;\n    } else {\n      minimumFractionDigits \x3d this.minimumFractionDigits_;\n    }\n  }\n\n  var intPart \x3d \x27\x27;\n  var translatableInt \x3d intValue;\n  while (translatableInt \x3e 1E20) {\n    // here it goes beyond double precision, add \x270\x27 make it look better\n    intPart \x3d \x270\x27 + intPart;\n    translatableInt \x3d Math.round(translatableInt / 10);\n  }\n  intPart \x3d translatableInt + intPart;\n\n  var decimal \x3d this.getNumberFormatSymbols_().DECIMAL_SEP;\n  var zeroCode \x3d this.getNumberFormatSymbols_().ZERO_DIGIT.charCodeAt(0);\n  var digitLen \x3d intPart.length;\n  var nonRepeatedGroupCount \x3d 0;\n\n  if (intValue \x3e 0 || minIntDigits \x3e 0) {\n    for (var i \x3d digitLen; i \x3c minIntDigits; i++) {\n      parts.push(String.fromCharCode(zeroCode));\n    }\n\n    // If there\x27s more than 1 number grouping,\n    // figure out the length of the non-repeated groupings (on the right)\n    if (this.groupingArray_.length \x3e\x3d 2) {\n      for (var j \x3d 1; j \x3c this.groupingArray_.length; j++) {\n        nonRepeatedGroupCount +\x3d this.groupingArray_[j];\n      }\n    }\n\n    // Anything left of the fixed number grouping is repeated,\n    // figure out the length of repeated groupings (on the left)\n    var repeatedDigitLen \x3d digitLen - nonRepeatedGroupCount;\n    if (repeatedDigitLen \x3e 0) {\n      // There are repeating digits and non-repeating digits\n      parts \x3d this.formatNumberGroupingRepeatingDigitsParts_(\n          parts, zeroCode, intPart, this.groupingArray_, repeatedDigitLen);\n    } else {\n      // There are no repeating digits and only non-repeating digits\n      parts \x3d this.formatNumberGroupingNonRepeatingDigitsParts_(\n          parts, zeroCode, intPart, this.groupingArray_);\n    }\n  } else if (!fractionPresent) {\n    // If there is no fraction present, and we haven\x27t printed any\n    // integer digits, then print a zero.\n    parts.push(String.fromCharCode(zeroCode));\n  }\n\n  // Output the decimal separator if we always do so.\n  if (this.decimalSeparatorAlwaysShown_ || fractionPresent) {\n    parts.push(decimal);\n  }\n\n  var fracPart \x3d String(fracValue);\n  // Handle case where fracPart is in scientific notation.\n  var fracPartSplit \x3d fracPart.split(\x27e+\x27);\n  if (fracPartSplit.length \x3d\x3d 2) {\n    // Only keep significant digits.\n    var floatFrac \x3d parseFloat(fracPartSplit[0]);\n    fracPart \x3d String(\n        this.roundToSignificantDigits_(floatFrac, this.significantDigits_, 1));\n    fracPart \x3d fracPart.replace(\x27.\x27, \x27\x27);\n    // Append zeroes based on the exponent.\n    var exp \x3d parseInt(fracPartSplit[1], 10);\n    fracPart +\x3d goog.string.repeat(\x270\x27, exp - fracPart.length + 1);\n  }\n\n  // Add Math.pow(10, this.maximumFractionDigits) to fracPart. Uses string ops\n  // to avoid complexity with scientific notation and overflows.\n  if (this.maximumFractionDigits_ + 1 \x3e fracPart.length) {\n    var zeroesToAdd \x3d this.maximumFractionDigits_ - fracPart.length;\n    fracPart \x3d \x271\x27 + goog.string.repeat(\x270\x27, zeroesToAdd) + fracPart;\n  }\n\n  var fracLen \x3d fracPart.length;\n  while (fracPart.charAt(fracLen - 1) \x3d\x3d \x270\x27 \x26\x26\n         fracLen \x3e minimumFractionDigits + 1) {\n    fracLen--;\n  }\n\n  for (var i \x3d 1; i \x3c fracLen; i++) {\n    parts.push(String.fromCharCode(zeroCode + Number(fracPart.charAt(i)) * 1));\n  }\n};\n\n\n/**\n * Formats exponent part of a Number.\n *\n * @param {number} exponent Exponential value.\n * @param {Array\x3cstring\x3e} parts The array that holds the pieces of formatted\n *     string. This function will append more formatted pieces to the array.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.addExponentPart_ \x3d function(exponent, parts) {\n  parts.push(this.getNumberFormatSymbols_().EXP_SYMBOL);\n\n  if (exponent \x3c 0) {\n    exponent \x3d -exponent;\n    parts.push(this.getNumberFormatSymbols_().MINUS_SIGN);\n  } else if (this.useSignForPositiveExponent_) {\n    parts.push(this.getNumberFormatSymbols_().PLUS_SIGN);\n  }\n\n  var exponentDigits \x3d \x27\x27 + exponent;\n  var zeroChar \x3d this.getNumberFormatSymbols_().ZERO_DIGIT;\n  for (var i \x3d exponentDigits.length; i \x3c this.minExponentDigits_; i++) {\n    parts.push(zeroChar);\n  }\n  parts.push(exponentDigits);\n};\n\n/**\n * Returns the mantissa for the given value and its exponent.\n *\n * @param {number} value\n * @param {number} exponent\n * @return {number}\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getMantissa_ \x3d function(value, exponent) {\n  var divisor \x3d Math.pow(10, exponent);\n  if (isFinite(divisor) \x26\x26 divisor !\x3d\x3d 0) {\n    return value / divisor;\n  } else {\n    // If the exponent is too big pow returns 0. In such a case we calculate\n    // half of the divisor and apply it twice.\n    divisor \x3d Math.pow(10, Math.floor(exponent / 2));\n    var result \x3d value / divisor / divisor;\n    if (exponent % 2 \x3d\x3d 1) {  // Correcting for odd exponents.\n      if (exponent \x3e 0) {\n        result /\x3d 10;\n      } else {\n        result *\x3d 10;\n      }\n    }\n    return result;\n  }\n};\n\n/**\n * Formats Number in exponential format.\n *\n * @param {number} number Value need to be formatted.\n * @param {Array\x3cstring\x3e} parts The array that holds the pieces of formatted\n *     string. This function will append more formatted pieces to the array.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.subformatExponential_ \x3d function(\n    number, parts) {\n  if (number \x3d\x3d 0.0) {\n    this.subformatFixed_(number, this.minimumIntegerDigits_, parts);\n    this.addExponentPart_(0, parts);\n    return;\n  }\n\n  var exponent \x3d goog.math.safeFloor(Math.log(number) / Math.log(10));\n  number \x3d this.getMantissa_(number, exponent);\n\n  var minIntDigits \x3d this.minimumIntegerDigits_;\n  if (this.maximumIntegerDigits_ \x3e 1 \x26\x26\n      this.maximumIntegerDigits_ \x3e this.minimumIntegerDigits_) {\n    // A repeating range is defined; adjust to it as follows.\n    // If repeat \x3d\x3d 3, we have 6,5,4\x3d\x3e3; 3,2,1\x3d\x3e0; 0,-1,-2\x3d\x3e-3;\n    // -3,-4,-5\x3d\x3e-6, etc. This takes into account that the\n    // exponent we have here is off by one from what we expect;\n    // it is for the format 0.MMMMMx10^n.\n    while ((exponent % this.maximumIntegerDigits_) !\x3d 0) {\n      number *\x3d 10;\n      exponent--;\n    }\n    minIntDigits \x3d 1;\n  } else {\n    // No repeating range is defined; use minimum integer digits.\n    if (this.minimumIntegerDigits_ \x3c 1) {\n      exponent++;\n      number /\x3d 10;\n    } else {\n      exponent -\x3d this.minimumIntegerDigits_ - 1;\n      number *\x3d Math.pow(10, this.minimumIntegerDigits_ - 1);\n    }\n  }\n  this.subformatFixed_(number, minIntDigits, parts);\n  this.addExponentPart_(exponent, parts);\n};\n\n\n/**\n * Returns the digit value of current character. The character could be either\n * \x270\x27 to \x279\x27, or a locale specific digit.\n *\n * @param {string} ch Character that represents a digit.\n * @return {number} The digit value, or -1 on error.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getDigit_ \x3d function(ch) {\n  var code \x3d ch.charCodeAt(0);\n  // between \x270\x27 to \x279\x27\n  if (48 \x3c\x3d code \x26\x26 code \x3c 58) {\n    return code - 48;\n  } else {\n    var zeroCode \x3d this.getNumberFormatSymbols_().ZERO_DIGIT.charCodeAt(0);\n    return zeroCode \x3c\x3d code \x26\x26 code \x3c zeroCode + 10 ? code - zeroCode : -1;\n  }\n};\n\n\n// ----------------------------------------------------------------------\n// CONSTANTS\n// ----------------------------------------------------------------------\n// Constants for characters used in programmatic (unlocalized) patterns.\n/**\n * A zero digit character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_ \x3d \x270\x27;\n\n\n/**\n * A grouping separator character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_ \x3d \x27,\x27;\n\n\n/**\n * A decimal separator character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_ \x3d \x27.\x27;\n\n\n/**\n * A per mille character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_PER_MILLE_ \x3d \x27\\u2030\x27;\n\n\n/**\n * A percent character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_PERCENT_ \x3d \x27%\x27;\n\n\n/**\n * A digit character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_DIGIT_ \x3d \x27#\x27;\n\n\n/**\n * A separator character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_SEPARATOR_ \x3d \x27;\x27;\n\n\n/**\n * An exponent character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_EXPONENT_ \x3d \x27E\x27;\n\n\n/**\n * A plus character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_PLUS_ \x3d \x27+\x27;\n\n\n/**\n * A generic currency sign character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_ \x3d \x27\\u00A4\x27;\n\n\n/**\n * A quote character.\n * @type {string}\n * @private\n */\ngoog.i18n.NumberFormat.QUOTE_ \x3d \x27\\\x27\x27;\n\n\n/**\n * Parses affix part of pattern.\n *\n * @param {string} pattern Pattern string that need to be parsed.\n * @param {Array\x3cnumber\x3e} pos One element position array to set and receive\n *     parsing position.\n *\n * @return {string} Affix received from parsing.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.parseAffix_ \x3d function(pattern, pos) {\n  var affix \x3d \x27\x27;\n  var inQuote \x3d false;\n  var len \x3d pattern.length;\n\n  for (; pos[0] \x3c len; pos[0]++) {\n    var ch \x3d pattern.charAt(pos[0]);\n    if (ch \x3d\x3d goog.i18n.NumberFormat.QUOTE_) {\n      if (pos[0] + 1 \x3c len \x26\x26\n          pattern.charAt(pos[0] + 1) \x3d\x3d goog.i18n.NumberFormat.QUOTE_) {\n        pos[0]++;\n        affix +\x3d \x27\\\x27\x27;  // \x27don\x27\x27t\x27\n      } else {\n        inQuote \x3d !inQuote;\n      }\n      continue;\n    }\n\n    if (inQuote) {\n      affix +\x3d ch;\n    } else {\n      switch (ch) {\n        case goog.i18n.NumberFormat.PATTERN_DIGIT_:\n        case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:\n        case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:\n        case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:\n        case goog.i18n.NumberFormat.PATTERN_SEPARATOR_:\n          return affix;\n        case goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_:\n          if ((pos[0] + 1) \x3c len \x26\x26\n              pattern.charAt(pos[0] + 1) \x3d\x3d\n                  goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_) {\n            pos[0]++;\n            affix +\x3d this.getCurrencyCode_();\n          } else {\n            switch (this.currencyStyle_) {\n              case goog.i18n.NumberFormat.CurrencyStyle.LOCAL:\n                affix +\x3d goog.i18n.currency.getLocalCurrencySign(\n                    this.getCurrencyCode_());\n                break;\n              case goog.i18n.NumberFormat.CurrencyStyle.GLOBAL:\n                affix +\x3d goog.i18n.currency.getGlobalCurrencySign(\n                    this.getCurrencyCode_());\n                break;\n              case goog.i18n.NumberFormat.CurrencyStyle.PORTABLE:\n                affix +\x3d goog.i18n.currency.getPortableCurrencySign(\n                    this.getCurrencyCode_());\n                break;\n              default:\n                break;\n            }\n          }\n          break;\n        case goog.i18n.NumberFormat.PATTERN_PERCENT_:\n          if (!this.negativePercentSignExpected_ \x26\x26 this.multiplier_ !\x3d 1) {\n            throw new Error(\x27Too many percent/permill\x27);\n          } else if (\n              this.negativePercentSignExpected_ \x26\x26 this.multiplier_ !\x3d 100) {\n            throw new Error(\x27Inconsistent use of percent/permill characters\x27);\n          }\n          this.multiplier_ \x3d 100;\n          this.negativePercentSignExpected_ \x3d false;\n          affix +\x3d this.getNumberFormatSymbols_().PERCENT;\n          break;\n        case goog.i18n.NumberFormat.PATTERN_PER_MILLE_:\n          if (!this.negativePercentSignExpected_ \x26\x26 this.multiplier_ !\x3d 1) {\n            throw new Error(\x27Too many percent/permill\x27);\n          } else if (\n              this.negativePercentSignExpected_ \x26\x26 this.multiplier_ !\x3d 1000) {\n            throw new Error(\x27Inconsistent use of percent/permill characters\x27);\n          }\n          this.multiplier_ \x3d 1000;\n          this.negativePercentSignExpected_ \x3d false;\n          affix +\x3d this.getNumberFormatSymbols_().PERMILL;\n          break;\n        default:\n          affix +\x3d ch;\n      }\n    }\n  }\n\n  return affix;\n};\n\n\n/**\n * Parses the trunk part of a pattern.\n *\n * @param {string} pattern Pattern string that need to be parsed.\n * @param {Array\x3cnumber\x3e} pos One element position array to set and receive\n *     parsing position.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.parseTrunk_ \x3d function(pattern, pos) {\n  var decimalPos \x3d -1;\n  var digitLeftCount \x3d 0;\n  var zeroDigitCount \x3d 0;\n  var digitRightCount \x3d 0;\n  var groupingCount \x3d -1;\n  var len \x3d pattern.length;\n  for (var loop \x3d true; pos[0] \x3c len \x26\x26 loop; pos[0]++) {\n    var ch \x3d pattern.charAt(pos[0]);\n    switch (ch) {\n      case goog.i18n.NumberFormat.PATTERN_DIGIT_:\n        if (zeroDigitCount \x3e 0) {\n          digitRightCount++;\n        } else {\n          digitLeftCount++;\n        }\n        if (groupingCount \x3e\x3d 0 \x26\x26 decimalPos \x3c 0) {\n          groupingCount++;\n        }\n        break;\n      case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:\n        if (digitRightCount \x3e 0) {\n          throw new Error(\x27Unexpected \x220\x22 in pattern \x22\x27 + pattern + \x27\x22\x27);\n        }\n        zeroDigitCount++;\n        if (groupingCount \x3e\x3d 0 \x26\x26 decimalPos \x3c 0) {\n          groupingCount++;\n        }\n        break;\n      case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:\n        if (groupingCount \x3e 0) {\n          this.groupingArray_.push(groupingCount);\n        }\n        groupingCount \x3d 0;\n        break;\n      case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:\n        if (decimalPos \x3e\x3d 0) {\n          throw new Error(\n              \x27Multiple decimal separators in pattern \x22\x27 + pattern + \x27\x22\x27);\n        }\n        decimalPos \x3d digitLeftCount + zeroDigitCount + digitRightCount;\n        break;\n      case goog.i18n.NumberFormat.PATTERN_EXPONENT_:\n        if (this.useExponentialNotation_) {\n          throw new Error(\n              \x27Multiple exponential symbols in pattern \x22\x27 + pattern + \x27\x22\x27);\n        }\n        this.useExponentialNotation_ \x3d true;\n        this.minExponentDigits_ \x3d 0;\n\n        // exponent pattern can have a optional \x27+\x27.\n        if ((pos[0] + 1) \x3c len \x26\x26\n            pattern.charAt(pos[0] + 1) \x3d\x3d\n                goog.i18n.NumberFormat.PATTERN_PLUS_) {\n          pos[0]++;\n          this.useSignForPositiveExponent_ \x3d true;\n        }\n\n        // Use lookahead to parse out the exponential part\n        // of the pattern, then jump into phase 2.\n        while ((pos[0] + 1) \x3c len \x26\x26\n               pattern.charAt(pos[0] + 1) \x3d\x3d\n                   goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_) {\n          pos[0]++;\n          this.minExponentDigits_++;\n        }\n\n        if ((digitLeftCount + zeroDigitCount) \x3c 1 ||\n            this.minExponentDigits_ \x3c 1) {\n          throw new Error(\x27Malformed exponential pattern \x22\x27 + pattern + \x27\x22\x27);\n        }\n        loop \x3d false;\n        break;\n      default:\n        pos[0]--;\n        loop \x3d false;\n        break;\n    }\n  }\n\n  if (zeroDigitCount \x3d\x3d 0 \x26\x26 digitLeftCount \x3e 0 \x26\x26 decimalPos \x3e\x3d 0) {\n    // Handle \x27###.###\x27 and \x27###.\x27 and \x27.###\x27\n    var n \x3d decimalPos;\n    if (n \x3d\x3d 0) {  // Handle \x27.###\x27\n      n++;\n    }\n    digitRightCount \x3d digitLeftCount - n;\n    digitLeftCount \x3d n - 1;\n    zeroDigitCount \x3d 1;\n  }\n\n  // Do syntax checking on the digits.\n  if (decimalPos \x3c 0 \x26\x26 digitRightCount \x3e 0 ||\n      decimalPos \x3e\x3d 0 \x26\x26 (decimalPos \x3c digitLeftCount ||\n                          decimalPos \x3e digitLeftCount + zeroDigitCount) ||\n      groupingCount \x3d\x3d 0) {\n    throw new Error(\x27Malformed pattern \x22\x27 + pattern + \x27\x22\x27);\n  }\n  var totalDigits \x3d digitLeftCount + zeroDigitCount + digitRightCount;\n\n  this.maximumFractionDigits_ \x3d decimalPos \x3e\x3d 0 ? totalDigits - decimalPos : 0;\n  if (decimalPos \x3e\x3d 0) {\n    this.minimumFractionDigits_ \x3d digitLeftCount + zeroDigitCount - decimalPos;\n    if (this.minimumFractionDigits_ \x3c 0) {\n      this.minimumFractionDigits_ \x3d 0;\n    }\n  }\n\n  // The effectiveDecimalPos is the position the decimal is at or would be at\n  // if there is no decimal. Note that if decimalPos\x3c0, then digitTotalCount \x3d\x3d\n  // digitLeftCount + zeroDigitCount.\n  var effectiveDecimalPos \x3d decimalPos \x3e\x3d 0 ? decimalPos : totalDigits;\n  this.minimumIntegerDigits_ \x3d effectiveDecimalPos - digitLeftCount;\n  if (this.useExponentialNotation_) {\n    this.maximumIntegerDigits_ \x3d digitLeftCount + this.minimumIntegerDigits_;\n\n    // in exponential display, we need to at least show something.\n    if (this.maximumFractionDigits_ \x3d\x3d 0 \x26\x26 this.minimumIntegerDigits_ \x3d\x3d 0) {\n      this.minimumIntegerDigits_ \x3d 1;\n    }\n  }\n\n  // Add another number grouping at the end\n  this.groupingArray_.push(Math.max(0, groupingCount));\n  this.decimalSeparatorAlwaysShown_ \x3d\n      decimalPos \x3d\x3d 0 || decimalPos \x3d\x3d totalDigits;\n};\n\n\n/**\n * Alias for the compact format \x27unit\x27 object.\n * @typedef {{\n *     prefix: string,\n *     suffix: string,\n *     divisorBase: number\n * }}\n */\ngoog.i18n.NumberFormat.CompactNumberUnit;\n\n\n/**\n * The empty unit, corresponding to a base of 0.\n * @private {!goog.i18n.NumberFormat.CompactNumberUnit}\n */\ngoog.i18n.NumberFormat.NULL_UNIT_ \x3d {\n  prefix: \x27\x27,\n  suffix: \x27\x27,\n  divisorBase: 0\n};\n\n\n/**\n * Get compact unit for a certain number of digits\n *\n * @param {number} base The number of digits to get the unit for.\n * @param {string} plurality The plurality of the number.\n * @return {!goog.i18n.NumberFormat.CompactNumberUnit} The compact unit.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getUnitFor_ \x3d function(base, plurality) {\n  var table \x3d this.compactStyle_ \x3d\x3d goog.i18n.NumberFormat.CompactStyle.SHORT ?\n      goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN :\n      goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_LONG_PATTERN;\n\n  if (!goog.isDefAndNotNull(table)) {\n    table \x3d goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN;\n  }\n\n  if (base \x3c 3) {\n    return goog.i18n.NumberFormat.NULL_UNIT_;\n  } else {\n    base \x3d Math.min(14, base);\n    var patterns \x3d table[Math.pow(10, base)];\n    var previousNonNullBase \x3d base - 1;\n    while (!patterns \x26\x26 previousNonNullBase \x3e\x3d 3) {\n      patterns \x3d table[Math.pow(10, previousNonNullBase)];\n      previousNonNullBase--;\n    }\n    if (!patterns) {\n      return goog.i18n.NumberFormat.NULL_UNIT_;\n    }\n\n    var pattern \x3d patterns[plurality];\n    if (!pattern || pattern \x3d\x3d \x270\x27) {\n      return goog.i18n.NumberFormat.NULL_UNIT_;\n    }\n\n    var parts \x3d /([^0]*)(0+)(.*)/.exec(pattern);\n    if (!parts) {\n      return goog.i18n.NumberFormat.NULL_UNIT_;\n    }\n\n    return {\n      prefix: parts[1],\n      suffix: parts[3],\n      divisorBase: (previousNonNullBase + 1) - (parts[2].length - 1)\n    };\n  }\n};\n\n\n/**\n * Get the compact unit divisor, accounting for rounding of the quantity.\n *\n * @param {number} formattingNumber The number to base the formatting on. The\n *     unit will be calculated from this number.\n * @param {number} pluralityNumber The number to use for calculating the\n *     plurality.\n * @return {!goog.i18n.NumberFormat.CompactNumberUnit} The unit after rounding.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.getUnitAfterRounding_ \x3d function(\n    formattingNumber, pluralityNumber) {\n  if (this.compactStyle_ \x3d\x3d goog.i18n.NumberFormat.CompactStyle.NONE) {\n    return goog.i18n.NumberFormat.NULL_UNIT_;\n  }\n\n  formattingNumber \x3d Math.abs(formattingNumber);\n  pluralityNumber \x3d Math.abs(pluralityNumber);\n\n  var initialPlurality \x3d this.pluralForm_(formattingNumber);\n  // Compute the exponent from the formattingNumber, to compute the unit.\n  var base \x3d formattingNumber \x3c\x3d 1 ? 0 : this.intLog10_(formattingNumber);\n  var initialDivisor \x3d this.getUnitFor_(base, initialPlurality).divisorBase;\n  // Round both numbers based on the unit used.\n  var pluralityAttempt \x3d pluralityNumber / Math.pow(10, initialDivisor);\n  var pluralityRounded \x3d this.roundNumber_(pluralityAttempt);\n  var formattingAttempt \x3d formattingNumber / Math.pow(10, initialDivisor);\n  var formattingRounded \x3d this.roundNumber_(formattingAttempt);\n  // Compute the plurality of the pluralityNumber when formatted using the name\n  // units as the formattingNumber.\n  var finalPlurality \x3d\n      this.pluralForm_(pluralityRounded.intValue + pluralityRounded.fracValue);\n  // Get the final unit, using the rounded formatting number to get the correct\n  // unit, and the plurality computed from the pluralityNumber.\n  return this.getUnitFor_(\n      initialDivisor + this.intLog10_(formattingRounded.intValue),\n      finalPlurality);\n};\n\n\n/**\n * Get the integer base 10 logarithm of a number.\n *\n * @param {number} number The number to log.\n * @return {number} The lowest integer n such that 10^n \x3e\x3d number.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.intLog10_ \x3d function(number) {\n  // Handle infinity.\n  if (!isFinite(number)) {\n    return number \x3e 0 ? number : 0;\n  }\n  // Turns out Math.log(1000000)/Math.LN10 is strictly less than 6.\n  var i \x3d 0;\n  while ((number /\x3d 10) \x3e\x3d 1) i++;\n  return i;\n};\n\n\n/**\n * Round to a certain number of significant digits.\n *\n * @param {number} number The number to round.\n * @param {number} significantDigits The number of significant digits\n *     to round to.\n * @param {number} scale Treat number as fixed point times 10^scale.\n * @return {number} The rounded number.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.roundToSignificantDigits_ \x3d function(\n    number, significantDigits, scale) {\n  if (!number) return number;\n\n  var digits \x3d this.intLog10_(number);\n  var magnitude \x3d significantDigits - digits - 1;\n\n  // Only round fraction, not (potentially shifted) integers.\n  if (magnitude \x3c -scale) {\n    var point \x3d Math.pow(10, scale);\n    return Math.round(number / point) * point;\n  }\n\n  var power \x3d Math.pow(10, magnitude);\n  var shifted \x3d Math.round(number * power);\n  return shifted / power;\n};\n\n\n/**\n * Get the plural form of a number.\n * @param {number} quantity The quantity to find plurality of.\n * @return {string} One of \x27zero\x27, \x27one\x27, \x27two\x27, \x27few\x27, \x27many\x27, \x27other\x27.\n * @private\n */\ngoog.i18n.NumberFormat.prototype.pluralForm_ \x3d function(quantity) {\n  /* TODO: Implement */\n  return \x27other\x27;\n};\n\n\n/**\n * Checks if the currency symbol comes before the value ($12) or after (12$)\n * Handy for applications that need to have separate UI fields for the currency\n * value and symbol, especially for input: Price: [USD] [123.45]\n * The currency symbol might be a combo box, or a label.\n *\n * @return {boolean} true if currency is before value.\n */\ngoog.i18n.NumberFormat.prototype.isCurrencyCodeBeforeValue \x3d function() {\n  var posCurrSymbol \x3d this.pattern_.indexOf(\x27\\u00A4\x27);  // \x27\xa4\x27 Currency sign\n  var posPound \x3d this.pattern_.indexOf(\x27#\x27);\n  var posZero \x3d this.pattern_.indexOf(\x270\x27);\n\n  // posCurrValue is the first \x27#\x27 or \x270\x27 found.\n  // If none of them is found (not possible, but still),\n  // the result is true (postCurrSymbol \x3c MAX_VALUE)\n  // That is OK, matches the en_US and ROOT locales.\n  var posCurrValue \x3d Number.MAX_VALUE;\n  if (posPound \x3e\x3d 0 \x26\x26 posPound \x3c posCurrValue) {\n    posCurrValue \x3d posPound;\n  }\n  if (posZero \x3e\x3d 0 \x26\x26 posZero \x3c posCurrValue) {\n    posCurrValue \x3d posZero;\n  }\n\n  // No need to test, it is guaranteed that both these symbols exist.\n  // If not, we have bigger problems than this.\n  return posCurrSymbol \x3c posCurrValue;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/numberformat.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy79');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy79');

}catch(e){_DumpException(e)}
/* _Module_:sy7a */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sy7a');
var $googDebugFname="javascript/closure/i18n/pluralrules.js";
eval("// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Plural rules.\n *\n * MOE:begin_intracomment_strip\n * This file is autogenerated by go/pluralsgenerator.\n * MOE:end_intracomment_strip\n *\n * File generated from CLDR ver. 33\n *\n * Before check in, this file could have been manually edited. This is to\n * incorporate changes before we could fix CLDR. All manual modification must be\n * documented in this section, and should be removed after those changes land to\n * CLDR.\n */\n\n// clang-format off\n\ngoog.provide(\x27goog.i18n.pluralRules\x27);\n/**\n * Plural pattern keyword\n * @enum {string}\n */\ngoog.i18n.pluralRules.Keyword \x3d {\n  ZERO: \x27zero\x27,\n  ONE: \x27one\x27,\n  TWO: \x27two\x27,\n  FEW: \x27few\x27,\n  MANY: \x27many\x27,\n  OTHER: \x27other\x27\n};\n\n\n/**\n * Plural selection function.\n *\n * The actual implementation is locale-dependent.\n *\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {goog.i18n.pluralRules.Keyword}\n */\ngoog.i18n.pluralRules.select;\n\n/**\n * Default Plural select rule.\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {goog.i18n.pluralRules.Keyword} Default value.\n * @private\n */\ngoog.i18n.pluralRules.defaultSelect_ \x3d function(n, opt_precision) {\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Returns the fractional part of a number (3.1416 \x3d\x3e 1416)\n * @param {number} n The count of items.\n * @return {number} The fractional part.\n * @private\n */\ngoog.i18n.pluralRules.decimals_ \x3d function(n) {\n  var str \x3d n + \x27\x27;\n  var result \x3d str.indexOf(\x27.\x27);\n  return (result \x3d\x3d -1) ? 0 : str.length - result - 1;\n};\n\n/**\n * Calculates v and f as per CLDR plural rules.\n * The short names for parameters / return match the CLDR syntax and UTS #35\n *     (https://unicode.org/reports/tr35/tr35-numbers.html#Plural_rules_syntax)\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {{v:number, f:number}} The v and f.\n * @private\n */\ngoog.i18n.pluralRules.get_vf_ \x3d function(n, opt_precision) {\n  var DEFAULT_DIGITS \x3d 3;\n\n  if (undefined \x3d\x3d\x3d opt_precision) {\n    var v \x3d Math.min(goog.i18n.pluralRules.decimals_(n), DEFAULT_DIGITS);\n  } else {\n    var v \x3d opt_precision;\n  }\n\n  var base \x3d Math.pow(10, v);\n  var f \x3d ((n * base) | 0) % base;\n\n  return {v: v, f: f};\n};\n\n/**\n * Calculates w and t as per CLDR plural rules.\n * The short names for parameters / return match the CLDR syntax and UTS #35\n *     (https://unicode.org/reports/tr35/tr35-numbers.html#Plural_rules_syntax)\n * @param {number} v Calculated previously.\n * @param {number} f Calculated previously.\n * @return {{w:number, t:number}} The w and t.\n * @private\n */\ngoog.i18n.pluralRules.get_wt_ \x3d function(v, f) {\n  if (f \x3d\x3d\x3d 0) {\n    return {w: 0, t: 0};\n  }\n\n  while ((f % 10) \x3d\x3d\x3d 0) {\n    f /\x3d 10;\n    v--;\n  }\n\n  return {w: v, t: f};\n};\n\n/**\n * Plural select rules for fil locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.filSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 (i \x3d\x3d 1 || i \x3d\x3d 2 || i \x3d\x3d 3) || vf.v \x3d\x3d 0 \x26\x26 i % 10 !\x3d 4 \x26\x26 i % 10 !\x3d 6 \x26\x26 i % 10 !\x3d 9 || vf.v !\x3d 0 \x26\x26 vf.f % 10 !\x3d 4 \x26\x26 vf.f % 10 !\x3d 6 \x26\x26 vf.f % 10 !\x3d 9) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for br locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.brSelect_ \x3d function(n, opt_precision) {\n  if (n % 10 \x3d\x3d 1 \x26\x26 n % 100 !\x3d 11 \x26\x26 n % 100 !\x3d 71 \x26\x26 n % 100 !\x3d 91) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n % 10 \x3d\x3d 2 \x26\x26 n % 100 !\x3d 12 \x26\x26 n % 100 !\x3d 72 \x26\x26 n % 100 !\x3d 92) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if ((n % 10 \x3e\x3d 3 \x26\x26 n % 10 \x3c\x3d 4 || n % 10 \x3d\x3d 9) \x26\x26 (n % 100 \x3c 10 || n % 100 \x3e 19) \x26\x26 (n % 100 \x3c 70 || n % 100 \x3e 79) \x26\x26 (n % 100 \x3c 90 || n % 100 \x3e 99)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n !\x3d 0 \x26\x26 n % 1000000 \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for sr locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.srSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 1 \x26\x26 i % 100 !\x3d 11 || vf.f % 10 \x3d\x3d 1 \x26\x26 vf.f % 100 !\x3d 11) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3e\x3d 2 \x26\x26 i % 10 \x3c\x3d 4 \x26\x26 (i % 100 \x3c 12 || i % 100 \x3e 14) || vf.f % 10 \x3e\x3d 2 \x26\x26 vf.f % 10 \x3c\x3d 4 \x26\x26 (vf.f % 100 \x3c 12 || vf.f % 100 \x3e 14)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ro locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.roSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (i \x3d\x3d 1 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v !\x3d 0 || n \x3d\x3d 0 || n !\x3d 1 \x26\x26 n % 100 \x3e\x3d 1 \x26\x26 n % 100 \x3c\x3d 19) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for hi locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.hiSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i \x3d\x3d 0 || n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for fr locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.frSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i \x3d\x3d 0 || i \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for pt locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.ptSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i \x3e\x3d 0 \x26\x26 i \x3c\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for cs locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.csSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (i \x3d\x3d 1 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (i \x3e\x3d 2 \x26\x26 i \x3c\x3d 4 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (vf.v !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for pl locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.plSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (i \x3d\x3d 1 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3e\x3d 2 \x26\x26 i % 10 \x3c\x3d 4 \x26\x26 (i % 100 \x3c 12 || i % 100 \x3e 14)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i !\x3d 1 \x26\x26 i % 10 \x3e\x3d 0 \x26\x26 i % 10 \x3c\x3d 1 || vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3e\x3d 5 \x26\x26 i % 10 \x3c\x3d 9 || vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3e\x3d 12 \x26\x26 i % 100 \x3c\x3d 14) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for shi locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.shiSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i \x3d\x3d 0 || n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3e\x3d 2 \x26\x26 n \x3c\x3d 10) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for lv locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.lvSelect_ \x3d function(n, opt_precision) {\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (n % 10 \x3d\x3d 0 || n % 100 \x3e\x3d 11 \x26\x26 n % 100 \x3c\x3d 19 || vf.v \x3d\x3d 2 \x26\x26 vf.f % 100 \x3e\x3d 11 \x26\x26 vf.f % 100 \x3c\x3d 19) {\n    return goog.i18n.pluralRules.Keyword.ZERO;\n  }\n  if (n % 10 \x3d\x3d 1 \x26\x26 n % 100 !\x3d 11 || vf.v \x3d\x3d 2 \x26\x26 vf.f % 10 \x3d\x3d 1 \x26\x26 vf.f % 100 !\x3d 11 || vf.v !\x3d 2 \x26\x26 vf.f % 10 \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for iu locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.iuSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for he locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.heSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (i \x3d\x3d 1 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (i \x3d\x3d 2 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 (n \x3c 0 || n \x3e 10) \x26\x26 n % 10 \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for mt locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.mtSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 0 || n % 100 \x3e\x3d 2 \x26\x26 n % 100 \x3c\x3d 10) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n % 100 \x3e\x3d 11 \x26\x26 n % 100 \x3c\x3d 19) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for si locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.siSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if ((n \x3d\x3d 0 || n \x3d\x3d 1) || i \x3d\x3d 0 \x26\x26 vf.f \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for cy locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.cySelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ZERO;\n  }\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 3) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n \x3d\x3d 6) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for da locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.daSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  var wt \x3d goog.i18n.pluralRules.get_wt_(vf.v, vf.f);\n  if (n \x3d\x3d 1 || wt.t !\x3d 0 \x26\x26 (i \x3d\x3d 0 || i \x3d\x3d 1)) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ru locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.ruSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 1 \x26\x26 i % 100 !\x3d 11) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3e\x3d 2 \x26\x26 i % 10 \x3c\x3d 4 \x26\x26 (i % 100 \x3c 12 || i % 100 \x3e 14)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 0 || vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3e\x3d 5 \x26\x26 i % 10 \x3c\x3d 9 || vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3e\x3d 11 \x26\x26 i % 100 \x3c\x3d 14) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for gv locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.gvSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 (i % 100 \x3d\x3d 0 || i % 100 \x3d\x3d 20 || i % 100 \x3d\x3d 40 || i % 100 \x3d\x3d 60 || i % 100 \x3d\x3d 80)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (vf.v !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for be locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.beSelect_ \x3d function(n, opt_precision) {\n  if (n % 10 \x3d\x3d 1 \x26\x26 n % 100 !\x3d 11) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n % 10 \x3e\x3d 2 \x26\x26 n % 10 \x3c\x3d 4 \x26\x26 (n % 100 \x3c 12 || n % 100 \x3e 14)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n % 10 \x3d\x3d 0 || n % 10 \x3e\x3d 5 \x26\x26 n % 10 \x3c\x3d 9 || n % 100 \x3e\x3d 11 \x26\x26 n % 100 \x3c\x3d 14) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ga locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.gaSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (n \x3e\x3d 3 \x26\x26 n \x3c\x3d 6) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n \x3e\x3d 7 \x26\x26 n \x3c\x3d 10) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for es locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.esSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for dsb locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.dsbSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3d\x3d 1 || vf.f % 100 \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3d\x3d 2 || vf.f % 100 \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3e\x3d 3 \x26\x26 i % 100 \x3c\x3d 4 || vf.f % 100 \x3e\x3d 3 \x26\x26 vf.f % 100 \x3c\x3d 4) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for lag locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.lagSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (n \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ZERO;\n  }\n  if ((i \x3d\x3d 0 || i \x3d\x3d 1) \x26\x26 n !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for mk locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.mkSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 1 \x26\x26 i % 100 !\x3d 11 || vf.f % 10 \x3d\x3d 1 \x26\x26 vf.f % 100 !\x3d 11) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for is locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.isSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  var wt \x3d goog.i18n.pluralRules.get_wt_(vf.v, vf.f);\n  if (wt.t \x3d\x3d 0 \x26\x26 i % 10 \x3d\x3d 1 \x26\x26 i % 100 !\x3d 11 || wt.t !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ksh locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.kshSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ZERO;\n  }\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ar locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.arSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ZERO;\n  }\n  if (n \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (n % 100 \x3e\x3d 3 \x26\x26 n % 100 \x3c\x3d 10) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (n % 100 \x3e\x3d 11 \x26\x26 n % 100 \x3c\x3d 99) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for gd locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.gdSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1 || n \x3d\x3d 11) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2 || n \x3d\x3d 12) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (n \x3e\x3d 3 \x26\x26 n \x3c\x3d 10 || n \x3e\x3d 13 \x26\x26 n \x3c\x3d 19) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for sl locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.slSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3d\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3d\x3d 2) {\n    return goog.i18n.pluralRules.Keyword.TWO;\n  }\n  if (vf.v \x3d\x3d 0 \x26\x26 i % 100 \x3e\x3d 3 \x26\x26 i % 100 \x3c\x3d 4 || vf.v !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for lt locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.ltSelect_ \x3d function(n, opt_precision) {\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (n % 10 \x3d\x3d 1 \x26\x26 (n % 100 \x3c 11 || n % 100 \x3e 19)) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  if (n % 10 \x3e\x3d 2 \x26\x26 n % 10 \x3c\x3d 9 \x26\x26 (n % 100 \x3c 11 || n % 100 \x3e 19)) {\n    return goog.i18n.pluralRules.Keyword.FEW;\n  }\n  if (vf.f !\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.MANY;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for tzm locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.tzmSelect_ \x3d function(n, opt_precision) {\n  if (n \x3e\x3d 0 \x26\x26 n \x3c\x3d 1 || n \x3e\x3d 11 \x26\x26 n \x3c\x3d 99) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for en locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.enSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  var vf \x3d goog.i18n.pluralRules.get_vf_(n, opt_precision);\n  if (i \x3d\x3d 1 \x26\x26 vf.v \x3d\x3d 0) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Plural select rules for ak locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.pluralRules.Keyword} Locale-specific plural value.\n * @private\n */\ngoog.i18n.pluralRules.akSelect_ \x3d function(n, opt_precision) {\n  if (n \x3e\x3d 0 \x26\x26 n \x3c\x3d 1) {\n    return goog.i18n.pluralRules.Keyword.ONE;\n  }\n  return goog.i18n.pluralRules.Keyword.OTHER;\n};\n\n/**\n * Selected Plural rules by locale.\n */\ngoog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\nif (goog.LOCALE \x3d\x3d \x27af\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27am\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.arSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar_DZ\x27 || goog.LOCALE \x3d\x3d \x27ar-DZ\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.arSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar_EG\x27 || goog.LOCALE \x3d\x3d \x27ar-EG\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.arSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27az\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27be\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.beSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bg\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bn\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27br\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.brSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bs\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.srSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ca\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27chr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27cs\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.csSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27cy\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.cySelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27da\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.daSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de_AT\x27 || goog.LOCALE \x3d\x3d \x27de-AT\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de_CH\x27 || goog.LOCALE \x3d\x3d \x27de-CH\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27el\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_AU\x27 || goog.LOCALE \x3d\x3d \x27en-AU\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_CA\x27 || goog.LOCALE \x3d\x3d \x27en-CA\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_GB\x27 || goog.LOCALE \x3d\x3d \x27en-GB\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_IE\x27 || goog.LOCALE \x3d\x3d \x27en-IE\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_IN\x27 || goog.LOCALE \x3d\x3d \x27en-IN\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_SG\x27 || goog.LOCALE \x3d\x3d \x27en-SG\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_US\x27 || goog.LOCALE \x3d\x3d \x27en-US\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_ZA\x27 || goog.LOCALE \x3d\x3d \x27en-ZA\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_419\x27 || goog.LOCALE \x3d\x3d \x27es-419\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_ES\x27 || goog.LOCALE \x3d\x3d \x27es-ES\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_MX\x27 || goog.LOCALE \x3d\x3d \x27es-MX\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_US\x27 || goog.LOCALE \x3d\x3d \x27es-US\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27et\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27eu\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fa\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fi\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fil\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.filSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fr_CA\x27 || goog.LOCALE \x3d\x3d \x27fr-CA\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ga\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.gaSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gl\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gsw\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gu\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27haw\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27he\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.heSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hi\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.srSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hu\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hy\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27id\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27in\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27is\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.isSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27it\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27iw\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.heSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ja\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ka\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27kk\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27km\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27kn\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ko\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ky\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ln\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.akSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lo\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lt\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.ltSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lv\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.lvSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mk\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.mkSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ml\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mn\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mo\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.roSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ms\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mt\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.mtSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27my\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27nb\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ne\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27nl\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27no\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27no_NO\x27 || goog.LOCALE \x3d\x3d \x27no-NO\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27or\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pa\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.akSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pl\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.plSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.ptSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt_BR\x27 || goog.LOCALE \x3d\x3d \x27pt-BR\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.ptSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt_PT\x27 || goog.LOCALE \x3d\x3d \x27pt-PT\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ro\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.roSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ru\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.ruSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sh\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.srSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27si\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.siSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sk\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.csSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sl\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.slSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sq\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.srSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sr_Latn\x27 || goog.LOCALE \x3d\x3d \x27sr-Latn\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.srSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sv\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sw\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ta\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27te\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27th\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27tl\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.filSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27tr\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27uk\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.ruSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ur\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27uz\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.esSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27vi\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_CN\x27 || goog.LOCALE \x3d\x3d \x27zh-CN\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_HK\x27 || goog.LOCALE \x3d\x3d \x27zh-HK\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_TW\x27 || goog.LOCALE \x3d\x3d \x27zh-TW\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zu\x27) {\n  goog.i18n.pluralRules.select \x3d goog.i18n.pluralRules.hiSelect_;\n}\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/pluralrules.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sy7a');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sy7a');

}catch(e){_DumpException(e)}
/* _Module_:syfh */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syfh');
var $googDebugFname="javascript/closure/i18n/ordinalrules.js";
eval("// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Ordinal rules.\n *\n * MOE:begin_intracomment_strip\n * This file is autogenerated by go/pluralsgenerator.\n * MOE:end_intracomment_strip\n *\n * File generated from CLDR ver. 33\n *\n * Before check in, this file could have been manually edited. This is to\n * incorporate changes before we could fix CLDR. All manual modification must be\n * documented in this section, and should be removed after those changes land to\n * CLDR.\n */\n\n// clang-format off\n\ngoog.provide(\x27goog.i18n.ordinalRules\x27);\n/**\n * Ordinal pattern keyword\n * @enum {string}\n */\ngoog.i18n.ordinalRules.Keyword \x3d {\n  ZERO: \x27zero\x27,\n  ONE: \x27one\x27,\n  TWO: \x27two\x27,\n  FEW: \x27few\x27,\n  MANY: \x27many\x27,\n  OTHER: \x27other\x27\n};\n\n\n/**\n * Ordinal selection function.\n *\n * The actual implementation is locale-dependent.\n *\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {goog.i18n.ordinalRules.Keyword}\n */\ngoog.i18n.ordinalRules.select;\n\n/**\n * Default Ordinal select rule.\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {goog.i18n.ordinalRules.Keyword} Default value.\n * @private\n */\ngoog.i18n.ordinalRules.defaultSelect_ \x3d function(n, opt_precision) {\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Returns the fractional part of a number (3.1416 \x3d\x3e 1416)\n * @param {number} n The count of items.\n * @return {number} The fractional part.\n * @private\n */\ngoog.i18n.ordinalRules.decimals_ \x3d function(n) {\n  var str \x3d n + \x27\x27;\n  var result \x3d str.indexOf(\x27.\x27);\n  return (result \x3d\x3d -1) ? 0 : str.length - result - 1;\n};\n\n/**\n * Calculates v and f as per CLDR plural rules.\n * The short names for parameters / return match the CLDR syntax and UTS #35\n *     (https://unicode.org/reports/tr35/tr35-numbers.html#Plural_rules_syntax)\n * @param {number} n The count of items.\n * @param {number\x3d} opt_precision optional, precision.\n * @return {{v:number, f:number}} The v and f.\n * @private\n */\ngoog.i18n.ordinalRules.get_vf_ \x3d function(n, opt_precision) {\n  var DEFAULT_DIGITS \x3d 3;\n\n  if (undefined \x3d\x3d\x3d opt_precision) {\n    var v \x3d Math.min(goog.i18n.ordinalRules.decimals_(n), DEFAULT_DIGITS);\n  } else {\n    var v \x3d opt_precision;\n  }\n\n  var base \x3d Math.pow(10, v);\n  var f \x3d ((n * base) | 0) % base;\n\n  return {v: v, f: f};\n};\n\n/**\n * Calculates w and t as per CLDR plural rules.\n * The short names for parameters / return match the CLDR syntax and UTS #35\n *     (https://unicode.org/reports/tr35/tr35-numbers.html#Plural_rules_syntax)\n * @param {number} v Calculated previously.\n * @param {number} f Calculated previously.\n * @return {{w:number, t:number}} The w and t.\n * @private\n */\ngoog.i18n.ordinalRules.get_wt_ \x3d function(v, f) {\n  if (f \x3d\x3d\x3d 0) {\n    return {w: 0, t: 0};\n  }\n\n  while ((f % 10) \x3d\x3d\x3d 0) {\n    f /\x3d 10;\n    v--;\n  }\n\n  return {w: v, t: f};\n};\n\n/**\n * Ordinal select rules for cy locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.cySelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 0 || n \x3d\x3d 7 || n \x3d\x3d 8 || n \x3d\x3d 9) {\n    return goog.i18n.ordinalRules.Keyword.ZERO;\n  }\n  if (n \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 3 || n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  if (n \x3d\x3d 5 || n \x3d\x3d 6) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for en locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.enSelect_ \x3d function(n, opt_precision) {\n  if (n % 10 \x3d\x3d 1 \x26\x26 n % 100 !\x3d 11) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n % 10 \x3d\x3d 2 \x26\x26 n % 100 !\x3d 12) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n % 10 \x3d\x3d 3 \x26\x26 n % 100 !\x3d 13) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for uk locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.ukSelect_ \x3d function(n, opt_precision) {\n  if (n % 10 \x3d\x3d 3 \x26\x26 n % 100 !\x3d 13) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for it locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.itSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 11 || n \x3d\x3d 8 || n \x3d\x3d 80 || n \x3d\x3d 800) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for ne locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.neSelect_ \x3d function(n, opt_precision) {\n  if (n \x3e\x3d 1 \x26\x26 n \x3c\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for or locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.orSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1 || n \x3d\x3d 5 || n \x3e\x3d 7 \x26\x26 n \x3c\x3d 9) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2 || n \x3d\x3d 3) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  if (n \x3d\x3d 6) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for be locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.beSelect_ \x3d function(n, opt_precision) {\n  if ((n % 10 \x3d\x3d 2 || n % 10 \x3d\x3d 3) \x26\x26 n % 100 !\x3d 12 \x26\x26 n % 100 !\x3d 13) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for az locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.azSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if ((i % 10 \x3d\x3d 1 || i % 10 \x3d\x3d 2 || i % 10 \x3d\x3d 5 || i % 10 \x3d\x3d 7 || i % 10 \x3d\x3d 8) || (i % 100 \x3d\x3d 20 || i % 100 \x3d\x3d 50 || i % 100 \x3d\x3d 70 || i % 100 \x3d\x3d 80)) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if ((i % 10 \x3d\x3d 3 || i % 10 \x3d\x3d 4) || (i % 1000 \x3d\x3d 100 || i % 1000 \x3d\x3d 200 || i % 1000 \x3d\x3d 300 || i % 1000 \x3d\x3d 400 || i % 1000 \x3d\x3d 500 || i % 1000 \x3d\x3d 600 || i % 1000 \x3d\x3d 700 || i % 1000 \x3d\x3d 800 || i % 1000 \x3d\x3d 900)) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  if (i \x3d\x3d 0 || i % 10 \x3d\x3d 6 || (i % 100 \x3d\x3d 40 || i % 100 \x3d\x3d 60 || i % 100 \x3d\x3d 90)) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for ka locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.kaSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (i \x3d\x3d 0 || (i % 100 \x3e\x3d 2 \x26\x26 i % 100 \x3c\x3d 20 || i % 100 \x3d\x3d 40 || i % 100 \x3d\x3d 60 || i % 100 \x3d\x3d 80)) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for mr locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.mrSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2 || n \x3d\x3d 3) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for sv locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.svSelect_ \x3d function(n, opt_precision) {\n  if ((n % 10 \x3d\x3d 1 || n % 10 \x3d\x3d 2) \x26\x26 n % 100 !\x3d 11 \x26\x26 n % 100 !\x3d 12) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for kk locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.kkSelect_ \x3d function(n, opt_precision) {\n  if (n % 10 \x3d\x3d 6 || n % 10 \x3d\x3d 9 || n % 10 \x3d\x3d 0 \x26\x26 n !\x3d 0) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for mk locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.mkSelect_ \x3d function(n, opt_precision) {\n  var i \x3d n | 0;\n  if (i % 10 \x3d\x3d 1 \x26\x26 i % 100 !\x3d 11) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (i % 10 \x3d\x3d 2 \x26\x26 i % 100 !\x3d 12) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if ((i % 10 \x3d\x3d 7 || i % 10 \x3d\x3d 8) \x26\x26 i % 100 !\x3d 17 \x26\x26 i % 100 !\x3d 18) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for hu locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.huSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1 || n \x3d\x3d 5) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for fr locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.frSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for sq locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.sqSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n % 10 \x3d\x3d 4 \x26\x26 n % 100 !\x3d 14) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for ca locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.caSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1 || n \x3d\x3d 3) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for gu locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.guSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2 || n \x3d\x3d 3) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  if (n \x3d\x3d 6) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for tk locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.tkSelect_ \x3d function(n, opt_precision) {\n  if ((n % 10 \x3d\x3d 6 || n % 10 \x3d\x3d 9) || n \x3d\x3d 10) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Ordinal select rules for as locale\n *\n * @param {number} n  The count of items.\n * @param {number\x3d} opt_precision Precision for number formatting, if not default.\n * @return {goog.i18n.ordinalRules.Keyword} Locale-specific ordinal value.\n * @private\n */\ngoog.i18n.ordinalRules.asSelect_ \x3d function(n, opt_precision) {\n  if (n \x3d\x3d 1 || n \x3d\x3d 5 || n \x3d\x3d 7 || n \x3d\x3d 8 || n \x3d\x3d 9 || n \x3d\x3d 10) {\n    return goog.i18n.ordinalRules.Keyword.ONE;\n  }\n  if (n \x3d\x3d 2 || n \x3d\x3d 3) {\n    return goog.i18n.ordinalRules.Keyword.TWO;\n  }\n  if (n \x3d\x3d 4) {\n    return goog.i18n.ordinalRules.Keyword.FEW;\n  }\n  if (n \x3d\x3d 6) {\n    return goog.i18n.ordinalRules.Keyword.MANY;\n  }\n  return goog.i18n.ordinalRules.Keyword.OTHER;\n};\n\n/**\n * Selected Ordinal rules by locale.\n */\ngoog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\nif (goog.LOCALE \x3d\x3d \x27af\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27am\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar_DZ\x27 || goog.LOCALE \x3d\x3d \x27ar-DZ\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ar_EG\x27 || goog.LOCALE \x3d\x3d \x27ar-EG\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27az\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.azSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27be\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.beSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bg\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bn\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.asSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27br\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27bs\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ca\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.caSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27chr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27cs\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27cy\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.cySelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27da\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de_AT\x27 || goog.LOCALE \x3d\x3d \x27de-AT\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27de_CH\x27 || goog.LOCALE \x3d\x3d \x27de-CH\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27el\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_AU\x27 || goog.LOCALE \x3d\x3d \x27en-AU\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_CA\x27 || goog.LOCALE \x3d\x3d \x27en-CA\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_GB\x27 || goog.LOCALE \x3d\x3d \x27en-GB\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_IE\x27 || goog.LOCALE \x3d\x3d \x27en-IE\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_IN\x27 || goog.LOCALE \x3d\x3d \x27en-IN\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_SG\x27 || goog.LOCALE \x3d\x3d \x27en-SG\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_US\x27 || goog.LOCALE \x3d\x3d \x27en-US\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27en_ZA\x27 || goog.LOCALE \x3d\x3d \x27en-ZA\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.enSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_419\x27 || goog.LOCALE \x3d\x3d \x27es-419\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_ES\x27 || goog.LOCALE \x3d\x3d \x27es-ES\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_MX\x27 || goog.LOCALE \x3d\x3d \x27es-MX\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27es_US\x27 || goog.LOCALE \x3d\x3d \x27es-US\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27et\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27eu\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fa\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fi\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fil\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27fr_CA\x27 || goog.LOCALE \x3d\x3d \x27fr-CA\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ga\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gl\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gsw\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27gu\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.guSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27haw\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27he\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hi\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.guSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hu\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.huSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27hy\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27id\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27in\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27is\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27it\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.itSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27iw\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ja\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ka\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.kaSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27kk\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.kkSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27km\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27kn\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ko\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ky\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ln\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lo\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lt\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27lv\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mk\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.mkSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ml\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mn\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mo\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.mrSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ms\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27mt\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27my\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27nb\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ne\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.neSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27nl\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27no\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27no_NO\x27 || goog.LOCALE \x3d\x3d \x27no-NO\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27or\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.orSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pa\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pl\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt_BR\x27 || goog.LOCALE \x3d\x3d \x27pt-BR\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27pt_PT\x27 || goog.LOCALE \x3d\x3d \x27pt-PT\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ro\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ru\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sh\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27si\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sk\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sl\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sq\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.sqSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sr_Latn\x27 || goog.LOCALE \x3d\x3d \x27sr-Latn\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sv\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.svSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27sw\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ta\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27te\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27th\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27tl\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27tr\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27uk\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.ukSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27ur\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27uz\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27vi\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.frSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_CN\x27 || goog.LOCALE \x3d\x3d \x27zh-CN\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_HK\x27 || goog.LOCALE \x3d\x3d \x27zh-HK\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zh_TW\x27 || goog.LOCALE \x3d\x3d \x27zh-TW\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\nif (goog.LOCALE \x3d\x3d \x27zu\x27) {\n  goog.i18n.ordinalRules.select \x3d goog.i18n.ordinalRules.defaultSelect_;\n}\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/ordinalrules.js\n");

$googDebugFname=undefined;
var $googDebugFname="javascript/closure/i18n/messageformat.js";
eval("// Copyright 2010 The Closure Library Authors. All Rights Reserved\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Message/plural format library with locale support.\n * @author cira@google.com (Nebojsa Ciric)\n *\n * Message format grammar:\n *\n * messageFormatPattern :\x3d string ( \x22{\x22 messageFormatElement \x22}\x22 string )*\n * messageFormatElement :\x3d argumentIndex [ \x22,\x22 elementFormat ]\n * elementFormat :\x3d \x22plural\x22 \x22,\x22 pluralStyle\n *                  | \x22selectordinal\x22 \x22,\x22 ordinalStyle\n *                  | \x22select\x22 \x22,\x22 selectStyle\n * pluralStyle :\x3d  pluralFormatPattern\n * ordinalStyle :\x3d  selectFormatPattern\n * selectStyle :\x3d  selectFormatPattern\n * pluralFormatPattern :\x3d [ \x22offset\x22 \x22:\x22 offsetIndex ] pluralForms*\n * selectFormatPattern :\x3d pluralForms*\n * pluralForms :\x3d stringKey \x22{\x22 ( \x22{\x22 messageFormatElement \x22}\x22|string )* \x22}\x22\n *\n * This is a subset of the ICU MessageFormatSyntax:\n *   http://userguide.icu-project.org/formatparse/messages\n * See also http://go/plurals and http://go/ordinals for internal details.\n *\n *\n * Message example:\n *\n * I see {NUM_PEOPLE, plural, offset:1\n *         \x3d0 {no one at all}\n *         \x3d1 {{WHO}}\n *         one {{WHO} and one other person}\n *         other {{WHO} and # other people}}\n * in {PLACE}.\n *\n * Calling format({\x27NUM_PEOPLE\x27: 2, \x27WHO\x27: \x27Mark\x27, \x27PLACE\x27: \x27Athens\x27}) would\n * produce \x22I see Mark and one other person in Athens.\x22 as output.\n *\n * OR:\n *\n * {NUM_FLOOR, selectordinal,\n *   one {Take the elevator to the #st floor.}\n *   two {Take the elevator to the #nd floor.}\n *   few {Take the elevator to the #rd floor.}\n *   other {Take the elevator to the #th floor.}}\n *\n * Calling format({\x27NUM_FLOOR\x27: 22}) would produce\n * \x22Take the elevator to the 22nd floor\x22.\n *\n * See messageformat_test.html for more examples.\n */\n\ngoog.provide(\x27goog.i18n.MessageFormat\x27);\n\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.i18n.CompactNumberFormatSymbols\x27);\ngoog.require(\x27goog.i18n.NumberFormat\x27);\ngoog.require(\x27goog.i18n.NumberFormatSymbols\x27);\ngoog.require(\x27goog.i18n.ordinalRules\x27);\ngoog.require(\x27goog.i18n.pluralRules\x27);\n\n\n\n/**\n * Constructor of MessageFormat.\n * @param {string} pattern The pattern we parse and apply positional parameters\n *     to.\n * @constructor\n * @final\n */\ngoog.i18n.MessageFormat \x3d function(pattern) {\n  /**\n   * The pattern we parse and apply positional parameters to.\n   * @type {?string}\n   * @private\n   */\n  this.pattern_ \x3d pattern;\n\n  /**\n   * All encountered literals during parse stage. Indices tell us the order of\n   * replacement.\n   * @type {?Array\x3cstring\x3e}\n   * @private\n   */\n  this.initialLiterals_ \x3d null;\n\n  /**\n   * Working array with all encountered literals during parse and format stages.\n   * Indices tell us the order of replacement.\n   * @type {?Array\x3cstring\x3e}\n   * @private\n   */\n  this.literals_ \x3d null;\n\n  /**\n   * Input pattern gets parsed into objects for faster formatting.\n   * @type {?Array\x3c!Object\x3e}\n   * @private\n   */\n  this.parsedPattern_ \x3d null;\n\n  /**\n   * Locale aware number formatter.\n   * @type {!goog.i18n.NumberFormat}\n   * @private\n   */\n  this.numberFormatter_ \x3d goog.i18n.MessageFormat.getNumberFormatter_();\n};\n\n\n/**\n * Locale associated with the most recently created NumberFormat.\n * @type {?Object}\n * @private\n */\ngoog.i18n.MessageFormat.numberFormatterSymbols_ \x3d null;\n\n\n/**\n * Locale associated with the most recently created NumberFormat.\n * @type {?Object}\n * @private\n */\ngoog.i18n.MessageFormat.compactNumberFormatterSymbols_ \x3d null;\n\n\n/**\n * Locale aware number formatter. Reference to the most recently created\n * NumberFormat for sharing between MessageFormat instances.\n * @type {?goog.i18n.NumberFormat}\n * @private\n */\ngoog.i18n.MessageFormat.numberFormatter_ \x3d null;\n\n\n/**\n * Literal strings, including \x27\x27, are replaced with \\uFDDF_x_ for\n * parsing purposes, and recovered during format phase.\n * \\uFDDF is a Unicode nonprinting character, not expected to be found in the\n * typical message.\n * @type {string}\n * @private\n */\ngoog.i18n.MessageFormat.LITERAL_PLACEHOLDER_ \x3d \x27\\uFDDF_\x27;\n\n\n/**\n * Marks a string and block during parsing.\n * @enum {number}\n * @private\n */\ngoog.i18n.MessageFormat.Element_ \x3d {\n  STRING: 0,\n  BLOCK: 1\n};\n\n\n/**\n * Block type.\n * @enum {number}\n * @private\n */\ngoog.i18n.MessageFormat.BlockType_ \x3d {\n  PLURAL: 0,\n  ORDINAL: 1,\n  SELECT: 2,\n  SIMPLE: 3,\n  STRING: 4,\n  UNKNOWN: 5\n};\n\n\n/**\n * Mandatory option in both select and plural form.\n * @type {string}\n * @private\n */\ngoog.i18n.MessageFormat.OTHER_ \x3d \x27other\x27;\n\n\n/**\n * Regular expression for looking for string literals.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.MessageFormat.REGEX_LITERAL_ \x3d new RegExp(\x22\x27([{}#].*?)\x27\x22, \x27g\x27);\n\n\n/**\n * Regular expression for looking for \x27\x27 in the message.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.MessageFormat.REGEX_DOUBLE_APOSTROPHE_ \x3d new RegExp(\x22\x27\x27\x22, \x27g\x27);\n\n/** @typedef {{ type: goog.i18n.MessageFormat.Element_, value: ? }} */\ngoog.i18n.MessageFormat.TypeVal_;\n\n\n/**\n * Gets the a NumberFormat instance for the current locale.\n * If the locale is the same as the previous invocation, returns the same\n * NumberFormat instance. Otherwise, creates a new one.\n * @return {!goog.i18n.NumberFormat}\n * @private\n */\ngoog.i18n.MessageFormat.getNumberFormatter_ \x3d function() {\n  var currentSymbols \x3d goog.i18n.NumberFormatSymbols;\n  var currentCompactSymbols \x3d goog.i18n.CompactNumberFormatSymbols;\n\n  if (goog.i18n.MessageFormat.numberFormatterSymbols_ !\x3d\x3d currentSymbols ||\n      goog.i18n.MessageFormat.compactNumberFormatterSymbols_ !\x3d\x3d\n          currentCompactSymbols) {\n    goog.i18n.MessageFormat.numberFormatterSymbols_ \x3d currentSymbols;\n    goog.i18n.MessageFormat.compactNumberFormatterSymbols_ \x3d\n        currentCompactSymbols;\n    goog.i18n.MessageFormat.numberFormatter_ \x3d\n        new goog.i18n.NumberFormat(goog.i18n.NumberFormat.Format.DECIMAL);\n  }\n\n  return /** @type {!goog.i18n.NumberFormat} */ (\n      goog.i18n.MessageFormat.numberFormatter_);\n};\n\n\n/**\n * Formats a message, treating \x27#\x27 with special meaning representing\n * the number (plural_variable - offset).\n * @param {!Object} namedParameters Parameters that either\n *     influence the formatting or are used as actual data.\n *     I.e. in call to fmt.format({\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27}),\n *     object {\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27} holds positional parameters.\n *     1st parameter could mean 5 people, which could influence plural format,\n *     and 2nd parameter is just a data to be printed out in proper position.\n * @return {string} Formatted message.\n */\ngoog.i18n.MessageFormat.prototype.format \x3d function(namedParameters) {\n  return this.format_(namedParameters, false);\n};\n\n\n/**\n * Formats a message, treating \x27#\x27 as literary character.\n * @param {!Object} namedParameters Parameters that either\n *     influence the formatting or are used as actual data.\n *     I.e. in call to fmt.format({\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27}),\n *     object {\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27} holds positional parameters.\n *     1st parameter could mean 5 people, which could influence plural format,\n *     and 2nd parameter is just a data to be printed out in proper position.\n * @return {string} Formatted message.\n */\ngoog.i18n.MessageFormat.prototype.formatIgnoringPound \x3d function(\n    namedParameters) {\n  return this.format_(namedParameters, true);\n};\n\n\n/**\n * Formats a message.\n * @param {!Object} namedParameters Parameters that either\n *     influence the formatting or are used as actual data.\n *     I.e. in call to fmt.format({\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27}),\n *     object {\x27NUM_PEOPLE\x27: 5, \x27NAME\x27: \x27Angela\x27} holds positional parameters.\n *     1st parameter could mean 5 people, which could influence plural format,\n *     and 2nd parameter is just a data to be printed out in proper position.\n * @param {boolean} ignorePound If true, treat \x27#\x27 in plural messages as a\n *     literary character, else treat it as an ICU syntax character, resolving\n *     to the number (plural_variable - offset).\n * @return {string} Formatted message.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.format_ \x3d function(\n    namedParameters, ignorePound) {\n  this.init_();\n  if (!this.parsedPattern_ || this.parsedPattern_.length \x3d\x3d 0) {\n    return \x27\x27;\n  }\n  this.literals_ \x3d goog.array.clone(this.initialLiterals_);\n\n  var result \x3d [];\n  this.formatBlock_(this.parsedPattern_, namedParameters, ignorePound, result);\n  var message \x3d result.join(\x27\x27);\n\n  if (!ignorePound) {\n    goog.asserts.assert(message.search(\x27#\x27) \x3d\x3d -1, \x27Not all # were replaced.\x27);\n  }\n\n  while (this.literals_.length \x3e 0) {\n    message \x3d message.replace(\n        this.buildPlaceholder_(this.literals_), this.literals_.pop());\n  }\n\n  return message;\n};\n\n\n/**\n * Parses generic block and returns a formatted string.\n * @param {!Array\x3c!goog.i18n.MessageFormat.TypeVal_\x3e} parsedPattern\n *     Holds parsed tree.\n * @param {!Object} namedParameters Parameters that either influence\n *     the formatting or are used as actual data.\n * @param {boolean} ignorePound If true, treat \x27#\x27 in plural messages as a\n *     literary character, else treat it as an ICU syntax character, resolving\n *     to the number (plural_variable - offset).\n * @param {!Array\x3cstring\x3e} result Each formatting stage appends its product\n *     to the result.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.formatBlock_ \x3d function(\n    parsedPattern, namedParameters, ignorePound, result) {\n  for (var i \x3d 0; i \x3c parsedPattern.length; i++) {\n    switch (parsedPattern[i].type) {\n      case goog.i18n.MessageFormat.BlockType_.STRING:\n        result.push(parsedPattern[i].value);\n        break;\n      case goog.i18n.MessageFormat.BlockType_.SIMPLE:\n        var pattern \x3d parsedPattern[i].value;\n        this.formatSimplePlaceholder_(pattern, namedParameters, result);\n        break;\n      case goog.i18n.MessageFormat.BlockType_.SELECT:\n        var pattern \x3d parsedPattern[i].value;\n        this.formatSelectBlock_(pattern, namedParameters, ignorePound, result);\n        break;\n      case goog.i18n.MessageFormat.BlockType_.PLURAL:\n        var pattern \x3d parsedPattern[i].value;\n        this.formatPluralOrdinalBlock_(\n            pattern, namedParameters, goog.i18n.pluralRules.select, ignorePound,\n            result);\n        break;\n      case goog.i18n.MessageFormat.BlockType_.ORDINAL:\n        var pattern \x3d parsedPattern[i].value;\n        this.formatPluralOrdinalBlock_(\n            pattern, namedParameters, goog.i18n.ordinalRules.select,\n            ignorePound, result);\n        break;\n      default:\n        goog.asserts.fail(\x27Unrecognized block type: \x27 + parsedPattern[i].type);\n    }\n  }\n};\n\n\n/**\n * Formats simple placeholder.\n * @param {!Object} parsedPattern JSON object containing placeholder info.\n * @param {!Object} namedParameters Parameters that are used as actual data.\n * @param {!Array\x3cstring\x3e} result Each formatting stage appends its product\n *     to the result.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.formatSimplePlaceholder_ \x3d function(\n    parsedPattern, namedParameters, result) {\n  var value \x3d namedParameters[parsedPattern];\n  if (!goog.isDef(value)) {\n    result.push(\x27Undefined parameter - \x27 + parsedPattern);\n    return;\n  }\n\n  // Don\x27t push the value yet, it may contain any of # { } in it which\n  // will break formatter. Insert a placeholder and replace at the end.\n  this.literals_.push(value);\n  result.push(this.buildPlaceholder_(this.literals_));\n};\n\n\n/**\n * Formats select block. Only one option is selected.\n * @param {{argumentIndex:?}} parsedPattern JSON object containing select\n *     block info.\n * @param {!Object} namedParameters Parameters that either influence\n *     the formatting or are used as actual data.\n * @param {boolean} ignorePound If true, treat \x27#\x27 in plural messages as a\n *     literary character, else treat it as an ICU syntax character, resolving\n *     to the number (plural_variable - offset).\n * @param {!Array\x3cstring\x3e} result Each formatting stage appends its product\n *     to the result.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.formatSelectBlock_ \x3d function(\n    parsedPattern, namedParameters, ignorePound, result) {\n  var argumentIndex \x3d parsedPattern.argumentIndex;\n  if (!goog.isDef(namedParameters[argumentIndex])) {\n    result.push(\x27Undefined parameter - \x27 + argumentIndex);\n    return;\n  }\n\n  var option \x3d parsedPattern[namedParameters[argumentIndex]];\n  if (!goog.isDef(option)) {\n    option \x3d parsedPattern[goog.i18n.MessageFormat.OTHER_];\n    goog.asserts.assertArray(\n        option, \x27Invalid option or missing other option for select block.\x27);\n  }\n\n  this.formatBlock_(option, namedParameters, ignorePound, result);\n};\n\n\n/**\n * Formats plural or selectordinal block. Only one option is selected and all #\n * are replaced.\n * @param {{argumentIndex, argumentOffset}} parsedPattern JSON object\n *     containing plural block info.\n * @param {!Object} namedParameters Parameters that either influence\n *     the formatting or are used as actual data.\n * @param {function(number, number\x3d):string} pluralSelector  A select function\n *     from goog.i18n.pluralRules or goog.i18n.ordinalRules which determines\n *     which plural/ordinal form to use based on the input number\x27s cardinality.\n * @param {boolean} ignorePound If true, treat \x27#\x27 in plural messages as a\n *     literary character, else treat it as an ICU syntax character, resolving\n *     to the number (plural_variable - offset).\n * @param {!Array\x3cstring\x3e} result Each formatting stage appends its product\n *     to the result.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.formatPluralOrdinalBlock_ \x3d function(\n    parsedPattern, namedParameters, pluralSelector, ignorePound, result) {\n  var argumentIndex \x3d parsedPattern.argumentIndex;\n  var argumentOffset \x3d parsedPattern.argumentOffset;\n  var pluralValue \x3d +namedParameters[argumentIndex];\n  if (isNaN(pluralValue)) {\n    // TODO(cibu): Distinguish between undefined and invalid parameters.\n    result.push(\x27Undefined or invalid parameter - \x27 + argumentIndex);\n    return;\n  }\n  var diff \x3d pluralValue - argumentOffset;\n\n  // Check if there is an exact match.\n  var option \x3d parsedPattern[namedParameters[argumentIndex]];\n  if (!goog.isDef(option)) {\n    goog.asserts.assert(diff \x3e\x3d 0, \x27Argument index smaller than offset.\x27);\n    var item \x3d pluralSelector(diff);\n    goog.asserts.assertString(item, \x27Invalid plural key.\x27);\n\n    option \x3d parsedPattern[item];\n\n    // If option is not provided fall back to \x22other\x22.\n    if (!goog.isDef(option)) {\n      option \x3d parsedPattern[goog.i18n.MessageFormat.OTHER_];\n    }\n\n    goog.asserts.assertArray(\n        option, \x27Invalid option or missing other option for plural block.\x27);\n  }\n\n  var pluralResult \x3d [];\n  this.formatBlock_(option, namedParameters, ignorePound, pluralResult);\n  var plural \x3d pluralResult.join(\x27\x27);\n  goog.asserts.assertString(plural, \x27Empty block in plural.\x27);\n  if (ignorePound) {\n    result.push(plural);\n  } else {\n    var localeAwareDiff \x3d this.numberFormatter_.format(diff);\n    result.push(plural.replace(/#/g, localeAwareDiff));\n  }\n};\n\n\n/**\n * Set up the MessageFormat.\n * Parses input pattern into an array, for faster reformatting with\n * different input parameters.\n * Parsing is locale independent.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.init_ \x3d function() {\n  if (this.pattern_) {\n    this.initialLiterals_ \x3d [];\n    var pattern \x3d this.insertPlaceholders_(this.pattern_);\n\n    this.parsedPattern_ \x3d this.parseBlock_(pattern);\n    this.pattern_ \x3d null;\n  }\n};\n\n\n/**\n * Replaces string literals with literal placeholders.\n * Literals are string of the form \x27}...\x27, \x27{...\x27 and \x27#...\x27 where ... is\n * set of characters not containing \x27\n * Builds a dictionary so we can recover literals during format phase.\n * @param {string} pattern Pattern to clean up.\n * @return {string} Pattern with literals replaced with placeholders.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.insertPlaceholders_ \x3d function(pattern) {\n  var literals \x3d this.initialLiterals_;\n  var buildPlaceholder \x3d goog.bind(this.buildPlaceholder_, this);\n\n  // First replace \x27\x27 with single quote placeholder since they can be found\n  // inside other literals.\n  pattern \x3d pattern.replace(\n      goog.i18n.MessageFormat.REGEX_DOUBLE_APOSTROPHE_, function() {\n        literals.push(\x22\x27\x22);\n        return buildPlaceholder(literals);\n      });\n\n  pattern \x3d pattern.replace(\n      goog.i18n.MessageFormat.REGEX_LITERAL_, function(match, text) {\n        literals.push(text);\n        return buildPlaceholder(literals);\n      });\n\n  return pattern;\n};\n\n\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * @param {string} pattern (sub)Pattern to be broken.\n * @return {!Array\x3cgoog.i18n.MessageFormat.TypeVal_\x3e}\n * @private\n */\ngoog.i18n.MessageFormat.prototype.extractParts_ \x3d function(pattern) {\n  var prevPos \x3d 0;\n  var braceStack \x3d [];\n  var results \x3d [];\n\n  var braces \x3d /[{}]/g;\n  braces.lastIndex \x3d 0;  // lastIndex doesn\x27t get set to 0 so we have to.\n  var match;\n\n  while (match \x3d braces.exec(pattern)) {\n    var pos \x3d match.index;\n    if (match[0] \x3d\x3d \x27}\x27) {\n      var brace \x3d braceStack.pop();\n      goog.asserts.assert(\n          goog.isDef(brace) \x26\x26 brace \x3d\x3d \x27{\x27, \x27No matching { for }.\x27);\n\n      if (braceStack.length \x3d\x3d 0) {\n        // End of the block.\n        var part \x3d {};\n        part.type \x3d goog.i18n.MessageFormat.Element_.BLOCK;\n        part.value \x3d pattern.substring(prevPos, pos);\n        results.push(part);\n        prevPos \x3d pos + 1;\n      }\n    } else {\n      if (braceStack.length \x3d\x3d 0) {\n        var substring \x3d pattern.substring(prevPos, pos);\n        if (substring !\x3d \x27\x27) {\n          results.push({\n            type: goog.i18n.MessageFormat.Element_.STRING,\n            value: substring\n          });\n        }\n        prevPos \x3d pos + 1;\n      }\n      braceStack.push(\x27{\x27);\n    }\n  }\n\n  // Take care of the final string, and check if the braceStack is empty.\n  goog.asserts.assert(\n      braceStack.length \x3d\x3d 0, \x27There are mismatched { or } in the pattern.\x27);\n\n  var substring \x3d pattern.substring(prevPos);\n  if (substring !\x3d \x27\x27) {\n    results.push(\n        {type: goog.i18n.MessageFormat.Element_.STRING, value: substring});\n  }\n\n  return results;\n};\n\n\n/**\n * A regular expression to parse the plural block, extracting the argument\n * index and offset (if any).\n * @type {RegExp}\n * @private\n */\ngoog.i18n.MessageFormat.PLURAL_BLOCK_RE_ \x3d\n    /^\\s*(\\w+)\\s*,\\s*plural\\s*,(?:\\s*offset:(\\d+))?/;\n\n\n/**\n * A regular expression to parse the ordinal block, extracting the argument\n * index.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.MessageFormat.ORDINAL_BLOCK_RE_ \x3d /^\\s*(\\w+)\\s*,\\s*selectordinal\\s*,/;\n\n\n/**\n * A regular expression to parse the select block, extracting the argument\n * index.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.MessageFormat.SELECT_BLOCK_RE_ \x3d /^\\s*(\\w+)\\s*,\\s*select\\s*,/;\n\n\n/**\n * Detects which type of a block is the pattern.\n * @param {string} pattern Content of the block.\n * @return {goog.i18n.MessageFormat.BlockType_} One of the block types.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.parseBlockType_ \x3d function(pattern) {\n  if (goog.i18n.MessageFormat.PLURAL_BLOCK_RE_.test(pattern)) {\n    return goog.i18n.MessageFormat.BlockType_.PLURAL;\n  }\n\n  if (goog.i18n.MessageFormat.ORDINAL_BLOCK_RE_.test(pattern)) {\n    return goog.i18n.MessageFormat.BlockType_.ORDINAL;\n  }\n\n  if (goog.i18n.MessageFormat.SELECT_BLOCK_RE_.test(pattern)) {\n    return goog.i18n.MessageFormat.BlockType_.SELECT;\n  }\n\n  if (/^\\s*\\w+\\s*/.test(pattern)) {\n    return goog.i18n.MessageFormat.BlockType_.SIMPLE;\n  }\n\n  return goog.i18n.MessageFormat.BlockType_.UNKNOWN;\n};\n\n\n/**\n * Parses generic block.\n * @param {string} pattern Content of the block to parse.\n * @return {!Array\x3c!Object\x3e} Subblocks marked as strings, select...\n * @private\n */\ngoog.i18n.MessageFormat.prototype.parseBlock_ \x3d function(pattern) {\n  var result \x3d [];\n  var parts \x3d this.extractParts_(pattern);\n  for (var i \x3d 0; i \x3c parts.length; i++) {\n    var block \x3d {};\n    if (goog.i18n.MessageFormat.Element_.STRING \x3d\x3d parts[i].type) {\n      block.type \x3d goog.i18n.MessageFormat.BlockType_.STRING;\n      block.value \x3d parts[i].value;\n    } else if (goog.i18n.MessageFormat.Element_.BLOCK \x3d\x3d parts[i].type) {\n      var blockType \x3d this.parseBlockType_(parts[i].value);\n\n      switch (blockType) {\n        case goog.i18n.MessageFormat.BlockType_.SELECT:\n          block.type \x3d goog.i18n.MessageFormat.BlockType_.SELECT;\n          block.value \x3d this.parseSelectBlock_(parts[i].value);\n          break;\n        case goog.i18n.MessageFormat.BlockType_.PLURAL:\n          block.type \x3d goog.i18n.MessageFormat.BlockType_.PLURAL;\n          block.value \x3d this.parsePluralBlock_(parts[i].value);\n          break;\n        case goog.i18n.MessageFormat.BlockType_.ORDINAL:\n          block.type \x3d goog.i18n.MessageFormat.BlockType_.ORDINAL;\n          block.value \x3d this.parseOrdinalBlock_(parts[i].value);\n          break;\n        case goog.i18n.MessageFormat.BlockType_.SIMPLE:\n          block.type \x3d goog.i18n.MessageFormat.BlockType_.SIMPLE;\n          block.value \x3d parts[i].value;\n          break;\n        default:\n          goog.asserts.fail(\n              \x27Unknown block type for pattern: \x27 + parts[i].value);\n      }\n    } else {\n      goog.asserts.fail(\x27Unknown part of the pattern.\x27);\n    }\n    result.push(block);\n  }\n\n  return result;\n};\n\n\n/**\n * Parses a select type of a block and produces JSON object for it.\n * @param {string} pattern Subpattern that needs to be parsed as select pattern.\n * @return {!Object} Object with select block info.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.parseSelectBlock_ \x3d function(pattern) {\n  var argumentIndex \x3d \x27\x27;\n  var replaceRegex \x3d goog.i18n.MessageFormat.SELECT_BLOCK_RE_;\n  pattern \x3d pattern.replace(replaceRegex, function(string, name) {\n    argumentIndex \x3d name;\n    return \x27\x27;\n  });\n  var result \x3d {};\n  result.argumentIndex \x3d argumentIndex;\n\n  var parts \x3d this.extractParts_(pattern);\n  // Looking for (key block)+ sequence. One of the keys has to be \x22other\x22.\n  var pos \x3d 0;\n  while (pos \x3c parts.length) {\n    var key \x3d parts[pos].value;\n    goog.asserts.assertString(key, \x27Missing select key element.\x27);\n\n    pos++;\n    goog.asserts.assert(\n        pos \x3c parts.length, \x27Missing or invalid select value element.\x27);\n\n    if (goog.i18n.MessageFormat.Element_.BLOCK \x3d\x3d parts[pos].type) {\n      var value \x3d this.parseBlock_(parts[pos].value);\n    } else {\n      goog.asserts.fail(\x27Expected block type.\x27);\n    }\n    result[key.replace(/\\s/g, \x27\x27)] \x3d value;\n    pos++;\n  }\n\n  goog.asserts.assertArray(\n      result[goog.i18n.MessageFormat.OTHER_],\n      \x27Missing other key in select statement.\x27);\n  return result;\n};\n\n\n/**\n * Parses a plural type of a block and produces JSON object for it.\n * @param {string} pattern Subpattern that needs to be parsed as plural pattern.\n * @return {!Object} Object with select block info.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.parsePluralBlock_ \x3d function(pattern) {\n  var argumentIndex \x3d \x27\x27;\n  var argumentOffset \x3d 0;\n  var replaceRegex \x3d goog.i18n.MessageFormat.PLURAL_BLOCK_RE_;\n  pattern \x3d pattern.replace(replaceRegex, function(string, name, offset) {\n    argumentIndex \x3d name;\n    if (offset) {\n      argumentOffset \x3d parseInt(offset, 10);\n    }\n    return \x27\x27;\n  });\n\n  var result \x3d {};\n  result.argumentIndex \x3d argumentIndex;\n  result.argumentOffset \x3d argumentOffset;\n\n  var parts \x3d this.extractParts_(pattern);\n  // Looking for (key block)+ sequence.\n  var pos \x3d 0;\n  while (pos \x3c parts.length) {\n    var key \x3d parts[pos].value;\n    goog.asserts.assertString(key, \x27Missing plural key element.\x27);\n\n    pos++;\n    goog.asserts.assert(\n        pos \x3c parts.length, \x27Missing or invalid plural value element.\x27);\n\n    if (goog.i18n.MessageFormat.Element_.BLOCK \x3d\x3d parts[pos].type) {\n      var value \x3d this.parseBlock_(parts[pos].value);\n    } else {\n      goog.asserts.fail(\x27Expected block type.\x27);\n    }\n    result[key.replace(/\\s*(?:\x3d)?(\\w+)\\s*/, \x27$1\x27)] \x3d value;\n    pos++;\n  }\n\n  goog.asserts.assertArray(\n      result[goog.i18n.MessageFormat.OTHER_],\n      \x27Missing other key in plural statement.\x27);\n\n  return result;\n};\n\n\n/**\n * Parses an ordinal type of a block and produces JSON object for it.\n * For example the input string:\n *  \x27{FOO, selectordinal, one {Message A}other {Message B}}\x27\n * Should result in the output object:\n * {\n *   argumentIndex: \x27FOO\x27,\n *   argumentOffest: 0,\n *   one: [ { type: 4, value: \x27Message A\x27 } ],\n *   other: [ { type: 4, value: \x27Message B\x27 } ]\n * }\n * @param {string} pattern Subpattern that needs to be parsed as plural pattern.\n * @return {!Object} Object with select block info.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.parseOrdinalBlock_ \x3d function(pattern) {\n  var argumentIndex \x3d \x27\x27;\n  var replaceRegex \x3d goog.i18n.MessageFormat.ORDINAL_BLOCK_RE_;\n  pattern \x3d pattern.replace(replaceRegex, function(string, name) {\n    argumentIndex \x3d name;\n    return \x27\x27;\n  });\n\n  var result \x3d {};\n  result.argumentIndex \x3d argumentIndex;\n  result.argumentOffset \x3d 0;\n\n  var parts \x3d this.extractParts_(pattern);\n  // Looking for (key block)+ sequence.\n  var pos \x3d 0;\n  while (pos \x3c parts.length) {\n    var key \x3d parts[pos].value;\n    goog.asserts.assertString(key, \x27Missing ordinal key element.\x27);\n\n    pos++;\n    goog.asserts.assert(\n        pos \x3c parts.length, \x27Missing or invalid ordinal value element.\x27);\n\n    if (goog.i18n.MessageFormat.Element_.BLOCK \x3d\x3d parts[pos].type) {\n      var value \x3d this.parseBlock_(parts[pos].value);\n    } else {\n      goog.asserts.fail(\x27Expected block type.\x27);\n    }\n    result[key.replace(/\\s*(?:\x3d)?(\\w+)\\s*/, \x27$1\x27)] \x3d value;\n    pos++;\n  }\n\n  goog.asserts.assertArray(\n      result[goog.i18n.MessageFormat.OTHER_],\n      \x27Missing other key in selectordinal statement.\x27);\n\n  return result;\n};\n\n\n/**\n * Builds a placeholder from the last index of the array.\n * @param {!Array\x3cstring\x3e} literals All literals encountered during parse.\n * @return {string} \\uFDDF_ + last index + _.\n * @private\n */\ngoog.i18n.MessageFormat.prototype.buildPlaceholder_ \x3d function(literals) {\n  goog.asserts.assert(literals.length \x3e 0, \x27Literal array is empty.\x27);\n\n  var index \x3d (literals.length - 1).toString(10);\n  return goog.i18n.MessageFormat.LITERAL_PLACEHOLDER_ + index + \x27_\x27;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/i18n/messageformat.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syfh');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syfh');

}catch(e){_DumpException(e)}
/* _Module_:syxj */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxj');
var $googDebugFname="searchbox/wiz/library/shared/messages.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.shared.messages\x27);\n\nconst MessageFormat \x3d goog.require(\x27goog.i18n.MessageFormat\x27);\n\n/**\n * @desc Message displayed to show a dialog to confirm personalized query\n *    deletion.\n * @const {string}\n */\nconst MSG_REMOVE_PSUGGEST_MESSAGE \x3d goog.getMsg(\n    \x27You searched for this before. Deleting \x3cb\x3e{query}\x3c/b\x3e from your history \x27 +\n    \x27will permanently remove it from your account across all your devices\x27);\n\n/** @const {!MessageFormat} */\nconst REMOVE_PSUGGEST_MESSAGE_FORMAT \x3d\n    new MessageFormat(MSG_REMOVE_PSUGGEST_MESSAGE);\n\n/**\n * Formats the message text for psuggest removal.\n * @param {string} query The query to be removed.\n * @return {string} The formatted message for psuggest removal.\n */\nexports.removePsuggestMessage \x3d function(query) {\n  return REMOVE_PSUGGEST_MESSAGE_FORMAT.format({\x27query\x27: query});\n};\n\n/**\n * @desc Message displayed to show a dialog to confirm device history query\n *    deletion.\n * @const {string}\n */\nconst MSG_REMOVE_DEVICE_HISTORY_MESSAGE \x3d goog.getMsg(\n    \x27You searched for this before. Deleting \x3cb\x3e{query}\x3c/b\x3e from your history \x27 +\n    \x27will permanently remove it from your device\x27);\n\n/** @const {!MessageFormat} */\nconst REMOVE_DEVICE_HISTORY_MESSAGE_FORMAT \x3d\n    new MessageFormat(MSG_REMOVE_DEVICE_HISTORY_MESSAGE);\n\n/**\n * Formats the message text for device history removal.\n * @param {string} query The query to be removed.\n * @return {string} The formatted message for device history removal.\n */\nexports.removeDeviceHistoryMessage \x3d function(query) {\n  return REMOVE_DEVICE_HISTORY_MESSAGE_FORMAT.format({\x27query\x27: query});\n};\n\n/**\n * @desc Text shown when the app fails to remove an item from the search\n *    history.\n */\nexports.MSG_DELETE_FAILED \x3d goog.getMsg(\x27Couldn\\\x27t remove item from history.\x27);\n\n/**\n * @desc Text shown to explain regular query suggestion.\n */\nexports.MSG_REGULAR_QUERY_MESSAGE \x3d\n    goog.getMsg(\x27This term is related to what you\\\x27re typing.\x27);\n\n/**\n * @desc Message displayed to show a dialog to confirm personalized URL history\n *    deletion.\n */\nexports.MSG_REMOVE_URL_HISTORY_MESSAGE \x3d\n    goog.getMsg(\n        \x27This is a URL you\\\x27ve visited before that\\\x27s related to what \x27 +\n        \x27you\\\x27re typing. Deleting this will remove it from your account \x27 +\n        \x27across all your devices.\x27);\n\n/** @const {string} */\nconst REGULAR_QUERY_LEARN_MORE_LINK \x3d\n    \x27https://support.google.com/websearch/answer/106230\x27;\n\n/**\n * @desc Link to redirect users to autocomplete help center article.\n * @const {string}\n */\nconst MSG_REGULAR_QUERY_LEARN_MORE_MESSAGE \x3d goog.getMsg(\n    \x27\x3ca href\x3d\x22{url}\x22 target\x3d\x22_blank\x22\x3eLearn more\x3c/a\x3e\x27);\n\n/** @const {!MessageFormat} */\nconst REGULAR_QUERY_LEARN_MORE_MESSAGE_FORMAT \x3d\n    new MessageFormat(MSG_REGULAR_QUERY_LEARN_MORE_MESSAGE);\n\n/**\n * The formatted message for learn more message.\n * @const {string}\n */\nexports.REGULAR_QUERY_LEARN_MORE_MESSAGE \x3d\n    REGULAR_QUERY_LEARN_MORE_MESSAGE_FORMAT.format(\n        {\x27url\x27: REGULAR_QUERY_LEARN_MORE_LINK});\n\n/**\n * @desc Message displayed to show a dialog to explain trends suggestions.\n */\nexports.MSG_TRENDS_SUGGESTION_MESSAGE \x3d\n    goog.getMsg(\x27This search is trending in your area.\x27);\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/messages.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxj');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxj');

}catch(e){_DumpException(e)}
/* _Module_:syxk */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxk');
var $googDebugFname="searchbox/wiz/library/services/suggestion_dialog_service.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.services.SuggestionDialogService\x27);\n\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst messages \x3d goog.require(\x27searchbox.wiz.shared.messages\x27);\nconst services \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst {SuggestionSubtype, SuggestionType} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {htmlEscape} \x3d goog.require(\x27goog.string\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\nclass SuggestionDialogService extends Service {\n  constructor(response) {\n    super(response.superResponse);\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion to create the dialog.\n   * @return {events.DialogData} The dialog data.\n   */\n  createDialogData(suggestion) {\n    const removalDialogData \x3d this.createRemovalDialog_(suggestion);\n    // Returns the default regular query suggestion dialog data.\n    return removalDialogData ?\n        removalDialogData : this.createRegularQueryDialog_(suggestion);\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion to create the dialog.\n   * @return {?events.DialogData} The dialog data for this suggestion, or null\n   *   if there\x27s no dialog data that matches with the suggestion.\n   * @private\n   */\n  createRemovalDialog_(suggestion) {\n    let content \x3d \x27\x27;\n    switch (suggestion.getType()) {\n      case SuggestionType.PERSONALIZED_QUERY:\n        content \x3d messages.removePsuggestMessage(\n            htmlEscape(suggestion.getVerbatim()));\n        break;\n      case SuggestionType.DEVICE_HISTORY:\n        content \x3d messages.removeDeviceHistoryMessage(\n            htmlEscape(suggestion.getVerbatim()));\n        break;\n      case SuggestionType.PERSONALIZED_NAVIGATION:\n        content \x3d messages.MSG_REMOVE_URL_HISTORY_MESSAGE;\n        break;\n      default:\n        // Explicitly check by subtypes.\n        if (suggestion.getSubtypes().indexOf(\n            SuggestionSubtype.SUBTYPE_PERSONAL) \x3e\x3d 0) {\n          content \x3d messages.removePsuggestMessage(\n              htmlEscape(suggestion.getVerbatim()));\n        }\n    }\n    if (!content) {\n      return null;\n    }\n    return {\n      suggestion: suggestion,\n      content: content,\n      showCancel: true,\n      showDelete: true,\n    };\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion to create the dialog.\n   * @return {events.DialogData} The dialog data for this suggestion.\n   * @private\n   */\n  createRegularQueryDialog_(suggestion) {\n    const mainMessage \x3d\n        suggestion.getSubtypes().indexOf(SuggestionSubtype.SUBTYPE_TRENDS) \x3e\x3d 0\n        ? messages.MSG_TRENDS_SUGGESTION_MESSAGE\n        : messages.MSG_REGULAR_QUERY_MESSAGE;\n    return {\n      suggestion: suggestion,\n      content: mainMessage\n          + \x27 \x27\n          + messages.REGULAR_QUERY_LEARN_MORE_MESSAGE,\n      showOk: true,\n      showFeedback: true,\n    };\n  }\n}\n\nregisterService(services.SUGGESTION_DIALOG, SuggestionDialogService);\nexports \x3d SuggestionDialogService;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/suggestion_dialog_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxk');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxk');

}catch(e){_DumpException(e)}
/* _Module_:syxr */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxr');
var $googDebugFname="searchbox/wiz/library/shared/container_utils.js";
goog.loadModule("goog.module(\x27searchbox.wiz.shared.containerUtils\x27);\n\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\n\n/** @package @const {string} */\nconst PARAM_MAPPING \x3d \x27ag\x27;\n\n/** @package @const {string} */\nconst HEADER_MAPPING \x3d \x27a\x27;\n\n/**\n * @param {!Response} response\n * @param {number} groupId\n * @return {string|undefined} text to be rendered on the header view.\n */\nexports.getSuggestionHeaderText \x3d function(response, groupId) {\n  const params \x3d response.getParameter(PARAM_MAPPING, {});\n  return params[HEADER_MAPPING] \x26\x26 params[HEADER_MAPPING][groupId];\n};\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/container_utils.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/clients/gws/mobile/suggestions_box_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.SuggestionsBoxController\x27);\n\nconst CoreSuggestionRenderer \x3d goog.require(\x27searchbox.wiz.mobile.CoreSuggestionRenderer\x27);\nconst DialogController \x3d goog.require(\x27gws.fruit.dialog.DialogController\x27);\nconst LoggingService \x3d goog.require(\x27searchbox.wiz.services.LoggingService\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst SuggestionDialogService \x3d goog.require(\x27searchbox.wiz.services.SuggestionDialogService\x27);\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst containerUtils \x3d goog.require(\x27searchbox.wiz.shared.containerUtils\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst htmlSanitizer \x3d goog.require(\x27security.sanitizer.htmlSanitizer\x27);\nconst libraryServices \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst safe \x3d goog.require(\x27goog.dom.safe\x27);\nconst scheduler \x3d goog.require(\x27search.task.scheduler\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst {DIALOG} \x3d goog.require(\x27gws.fruit.dialog.controllers\x27);\nconst {assertElement} \x3d goog.require(\x27goog.asserts\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/** @private @const {string} */\nconst SUGGESTION_TEMPLATE_ID_ \x3d \x27sbt\x27;\n\n/** @private @const {string} */\nconst HEADER_TEMPLATE_ID_ \x3d \x27sbh\x27;\n\n/** @private @const {string} */\nconst SUGGESTION_CONTAINER_CLASS_ \x3d \x27sbct\x27;\n\n/** @private @const {number} */\nconst CLEAR_SUGGESTION_TIMEOUT_MS_ \x3d 5000;\n\n/** @package @const {string} */\nconst ANSWER_TYPE_KEY \x3d \x27ansb\x27;\n\n/**\n * The controller to handle the suggestions.\n * @final\n */\nclass SuggestionsBoxController extends WizController {\n  static deps() {\n    return {\n      preload: {\n        dialog: DIALOG,\n      },\n      controller: {\n        dialog: xid(\x27dialog\x27),\n      },\n      service: {\n        logging: libraryServices.LOGGING,\n        suggestionDialog: libraryServices.SUGGESTION_DIALOG,\n      },\n    };\n  }\n\n  /** @param {!controllers.SuggestionsBoxControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private {wiz.Query} */\n    this.root_ \x3d this.getRoot();\n\n    /** @private {wiz.Query} */\n    this.dropDown_ \x3d this.root_.findByJsName(xid(\x27suggestions_container\x27));\n\n    /** @private {boolean} */\n    this.shown_ \x3d false;\n\n    /** @private {?number} */\n    this.clearSuggestionsTask_ \x3d null;\n\n    /** @private {!Array\x3c!Element\x3e} */\n    this.unusedViews_ \x3d [];\n\n    /** @private {!Array\x3c!Element\x3e} */\n    this.unusedHeaders_ \x3d [];\n\n    /** @private {!Array\x3c!Element\x3e} */\n    this.displayedHeaders_ \x3d [];\n\n    /** @private {!Array\x3c!Suggestion\x3e} */\n    this.displayedSuggestions_ \x3d [];\n\n    /** @private {CoreSuggestionRenderer} */\n    this.renderer_ \x3d new CoreSuggestionRenderer();\n\n    /** @private @const {DialogController} */\n    this.dialog_ \x3d response.controller.dialog;\n\n    /** @private @const {!SuggestionDialogService} */\n    this.suggestionDialog_ \x3d response.service.suggestionDialog;\n\n    /** @private @const {!LoggingService} */\n    this.logging_ \x3d response.service.logging;\n\n    // Avoid context menu being triggered when long click happens, a dialog\n    // is shown, and the user releases the click when it\x27s on the dialog.\n    this.dialog_.getRoot().el().addEventListener(\x27contextmenu\x27, function(ev) {\n      if (ev) {\n        common.preventDefault(ev);\n      }\n    });\n  }\n\n  /**\n   * @param {string} query\n   * @param {!Response} response\n   */\n  render(query, response) {\n    // Remove the headers before rendering the new response.\n    let header;\n    while (header \x3d this.displayedHeaders_.shift()) {\n      this.unusedHeaders_.push(header);\n      dom.removeNode(header);\n    }\n\n    this.displayedSuggestions_ \x3d [];\n    const suggestions \x3d response.getSuggestions();\n    const activeViews \x3d this.dropDown_.children();\n    const visitedGroups \x3d {};\n    let suggestion;\n    for (let i \x3d 0; suggestion \x3d suggestions[i]; i++) {\n      // Create the header if necessary. The header will be added as the\n      // sibling before the first suggestion with the same groupId.\n      let headerView;\n      const groupId \x3d suggestion.getSuggestionGroupId();\n      if (groupId !\x3d -1 \x26\x26 !visitedGroups[groupId]) {\n        visitedGroups[groupId] \x3d true;\n        const headerText \x3d\n            containerUtils.getSuggestionHeaderText(response, groupId);\n        if (headerText) {\n          headerView \x3d this.unusedHeaders_.shift();\n          if (!headerView) {\n            headerView \x3d this.getSuggestionHeaderTemplate_();\n          }\n          const headerHtml \x3d\n              htmlSanitizer.sanitizeHtmlAssertUnchanged(headerText);\n          safe.setInnerHtml(headerView, headerHtml);\n        }\n      }\n\n      let view \x3d activeViews.get(i);\n      if (!view) {\n        view \x3d this.unusedViews_.shift();\n        if (!view) {\n          view \x3d this.getSuggestionTemplate_();\n        }\n        this.dropDown_.append(view);\n      }\n      // Add the pending headerView as the sibling before the first\n      // suggestion view in this group.\n      if (headerView) {\n        dom.insertSiblingBefore(headerView, view);\n        this.displayedHeaders_.push(headerView);\n        headerView \x3d null;\n      }\n      this.renderer_.render(view, suggestion);\n      this.displayedSuggestions_.push(suggestion);\n    }\n\n    // Remove extra views from previously displayed response. Note that\n    // activeViews may contain less than what is actually appened in the\n    // dropdown after the insertion above, but in such case we will never\n    // remove anything, so this is fine.\n    for (let i \x3d activeViews.size() - 1;\n         i + 1 \x3e this.displayedSuggestions_.length; --i) {\n      const unusedView \x3d assertElement(activeViews.get(i));\n      this.unusedViews_.push(unusedView);\n      dom.removeNode(unusedView);\n    }\n    this.setShown(!!this.displayedSuggestions_.length);\n    this.logging_.markResponseRendered(query, response);\n  }\n\n  /**\n   * @param {boolean} shown\n   */\n  setShown(shown) {\n    if (shown !\x3d this.shown_) {\n      this.trigger(events.suggestionsShown, shown);\n    }\n    if (this.clearSuggestionsTask_) {\n      scheduler.clearTimeout(this.clearSuggestionsTask_);\n      this.clearSuggestionsTask_ \x3d null;\n    }\n    this.shown_ \x3d shown;\n    this.getRoot().toggle(shown);\n  }\n\n  /**\n   * @param {!Suggestion} suggestion The clicked suggestion.\n   * @private\n   */\n  handleSuggestionClick_(suggestion) {\n    const intentUrl \x3d suggestion.getIntentUrl();\n    if (intentUrl) {\n      this.trigger(events.redirect, intentUrl);\n    } else {\n      const data \x3d {\n        query: suggestion.getVerbatim(),\n        parameters: suggestion.getExtraSearchParameters(),\n        answerType: suggestion.getParameter(ANSWER_TYPE_KEY),\n        skipSave: common.shouldSkipSaving(suggestion),\n        suggestionParameters: suggestion.getWhitelistedSuggestionParameters(),\n      };\n      this.trigger(events.search, data);\n    }\n  }\n\n  /**\n   * @return {!Element} A new suggestion template.\n   * @private\n   */\n  getSuggestionTemplate_() {\n    const template \x3d\n        assertElement(document.getElementById(SUGGESTION_TEMPLATE_ID_))\n            .cloneNode(true);\n    template.removeAttribute(\x27id\x27);\n    return template;\n  }\n\n  /**\n   * @return {!Element} A new suggestion header template.\n   * @private\n   */\n  getSuggestionHeaderTemplate_() {\n    const template \x3d assertElement(document.getElementById(HEADER_TEMPLATE_ID_))\n                         .cloneNode(true);\n    template.removeAttribute(\x27id\x27);\n    return template;\n  }\n\n  startClearSuggestionsTimer() {\n    if (!this.clearSuggestionsTask_) {\n      this.clearSuggestionsTask_ \x3d scheduler.setTimeout(\n          goog.bind(this.setShown, this, false /** shown */),\n          CLEAR_SUGGESTION_TIMEOUT_MS_);\n    }\n  }\n\n  /**\n   * Handles clicks on descendent elements of the dropdown. We only handle the\n   * clicks on suggestion views so the headers will be filtered out first.\n   * @param {!wiz.Event} ev\n   * @wizaction\n   */\n  handleClick(ev) {\n    const displayedViews \x3d\n        this.dropDown_.children()\n            .filter(wiz.Query.Matchers.byJsName(xid(\x27core_suggestion\x27)))\n            .toArray();\n    // It is not always guaranteed that ev.targetElement has non empty element.\n    // One example is that when you long click and release click on an element\n    // inside the dropdown, this triggers handleClick but targetElement is\n    // empty. If we don\x27t check the size, it would cause infinite loop.\n    for (let elm \x3d ev.targetElement; elm.size() \x26\x26 elm !\x3d this.root_;\n         elm \x3d elm.parent()) {\n      if (!elm.hasClass(SUGGESTION_CONTAINER_CLASS_)) {\n        // Move up until we\x27ve found the suggestion container.\n        continue;\n      }\n      const el \x3d assertElement(elm.el());\n      const index \x3d displayedViews.indexOf(el);\n      if (index !\x3d -1) {\n        const clickedSuggestion \x3d this.displayedSuggestions_[index];\n        if (clickedSuggestion) {\n          this.logging_.setAssistedQuery(index);\n          this.handleSuggestionClick_(clickedSuggestion);\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the suggestion long click.\n   * @param {!wiz.Event\x3c!Suggestion\x3e} ev\n   * @wizaction\n   */\n  onSuggestionLongClick(ev) {\n    const dialogData \x3d this.suggestionDialog_.createDialogData(ev.data);\n    if (!dialogData) {\n      // No dialog data, we don\x27t proceed to show the suggestion dialog.\n      return;\n    }\n    // w-dialog can actually move the content to body for better styling, see\n    // b/65062360. Hence trigger through broadcast needs to be done from\n    // document.body. Triggering from inner DOM still works due to special\n    // referencing by the component.\n    wiz.jsaction.broadcast(document, events.decorateDialog, dialogData);\n    this.dialog_.open();\n  }\n}\n\nregisterController(controllers.SUGGESTIONS_BOX, SuggestionsBoxController);\nexports \x3d SuggestionsBoxController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/suggestions_box_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxr');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxr');

}catch(e){_DumpException(e)}
/* _Module_:Uox2uf */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('Uox2uf');


/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('Uox2uf');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('Uox2uf');

}catch(e){_DumpException(e)}
/* _Module_:syxl */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxl');
var $googDebugFname="searchbox/wiz/library/services/zero_prefix_cache_service.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.services.ZeroPrefixCacheService\x27);\n\nconst HTML5LocalStorage \x3d goog.require(\x27goog.storage.mechanism.HTML5LocalStorage\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst jsonHybrid \x3d goog.require(\x27goog.json.hybrid\x27);\nconst services \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\n/** @package @const {string} */\nconst ZERO_PREFIX_CACHE_KEY \x3d \x27sb_wiz.zpc\x27;\n\n/** @package @const {string} */\nconst USER_EMAIL_HASH_KEY \x3d \x27sb_wiz.ueh\x27;\n\n/** @package @const {Array\x3cstring\x3e} */\nconst ZERO_PREFIX_ENABLED_DATASETS \x3d [\x27\x27 /* web */, \x27i\x27 /* images */];\n\n/**\n * A simple cache that stores the previously received zero prefix suggestions,\n * so that before the background fetch updates it, we can serve something\n * already on the device.\n */\nclass ZeroPrefixCacheService extends Service {\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private {HTML5LocalStorage} */\n    this.storage_ \x3d new HTML5LocalStorage();\n\n    /** @private @const {boolean} */\n    this.isAvailable_ \x3d this.storage_.isAvailable();\n\n    this.clearCacheIfUserDoesNotMatch_();\n  }\n\n  /**\n   * @param {string} dataset\n   * @return {Response}\n   */\n  get(dataset) {\n    if (!this.isAvailable_) {\n      return null;\n    }\n    try {\n      const historyKey \x3d this.getHistoryKey_(dataset);\n      const rawResponse \x3d this.storage_.get(historyKey);\n      if (!rawResponse) {\n        return null;\n      }\n      return new Response(jsonHybrid.parse(rawResponse));\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @param {string} dataset\n   * @param {?Object|undefined} responseJson\n   */\n  put(dataset, responseJson) {\n    if (!this.isAvailable_ || !responseJson) {\n      return;\n    }\n    const historyKey \x3d this.getHistoryKey_(dataset);\n    try {\n      this.storage_.set(historyKey, jsonHybrid.stringify(responseJson));\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * @param {string} dataset\n   */\n  clear(dataset) {\n    if (!this.isAvailable_) {\n      return;\n    }\n    const historyKey \x3d this.getHistoryKey_(dataset);\n    try {\n      this.storage_.remove(historyKey);\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * @param {string} dataset\n   * @return {string}\n   * @private\n   */\n  getHistoryKey_(dataset) {\n    return ZERO_PREFIX_CACHE_KEY + \x27.\x27 + (dataset || \x27\x27);\n  }\n\n  /** @private */\n  clearCacheIfUserDoesNotMatch_() {\n    if (!this.isAvailable_) {\n      return;\n    }\n    let storedUser \x3d null;\n    try {\n      storedUser \x3d this.storage_.get(USER_EMAIL_HASH_KEY);\n    } catch (e) {\n      // Do nothing.\n    }\n    const currentUser \x3d goog.getObjectByName(\x27google.pmc.sb_wiz.ueh\x27);\n    if (storedUser !\x3d currentUser) {\n      for (let i \x3d 0; i \x3c ZERO_PREFIX_ENABLED_DATASETS.length; ++i) {\n        this.clear(ZERO_PREFIX_ENABLED_DATASETS[i]);\n      }\n    }\n    try {\n      if (currentUser) {\n        this.storage_.set(USER_EMAIL_HASH_KEY, currentUser);\n      } else if (storedUser) {\n        this.storage_.remove(USER_EMAIL_HASH_KEY);\n      }\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n}\n\nregisterService(services.ZERO_PREFIX_CACHE, ZeroPrefixCacheService);\nexports \x3d ZeroPrefixCacheService;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/zero_prefix_cache_service.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxl');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxl');

}catch(e){_DumpException(e)}
/* _Module_:syxm */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxm');
var $googDebugFname="searchbox/wiz/library/components/api/request_advisor.js";
goog.loadModule("goog.module(\x27searchbox.wiz.components.api.RequestAdvisor\x27);\n\nconst Uri \x3d goog.require(\x27goog.Uri\x27);\nconst {FetchPreference} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\n\n/**\n * Delegate interface for RequestAdvisor.\n * Register an implementation of this class.\n * @interface\n */\nclass RequestAdvisor {\n  /**\n   * Determines if fetching is required and potentially modifies the request.\n   * @param {Uri} uri of the request.\n   * @return {FetchPreference} The fetch preference of this advisor.\n   */\n  getPreference(uri) {}\n}\n\nexports \x3d RequestAdvisor;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/components/api/request_advisor.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/library/components/request_advisors/request_advisors.js";
goog.loadModule("goog.module(\x27searchbox.wiz.components.requestadvisors.RequestAdvisors\x27);\n\nconst DelegateRegistry \x3d goog.require(\x27goog.delegate.DelegateRegistry\x27);\nconst RequestAdvisor \x3d goog.require(\x27searchbox.wiz.components.api.RequestAdvisor\x27);\nconst Uri \x3d goog.require(\x27goog.Uri\x27);\nconst {FetchPreference} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\n\n/**\n * @type {!DelegateRegistry\x3c!RequestAdvisor\x3e}\n * TODO(b/78636727): Change to DelegateRegistry.Prioritized when we register\n * more request advisors.\n */\nconst registry \x3d new DelegateRegistry();\n\n/** @type {!RequestAdvisors} */\nlet instance;\n\n/**\n * This class manages the a collection of RequestAdvisor.\n */\nclass RequestAdvisors {\n  /**\n   * @return {!DelegateRegistry\x3c!RequestAdvisor\x3e}\n   */\n  static registry() {\n    return registry;\n  }\n\n  /**\n   * Gets the single shared instance of RequestAdvisors.\n   * @return {!RequestAdvisors}\n   */\n  static getInstance() {\n    if (!instance) {\n      instance \x3d new RequestAdvisors();\n    }\n    return instance;\n  }\n\n  constructor() {\n    /** @private @const {!Array\x3c!RequestAdvisor\x3e} */\n    this.delegates_ \x3d registry.delegates();\n  }\n\n  /**\n   * Iterates through the prioritized array of Suggest-request advisors to\n   * determine if issuing a fetcher request is necessary.  The preference of\n   * highest priority (see //searchbox/wiz/library/shared/constants.js)\n   * returned by any advisor will be the one that is returned.\n   * Regardless of the final decision, all advisors\n   * will be allowed to override or add new request parameters as necessary.\n   * @param {Uri} uri of the request.\n   * @return {FetchPreference} The fetch preference of advisors.\n   */\n  getFetchPreference(uri) {\n    let fetchPreference \x3d FetchPreference.DONT_CARE;\n    for (const delegate of this.delegates_) {\n      const preference \x3d delegate.getPreference(uri);\n      if (preference \x3e fetchPreference) {\n        fetchPreference \x3d preference;\n      }\n    }\n    return fetchPreference;\n  }\n}\n\nexports \x3d RequestAdvisors;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/components/request_advisors/request_advisors.js\n");

$googDebugFname=undefined;
var $googDebugFname="searchbox/wiz/library/services/suggestions_fetcher_service.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.services.SuggestionsFetcherService\x27);\n\nconst DeviceHistoryService \x3d goog.require(\x27searchbox.wiz.services.DeviceHistoryService\x27);\nconst EventHandler \x3d goog.require(\x27goog.events.EventHandler\x27);\nconst EventType \x3d goog.require(\x27goog.net.EventType\x27);\nconst LoggingService \x3d goog.require(\x27searchbox.wiz.services.LoggingService\x27);\nconst ReadyState \x3d goog.require(\x27goog.net.XmlHttp.ReadyState\x27);\nconst Request \x3d goog.require(\x27searchbox.wiz.shared.Request\x27);\nconst RequestAdvisors \x3d goog.require(\x27searchbox.wiz.components.requestadvisors.RequestAdvisors\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\nconst Service \x3d goog.require(\x27wiz.Service\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst Uri \x3d goog.require(\x27goog.Uri\x27);\nconst XhrIo \x3d goog.require(\x27goog.net.XhrIo\x27);\nconst ZeroPrefixCacheService \x3d goog.require(\x27searchbox.wiz.services.ZeroPrefixCacheService\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst dom \x3d goog.require(\x27goog.dom\x27);\nconst googObject \x3d goog.require(\x27goog.object\x27);\nconst services \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst {FetchPreference, SuggestionType} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {registerService} \x3d goog.require(\x27wiz.service.registry\x27);\n\n/** @private @const{number} */\nconst MAX_CONCURRENT_CONNECTIONS_ \x3d 4;\n\n/** @private @const{string} */\nconst XSSI_PREFIX_ \x3d \x27)]}\\\x27\x27;\n\n/** @private @const{string} */\nconst QUERY_PARAMETER_ \x3d \x27q\x27;\n\n/** @private @const{string} */\nconst CARET_POSITION_PARAMETER_ \x3d \x27cp\x27;\n\n/** @private @const{string} */\nconst REQUEST_PATH_ \x3d \x27/complete/search\x27;\n\n/** @private @const{string} */\nconst DELETION_URL_KEY_ \x3d \x27du\x27;\n\n/** @package @const{number} */\nconst SUBTYPE_REFINEMENTS \x3d 71;\n\n/** @package @const{number} */\nconst IGNORED_REQUEST_ID \x3d -2;\n\nclass SuggestionsFetcherService extends Service {\n  static deps() {\n    return {\n      service: {\n        deviceHistory: services.DEVICE_HISTORY,\n        logging: services.LOGGING,\n        zeroPrefixCache: services.ZERO_PREFIX_CACHE,\n      },\n    };\n  }\n\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private @const {!LoggingService} */\n    this.logging_ \x3d response.service.logging;\n\n    /** @private {number} */\n    this.sequenceNumber_ \x3d 0;\n\n    /** @private {number} */\n    this.mostRecentRequestId_ \x3d -1;\n\n    /** @private {boolean} */\n    this.suppressRefinements_ \x3d false;\n\n    /** @private {Object\x3cstring, Response\x3e} */\n    this.responseCache_ \x3d {};\n\n    /** @private {string} */\n    this.sessionId_ \x3d google.kEI + \x27.\x27 + goog.now();\n\n    /** @private {Array\x3cConsumeOnceXhrReader\x3e} */\n    this.requestQueue_ \x3d [];\n\n    /** @private {ConsumeOnceXhrReader} */\n    this.deleteRequest_ \x3d null;\n\n    /** @private @const {!DeviceHistoryService} */\n    this.deviceHistory_ \x3d response.service.deviceHistory;\n\n    /** @private @const {!ZeroPrefixCacheService} */\n    this.zeroPrefixCache_ \x3d response.service.zeroPrefixCache;\n  }\n\n  /**\n   * @param {!Request} request\n   * @param {!SearchboxConfig} searchboxConfig\n   * @param {Function} onSuggestionsFetchedHandler\n   * @param {boolean\x3d} isBackgroundFetch\n   */\n  fetchSuggestions(\n      request,\n      searchboxConfig,\n      onSuggestionsFetchedHandler,\n      isBackgroundFetch \x3d false) {\n    const query \x3d request.getQuery();\n    const originalDisplayQuery \x3d searchboxConfig.getOriginalDisplayQuery();\n    if (!this.suppressRefinements_\n        \x26\x26 query\n        \x26\x26 query \x3d\x3d originalDisplayQuery) {\n\n      if (common.hasRefinements()) {\n        onSuggestionsFetchedHandler(query, this.createRefinementsResponse_());\n      } else if (!isBackgroundFetch) {\n        // Set this to true so that next time we would display the server\n        // response.\n        this.suppressRefinements_ \x3d true;\n      }\n      // We bail out here because if there are no refinements, we don\x27t want to\n      // proceed to fetch suggestions.\n      return;\n    }\n    if (!isBackgroundFetch) {\n      // Set this to true so that next time we would display the server\n      // response.\n      this.suppressRefinements_ \x3d true;\n\n      if (!query.trim()) {\n        // This is an active fetching, so we mark it as zero prefix suggestions\n        // enabled.\n        this.logging_.setZeroPrefixSuggestionsEnabled();\n      }\n    }\n    const requestId \x3d isBackgroundFetch\n        ? IGNORED_REQUEST_ID : this.sequenceNumber_++;\n    const uri \x3d new Uri()\n        .setPath(REQUEST_PATH_)\n        .setParameterValue(QUERY_PARAMETER_, request.getNormalizedQuery())\n        .setParameterValue(\n            CARET_POSITION_PARAMETER_, request.getCaretPosition())\n        .setParameterValue(\x27client\x27, searchboxConfig.getClientName())\n        .setParameterValue(\x27xssi\x27, \x27t\x27);\n\n    if (searchboxConfig.getRequestIdentifier()) {\n      uri.setParameterValue(\n          \x27gs_ri\x27, searchboxConfig.getRequestIdentifier());\n    }\n\n    const dataset \x3d searchboxConfig.getDataSet() || \x27\x27;\n    if (dataset) {\n      uri.setParameterValue(\x27ds\x27, dataset);\n    }\n\n    if (google.kHL) {\n      uri.setParameterValue(\x27hl\x27, google.kHL);\n    }\n\n    if (google.authuser) {\n      uri.setParameterValue(\x27authuser\x27, google.authuser);\n    }\n\n    if (originalDisplayQuery) {\n      uri.setParameterValue(\x27pq\x27, originalDisplayQuery);\n    }\n\n    if (searchboxConfig.getRichEntityThumbnailsEnabled()) {\n      // Device pixel ratio of the device. This helps to determine what\n      // thumbnail size should the server serves.\n      uri.setParameterValue(\x27dpr\x27, dom.getPixelRatio());\n    }\n\n    const psuggestEnabled \x3d searchboxConfig.getPsuggestEnabled() || false;\n    const deviceHistoryEnabled \x3d\n        searchboxConfig.getDeviceHistoryEnabled() || false;\n\n    uri.setParameterValue(\x27psi\x27, this.sessionId_);\n\n    if (deviceHistoryEnabled) {\n      const additionalRequestInfo \x3d\n          this.deviceHistory_.getAdditionalRequestInfo(\n              query, searchboxConfig.getDataSet() || \x27\x27, searchboxConfig);\n\n      googObject.forEach(\n          additionalRequestInfo,\n          (value, key) \x3d\x3e {\n            if (key \x26\x26 (value || value \x3d\x3d\x3d \x27\x27)) {\n              uri.setParameterValue(key, value);\n            }\n          });\n    }\n\n    // Allow request advisors to force/suppress requests.\n    switch (RequestAdvisors.getInstance().getFetchPreference(uri)) {\n      // TODO(yanjingz): Add support for other FetchPreference.\n      case FetchPreference.SUPPRESS_REQUEST:\n        return;\n      default:\n    }\n\n    if (!isBackgroundFetch \x26\x26\n        !request.getNormalizedQuery() \x26\x26\n        this.isRequestInSync_(requestId)) {\n      let zeroPrefixResponse \x3d new Response({});\n      if (psuggestEnabled) {\n        zeroPrefixResponse \x3d\n            this.zeroPrefixCache_.get(dataset) || zeroPrefixResponse;\n\n        if (zeroPrefixResponse.getSuggestions().length \x3e 0) {\n          this.logging_.incrementCacheHitCount();\n        }\n      }\n\n      if (deviceHistoryEnabled) {\n        this.addDeviceHistorySuggestions_(\n            request.getQuery(), dataset, zeroPrefixResponse, searchboxConfig);\n      }\n\n      if (zeroPrefixResponse.getSuggestions().length \x3e 0) {\n        onSuggestionsFetchedHandler(request.getQuery(), zeroPrefixResponse);\n        return;\n      }\n    }\n\n    const uriString \x3d uri.toString();\n    if (uriString in this.responseCache_) {\n      // This should always be true. The call here is just to update the most\n      // recent request ID.\n      if (this.isRequestInSync_(requestId)) {\n        this.logging_.incrementCacheHitCount();\n        onSuggestionsFetchedHandler(\n            request.getQuery(), this.responseCache_[uriString]);\n      }\n    } else {\n      // Cancel the oldest request if there are already too many requests in\n      // flight.\n      while (this.requestQueue_.length \x3e\x3d MAX_CONCURRENT_CONNECTIONS_) {\n        const leastRecentRequest \x3d this.requestQueue_.shift();\n        leastRecentRequest.clear();\n      }\n      const xhr \x3d new XhrIo();\n      const xhrReader \x3d new ConsumeOnceXhrReader(\n          xhr,\n          () \x3d\x3e {\n            // This is a user-triggered request and is successful, so we update\n            // the timing.\n            if (!isBackgroundFetch \x26\x26 xhr.isSuccess()) {\n              this.logging_.updateRoundTripTime(request);\n            }\n            this.consumeResponse_(\n                request, requestId, onSuggestionsFetchedHandler, xhr, dataset,\n                searchboxConfig, psuggestEnabled, deviceHistoryEnabled);\n          });\n      this.requestQueue_.push(xhrReader);\n      xhr.send(uri);\n    }\n  }\n\n  /**\n   * @param {!Request} request\n   * @param {number} requestId\n   * @param {Function} callback\n   * @param {XhrIo} xhr\n   * @param {string} dataset\n   * @param {!SearchboxConfig} searchboxConfig\n   * @param {boolean} psuggestEnabled\n   * @param {boolean} deviceHistoryEnabled\n   * @private\n   */\n  consumeResponse_(\n      request, requestId, callback, xhr, dataset, searchboxConfig,\n      psuggestEnabled, deviceHistoryEnabled) {\n    if (!this.isRequestInSync_(requestId)) {\n      // Drop out of sync responses.\n      return;\n    }\n\n    if (xhr.isSuccess()) {\n      const responseJson \x3d xhr.getResponseJson(XSSI_PREFIX_);\n      try {\n        const response \x3d new Response(responseJson);\n\n        // Updates the logging token received from server.\n        this.logging_.updateLoggingToken(response);\n\n        if (deviceHistoryEnabled) {\n          this.addDeviceHistorySuggestions_(\n              request.getQuery(), dataset, response, searchboxConfig);\n        }\n\n        // Cache the response.\n        if (!request.getNormalizedQuery() \x26\x26 psuggestEnabled) {\n          this.zeroPrefixCache_.put(dataset, responseJson);\n        } else {\n          this.responseCache_[xhr.getLastUri()] \x3d response;\n        }\n        callback(request.getQuery(), response);\n      } catch (ex) {\n        // Do nothing.\n        // TODO(hackson): log invalid response.\n      }\n    } else {\n      this.logging_.incrementConnectionRejectedRequestCount();\n    }\n  }\n\n  /**\n   * @param {!Suggestion} suggestion The suggestion to be removed.\n   * @param {string} dataset\n   * @param {Function\x3d} callback The callback to be invoked after the\n   *    deletion request is completed.\n   */\n  deleteSuggestion(suggestion, dataset, callback) {\n    if (suggestion.getType() \x3d\x3d SuggestionType.DEVICE_HISTORY) {\n      // TODO(hackson): Refactor this flow with the server removal path.\n      this.deviceHistory_.deleteQuery(suggestion.getVerbatim(), dataset);\n      // Since a deletion succeeded, we have to purge the entire cache to\n      // avoid stale response.\n      this.responseCache_ \x3d {};\n      callback(true);\n      return;\n    }\n    const deletionUrl \x3d suggestion.getParameter(DELETION_URL_KEY_);\n    if (!deletionUrl) {\n      callback(false);\n      return;\n    }\n    const xhr \x3d new XhrIo();\n    this.deleteRequest_ \x3d new ConsumeOnceXhrReader(\n        xhr,\n        () \x3d\x3e {\n          if (xhr \x26\x26 xhr.isSuccess()) {\n            // Since a deletion succeeded, we have to purge the entire cache to\n            // avoid stale response.\n            this.responseCache_ \x3d {};\n            this.zeroPrefixCache_.clear(dataset);\n            callback(true);\n          } else {\n            callback(false);\n          }\n        });\n    xhr.send(deletionUrl);\n  }\n\n  /**\n   * @returns {!Response} The response that contains refinements suggestions.\n   * @private\n   */\n  createRefinementsResponse_() {\n    let rawSuggestions \x3d [];\n    const refinements \x3d (google.pmc[\x27sb_wiz\x27] || {})[\x27rfs\x27];\n    if (refinements) {\n      for (const refinement of refinements) {\n        const rawSuggestion \x3d [refinement, 0, [SUBTYPE_REFINEMENTS], {}];\n        rawSuggestions.push(rawSuggestion);\n      }\n    }\n    return new Response([rawSuggestions, {}]);\n  }\n\n  /**\n   * @param {string} query\n   * @param {string} dataset\n   * @param {Response} response\n   * @param {!SearchboxConfig} searchboxConfig\n   * @private\n   */\n  addDeviceHistorySuggestions_(query, dataset, response, searchboxConfig) {\n    this.deviceHistory_.editResponse(\n        query, dataset || \x27\x27, response, searchboxConfig);\n  }\n\n  /**\n   * Checks whether the request (by its ID) is in sync and updates the most\n   * recent ID to this if so.\n   * @param {number} requestId The request ID.\n   * @return {boolean} Whether the request is in sync.\n   * @private\n   */\n  isRequestInSync_(requestId) {\n    if (requestId \x3d\x3d IGNORED_REQUEST_ID) {\n      // We don\x27t care about request whose ID is ignored.\n      return true;\n    }\n    if (requestId \x3c this.mostRecentRequestId_) {\n      return false;\n    }\n    this.mostRecentRequestId_ \x3d requestId;\n    return true;\n  }\n}\n\n/**\n * A simple XHR reader that supports consumption of the first response and drop\n * the rest. This is useful when the server only returns a small response once\n * (e.g. simple json object) and has some response irrelevant work before\n * actually finishing the request.\n */\nclass ConsumeOnceXhrReader {\n  /**\n   * @param {!XhrIo} xhr The XHR object that this class reads from.\n   * @param {Function\x3d} callback The callback once the response is consumed.\n   */\n  constructor(xhr, callback \x3d null) {\n    /** @private {XhrIo} */\n    this.xhr_ \x3d xhr;\n\n    /** @private {Function} */\n    this.callback_ \x3d callback;\n\n    /** @private {boolean} */\n    this.consumed_ \x3d false;\n\n    /** @private {EventHandler} */\n    this.eventHandler_ \x3d null;\n\n    this.setUpEventHandler_();\n  }\n\n  setUpEventHandler_() {\n    this.eventHandler_ \x3d new EventHandler(this);\n    this.eventHandler_.listen(\n        this.xhr_,\n        EventType.READY_STATE_CHANGE,\n        (event) \x3d\x3e {\n          if (this.xhr_ !\x3d event.target) {\n            return;\n          }\n          this.onReadyStateChanged_();\n        });\n  }\n\n  /**\n   * @return {XhrIo}\n   */\n  getXhr() {\n    return this.xhr_;\n  }\n\n  onReadyStateChanged_() {\n    const readyState \x3d this.xhr_.getReadyState();\n    if (readyState \x3c ReadyState.INTERACTIVE) {\n      return;\n\n    }\n    let responseText \x3d null;\n\n    // Sometimes browser might trigger state change call on small buffered size,\n    // causing incomplete response reading. We attempt to parse it and if it\n    // fails, we just wait for the next parse.\n    try {\n      responseText \x3d this.xhr_.getResponseJson(XSSI_PREFIX_);\n    } catch (ex) {\n      // Does nothing - responseText itself is always null here.\n    }\n\n    // We also make sure that getResponseText is not null in interactive mode\n    // before we continue.\n    if (readyState \x3d\x3d ReadyState.INTERACTIVE \x26\x26 !responseText) {\n      return;\n    }\n\n    if (responseText \x26\x26 !this.consumed_) {\n      this.consumed_ \x3d true;\n      this.callback_();\n    }\n\n    if (readyState \x3d\x3d ReadyState.COMPLETE) {\n      // If this is not consumed, still proceed to callback for error handling.\n      if (!this.consumed_) {\n        this.callback_();\n      }\n      this.clear();\n    }\n  }\n\n  clear() {\n    this.eventHandler_.removeAll();\n    if (this.xhr_) {\n      // clear out before aborting to avoid being reentered inside abort\n      const xhr \x3d this.xhr_;\n      this.xhr_ \x3d null;\n      xhr.abort();\n      xhr.dispose();\n    }\n  }\n}\n\nregisterService(services.SUGGESTIONS_FETCHER, SuggestionsFetcherService);\nexports \x3d SuggestionsFetcherService;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/services/suggestions_fetcher_service.js\n");

$googDebugFname=undefined;

var $googDebugFname="searchbox/wiz/library/components/request_advisors/dev_flags_request_advisor.js";
goog.loadModule("/**\n * @fileoverview The request advisor which adds the development CGI parameters\n * (expflags, e, esrch, expid) to the /complete/search request if it is present\n * in the base page URL.\n * @modName {wizDevFlagsMod}\n * @mods {searchbox.wiz.components.api.RequestAdvisor}\n */\ngoog.module(\x27searchbox.wiz.components.requestadvisors.DevFlagsRequestAdvisor\x27);\n\nconst RequestAdvisor \x3d goog.require(\x27searchbox.wiz.components.api.RequestAdvisor\x27);\nconst RequestAdvisors \x3d goog.require(\x27searchbox.wiz.components.requestadvisors.RequestAdvisors\x27);\nconst Uri \x3d goog.require(\x27goog.Uri\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst googString \x3d goog.require(\x27goog.string\x27);\nconst {FetchPreference} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\n\n/** @package @const {!Array\x3cstring\x3e} */\nconst DEV_FLAGS \x3d [\n  \x27e\x27,\n  \x27esrch\x27,\n  \x27expflags\x27,\n  \x27expid\x27,\n  \x27expid_c\x27,\n  \x27exprollouts\x27,\n  \x27sugexp\x27,\n  \x27uuld\x27,\n];\n\n/** @implements {RequestAdvisor} */\nclass DevFlagsRequestAdvisor {\n  /**\n   * @param {Uri} uri of the request.\n   * @return {FetchPreference} DONT_CARE, regardless.\n   * @override\n   */\n  getPreference(uri) {\n    var cgiPairs \x3d\n        common.extractParameters(googString.urlDecode(window.location.href));\n\n    for (const devFlag of DEV_FLAGS) {\n      if (cgiPairs[devFlag]) {\n        uri.setParameterValue(devFlag, cgiPairs[devFlag]);\n      }\n    }\n\n    return FetchPreference.DONT_CARE;\n  }\n}\n\nRequestAdvisors.registry().registerClass(DevFlagsRequestAdvisor);\n\nexports \x3d DevFlagsRequestAdvisor;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/components/request_advisors/dev_flags_request_advisor.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxm');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxm');

}catch(e){_DumpException(e)}
/* _Module_:HcFEGb */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('HcFEGb');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('HcFEGb');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('HcFEGb');

}catch(e){_DumpException(e)}
/* _Module_:dtPt4d */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('dtPt4d');
var $googDebugFname="searchbox/wiz/library/shared/dom_utils.js";
goog.loadModule("/** @pintomodule */\ngoog.module(\x27searchbox.wiz.shared.domUtils\x27);\n\n/**\n * @param {!string} name\n * @param {?string} value\n * @return {!Element} A hidden input element with specified name and value.\n * @private\n */\nexports.createHiddenInputField_ \x3d function(name, value) {\n  const inputElm \x3d document.createElement(\x27input\x27);\n  inputElm.type \x3d \x27hidden\x27;\n  inputElm.name \x3d name;\n  if (goog.isDef(value)) {\n    inputElm.value \x3d value;\n  }\n  return inputElm;\n};\n\n/**\n * @param {!Element} form The search form.\n * @param {!Object\x3cstring, string\x3e} params The additional parameters for search.\n */\nexports.setSearchFormParameters \x3d function(form, params) {\n  for (let key in params) {\n    const value \x3d params[key];\n    const existingInputElm \x3d form.querySelector(\x27input[name\x3d\x27 + key + \x27]\x27);\n    if (existingInputElm) {\n      existingInputElm.value \x3d value;\n    } else {\n      form.appendChild(exports.createHiddenInputField_(key, value));\n    }\n  }\n};\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/shared/dom_utils.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('dtPt4d');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('dtPt4d');

}catch(e){_DumpException(e)}
/* _Module_:sywk */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywk');
var $googDebugFname="javascript/apps/wiz/model/registry.js";
goog.loadModule("/**\n * @fileoverview Provides registration methods for Wiz ES6 models.\n * Each registration method binds the service ID of a Wiz object to its\n * constructor and applies class specific logic. The Wiz Id generator also\n * uses these registration methods to generate the right namespaces for the\n * Wiz Ids.\n */\ngoog.module(\x27wiz.model.registry\x27);\ngoog.module.declareLegacyNamespace();\n\nconst ServiceId \x3d goog.require(\x27fava.services.ServiceId\x27);\nconst model \x3d goog.require(\x27wiz.model\x27);\n\n\n/**\n * @param {!ServiceId\x3cT\x3e} id\n * @param {function(new:T, ?)} ctor\n * @return {function(new:T, ?)}\n * @template T\n */\nexports.registerModel \x3d (id, ctor) \x3d\x3e {\n  model.init(id, undefined, ctor);\n  return ctor;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/model/registry.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywk');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywk');

}catch(e){_DumpException(e)}
/* _Module_:syxa */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('syxa');
var $googDebugFname="searchbox/wiz/library/models/searchbox_config_model.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.models.SearchboxConfigModel\x27);\n\nconst Model \x3d goog.require(\x27wiz.Model\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\nconst models \x3d goog.require(\x27searchbox.wiz.models.models\x27);\nconst {registerModel} \x3d goog.require(\x27wiz.model.registry\x27);\n\nclass SearchboxConfigModel extends Model {\n  static deps() {\n    return {jsdata: {searchboxConfig: SearchboxConfig}};\n  }\n\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private @const {SearchboxConfig} */\n    this.searchboxConfig_ \x3d response.jsdata.searchboxConfig;\n  }\n\n  /**\n   * @return {SearchboxConfig} The searchbox config.\n   */\n  getSearchboxConfig() {\n    return this.searchboxConfig_;\n  }\n}\n\nregisterModel(models.SEARCHBOX_CONFIG, SearchboxConfigModel);\nexports \x3d SearchboxConfigModel;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/library/models/searchbox_config_model.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('syxa');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('syxa');

}catch(e){_DumpException(e)}
/* _Module_:CiVnBc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('CiVnBc');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/client_adapter_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.ClientAdapterController\x27);\n\nconst ClearButtonController \x3d goog.require(\x27searchbox.wiz.gws.mobile.ClearButtonController\x27);\nconst Controller \x3d goog.require(\x27wiz.Controller\x27);\nconst DeviceHistoryService \x3d goog.require(\x27searchbox.wiz.services.DeviceHistoryService\x27);\nconst InputBoxController \x3d goog.require(\x27searchbox.wiz.gws.mobile.InputBoxController\x27);\nconst LoggingService \x3d goog.require(\x27searchbox.wiz.services.LoggingService\x27);\nconst Property \x3d goog.require(\x27jsaction.Property\x27);\nconst Request \x3d goog.require(\x27searchbox.wiz.shared.Request\x27);\nconst Response \x3d goog.require(\x27searchbox.wiz.shared.Response\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\n/** @suppress {extraRequire} */\nconst SearchboxConfigModel \x3d goog.require(\x27searchbox.wiz.models.SearchboxConfigModel\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst SuggestionsBoxController \x3d goog.require(\x27searchbox.wiz.gws.mobile.SuggestionsBoxController\x27);\nconst SuggestionsFetcherService \x3d goog.require(\x27searchbox.wiz.services.SuggestionsFetcherService\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst domUtils \x3d goog.require(\x27searchbox.wiz.shared.domUtils\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst googEvents \x3d goog.require(\x27goog.events\x27);\nconst libraryModels \x3d goog.require(\x27searchbox.wiz.models.models\x27);\nconst libraryServices \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst nav \x3d goog.require(\x27gws.nav\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst {InputMethod, SearchMethod, ActionButtonClickType} \x3d goog.require(\x27searchbox.wiz.shared.constants\x27);\nconst {assert, assertElement} \x3d goog.require(\x27goog.asserts\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/** @final */\nclass ClientAdapterController extends Controller {\n  static deps() {\n    return {\n      preload: {\n        clearButton: controllers.CLEAR_BUTTON,\n        inputBox: controllers.INPUT_BOX,\n        suggestionsBox: controllers.SUGGESTIONS_BOX,\n      },\n      service: {\n        deviceHistory: libraryServices.DEVICE_HISTORY,\n        logging: libraryServices.LOGGING,\n        suggestionsFetcher: libraryServices.SUGGESTIONS_FETCHER,\n      },\n      controller: {\n        clearButton: xid(\x27clear_button\x27),\n        inputBox: xid(\x27input_box\x27),\n        suggestionsBox: xid(\x27suggestions_box\x27),\n      },\n      model: {\n        searchboxConfig: libraryModels.SEARCHBOX_CONFIG,\n      },\n    };\n  }\n\n  /**\n   * @param {!controllers.ClientAdapterControllerResponse} response\n   */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private @const {!ClearButtonController} */\n    this.clearButton_ \x3d response.controller.clearButton;\n\n    /** @private @const {!InputBoxController} */\n    this.inputBox_ \x3d response.controller.inputBox;\n\n    /** @private @const {!SuggestionsBoxController} */\n    this.suggestionsBox_ \x3d response.controller.suggestionsBox;\n\n    /** @private @const {!SuggestionsFetcherService} */\n    this.suggestionsFetcher_ \x3d response.service.suggestionsFetcher;\n\n    /** @private @const {!LoggingService} */\n    this.logging_ \x3d response.service.logging;\n\n    /** @private @const {!SearchboxConfig} */\n    this.searchboxConfig_ \x3d\n        assert(response.model.searchboxConfig.getSearchboxConfig());\n\n    /** @private @const {wiz.Query} */\n    this.logoContainer_ \x3d\n        this.getRoot().findByJsName(xid(\x27logo_container\x27));\n\n    /** @private @const {!DeviceHistoryService} */\n    this.deviceHistory_ \x3d response.service.deviceHistory;\n\n    /** @private @const {!Element} */\n    this.form_ \x3d assertElement(\n        this.getRoot().closest(wiz.Query.Matchers.byTagName(\x27form\x27)).el());\n\n    this.form_.addEventListener(\n        \x27submit\x27,\n        () \x3d\x3e {\n          this.maybeSaveQuery_();\n          this.setLoggingInHiddenFormFields_(SearchMethod.ENTER_KEY);\n          this.cleanUp_();\n        });\n\n    googEvents.listen(\n        document,\n        googEvents.EventType.CLICK,\n        event \x3d\x3e {\n          // If it is a click on any element within the client adapter,\n          // ignore it.\n          for (let elem \x3d event.target; elem \x26\x26 elem !\x3d document;) {\n            if (elem \x3d\x3d this.getRoot().el()) {\n              return;\n            }\n            // Some of the DOMs we used might have been grafted to somewhere\n            // else, causing wrong result with direct traversal by parentNode.\n            // One example is w-dialog in FRUIT (see cl/169616681). Hence we\n            // need to refer to its owner to correctly walk up the DOM tree.\n            elem \x3d elem[Property.OWNER] ?\n                elem[Property.OWNER] : elem.parentNode;\n          }\n          this.suggestionsBox_.setShown(false);\n        });\n\n    const searchButton \x3d\n        this.getRoot().findByJsName(xid(\x27search_button\x27)).el();\n\n    if (searchButton) {\n      // The type of the search button is \x27submit\x27 to make sure it works\n      // without wiz searchbox being loaded, but since we need to attach\n      // click handling to trap submit for adding parameters, we have to\n      // switch it back to type \x27button\x27 here.\n      searchButton.setAttribute(\x27type\x27, \x27button\x27);\n\n      wiz.jsaction.listen(searchButton, \x27click\x27, () \x3d\x3e {\n        if (common.normalizeQuery(this.inputBox_.getValue())) {\n          this.setLoggingInHiddenFormFields_(SearchMethod.SEARCH_BUTTON);\n          this.maybeSaveQuery_();\n          this.form_.submit();\n          this.cleanUp_();\n        }\n      });\n    }\n\n    // If the input has values, set the visibility of the clear button.\n    this.clearButton_.updateVisibility(!!this.inputBox_.getValue());\n\n    // Sets initial query to handle bfcache.\n    this.inputBox_.setInitialQuery(\n        this.searchboxConfig_.getOriginalDisplayQuery() || \x27\x27);\n\n    common.setUpBfCacheHandler(() \x3d\x3e this.suggestionsBox_.setShown(false));\n  }\n\n  /**\n   * Overrides the user input.\n   * @param {string} value The input value to override.\n   * @param {boolean\x3d} noEventsTriggered True if no event should be\n   *    fired. Defaults to false.\n   * @param {boolean\x3d} updateTiming True if no timing update is needed. Defaults\n   *    to true. Note that this is an no-op if noEventsTriggered is false.\n   * @private\n   */\n  overrideInput_(value, noEventsTriggered \x3d false, updateTiming \x3d true) {\n    this.inputBox_.overrideInput(value, noEventsTriggered, updateTiming);\n  }\n\n  /**\n   * @param {string} query\n   * @param {!Response} response\n   * @private\n   */\n  onSuggestionsFetchedHandler_(query, response) {\n    if (!this.inputBox_.getValue().startsWith(query)) {\n      // Drop irrelevant response.\n      return;\n    }\n    if (!this.inputBox_.isFocused()) {\n      // Do not attempt to render when the input is not focused.\n      return;\n    }\n    this.suggestionsBox_.render(query, response);\n  }\n\n  /**\n   * @param {string} query\n   */\n  fetchSuggestions(query) {\n    this.suggestionsBox_.startClearSuggestionsTimer();\n    this.suggestionsFetcher_.fetchSuggestions(\n        new Request(query, this.inputBox_.getCaretPosition()),\n        this.searchboxConfig_,\n        goog.bind(this.onSuggestionsFetchedHandler_, this));\n  }\n\n  /**\n   * @param {boolean} deleted Whether the deletion is successful.\n   * @private\n   */\n  deleteSuggestionCallback_(deleted) {\n    if (deleted) {\n      this.fetchSuggestions(this.inputBox_.getValue());\n    } else {\n      // Using broadcast instead of injecting dependencies can allow\n      // deferred instantiation of the snack bar.\n      wiz.jsaction.broadcast(this.getRoot().el(), events.deleteFailed);\n    }\n  }\n\n  /**\n   * @param {SearchMethod} searchMethod The search method.\n   * @private\n   */\n  setLoggingInHiddenFormFields_(searchMethod) {\n    const loggingParameters \x3d this.getLoggingParameters_(searchMethod);\n    domUtils.setSearchFormParameters(this.form_, loggingParameters);\n  }\n\n  /**\n   * @param {SearchMethod} searchMethod The search method.\n   * @return {!Object\x3cstring, ?string\x3e} The map of parameter key-value pairs\n   *    for logging.\n   * @private\n   */\n  getLoggingParameters_(searchMethod) {\n    return this.logging_.getLoggingParameters(\n        this.inputBox_.getValue(), searchMethod, this.searchboxConfig_);\n  }\n\n  /**\n   * @param {string\x3d} answerType\n   * @param {string\x3d} suggestionParameters\n   * @private\n   */\n  maybeSaveQuery_(answerType \x3d \x27\x27, suggestionParameters \x3d \x27\x27) {\n    if (this.searchboxConfig_.getDeviceHistoryEnabled()) {\n      this.deviceHistory_.saveQuery(\n          this.inputBox_.getValue(), this.searchboxConfig_.getDataSet() || \x27\x27,\n          answerType, suggestionParameters);\n    }\n  }\n\n  /** @private */\n  cleanUp_() {\n    this.logging_.resetLoggingState();\n  }\n\n  /**\n   * Clears the user input.\n   * @wizaction\n   */\n  clearInput() {\n    // Clearing input is not considered an edit action.\n    this.overrideInput_(\n        \x27\x27, false /* noEventsTriggered */, false /* updateTiming */);\n  }\n\n  /**\n   * Handles the case when the input is changed.\n   * @wizaction\n   */\n  inputChanged() {\n    this.clearButton_.updateVisibility(!!this.inputBox_.getValue());\n    this.fetchSuggestions(this.inputBox_.getValue());\n  }\n\n  /**\n   * Handles the case when the input is focused.\n   * @wizaction\n   */\n  inputFocused() {\n    // Hide the logo if it is displayed next to the input box.\n    this.logoContainer_.toggle(false);\n    // TODO(hackson): Should we fetch suggestion always? If user has no psuggest\n    // enabled, do not trigger inputChanged for zero prefix case.\n    const query \x3d this.inputBox_.getValue();\n    const queryMatchesDisplayQuery \x3d\n        query \x3d\x3d this.searchboxConfig_.getOriginalDisplayQuery();\n    if (!query || (queryMatchesDisplayQuery \x26\x26 common.hasRefinements())) {\n      this.inputChanged();\n    }\n  }\n\n  /**\n   * Handles redirection.\n   * @param{!wiz.Event\x3cstring\x3e} ev\n   * @wizaction\n   */\n  redirect(ev) {\n    let intentUrl \x3d ev.data;\n    const loggingParameters \x3d this.getLoggingParameters_(\n        SearchMethod.CLICKED_SUGGESTION);\n    for (let key in loggingParameters) {\n      intentUrl +\x3d \x27\x26\x27 + key + \x27\x3d\x27 + (loggingParameters[key] || \x27\x27);\n    }\n    nav.go(intentUrl);\n    this.cleanUp_();\n  }\n\n  /**\n   * Handles search.\n   * @param{!wiz.Event\x3c!events.SearchData\x3e} ev\n   * @wizaction\n   */\n  search(ev) {\n    const query \x3d ev.data.query || \x27\x27;\n    if (!query) {\n      return;\n    }\n    const extraParameters \x3d ev.data.parameters || {};\n    domUtils.setSearchFormParameters(this.form_, extraParameters);\n    this.setLoggingInHiddenFormFields_(SearchMethod.CLICKED_SUGGESTION);\n    this.overrideInput_(query, true);\n    this.suggestionsBox_.setShown(false);\n    if (!ev.data.skipSave) {\n      this.maybeSaveQuery_(\n          ev.data.answerType || \x27\x27, ev.data.suggestionParameters || \x27\x27);\n    }\n    this.form_.submit();\n    this.cleanUp_();\n  }\n\n  /**\n   * Handles action button click.\n   * @param{!wiz.Event\x3c!events.ActionClickData\x3e} ev\n   * @wizaction\n   */\n  actionButtonClicked(ev) {\n    const suggestion \x3d ev.data.suggestion;\n    if (!suggestion) {\n      return;\n    }\n    switch (ev.data.actionType) {\n      case ActionButtonClickType.REMOVE:\n        wiz.jsaction.trigger(\n            ev.targetElement.el(),\n            events.onSuggestionLongClick,\n            suggestion,\n            false);\n        break;\n      case ActionButtonClickType.QUERY_BUILDER:\n        this.logging_.addInputMethod(InputMethod.QUERY_BUILDER);\n        this.overrideInput_(suggestion.getVerbatim() + \x27 \x27);\n        break;\n    }\n  }\n\n  /**\n   * Handles suggestion deletion.\n   * @param {!wiz.Event\x3c!Suggestion\x3e} ev\n   * @wizaction\n   */\n  deleteSuggestion(ev) {\n    const suggestion \x3d ev.data;\n    this.suggestionsFetcher_.deleteSuggestion(\n        suggestion,\n        this.searchboxConfig_.getDataSet() || \x27\x27,\n        goog.bind(this.deleteSuggestionCallback_, this));\n  }\n\n  /**\n   * Handles post dialog closed actions.\n   * @wizaction\n   */\n  dialogClosed() {\n    this.inputBox_.focus();\n  }\n\n   /**\n   * Handles when suggestions are displayed or hidden.\n   * @param{!wiz.Event\x3cboolean\x3e} ev\n   * @wizaction\n   */\n  suggestionsShown(ev) {\n    const visible \x3d ev.data;\n    this.getRoot().toggleClass(\x27emcav\x27, visible);\n  }\n}\n\nregisterController(controllers.CLIENT_ADAPTER, ClientAdapterController);\nexports \x3d ClientAdapterController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/client_adapter_controller.js\n");

$googDebugFname=undefined;


/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('CiVnBc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('CiVnBc');

}catch(e){_DumpException(e)}
/* _Module_:xPR7tc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('xPR7tc');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/zero_prefix_initiator_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.ZeroPrefixInitiatorController\x27);\n\nconst DeviceHistoryService \x3d goog.require(\x27searchbox.wiz.services.DeviceHistoryService\x27);\nconst Request \x3d goog.require(\x27searchbox.wiz.shared.Request\x27);\nconst SearchboxConfig \x3d goog.require(\x27proto.gws.common.searchbox.protos.SearchboxConfig\x27);\n/** @suppress {extraRequire} */\nconst SearchboxConfigModel \x3d goog.require(\x27searchbox.wiz.models.SearchboxConfigModel\x27);\nconst SuggestionsFetcherService \x3d goog.require(\x27searchbox.wiz.services.SuggestionsFetcherService\x27);\nconst Uri \x3d goog.require(\x27goog.Uri\x27);\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst libraryModels \x3d goog.require(\x27searchbox.wiz.models.models\x27);\nconst libraryServices \x3d goog.require(\x27searchbox.wiz.services.services\x27);\nconst nav \x3d goog.require(\x27gws.nav\x27);\nconst {assert} \x3d goog.require(\x27goog.asserts\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n// LINT.IfChange\n/** @package @const {string} */\nconst SKIP_SAVE_PARAM \x3d \x27gs_ss\x27;\n// LINT.ThenChange(\n//     //depot/google3/java/com/google/gws/plugins/searchbox/flows/fetch/\\\n//         writers/jsonpv2/suggestions/QuerySuggestionWriterV1.java\n// )\n\n/**\n * @final\n */\nclass ZeroPrefixInitiatorController extends WizController {\n  static deps() {\n    return {\n      service: {\n        deviceHistory: libraryServices.DEVICE_HISTORY,\n        suggestionsFetcher: libraryServices.SUGGESTIONS_FETCHER,\n      },\n      model: {\n        searchboxConfig: libraryModels.SEARCHBOX_CONFIG,\n      },\n    };\n  }\n\n  /**\n   * @param {!controllers.ZeroPrefixInitiatorControllerResponse} response\n   */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private @const {!SuggestionsFetcherService} */\n    this.suggestionsFetcher_ \x3d response.service.suggestionsFetcher;\n\n    /** @private @const {!SearchboxConfig} */\n    this.searchboxConfig_ \x3d\n        assert(response.model.searchboxConfig.getSearchboxConfig());\n\n    /** @private @const {!DeviceHistoryService} */\n    this.deviceHistory_ \x3d response.service.deviceHistory;\n\n    if (this.searchboxConfig_.getDeviceHistoryEnabled()) {\n      const currentUri \x3d new Uri(nav.getLocation());\n      if (currentUri.getParameterValue(SKIP_SAVE_PARAM) !\x3d \x271\x27) {\n        this.deviceHistory_.saveQuery(\n            this.searchboxConfig_.getOriginalDisplayQuery() || \x27\x27,\n            this.searchboxConfig_.getDataSet() || \x27\x27);\n      }\n    }\n\n    // We perform a zero prefix fetch only when the user has psuggest enabled.\n    // For device history enabled users, the fetcher should have shortcut itself\n    // to avoid making a real network fetch. For none of the above, the zero\n    // prefix fetch is unnecessary.\n    if (this.searchboxConfig_.getPsuggestEnabled()) {\n      this.fetchSuggestions_();\n    }\n\n    if (this.searchboxConfig_.getFocusOnLoad()) {\n      // Focus the searchbox on load.\n      const inputBoxElement \x3d document.querySelector(\x27input[name\x3dq]\x27);\n      if (inputBoxElement) {\n        inputBoxElement.focus();\n      }\n    }\n  }\n\n  /** @private */\n  fetchSuggestions_() {\n    this.suggestionsFetcher_.fetchSuggestions(\n        new Request(\x27\x27 /* query */, 0 /* caretPosition */),\n        this.searchboxConfig_,\n        goog.nullFunction,\n        true /* isBackgroundFetch */);\n  }\n}\n\nregisterController(\n    controllers.ZERO_PREFIX_INITIATOR, ZeroPrefixInitiatorController);\nexports \x3d ZeroPrefixInitiatorController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/zero_prefix_initiator_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('xPR7tc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('xPR7tc');

}catch(e){_DumpException(e)}
/* _Module_:yQ43ff */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('yQ43ff');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('yQ43ff');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('yQ43ff');

}catch(e){_DumpException(e)}
/* _Module_:vWNDde */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('vWNDde');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('vWNDde');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('vWNDde');

}catch(e){_DumpException(e)}
/* _Module_:Fkg7bd */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('Fkg7bd');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('Fkg7bd');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('Fkg7bd');

}catch(e){_DumpException(e)}
/* _Module_:kopZwe */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('kopZwe');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/suggestion_dialog_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.SuggestionDialogController\x27);\n\nconst SafeHtml \x3d goog.require(\x27goog.html.SafeHtml\x27);\nconst Suggestion \x3d goog.require(\x27searchbox.wiz.shared.Suggestion\x27);\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst WizQuery \x3d goog.require(\x27wiz.Query\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst dialogEvents \x3d goog.require(\x27gws.fruit.dialog.events\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst htmlSanitizer \x3d goog.require(\x27security.sanitizer.htmlSanitizer\x27);\nconst jsaction \x3d goog.require(\x27gws.jsaction\x27);\nconst safe \x3d goog.require(\x27goog.dom.safe\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst {assert, assertElement} \x3d goog.require(\x27goog.asserts\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/** @const {string} */\nconst DATA_ASYNC_CONTEXT_ATTRIBUTE \x3d \x27data-async-context\x27;\n\n/**\n * The controller to render the suggestion dialog content.\n * @final\n */\nclass SuggestionDialogController extends WizController {\n  /** @param {!controllers.SuggestionDialogControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private @const {WizQuery} */\n    this.dialogContentMsg_ \x3d\n        this.getRoot().findByJsName(xid(\x27dialog_content_msg\x27));\n\n    /** @private @const {WizQuery} */\n    this.sendFeedbackButton_ \x3d\n        this.getRoot().findByJsName(xid(\x27feedback_button\x27));\n\n    /** @private @const {WizQuery} */\n    this.cancelButton_ \x3d this.getRoot().findByJsName(xid(\x27cancel_button\x27));\n\n    /** @private @const {WizQuery} */\n    this.okButton_ \x3d this.getRoot().findByJsName(xid(\x27ok_button\x27));\n\n    /** @private @const {WizQuery} */\n    this.deleteButton_ \x3d this.getRoot().findByJsName(xid(\x27delete_button\x27));\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion.\n   * @private\n   */\n  wireUpDeleteAction_(suggestion) {\n    if (!suggestion) {\n      return;\n    }\n    const deleteButtonEl \x3d assertElement(this.deleteButton_.el());\n    wiz.jsaction.removeAll(deleteButtonEl);\n    wiz.jsaction.listen(deleteButtonEl, \x27click\x27, function(ev) {\n      if (ev) {\n        common.preventDefault(ev.event);\n      }\n      // Close the dialog.\n      wiz.jsaction.trigger(deleteButtonEl, dialogEvents.close);\n      // Trigger deletion.\n      wiz.jsaction.trigger(\n          deleteButtonEl, events.deleteSuggestion, assert(suggestion), false);\n    }, this);\n  }\n\n  /**\n   * @param {Suggestion} suggestion The suggestion.\n   * @private\n   */\n  wireUpFeedback_(suggestion) {\n    if (!suggestion) {\n      // Hide the button when there\x27s no suggestion passed.\n      this.sendFeedbackButton_.toggle(false);\n      return;\n    }\n    // Update the async data context to include the suggestion.\n    const asyncDataNode \x3d\n        assertElement(this.sendFeedbackButton_\n                          .closest(WizQuery.Matchers.byAttribute(\n                              DATA_ASYNC_CONTEXT_ATTRIBUTE))\n                          .el());\n    let asyncDataContext \x3d\n        asyncDataNode.getAttribute(DATA_ASYNC_CONTEXT_ATTRIBUTE);\n    // Update the suggestion text.\n    asyncDataContext \x3d asyncDataContext.replace(\n        /suggestions:[^\\;]*/, \x27suggestions:\x27 + suggestion.getVerbatim());\n    // Update the suggestion type.\n    asyncDataContext \x3d asyncDataContext.replace(\n        /suggestions_types:[^\\;]*/,\n        \x27suggestions_types:\x27 + suggestion.getType());\n    // Update the suggestion subtypes.\n    asyncDataContext \x3d asyncDataContext.replace(\n        /suggestions_subtypes:[^\\;]*/,\n        \x27suggestions_subtypes:\x27 + suggestion.getSubtypes().join(\x27-\x27));\n\n    asyncDataNode.setAttribute(DATA_ASYNC_CONTEXT_ATTRIBUTE, asyncDataContext);\n  }\n\n  /**\n   * Decorates the dialog.\n   * @param {!wiz.Event\x3c!events.DialogData\x3e} ev\n   * @wizaction\n   */\n  decorateDialog(ev) {\n    const dialogData \x3d ev.data;\n    const htmlContent \x3d dialogData.content ?\n        htmlSanitizer.sanitizeHtmlAssertUnchanged(dialogData.content) :\n        SafeHtml.EMPTY;\n\n    safe.setInnerHtml(assertElement(this.dialogContentMsg_.el()), htmlContent);\n    this.sendFeedbackButton_.toggle(!!dialogData.showFeedback);\n    this.cancelButton_.toggle(!!dialogData.showCancel);\n    this.okButton_.toggle(!!dialogData.showOk);\n    this.deleteButton_.toggle(!!dialogData.showDelete);\n    // TODO(hackson): Wire up click listeners for the rest of the buttons.\n    if (dialogData.showDelete) {\n      this.wireUpDeleteAction_(dialogData.suggestion);\n    }\n\n    if (dialogData.showFeedback) {\n      this.wireUpFeedback_(dialogData.suggestion);\n    }\n  }\n\n  /**\n   * Triggers a feedback dialog. As such, the dialog would also close itself.\n   * @wizaction\n   */\n  triggerFeedback() {\n    const sendFeedbackButtonEl \x3d assertElement(this.sendFeedbackButton_.el());\n    // Trigger the duffy flow to show the feedback form.\n    jsaction.invokeAction(\x27duf3.r\x27, sendFeedbackButtonEl);\n    // The dialog has to be dismissed to allow feedback form to scroll to the\n    // right position.\n    this.closeDialog(null);\n  }\n\n  /**\n   * Closes the dialog.\n   * @param {wiz.Event} ev\n   * @wizaction\n   */\n  closeDialog(ev) {\n    if (ev) {\n      common.preventDefault(ev.event);\n    }\n    wiz.jsaction.trigger(this.getRoot().el(), dialogEvents.close);\n  }\n}\n\nregisterController(\n    controllers.SUGGESTION_DIALOG, SuggestionDialogController);\nexports \x3d SuggestionDialogController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/suggestion_dialog_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('kopZwe');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('kopZwe');

}catch(e){_DumpException(e)}
/* _Module_:czrJpf */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('czrJpf');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/snack_bar_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.SnackBarController\x27);\n\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst messages \x3d goog.require(\x27searchbox.wiz.shared.messages\x27);\nconst scheduler \x3d goog.require(\x27search.task.scheduler\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/**\n * The duration of the snack bar being displayed in milliseconds.\n * @private @const {number}\n */\nconst SNACK_BAR_DISPLAY_TIMEOUT_MS_ \x3d 2400;\n\n/**\n * @private @const {string}\n */\nconst SNACK_BAR_SHOW_CLASS_ \x3d \x27GLOBAL__sb_sbs\x27;\n\n/**\n * @private @const {string}\n */\nconst SNACK_BAR_DISMISS_CLASS_ \x3d \x27GLOBAL__sb_sbd\x27;\n\n/**\n * The controller to render content on the snack bar.\n * @final\n */\nclass SnackBarController extends WizController {\n  /** @param {!controllers.SnackBarControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n    /** @private @const {wiz.Query} */\n    this.snackBarContainer_ \x3d this.getRoot();\n\n    /** @private @const {wiz.Query} */\n    this.snackBarText_ \x3d this.getRoot().findByJsName(xid(\x27snack_bar_text\x27));\n\n    /** @private {?number} */\n    this.dismissSnackBarTask_ \x3d null;\n  }\n\n  /**\n   * @private\n   */\n  showSnackBar_() {\n    this.snackBarContainer_.toggleClass(SNACK_BAR_SHOW_CLASS_, true);\n    this.snackBarContainer_.toggleClass(SNACK_BAR_DISMISS_CLASS_, false);\n    if (this.dismissSnackBarTask_) {\n      scheduler.clearTimeout(this.dismissSnackBarTask_);\n    }\n    this.dismissSnackBarTask_ \x3d scheduler.setTimeout(() \x3d\x3e {\n      this.dismissSnackBar_();\n    }, SNACK_BAR_DISPLAY_TIMEOUT_MS_);\n  }\n\n  /**\n   * @private\n   */\n  dismissSnackBar_() {\n    this.dismissSnackBarTask_ \x3d null;\n    this.snackBarContainer_.toggleClass(SNACK_BAR_DISMISS_CLASS_, true);\n    this.snackBarContainer_.toggleClass(SNACK_BAR_SHOW_CLASS_, false);\n  }\n\n  /**\n   * Decorates the snack bar content when deletion failed.\n   * @wizaction\n   */\n  deleteFailed() {\n    this.snackBarText_.el().innerHTML \x3d messages.MSG_DELETE_FAILED;\n    this.showSnackBar_();\n  }\n}\n\nregisterController(controllers.SNACK_BAR, SnackBarController);\nexports \x3d SnackBarController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/snack_bar_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('czrJpf');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('czrJpf');

}catch(e){_DumpException(e)}
/* _Module_:uz938c */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('uz938c');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('uz938c');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('uz938c');

}catch(e){_DumpException(e)}
/* _Module_:synx */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('synx');
var $googDebugFname="javascript/closure/structs/queue.js";
eval("// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \x22License\x22);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \x22AS-IS\x22 BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Datastructure: Queue.\n *\n * @author ozgur@google.com (Ozgur D. Sahin)\n * @author kirpichov@google.com (Eugene Kirpichov)\n *\n * This file provides the implementation of a FIFO Queue structure.\n * API is similar to that of com.google.common.collect.IntQueue\n *\n * The implementation is a classic 2-stack queue.\n * There\x27s a \x22front\x22 stack and a \x22back\x22 stack.\n * Items are pushed onto \x22back\x22 and popped from \x22front\x22.\n * When \x22front\x22 is empty, we replace \x22front\x22 with reverse(back).\n *\n * Example:\n * front                         back            op\n * []                            []              enqueue 1\n * []                            [1]             enqueue 2\n * []                            [1,2]           enqueue 3\n * []                            [1,2,3]         dequeue -\x3e ...\n * [3,2,1]                       []              ... -\x3e 1\n * [3,2]                         []              enqueue 4\n * [3,2]                         [4]             dequeue -\x3e 2\n * [3]                           [4]\n *\n * Front and back are simple javascript arrays. We rely on\n * Array.push and Array.pop being O(1) amortized.\n *\n * Note: In V8, queues, up to a certain size, can be implemented\n * just fine using Array.push and Array.shift, but other JavaScript\n * engines do not have the optimization of Array.shift.\n *\n */\n\ngoog.provide(\x27goog.structs.Queue\x27);\n\ngoog.require(\x27goog.array\x27);\n\n\n\n/**\n * Class for FIFO Queue data structure.\n *\n * @constructor\n * @template T\n */\ngoog.structs.Queue \x3d function() {\n  /**\n   * @private {!Array\x3cT\x3e} Front stack. Items are pop()\x27ed from here.\n   */\n  this.front_ \x3d [];\n  /**\n   * @private {!Array\x3cT\x3e} Back stack. Items are push()\x27ed here.\n   */\n  this.back_ \x3d [];\n};\n\n\n/**\n * Flips the back stack onto the front stack if front is empty,\n * to prepare for peek() or dequeue().\n *\n * @private\n */\ngoog.structs.Queue.prototype.maybeFlip_ \x3d function() {\n  if (goog.array.isEmpty(this.front_)) {\n    this.front_ \x3d this.back_;\n    this.front_.reverse();\n    this.back_ \x3d [];\n  }\n};\n\n\n/**\n * Puts the specified element on this queue.\n * @param {T} element The element to be added to the queue.\n */\ngoog.structs.Queue.prototype.enqueue \x3d function(element) {\n  this.back_.push(element);\n};\n\n\n/**\n * Retrieves and removes the head of this queue.\n * @return {T} The element at the head of this queue. Returns undefined if the\n *     queue is empty.\n */\ngoog.structs.Queue.prototype.dequeue \x3d function() {\n  this.maybeFlip_();\n  return this.front_.pop();\n};\n\n\n/**\n * Retrieves but does not remove the head of this queue.\n * @return {T} The element at the head of this queue. Returns undefined if the\n *     queue is empty.\n */\ngoog.structs.Queue.prototype.peek \x3d function() {\n  this.maybeFlip_();\n  return goog.array.peek(this.front_);\n};\n\n\n/**\n * Returns the number of elements in this queue.\n * @return {number} The number of elements in this queue.\n */\ngoog.structs.Queue.prototype.getCount \x3d function() {\n  return this.front_.length + this.back_.length;\n};\n\n\n/**\n * Returns true if this queue contains no elements.\n * @return {boolean} true if this queue contains no elements.\n */\ngoog.structs.Queue.prototype.isEmpty \x3d function() {\n  return goog.array.isEmpty(this.front_) \x26\x26 goog.array.isEmpty(this.back_);\n};\n\n\n/**\n * Removes all elements from the queue.\n */\ngoog.structs.Queue.prototype.clear \x3d function() {\n  this.front_ \x3d [];\n  this.back_ \x3d [];\n};\n\n\n/**\n * Returns true if the given value is in the queue.\n * @param {T} obj The value to look for.\n * @return {boolean} Whether the object is in the queue.\n */\ngoog.structs.Queue.prototype.contains \x3d function(obj) {\n  return goog.array.contains(this.front_, obj) ||\n      goog.array.contains(this.back_, obj);\n};\n\n\n/**\n * Removes the first occurrence of a particular value from the queue.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n */\ngoog.structs.Queue.prototype.remove \x3d function(obj) {\n  return goog.array.removeLast(this.front_, obj) ||\n      goog.array.remove(this.back_, obj);\n};\n\n\n/**\n * Returns all the values in the queue.\n * @return {!Array\x3cT\x3e} An array of the values in the queue.\n */\ngoog.structs.Queue.prototype.getValues \x3d function() {\n  var res \x3d [];\n  // Add the front array in reverse, then the back array.\n  for (var i \x3d this.front_.length - 1; i \x3e\x3d 0; --i) {\n    res.push(this.front_[i]);\n  }\n  var len \x3d this.back_.length;\n  for (var i \x3d 0; i \x3c len; ++i) {\n    res.push(this.back_[i]);\n  }\n  return res;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/closure/structs/queue.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('synx');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('synx');

}catch(e){_DumpException(e)}
/* _Module_:sywm */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywm');
var $googDebugFname="java/com/google/apps/framework/data/client/middleware/traversers.js";
eval("/**\n * @fileoverview Allows registering functions that for a given proto of a type\n * return all the contained protos of another type. I.e. a function that for a\n * stream proto returns all the updates contained in that stream.\n * TODO(tomnguyen) Put in traversers documentation when it is in AF data instead\n * of Wiz.\n */\n\ngoog.provide(\x27af.data.middleware.traversers\x27);\n\ngoog.require(\x27af.data.middleware.JsdataMessage\x27);\ngoog.require(\x27af.data.middleware.idGenerators\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.object\x27);\ngoog.require(\x27goog.structs.Queue\x27);\ngoog.require(\x27xid\x27);\n\n\n\n/**\n * @const {!Object\x3cstring,\n *     !Object\x3cstring, !Array\x3c!af.data.middleware.traversers.TraversalInfo_\x3e\x3e\x3e}\n * @private\n */\naf.data.middleware.traversers.registry_ \x3d {};\n\n\n/**\n * @const {!Object\x3cstring,\n *     !Array\x3cstring\x3e\x3e}\n * @private\n */\naf.data.middleware.traversers.transitiveRegistry_ \x3d {};\n\n\n/**\n * A function that given a proto returns an array of protos of another type.\n * @typedef {{\n *   fn: function(!jspb.Message):!Array\x3c!jspb.Message\x3e,\n *   ctor:function(new:jspb.Message, Array\x3d)\n * }}\n * @private\n */\naf.data.middleware.traversers.TraversalInfo_;\n\n\n/**\n * @const {?goog.log.Logger}\n * @private\n */\naf.data.middleware.traversers.logger_ \x3d\n    goog.log.getLogger(\x27af.data.middleware.traversers\x27);\n\n\n/**\n * Register a function that for a proto of type {@see fromMessageCtor} returns\n * an array of protos of type {@see toMessageCtor}.\n * This is used when the wizJsData function is used to bind a type that was\n * never put directly into initial data on the server side (i.e. a response\n * wrapper was put in initial data but the code requests the wrapped type or\n * a list of items was put into initial data, but this requests an item from\n * the list).\n * @param {function(new:FROM)|!af.data.middleware.JsdataMessage\x3cFROM\x3e} fromMessageCtor\n * @param {function(new:TO)|!af.data.middleware.JsdataMessage\x3cTO\x3e} toMessageCtor\n * @param {function(FROM):!Array\x3cTO\x3e} fn A function that maps protos of type\n *     FROM to an array of protos of type TO that are contained in it.\n * @template FROM, TO\n */\naf.data.middleware.traversers.map \x3d function(\n    fromMessageCtor, toMessageCtor, fn) {\n  if (toMessageCtor instanceof af.data.middleware.JsdataMessage) {\n    toMessageCtor \x3d toMessageCtor.messageCtor;\n  }\n  var toMessageXid \x3d af.data.middleware.JsdataMessage.getXid(toMessageCtor);\n  af.data.middleware.traversers.mapExtension(fromMessageCtor, toMessageXid, fn);\n};\n\n\n/**\n * Register a function that for a proto of type {@see fromMessageCtor} returns\n * an array of protos of type {@see toMessageCtor}.\n * This is used to map extensions, as it is preferable not to load the\n * TO whenever possible. For docs on these parameters see above.\n * @param {function(new:FROM)|!af.data.middleware.JsdataMessage\x3cFROM\x3e}\n *    fromMessageCtor\n * @param {xid.String} toMessageXid\n * @param {function(FROM):!Array\x3cTO\x3e} fn\n * @template FROM, TO\n */\naf.data.middleware.traversers.mapExtension \x3d function(\n    fromMessageCtor, toMessageXid, fn) {\n  if (fromMessageCtor instanceof af.data.middleware.JsdataMessage) {\n    fromMessageCtor \x3d fromMessageCtor.messageCtor;\n  }\n  var fromMessageXid \x3d af.data.middleware.JsdataMessage.getXid(fromMessageCtor);\n  if (!af.data.middleware.traversers.registry_[fromMessageXid]) {\n    af.data.middleware.traversers.registry_[fromMessageXid] \x3d {};\n  }\n  if (goog.DEBUG) {\n    fn.displayName \x3d \x27# traverser from \x27 + fromMessageXid + \x27 to \x27 +\n        toMessageXid;\n  }\n  if (!af.data.middleware.traversers.registry_[fromMessageXid][toMessageXid]) {\n    af.data.middleware.traversers.registry_[fromMessageXid][toMessageXid] \x3d [];\n  }\n  // This is an array because there may be multiple instances of the target\n  // message in the original message (fromMessageXid).\n  af.data.middleware.traversers.registry_[fromMessageXid][toMessageXid].push({\n    ctor: fromMessageCtor,\n    fn: fn\n  });\n};\n\n\n/**\n * Returns the constructor for the source of the traversal between the two\n * given message types.\n * This is used by the data resolver to be able to make instances of\n * the protos that are resolvable towards the target type.\n * @param {string} fromMessageXid\n * @param {string} toMessageXid\n * @return {?function(new: jspb.Message, !Array\x3d)}\n * TODO(tomnguyen) Make @package once migration is complete.\n */\naf.data.middleware.traversers.getTraversalSourceCtor \x3d\n    function(fromMessageXid, toMessageXid) {\n  var infos \x3d af.data.middleware.traversers.getTraversals_(\n      fromMessageXid, toMessageXid);\n  if (infos.length \x3d\x3d 0) {\n    return null;\n  }\n  return infos[0].ctor;\n};\n\n\n/**\n * Searches for a message with the given id inside of the given message.\n * Returns undefined if the id was not found.\n * The lookup is amortized O(1), but the first time it is called for a given\n * container message and response type it may run a O(n) algorithm to prime\n * the cache.\n * Note: If a given proto type can reached over two or more traversal paths,\n * only one of them will actually ever be used and the others will be ignored.\n * @param {!jspb.Message} container\n * @param {string} id Message key of the form typeXid;primaryKey of the proto\n *     that should be found.\n * @param {string\x3d} opt_toMessageXid MessageXid of message to be found. This can\n *     optionally be provided by callers if they know it already to avoid\n *     needing to compute it from the id string.\n * @param {boolean\x3d} opt_skipTraverserCache Re-run traversers when attempting to\n *     locate the message.\n * @return {!jspb.Message|undefined}\n */\naf.data.middleware.traversers.findById \x3d\n    function(container, id, opt_toMessageXid, opt_skipTraverserCache) {\n  if (!container.messageXid) {\n    // Some messages in the cache might not have annotations.\n    goog.log.info(\n        af.data.middleware.traversers.logger_, \x27Message \x3c\x27 +\n        (container.constructor.displayName || container.constructor.name) +\n        \x27\x3e is missing (jspb.generate_xid) and will be skipped in middleware.\x27);\n    return undefined;\n  }\n  var toMessageXid \x3d opt_toMessageXid || id.split(\x27;\x27)[0];\n  xid.assertXidLikeString(toMessageXid);\n  var fromMessageXid \x3d xid.assertXidLikeString(container.messageXid);\n\n  if (toMessageXid \x3d\x3d fromMessageXid) {\n    if (af.data.middleware.idGenerators.getFullId(container) \x3d\x3d id) {\n      return container;\n    }\n    return undefined;\n  }\n  var traversalPaths \x3d af.data.middleware.traversers.getTraversals_(fromMessageXid,\n      toMessageXid);\n  if (traversalPaths.length \x3d\x3d 0) {\n    return undefined;\n  }\n  var result \x3d af.data.middleware.traversers.runAndCacheTraversers_(\n      container, traversalPaths, toMessageXid, opt_skipTraverserCache);\n  goog.asserts.assert(result.map,\n      \x27Expected to receive a map from the id to the message xid. This should\x27 +\n      \x27 not happen as otherwise an error should have occured before calling\x27 +\n      \x27 this method.\x27);\n  return result.map[id];\n};\n\n\n/**\n * Given a message, returns all traversable submessages.\n * TODO(tomnguyen): Investigate caching reachable messages.\n * @param {!jspb.Message} msg\n * @return {!Array\x3c!jspb.Message\x3e}\n */\naf.data.middleware.traversers.getReachableMessages \x3d function(msg) {\n  var messages \x3d [];\n  var workQueue \x3d new goog.structs.Queue();\n  workQueue.enqueue(msg);\n  while (!workQueue.isEmpty()) {\n    var currentMessage \x3d workQueue.dequeue();\n    if (af.data.middleware.idGenerators.hasIdSet(currentMessage)) {\n      messages.push(currentMessage);\n    } else {\n      goog.log.info(\n          af.data.middleware.traversers.logger_,\n          \x27Found a message that was traversable but did not have \x27 +\n              \x27identified_by_field set. This message was \x27 +\n              currentMessage.messageXid);\n    }\n    var messageXid, traversals;\n    if (!(messageXid \x3d currentMessage.messageXid) ||\n        !(traversals \x3d af.data.middleware.traversers.registry_[messageXid]))\n    {\n      continue;\n    }\n    goog.object.forEach(traversals, function(traversal) {\n      goog.array.forEach(traversal, function(traversalInfo) {\n        var submessages \x3d traversalInfo.fn(currentMessage);\n        goog.array.forEach(submessages, function(submessage) {\n          if (submessage !\x3d null) {\n            workQueue.enqueue(submessage);\n          }\n        });\n      });\n    });\n  }\n  return messages;\n};\n\n/**\n * For a given message, returns all the messages of a given type that it\n * contains.\n * @param {!jspb.Message} container\n * @param {string} targetTypeMessageXid\n * @return {!Array\x3c!jspb.Message\x3e}\n */\naf.data.middleware.traversers.findAllOfType \x3d function(container,\n    targetTypeMessageXid) {\n  xid.assertXidLikeString(targetTypeMessageXid);\n  var fromMessageXid \x3d xid.assertXidLikeString(container.messageXid);\n\n  if (fromMessageXid \x3d\x3d targetTypeMessageXid) {\n    return [container];\n  }\n\n  var traversalPaths \x3d af.data.middleware.traversers.getTraversals_(\n      fromMessageXid, targetTypeMessageXid);\n  if (traversalPaths.length \x3d\x3d 0) {\n    // No traversal path exists.\n    return [];\n  }\n  var result \x3d af.data.middleware.traversers.runAndCacheTraversers_(\n      container, traversalPaths, targetTypeMessageXid);\n\n  return result.list;\n};\n\n\n/**\n * Returns the {@see af.data.middleware.traversers.TraversalInfo_} for protos\n * of the given message xids.\n * @param {string} fromMessageXid\n * @param {string} toMessageXid\n * @return {!Array\x3c!af.data.middleware.traversers.TraversalInfo_\x3e}\n * @private\n */\naf.data.middleware.traversers.getTraversals_ \x3d function(fromMessageXid,\n    toMessageXid) {\n  xid.assertXidLikeString(fromMessageXid);\n  xid.assertXidLikeString(toMessageXid);\n  var from \x3d af.data.middleware.traversers.registry_[fromMessageXid];\n  if (!from) {\n    return [];\n  }\n  var traversalPaths \x3d from[toMessageXid];\n  if (traversalPaths) {\n    return traversalPaths;\n  }\n\n  // There is no direct traversal available. See if any of the traversal\n  // available for fromMessageXid allow for an indirect path to the destination.\n  from[toMessageXid] \x3d /** {!Array\x3c!af.data.middleware.traversers.TraversalInfo_\x3e} */ ([]);\n  for (var viaMessageXid in from) {\n    traversalPaths \x3d from[viaMessageXid];\n    goog.array.forEach(traversalPaths, function(info) {\n      var vias \x3d af.data.middleware.traversers.getTraversals_(\n          viaMessageXid, toMessageXid);\n      goog.array.forEach(vias, function(via) {\n        var traversal \x3d function(message) {\n          var result \x3d [];\n          // Traverse to intermediate type.\n          var intermediate \x3d info.fn(message);\n          for (var i \x3d 0; i \x3c intermediate.length; i++) {\n            // and then for each of the result items execute traversal to the\n            // destination type flattening the results into a single array.\n            result.push.apply(result, via.fn(intermediate[i]));\n          }\n          return result;\n        };\n        if (goog.DEBUG) {\n          traversal.displayName \x3d \x27# traverser from \x27 + fromMessageXid +\n              \x27 to \x27 + toMessageXid + \x27 via \x27 + viaMessageXid;\n        }\n        from[toMessageXid].push({\n          fn: traversal,\n          ctor: info.ctor\n        });\n      });\n    });\n  }\n  return from[toMessageXid];\n};\n\n\n\n/**\n * For a given message type, returns a list of types that is contains.\n * I.e. given a stream of posts, this would return [\x22posts\x22].\n * @param {string} fromMessageXid\n * @return {!Array\x3cstring\x3e} Message xids referencable from the input message\n *     xid.\n */\naf.data.middleware.traversers.getReachableMessageXids \x3d function(fromMessageXid) {\n  xid.assertXidLikeString(fromMessageXid);\n  var cached \x3d af.data.middleware.traversers.transitiveRegistry_[fromMessageXid];\n  if (cached) {\n    return cached;\n  }\n  var direct \x3d af.data.middleware.traversers.registry_[fromMessageXid];\n  var reachable \x3d [];\n  if (!direct) {\n    // Do not cache\n    return reachable;\n  }\n  if (direct) {\n    for (var to in direct) {\n      reachable.push(to);\n      reachable.push.apply(reachable,\n          af.data.middleware.traversers.getReachableMessageXids(to));\n    }\n  }\n  return af.data.middleware.traversers.transitiveRegistry_[fromMessageXid] \x3d\n      reachable;\n};\n\n\n/**\n * Clears the tarversal cache for a given container. Should be called when\n * the contents of the a proto (somewhere deeply) changed.\n * @param {!jspb.Message} container\n */\naf.data.middleware.traversers.invalidateCache \x3d function(container) {\n  container.toArray().data$traversalCache_ \x3d null;\n};\n\n\n/**\n * Actually runs traversers, but only if there isn\x27t a cached version of the\n * same traversal.\n * @param {!jspb.Message} container\n * @param {!Array\x3c!af.data.middleware.traversers.TraversalInfo_\x3e} traversals\n * @param {string} toMessageXid\n * @param {boolean\x3d} opt_skipTraverserCache Prevent use of the cached version of\n *     the traversal, if one exists.\n * @return {{list:!Array\x3c!jspb.Message\x3e,map:?Object\x3cstring,!jspb.Message\x3e}}\n * @private\n */\naf.data.middleware.traversers.runAndCacheTraversers_ \x3d\n    function(container, traversals, toMessageXid, opt_skipTraverserCache) {\n  // We cache inside the backing array instead of the message itself because\n  // the instances from initial data created through af.data.InstanceIdResolver\n  // are not the same that are returned from initial data service for lookups\n  // by requests, but they do share the same backing array.\n  var array \x3d container.toArray();\n  // Returns a cached traversal result or runs the traverses and then caches\n  // the result in the container messages.\n  if (!array.data$traversalCache_) {\n    array.data$traversalCache_ \x3d {};\n  }\n  var cache \x3d array.data$traversalCache_[toMessageXid];\n  var skipTraverserCache \x3d !!opt_skipTraverserCache;\n  if (cache \x26\x26 !skipTraverserCache) {\n    return cache;\n  }\n  cache \x3d array.data$traversalCache_[toMessageXid] \x3d {\n    list: [],\n    map: {}\n  };\n  goog.array.forEach(traversals, function(traversal) {\n    var messages \x3d traversal.fn(container);\n    goog.asserts.assertArray(messages,\n        \x27The af.data.middleware.traversers.map function from \x3c\x27 +\n        container.messageXid + \x27\x3e to \x3c\x27 + toMessageXid +\n        \x27\x3e should return an array.\x27);\n    cache.list.push.apply(cache.list, messages);\n  });\n\n  if (af.data.middleware.idGenerators.hasIdGenerator(toMessageXid)) {\n    // Cache map from id to message if an id mapping exists.\n    goog.array.forEach(cache.list, function(m) {\n      cache.map[af.data.middleware.idGenerators.getFullId(m)] \x3d m;\n    });\n  }\n  return cache;\n};\n\n//# sourceURL\x3dhttps://qs/java/com/google/apps/framework/data/client/middleware/traversers.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywm');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywm');

}catch(e){_DumpException(e)}
/* _Module_:sywn */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('sywn');
var $googDebugFname="javascript/apps/wiz/data/clients/appsframework/resolver.js";
eval("/**\n * @fileoverview\n * @pintomodule\n * @enhanceable\n * @suppress {missingProperties} See: b/33430503\n */\ngoog.provide(\x27wiz.data.clients.appsframework.Resolver\x27);\n\ngoog.require(\x27af.data.middleware.JsdataMessage\x27);\ngoog.require(\x27af.data.middleware.traversers\x27);\ngoog.require(\x27goog.Promise\x27);\ngoog.require(\x27goog.array\x27);\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27goog.dom\x27);\ngoog.require(\x27goog.log\x27);\ngoog.require(\x27goog.string\x27);\ngoog.require(\x27jspb.Message\x27);\ngoog.require(\x27wiz.data.InitialDataInterface\x27);\ngoog.require(\x27wiz.data.clients.appsframework.services\x27);\ngoog.require(\x27wiz.data.jsdata\x27);\ngoog.require(\x27wiz.service\x27);\ngoog.require(\x27xid\x27);\n\n\n\n/**\n * A class for resolving jsdata annotations in the DOM. Use this through the\n * jsdata wiz binding defined in {@see wiz.data.clients.appsframework.binding}.\n * @constructor @struct\n * @extends {wiz.Object}\n */\nwiz.data.clients.appsframework.Resolver \x3d wiz.service(\n    wiz.data.clients.appsframework.services.RESOLVER,\n    {service: {initialData: wiz.data.InitialDataInterface}},\n    function(response) {\n      /** @private @const {!wiz.data.InitialDataInterface} */\n      this.initialDataService_ \x3d response.service.initialData;\n\n      /** @private @const {?goog.log.Logger} */\n      this.logger_ \x3d\n          goog.log.getLogger(\x27wiz.data.clients.appsframework.Resolver\x27);\n    });\n\n\n/**\n * Info parsed from a jsdata annotation.\n * @typedef {{messageXid: string, id: string, instanceId: string}}\n * @package\n */\nwiz.data.clients.appsframework.Resolver.JsDataKey;\n\n\n/**\n * Takes an element with a jsdata annotation and a proto constructor and returns\n * an instance of that constructor matching the jsdata annotation.\n * @param {!Element} element\n * @param {function(new: jspb.Message, !Array\x3d)} ctor\n * @param {!wiz.common.FrameworkRestricted\x3d} opt_getRealInstance\n * @return {!goog.Promise\x3c!jspb.Message\x3e}\n */\nwiz.data.clients.appsframework.Resolver.prototype.resolve \x3d function(\n    element, ctor, opt_getRealInstance) {\n  var promise \x3d\n      this.travelUpTheDom_(element, ctor, 0, undefined, undefined, undefined);\n  if (goog.isDef(opt_getRealInstance)) {\n    return promise;\n  }\n  // Pass copies to callers, so modifications don\x27t apply to the cache.\n  return promise.then(jspb.Message.clone);\n};\n\n\n/**\n * Takes an element with a jsdata annotation and a proto constructor and returns\n * an instance of that constructor matching the jsdata annotation.\n * @param {?Element} element\n * @param {function(new: jspb.Message, !Array\x3d)} ctor\n * @param {number} index When resolving data through parent data, the index\n *     is greater 0 indicating the level of nesting.\n * @param {wiz.data.clients.appsframework.Resolver.JsDataKey|undefined} firstKey\n * @param {string|undefined} firstData\n * @param {string|undefined} skipVal If an element has multiple jsdata\n *     annotations and the lookup is going into full recursion (through\n *     lookup from parent), we need to skip values that have already been\n *     resolved on the current element. skipVal contains the rightmost\n *     value that should be skipped.\n * @param {?string\x3d} jsdataAttribute ...\n * @return {!goog.Promise\x3c!jspb.Message\x3e}\n * @private\n */\nwiz.data.clients.appsframework.Resolver.prototype.travelUpTheDom_ \x3d function(\n    element, ctor, index, firstKey, firstData, skipVal,\n    jsdataAttribute \x3d undefined) {\n  var ctorXid \x3d af.data.middleware.JsdataMessage.getXid(ctor);\n  while (element \x26\x26 element.getAttribute) {\n    // Get the jsdata attribute, which may or may not be on the client already.\n    var attr;\n    if (jsdataAttribute) {\n      attr \x3d goog.string.trim(jsdataAttribute) \x3d\x3d \x27\x27 ? null : jsdataAttribute;\n    } else {\n      if (wiz.data.jsdata.isAsync(element)) {\n        return wiz.data.jsdata.getAttributeAsync(element)\n            .then((jsdataAttribute) \x3d\x3e {\n              return this.travelUpTheDom_(\n                  element, ctor, index, firstKey, firstData, skipVal,\n                  jsdataAttribute || \x27\x27 /*always non-null*/);\n            });\n      } else {\n        attr \x3d wiz.data.jsdata.getAttribute(element);\n      }\n    }\n\n    // jsdata annotations are space separated. We try the right most first.\n    var values \x3d attr ? goog.string.trim(attr).split(/\\s+/) : null;\n    if (goog.DEBUG) {\n      // Print out a warning if a message type is listed more than once in the\n      // `jsdata` attribute list, as this is not supported by Wiz.\n      if (values \x26\x26 values.filter(val \x3d\x3e val.includes(ctorXid)).length \x3e 1) {\n        goog.log.warning(this.logger_,\n            `More than one message with xid ${ctorXid} is contained in the ` +\n            `same jsdata attribute. This is not supported by Wiz.`);\n      }\n    }\n    if (values \x26\x26 skipVal) {\n      // See docs of skipVal argument. Remove all the values from the right\n      // including and after skipVal in the array of values on the current\n      // element.\n      var skipIndex \x3d goog.array.indexOf(values, skipVal);\n      if (skipIndex !\x3d -1) {\n        values \x3d values.slice(0, skipIndex);\n      }\n    }\n    var val \x3d values ? values.pop() : null;\n    if (index \x3d\x3d 0) {\n      goog.asserts.assert(val,\n          \x27The model\\\x27s element that injects jsdata does not have a \x27 +\n          \x27jsdata attribute.\x27);\n      // Select the jsdata value of the correct type from the values on the\n      // first element.\n      while (val) {\n        firstData \x3d val;\n        firstKey \x3d wiz.data.clients.appsframework.Resolver.getKey(val);\n        if (ctorXid \x3d\x3d firstKey.messageXid) {\n          break;\n        }\n        // Try the next rightmost jsdata value.\n        val \x3d values.pop();\n        if (!val) {\n          return goog.Promise.reject(new Error(\x27Requested proto of type \x3c\x27 +\n              ctorXid + \x27\x3e but found jsdata for \x3c\x27 + firstKey.messageXid +\n              \x27\x3e.\x27));\n        }\n      }\n    }\n    goog.asserts.assert(firstKey);\n    goog.asserts.assert(firstData);\n    var fromStash \x3d this.initialDataService_.resolveForClientSideRender(\n        element, ctor, firstData);\n    if (fromStash) {\n      return fromStash;\n    }\n    // We want the actual parent VS. wiz.dom.getParentElement, since this is\n    // really about the render-hierarchy. Picking apart a DOM and trying to\n    // stitch it back together with owners won\x27t work \u2013 this simply isn\x27t\n    // supported. We expect rendered soy templates to stick together as DOM\n    // entities. In practice that seems to be largely true.\n    var currentElement \x3d element;\n    element \x3d goog.dom.getParentElement(element);\n    if (!val) {\n      continue;\n    }\n    var ret \x3d this.resolveJsdataValue_(\n        val, values, currentElement, element, ctor, index, firstKey, firstData);\n    if (ret) {\n      return ret;\n    }\n  }\n  var extraHelp \x3d \x27\x27;\n  if (goog.DEBUG) {\n    extraHelp \x3d \x27 Make sure that the data is actually in initial data. \x27 +\n        \x27When using Boq with Wiz Components this should always be the case, \x27 +\n        \x27but with vanilla Apps Framework you need to explicitly put it \x27 +\n        \x27there.\\n\\n\x27 +\n        \x27You may need to add a mapping through a \x27 +\n        \x27[(af.data.traversable)\x3dtrue] annotation or in rare cases use \x27 +\n        \x27af.data.middleware.traversers.map from a proto that was put into \x27 +\n        \x27initial data to \x3c\x27 + firstKey.messageXid + \x27\x3e. For more info set \x27 +\n        \x27log level to fine.\\nSee http://go/wiz-data/proto.md#traversers\x27;\n  }\n  return goog.Promise.reject(new Error(\x27Can\\\x27t find data for \x3c\x27 +\n      firstData + \x27\x3e with xid \x3c\x27 + firstKey.messageXid+ \x27\x3e.\x27 + extraHelp));\n};\n\n\n/**\n * Takes a single jsdata annotation value and tries to resolve the requested\n * proto from that value. If the current element had multiple space\n * separated jsdata annotations, this will recurse to the next one and if\n * that path is exhausted jump to the next higher DOM element.\n *\n * @param {string} val Current jsdata annotation.\n * @param {?Array\x3cstring\x3e} values Other jsdata annotations on the current\n *     DOM element.\n * @param {?Element} currentElement\n * @param {?Element} nextElement\n * @param {function(new: jspb.Message, !Array\x3d)} ctor\n * @param {number} index\n * @param {wiz.data.clients.appsframework.Resolver.JsDataKey|undefined} firstKey\n * @param {string|undefined} firstData\n * @return {!goog.Promise\x3c!jspb.Message\x3e}\n * @private\n */\nwiz.data.clients.appsframework.Resolver.prototype.resolveJsdataValue_ \x3d\n    function(\n        val, values, currentElement, nextElement, ctor, index, firstKey,\n        firstData) {\n  // Everything after here is only relevant for the server side rendered case.\n  if (index++ \x3d\x3d 0) {\n    // Check if the first element we look at is in initial data through the\n    // instance key. If yes, that is what we are looking for. Awesome :)\n    if (firstKey.instanceId) {\n      return this.initialDataService_.getDataFromInstanceId(firstKey.instanceId)\n          .then(goog.bind(function(array) {\n            if (array) {\n              return new ctor(array);\n            }\n            goog.log.fine(\n                this.logger_, \x27Did not find \x3c\x27 + firstData +\n                    \x27\x3e directly in initial \x27 +\n                    \x27data. Attempting to resolve via a parent proto.\x27);\n            // Recurse to next jsdata value on the same node. If that\n            // doesn\x27t\n            // exist recurse to travelUpTheDom_ which will jump to the next\n            // parent element.\n            if (values.length \x3e 0) {\n              return this.resolveJsdataValue_(\n                  values.pop(), values, currentElement, nextElement, ctor,\n                  index, firstKey, firstData);\n            }\n            return this.travelUpTheDom_(\n                nextElement, ctor, index, firstKey, firstData, undefined);\n          }, this));\n    }\n  } else {\n    // This is not the first element, we looked up the DOM and found another\n    // jsdata annotation.\n    var key \x3d wiz.data.clients.appsframework.Resolver.getKey(val);\n    if (key.instanceId) {\n      var parentCtor \x3d af.data.middleware.traversers.getTraversalSourceCtor(\n          key.messageXid, firstKey.messageXid);\n      if (!parentCtor \x26\x26 firstKey.messageXid \x3d\x3d key.messageXid \x26\x26\n          firstKey.id \x3d\x3d key.id \x26\x26\n          // It is worth checking the identity transform if the other key\n          // has a different instanceId. Otherwise we\x27ll know we won\x27t find\n          // it.\n          firstKey.instanceId !\x3d key.instanceId) {\n        // Special case for identity traversal in case we find the same\n        // jsdata annotation again.\n        parentCtor \x3d ctor;\n      }\n      if (parentCtor) {\n        goog.log.fine(this.logger_,\n            \x27Trying to resolve \x3c\x27 + firstKey.messageXid + \x27\x3e via \x3c\x27 +\n            key.messageXid + \x27\x3e\x27);\n        return this.resolveFromParent_(\n              currentElement, key, firstData, firstKey, parentCtor).then(\n                  function(message) {\n                    if (message) {\n                      return message;\n                    }\n                    // Recurse to next jsdata value on the same node. If that\n                    // doesn\x27t exist recurse to travelUpTheDom_ which will jump\n                    // to the next parent element.\n                    if (values.length \x3e 0) {\n                      return this.resolveJsdataValue_(\n                          values.pop(), values, currentElement, nextElement,\n                          ctor, index, firstKey, firstData);\n                    }\n                    return this.travelUpTheDom_(\n                        nextElement, ctor, index, firstKey, firstData,\n                        undefined);\n                  }, null, this);\n      } else {\n        goog.log.fine(this.logger_,\n            \x27No traversal map from \x3c\x27 + key.messageXid + \x27\x3e via \x3c\x27 +\n            firstKey.messageXid + \x27\x3e\x27);\n      }\n    }\n  }\n  // Recurse to next jsdata value on the same node if there is one.\n  if (values.length \x3e 0) {\n    return this.resolveJsdataValue_(\n        values.pop(), values, currentElement, nextElement, ctor, index,\n        firstKey, firstData);\n  }\n  return this.travelUpTheDom_(\n      nextElement, ctor, index, firstKey, firstData, undefined);\n};\n\n\n/**\n * For a jsdata annotation of a parent element of the one we originally looked\n * at, try to resolve that annotation and then use a\n * {@see af.data.middleware.traversers.TraversalFunction}, if available, to resolve\n * the original jsdata annotation (in firstKey) through that.\n * @param {?Element} element\n * @param {wiz.data.clients.appsframework.Resolver.JsDataKey} key\n * @param {string|undefined} firstData\n * @param {wiz.data.clients.appsframework.Resolver.JsDataKey} firstKey\n * @param {function(new: jspb.Message, !Array\x3d)} parentCtor\n * @return {!goog.Promise\x3c!jspb.Message\x3e}\n * @private\n */\nwiz.data.clients.appsframework.Resolver.prototype.resolveFromParent_ \x3d function(\n    element, key, firstData, firstKey, parentCtor) {\n  // This does a full recursion where we look up the potential parent just like\n  // we would look up the child \u2013 and when we find it, we try to find the\n  // child in the parent using the traverser.\n  return this.travelUpTheDom_(element, parentCtor, 0,\n      undefined, undefined,\n      /* skipVal */ firstData).then(function(fromMessage) {\n        return af.data.middleware.traversers.findById(\n            fromMessage, firstKey.messageKey, firstKey.messageXid);\n      });\n};\n\n\n/**\n * Parses a jsdata annotation.\n * @param {string} val\n * @return {wiz.data.clients.appsframework.Resolver.JsDataKey}\n */\nwiz.data.clients.appsframework.Resolver.getKey \x3d function(val) {\n  var parts \x3d goog.string.trim(val).split(/;/);\n  goog.asserts.assert(parts.length \x3d\x3d 3, \x27Invalid jsdata value \x3c\x27 + val +\n      \x27\x3e. Did you use the wizJsData soy function?\x27);\n  xid.assertXidLikeString(parts[0], \x27Invalid jsdata value \x3c\x27 + val +\n      \x27\x3e. Did you use the wizJsData soy function?\x27);\n  return {\n    messageXid: parts[0],\n    messageKey: parts[0] + \x27;\x27 + parts[1],\n    id: parts[1],\n    instanceId: parts[2]\n  };\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/data/clients/appsframework/resolver.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('sywn');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('sywn');

}catch(e){_DumpException(e)}
/* _Module_:RMhBfe */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('RMhBfe');

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('RMhBfe');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('RMhBfe');

}catch(e){_DumpException(e)}
/* _Module_:ws9Tlc */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('ws9Tlc');
var $googDebugFname="javascript/apps/wiz/query/window/onewindowservice.js";
eval("/**\n * @pintomodule\n * @fileoverview An implementation of wiz.Window.\n * @package Inject wiz.Window instead.\n */\ngoog.provide(\x27wiz.window.OneWindowService\x27);\n\ngoog.require(\x27goog.asserts\x27);\ngoog.require(\x27wiz.Query\x27);\ngoog.require(\x27wiz.Window\x27);\ngoog.require(\x27wiz.service\x27);\ngoog.require(\x27wiz.window.services\x27);\n\n\n\n/**\n * A wiz.Window implementation for apps with only a single window that is\n * the same as the window in which the JS is evaluated.\n * @constructor @final\n * @extends {wiz.Object}\n * @implements {wiz.Window}\n */\nwiz.window.OneWindowService \x3d wiz.service(wiz.window.services.ONE_WINDOW,\n    function() {\n  /** @private {!Window} */\n  this.win_ \x3d goog.asserts.assert(window);\n});\n\n\n/** @override @public */\nwiz.window.OneWindowService.prototype.get \x3d function() {\n  return goog.asserts.assert(this.win_);\n};\n\n\n/** @override @public */\nwiz.window.OneWindowService.prototype.getDocument \x3d function() {\n  return goog.asserts.assert(this.win_.document);\n};\n\n\n/** @override @public */\nwiz.window.OneWindowService.prototype.find \x3d function(selector) {\n  return new wiz.Query.One(this.win_.document.documentElement).find(selector);\n};\n\n\n/**\n * @param {!Window} win\n * @public\n */\nwiz.window.OneWindowService.prototype.setWindowForTesting \x3d function(win) {\n  this.win_ \x3d win;\n};\n\n//# sourceURL\x3dhttps://qs/javascript/apps/wiz/query/window/onewindowservice.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('ws9Tlc');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('ws9Tlc');

}catch(e){_DumpException(e)}
/* _Module_:ByqdBd */
try{
/** @suppress {missingRequire} */ goog.module.ModuleManager.getInstance().beforeLoadModuleCode('ByqdBd');
var $googDebugFname="searchbox/wiz/clients/gws/mobile/chip_controller.js";
goog.loadModule("/** @pintomodule */\n\ngoog.module(\x27searchbox.wiz.gws.mobile.ChipController\x27);\n\nconst WizController \x3d goog.require(\x27wiz.Controller\x27);\nconst common \x3d goog.require(\x27searchbox.wiz.shared.common\x27);\nconst controllers \x3d goog.require(\x27searchbox.wiz.gws.mobile.controllers\x27);\nconst events \x3d goog.require(\x27searchbox.wiz.events\x27);\nconst wiz \x3d goog.require(\x27wiz\x27);\nconst wizJsaction \x3d goog.require(\x27wiz.jsaction\x27);\nconst {registerController} \x3d goog.require(\x27wiz.controller.registry\x27);\n\n/** @package */\nconst CHIP_ACTIVE_CLASS \x3d \x27sbca\x27;\n\n/**\n * The controller to handle the chip for search by image (Quimby).\n * @final\n */\nclass ChipController extends WizController {\n  /** @param {!controllers.ChipControllerResponse} response */\n  constructor(response) {\n    super(response.superResponse);\n\n    /** @private @const {wiz.Query} */\n    this.root_ \x3d this.getRoot();\n\n    /** @private @const {wiz.Query} */\n    this.chipContainer_ \x3d this.root_.findByJsName(xid(\x27chip_container\x27));\n\n    /** @private @const {wiz.Query} */\n    this.deleteButton_ \x3d this.root_.findByJsName(xid(\x27chip_delete\x27));\n\n    // We register the event handler here instead of on the template because we\n    // won\x27t want this to be relayed as when the user clicked on the delete\n    // button before this is loaded, causing jarring user experiences.\n    wizJsaction.listen(\n        this.deleteButton_.el(), \x27click\x27, this.removeChip_, this);\n  }\n\n  /**\n   * @param {wiz.Event} ev\n   * @wizaction\n   */\n  highlight(ev) {\n    this.chipContainer_.toggleClass(CHIP_ACTIVE_CLASS, true);\n    this.chipContainer_.el().focus();\n  }\n\n  /**\n   * @param {wiz.Event} ev\n   * @wizaction\n   */\n  unhighlight(ev) {\n    this.chipContainer_.toggleClass(CHIP_ACTIVE_CLASS, false);\n  }\n\n  /**\n   * @param {!wiz.Event\x3cstring\x3e} ev\n   * @private\n   */\n  removeChip_(ev) {\n    common.preventDefault(ev.event);\n    // In any case, we hide the chip.\n    this.root_.hide();\n    const quimbyInput \x3d document.querySelector(\x27input[name\x3dtbs]\x27);\n    quimbyInput.parentNode.removeChild(quimbyInput);\n    // Reissue the search to update without quimby chip biasing.\n    const userInput \x3d document.querySelector(\x27input[name\x3dq]\x27);\n    if (userInput.value) {\n      const data \x3d {\n        query: /** @type {string} */ (userInput.value),\n        parameters: /** @type {!Object\x3cstring, string\x3e} */ ({}),\n        answerType: \x27\x27,\n        skipSave: false,\n        suggestionParameters: \x27\x27,\n      };\n      this.trigger(events.search, data);\n    } else {\n      // Regain focus on zero prefix query.\n      userInput.focus();\n    }\n  }\n}\n\nregisterController(controllers.CHIP, ChipController);\nexports \x3d ChipController;\n\n//# sourceURL\x3dhttps://qs/searchbox/wiz/clients/gws/mobile/chip_controller.js\n");

$googDebugFname=undefined;

/** @suppress {missingRequire} */ /** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().setLoaded('ByqdBd');
/** @suppress {missingRequire} */
goog.module.ModuleManager.getInstance().afterLoadModuleCode('ByqdBd');

}catch(e){_DumpException(e)}
/* _GlobalSuffix_ */
// Google Inc.
